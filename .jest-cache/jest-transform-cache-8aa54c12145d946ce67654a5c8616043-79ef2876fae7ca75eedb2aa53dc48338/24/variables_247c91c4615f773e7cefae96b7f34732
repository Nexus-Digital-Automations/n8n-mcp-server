c8f8815cb8ddba9ad61bb4553076a198
/* istanbul ignore next */
function cov_1q46ed8fbu() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/variables.ts";
  var hash = "0c140c3d7e750f9e6665709e76decaedff26cf38";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/variables.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 6,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 15,
          column: 2
        }
      },
      "3": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "4": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "5": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "6": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 94
        }
      },
      "7": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "8": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 34
        }
      },
      "9": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "10": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "11": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "12": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "13": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "14": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "15": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 69
        }
      },
      "16": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 45,
          column: 77
        }
      },
      "17": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "18": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "19": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "20": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 74
        }
      },
      "21": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 55
        }
      },
      "22": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 54,
          column: 21
        }
      },
      "23": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 105
        }
      },
      "24": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "25": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 105
        }
      },
      "26": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "27": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "28": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 95
        }
      },
      "29": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "30": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "31": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "32": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 164
        }
      },
      "33": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 86
        }
      },
      "34": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 83
        }
      },
      "35": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "36": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 90,
          column: 38
        }
      },
      "37": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "38": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 94
        }
      },
      "39": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "40": {
        start: {
          line: 95,
          column: 37
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "41": {
        start: {
          line: 100,
          column: 33
        },
        end: {
          line: 100,
          column: 74
        }
      },
      "42": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "43": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "44": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "45": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 109,
          column: 164
        }
      },
      "46": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 87
        }
      },
      "47": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 84
        }
      },
      "48": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "49": {
        start: {
          line: 130,
          column: 27
        },
        end: {
          line: 130,
          column: 38
        }
      },
      "50": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "51": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 94
        }
      },
      "52": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "53": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 61
        }
      },
      "54": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 85
        }
      },
      "55": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 145,
          column: 17
        }
      },
      "56": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 143,
          column: 21
        }
      },
      "57": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 142,
          column: 164
        }
      },
      "58": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 87
        }
      },
      "59": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "createVariableTools",
        decl: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 35
          }
        },
        loc: {
          start: {
            line: 17,
            column: 55
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 46,
            column: 39
          }
        },
        loc: {
          start: {
            line: 46,
            column: 59
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 17
          },
          end: {
            line: 89,
            column: 18
          }
        },
        loc: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 89
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 129,
            column: 17
          },
          end: {
            line: 129,
            column: 18
          }
        },
        loc: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 148,
            column: 9
          }
        },
        line: 129
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 38,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 40,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 40,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 44
          },
          end: {
            line: 49,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 44
          },
          end: {
            line: 49,
            column: 57
          }
        }, {
          start: {
            line: 49,
            column: 61
          },
          end: {
            line: 49,
            column: 69
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 102,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 102,
            column: 42
          }
        }, {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 54
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 110,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 110,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "14": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "15": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "16": {
        loc: {
          start: {
            line: 141,
            column: 20
          },
          end: {
            line: 143,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 20
          },
          end: {
            line: 143,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/variables.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/variables.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nVariable, CreateVariableRequest, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst VariableIdSchema = z.object({\n  variableId: z.string().min(1, 'Variable ID is required'),\n});\n\nconst ListVariablesSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateVariableSchema = z.object({\n  key: z.string().min(1, 'Variable key is required'),\n  value: z.string().min(1, 'Variable value is required'),\n  type: z.enum(['string', 'number', 'boolean', 'json']).optional().default('string'),\n});\n\n// Tool registration function\nexport function createVariableTools(getClient: () => N8nClient | null, server: any) {\n  // List variables tool\n  server.addTool({\n    name: 'list-variables',\n    description:\n      'List all environment variables in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: ListVariablesSchema,\n    annotations: {\n      title: 'List n8n Variables',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListVariablesSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getVariables(options);\n\n        if (response.data.length === 0) {\n          return 'No variables found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} variable(s):\\n\\n`;\n\n        response.data.forEach((variable: N8nVariable, index: number) => {\n          result += `${index + 1}. **${variable.key}**\\n`;\n          result += `   - ID: ${variable.id}\\n`;\n          result += `   - Type: ${variable.type || 'string'}\\n`;\n          // Don't show actual values for security reasons\n          result += `   - Value: [HIDDEN]\\n`;\n          if (variable.createdAt) {\n            result += `   - Created: ${new Date(variable.createdAt).toLocaleDateString()}\\n`;\n          }\n          if (variable.updatedAt) {\n            result += `   - Updated: ${new Date(variable.updatedAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n\uD83D\uDCC4 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list variables: ${error.message}`);\n        }\n        throw new UserError('Failed to list variables with unknown error');\n      }\n    },\n  });\n\n  // Create variable tool\n  server.addTool({\n    name: 'create-variable',\n    description:\n      'Create a new environment variable in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: CreateVariableSchema,\n    annotations: {\n      title: 'Create New Variable',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateVariableSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const variableData: CreateVariableRequest = {\n          key: args.key,\n          value: args.value,\n          type: args.type,\n        };\n\n        const variable = await client.createVariable(variableData);\n\n        return (\n          `\u2705 Successfully created variable \"${variable.key}\" with ID: ${variable.id}\\n` +\n          `Type: ${variable.type || 'string'}\\n` +\n          `Value: [HIDDEN for security]`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create variable: ${error.message}`);\n        }\n        throw new UserError('Failed to create variable with unknown error');\n      }\n    },\n  });\n\n  // Delete variable tool\n  server.addTool({\n    name: 'delete-variable',\n    description:\n      'Delete an environment variable from n8n permanently. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: VariableIdSchema,\n    annotations: {\n      title: 'Delete Variable',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof VariableIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteVariable(args.variableId);\n        return `\u2705 Successfully deleted variable with ID: ${args.variableId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete variable: ${error.message}`);\n        }\n        throw new UserError('Failed to delete variable with unknown error');\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c140c3d7e750f9e6665709e76decaedff26cf38"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q46ed8fbu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q46ed8fbu();
import { z } from 'zod';
import { UserError } from 'fastmcp';
// Zod schemas for validation
const VariableIdSchema =
/* istanbul ignore next */
(cov_1q46ed8fbu().s[0]++, z.object({
  variableId: z.string().min(1, 'Variable ID is required')
}));
const ListVariablesSchema =
/* istanbul ignore next */
(cov_1q46ed8fbu().s[1]++, z.object({
  limit: z.number().min(1).max(100).optional(),
  cursor: z.string().optional()
}));
const CreateVariableSchema =
/* istanbul ignore next */
(cov_1q46ed8fbu().s[2]++, z.object({
  key: z.string().min(1, 'Variable key is required'),
  value: z.string().min(1, 'Variable value is required'),
  type: z.enum(['string', 'number', 'boolean', 'json']).optional().default('string')
}));
// Tool registration function
export function createVariableTools(getClient, server) {
  /* istanbul ignore next */
  cov_1q46ed8fbu().f[0]++;
  cov_1q46ed8fbu().s[3]++;
  // List variables tool
  server.addTool({
    name: 'list-variables',
    description: 'List all environment variables in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',
    parameters: ListVariablesSchema,
    annotations: {
      title: 'List n8n Variables',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1q46ed8fbu().f[1]++;
      const client =
      /* istanbul ignore next */
      (cov_1q46ed8fbu().s[4]++, getClient());
      /* istanbul ignore next */
      cov_1q46ed8fbu().s[5]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().b[0][0]++;
        cov_1q46ed8fbu().s[6]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1q46ed8fbu().b[0][1]++;
      }
      cov_1q46ed8fbu().s[7]++;
      try {
        const options =
        /* istanbul ignore next */
        (cov_1q46ed8fbu().s[8]++, {});
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[9]++;
        if (args.limit) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[1][0]++;
          cov_1q46ed8fbu().s[10]++;
          options.limit = args.limit;
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[1][1]++;
        }
        cov_1q46ed8fbu().s[11]++;
        if (args.cursor) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[2][0]++;
          cov_1q46ed8fbu().s[12]++;
          options.cursor = args.cursor;
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[2][1]++;
        }
        const response =
        /* istanbul ignore next */
        (cov_1q46ed8fbu().s[13]++, await client.getVariables(options));
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[14]++;
        if (response.data.length === 0) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[3][0]++;
          cov_1q46ed8fbu().s[15]++;
          return 'No variables found in the n8n instance.';
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[3][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_1q46ed8fbu().s[16]++, `Found ${response.data.length} variable(s):\n\n`);
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[17]++;
        response.data.forEach((variable, index) => {
          /* istanbul ignore next */
          cov_1q46ed8fbu().f[2]++;
          cov_1q46ed8fbu().s[18]++;
          result += `${index + 1}. **${variable.key}**\n`;
          /* istanbul ignore next */
          cov_1q46ed8fbu().s[19]++;
          result += `   - ID: ${variable.id}\n`;
          /* istanbul ignore next */
          cov_1q46ed8fbu().s[20]++;
          result += `   - Type: ${
          /* istanbul ignore next */
          (cov_1q46ed8fbu().b[4][0]++, variable.type) ||
          /* istanbul ignore next */
          (cov_1q46ed8fbu().b[4][1]++, 'string')}\n`;
          // Don't show actual values for security reasons
          /* istanbul ignore next */
          cov_1q46ed8fbu().s[21]++;
          result += `   - Value: [HIDDEN]\n`;
          /* istanbul ignore next */
          cov_1q46ed8fbu().s[22]++;
          if (variable.createdAt) {
            /* istanbul ignore next */
            cov_1q46ed8fbu().b[5][0]++;
            cov_1q46ed8fbu().s[23]++;
            result += `   - Created: ${new Date(variable.createdAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1q46ed8fbu().b[5][1]++;
          }
          cov_1q46ed8fbu().s[24]++;
          if (variable.updatedAt) {
            /* istanbul ignore next */
            cov_1q46ed8fbu().b[6][0]++;
            cov_1q46ed8fbu().s[25]++;
            result += `   - Updated: ${new Date(variable.updatedAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1q46ed8fbu().b[6][1]++;
          }
          cov_1q46ed8fbu().s[26]++;
          result += '\n';
        });
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[27]++;
        if (response.nextCursor) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[7][0]++;
          cov_1q46ed8fbu().s[28]++;
          result += `\n📄 Use cursor "${response.nextCursor}" to get the next page.`;
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[7][1]++;
        }
        cov_1q46ed8fbu().s[29]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[30]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[8][0]++;
          cov_1q46ed8fbu().s[31]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_1q46ed8fbu().b[9][0]++;
            cov_1q46ed8fbu().s[32]++;
            throw new UserError(`This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_1q46ed8fbu().b[9][1]++;
          }
          cov_1q46ed8fbu().s[33]++;
          throw new UserError(`Failed to list variables: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[8][1]++;
        }
        cov_1q46ed8fbu().s[34]++;
        throw new UserError('Failed to list variables with unknown error');
      }
    }
  });
  // Create variable tool
  /* istanbul ignore next */
  cov_1q46ed8fbu().s[35]++;
  server.addTool({
    name: 'create-variable',
    description: 'Create a new environment variable in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',
    parameters: CreateVariableSchema,
    annotations: {
      title: 'Create New Variable',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1q46ed8fbu().f[3]++;
      const client =
      /* istanbul ignore next */
      (cov_1q46ed8fbu().s[36]++, getClient());
      /* istanbul ignore next */
      cov_1q46ed8fbu().s[37]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().b[10][0]++;
        cov_1q46ed8fbu().s[38]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1q46ed8fbu().b[10][1]++;
      }
      cov_1q46ed8fbu().s[39]++;
      try {
        const variableData =
        /* istanbul ignore next */
        (cov_1q46ed8fbu().s[40]++, {
          key: args.key,
          value: args.value,
          type: args.type
        });
        const variable =
        /* istanbul ignore next */
        (cov_1q46ed8fbu().s[41]++, await client.createVariable(variableData));
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[42]++;
        return `✅ Successfully created variable "${variable.key}" with ID: ${variable.id}\n` + `Type: ${
        /* istanbul ignore next */
        (cov_1q46ed8fbu().b[11][0]++, variable.type) ||
        /* istanbul ignore next */
        (cov_1q46ed8fbu().b[11][1]++, 'string')}\n` + `Value: [HIDDEN for security]`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[43]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[12][0]++;
          cov_1q46ed8fbu().s[44]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_1q46ed8fbu().b[13][0]++;
            cov_1q46ed8fbu().s[45]++;
            throw new UserError(`This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_1q46ed8fbu().b[13][1]++;
          }
          cov_1q46ed8fbu().s[46]++;
          throw new UserError(`Failed to create variable: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[12][1]++;
        }
        cov_1q46ed8fbu().s[47]++;
        throw new UserError('Failed to create variable with unknown error');
      }
    }
  });
  // Delete variable tool
  /* istanbul ignore next */
  cov_1q46ed8fbu().s[48]++;
  server.addTool({
    name: 'delete-variable',
    description: 'Delete an environment variable from n8n permanently. NOTE: Requires n8n Enterprise license with variable management features enabled',
    parameters: VariableIdSchema,
    annotations: {
      title: 'Delete Variable',
      readOnlyHint: false,
      destructiveHint: true,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1q46ed8fbu().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_1q46ed8fbu().s[49]++, getClient());
      /* istanbul ignore next */
      cov_1q46ed8fbu().s[50]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().b[14][0]++;
        cov_1q46ed8fbu().s[51]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1q46ed8fbu().b[14][1]++;
      }
      cov_1q46ed8fbu().s[52]++;
      try {
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[53]++;
        await client.deleteVariable(args.variableId);
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[54]++;
        return `✅ Successfully deleted variable with ID: ${args.variableId}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1q46ed8fbu().s[55]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1q46ed8fbu().b[15][0]++;
          cov_1q46ed8fbu().s[56]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_1q46ed8fbu().b[16][0]++;
            cov_1q46ed8fbu().s[57]++;
            throw new UserError(`This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_1q46ed8fbu().b[16][1]++;
          }
          cov_1q46ed8fbu().s[58]++;
          throw new UserError(`Failed to delete variable: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1q46ed8fbu().b[15][1]++;
        }
        cov_1q46ed8fbu().s[59]++;
        throw new UserError('Failed to delete variable with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,