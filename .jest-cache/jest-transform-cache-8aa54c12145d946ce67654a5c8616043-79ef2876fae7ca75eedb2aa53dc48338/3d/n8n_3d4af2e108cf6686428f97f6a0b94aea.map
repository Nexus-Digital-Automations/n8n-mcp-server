{"version":3,"names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/types/n8n.ts"],"sourcesContent":["// Type definitions for n8n API responses\nexport interface N8nUser {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  personalizationAnswers?: Record<string, unknown>;\n  settings?: Record<string, unknown>;\n  role?: string;\n  password?: string;\n  resetPasswordToken?: string;\n  globalRoleId?: string;\n  isPending?: boolean;\n  disabled?: boolean;\n  lastSeenAt?: string;\n  globalRole?: {\n    scope: string;\n    name: string;\n    id: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt?: string;\n  updatedAt?: string;\n  hasRecoveryCodesLeft?: boolean;\n  mfaEnabled?: boolean;\n}\n\nexport interface N8nNode {\n  id: string;\n  name: string;\n  type: string;\n  typeVersion: number;\n  position: [number, number];\n  parameters?: Record<string, any>;\n  credentials?: Record<string, any>;\n  disabled?: boolean;\n  notes?: string;\n  webhookId?: string;\n  [key: string]: unknown; // Add index signature to make it compatible with Record<string, unknown>\n}\n\nexport interface N8nWorkflow {\n  id: string;\n  name: string;\n  active: boolean;\n  nodes?: N8nNode[];\n  connections: Record<string, unknown>;\n  settings?: Record<string, unknown>;\n  staticData?: Record<string, unknown>;\n  tags?: string[];\n  versionId?: string;\n  triggerCount?: number;\n  createdAt?: string;\n  updatedAt?: string;\n  pinData?: Record<string, unknown>;\n  meta?: Record<string, unknown>;\n}\n\nexport interface N8nExecution {\n  id: string;\n  finished: boolean;\n  mode: string;\n  retryOf?: string;\n  retrySuccessId?: string;\n  startedAt: string;\n  stoppedAt?: string;\n  workflowId: string;\n  waitTill?: Date;\n  status: 'error' | 'success' | 'running' | 'waiting';\n  data?: Record<string, unknown>;\n  workflowData?: N8nWorkflow;\n}\n\nexport interface N8nCredential {\n  id: string;\n  name: string;\n  type: string;\n  data?: Record<string, unknown>;\n  nodesAccess?: Array<{\n    nodeType: string;\n    user?: string;\n    date?: Date;\n  }>;\n  sharedWith?: Array<{\n    id: string;\n    user: N8nUser;\n    role: string;\n  }>;\n  homeProject?: {\n    id: string;\n    name: string;\n    type: string;\n  };\n  scopes?: string[];\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface N8nProject {\n  id: string;\n  name: string;\n  type: 'Personal' | 'Team';\n  createdAt: string;\n  updatedAt: string;\n  relations?: Array<{\n    id: string;\n    userId: string;\n    projectId: string;\n    role: string;\n    createdAt: string;\n    updatedAt: string;\n    user: N8nUser;\n  }>;\n}\n\nexport interface N8nVariable {\n  id: string;\n  key: string;\n  value: string;\n  type: 'string' | 'number' | 'boolean' | 'json';\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface N8nTag {\n  id: string;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n  usageCount?: number;\n}\n\nexport interface N8nAuditReport {\n  'Database Settings'?: Record<string, unknown>;\n  'Credentials Risk Report'?: Record<string, unknown>;\n  'Nodes Risk Report'?: Record<string, unknown>;\n  'Instance Risk Report'?: Record<string, unknown>;\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  nextCursor?: string;\n}\n\nexport interface PaginationOptions {\n  limit?: number;\n  cursor?: string;\n  projectId?: string;\n}\n\nexport interface CreateUserRequest {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password?: string;\n  role?: string;\n}\n\nexport interface UpdateUserRequest {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  role?: string;\n}\n\nexport interface CreateWorkflowRequest {\n  name: string;\n  nodes: Array<Record<string, unknown>>;\n  connections: Record<string, unknown>;\n  active?: boolean;\n  settings?: Record<string, unknown>;\n  tags?: string[];\n}\n\nexport interface UpdateWorkflowRequest {\n  name?: string;\n  nodes?: Array<Record<string, unknown>>;\n  connections?: Record<string, unknown>;\n  active?: boolean;\n  settings?: Record<string, unknown>;\n  tags?: string[];\n}\n\nexport interface CreateCredentialRequest {\n  name: string;\n  type: string;\n  data: Record<string, unknown>;\n  projectId?: string;\n}\n\nexport interface CreateProjectRequest {\n  name: string;\n  type?: string;\n}\n\nexport interface UpdateProjectRequest {\n  name?: string;\n}\n\nexport interface CreateVariableRequest {\n  key: string;\n  value: string;\n  type?: 'string' | 'number' | 'boolean' | 'json';\n}\n\nexport interface CreateTagRequest {\n  name: string;\n}\n\nexport interface UpdateTagRequest {\n  name?: string;\n}\n"],"mappings":"","ignoreList":[]}