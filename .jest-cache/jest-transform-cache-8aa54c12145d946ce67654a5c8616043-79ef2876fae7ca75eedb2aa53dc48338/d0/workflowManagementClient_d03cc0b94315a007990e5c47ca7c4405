f99d2d001efc8dcb30926b31fa9a1834
"use strict";

/**
 * Workflow Management Client for n8n Fork Integration
 *
 * Provides comprehensive API client for programmatic workflow creation, execution,
 * monitoring, and management using n8n fork APIs with support for tags, projects,
 * and collaboration features.
 */
/* istanbul ignore next */
function cov_uanzse2i5() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/workflowManagementClient.ts";
  var hash = "ef627035ffc45e5eeb03f8870e04a2ac04da68b6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/workflowManagementClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 167
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 72
        }
      },
      "3": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "4": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "5": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "6": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "7": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "8": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "9": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 29
        }
      },
      "10": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 81,
          column: 67
        }
      },
      "11": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 54
        }
      },
      "12": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 66
        }
      },
      "13": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 54
        }
      },
      "14": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 89,
          column: 78
        }
      },
      "15": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 54
        }
      },
      "16": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 53
        }
      },
      "17": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 96,
          column: 64
        }
      },
      "18": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "19": {
        start: {
          line: 98,
          column: 55
        },
        end: {
          line: 98,
          column: 93
        }
      },
      "20": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "21": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "22": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 73
        }
      },
      "23": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 54
        }
      },
      "24": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 119
        }
      },
      "25": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 118,
          column: 68
        }
      },
      "26": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 63
        }
      },
      "27": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "28": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 126,
          column: 10
        }
      },
      "29": {
        start: {
          line: 124,
          column: 57
        },
        end: {
          line: 124,
          column: 105
        }
      },
      "30": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 115
        }
      },
      "31": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 116
        }
      },
      "32": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 55
        }
      },
      "33": {
        start: {
          line: 143,
          column: 25
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "34": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 53
        }
      },
      "35": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 64
        }
      },
      "36": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 53
        }
      },
      "37": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 58
        }
      },
      "38": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 84
        }
      },
      "39": {
        start: {
          line: 152,
          column: 46
        },
        end: {
          line: 152,
          column: 82
        }
      },
      "40": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 76
        }
      },
      "41": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 53
        }
      },
      "42": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 51
        }
      },
      "43": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 125
        }
      },
      "44": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 169,
          column: 57
        }
      },
      "45": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 49
        }
      },
      "46": {
        start: {
          line: 173,
          column: 25
        },
        end: {
          line: 173,
          column: 54
        }
      },
      "47": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 72
        }
      },
      "48": {
        start: {
          line: 174,
          column: 42
        },
        end: {
          line: 174,
          column: 70
        }
      },
      "49": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 68
        }
      },
      "50": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 49
        }
      },
      "51": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "52": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "53": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 117
        }
      },
      "54": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 117
        }
      },
      "55": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 124
        }
      },
      "56": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 124
        }
      },
      "57": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 128
        }
      },
      "58": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 119
        }
      },
      "59": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 117
        }
      },
      "60": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 121
        }
      },
      "61": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 125
        }
      },
      "62": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 125
        }
      },
      "63": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 126
        }
      },
      "64": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 116
        }
      },
      "65": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 116
        }
      },
      "66": {
        start: {
          line: 239,
          column: 0
        },
        end: {
          line: 239,
          column: 60
        }
      },
      "67": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 244,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 74
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 84
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 46
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 88
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 92
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 38
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 41
          },
          end: {
            line: 98,
            column: 42
          }
        },
        loc: {
          start: {
            line: 98,
            column: 55
          },
          end: {
            line: 98,
            column: 93
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 106
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 58
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 113
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 117
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 39
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 121
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 42
          },
          end: {
            line: 124,
            column: 43
          }
        },
        loc: {
          start: {
            line: 124,
            column: 57
          },
          end: {
            line: 124,
            column: 105
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 37
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 136
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 33
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 142
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 32
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 146
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 150
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 152,
            column: 34
          }
        },
        loc: {
          start: {
            line: 152,
            column: 46
          },
          end: {
            line: 152,
            column: 82
          }
        },
        line: 152
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 44
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 154
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 158
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 55
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 161
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 25
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 168
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 21
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 172
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 174,
            column: 34
          }
        },
        loc: {
          start: {
            line: 174,
            column: 42
          },
          end: {
            line: 174,
            column: 70
          }
        },
        line: 174
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 36
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 176
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 48
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 183
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 53
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 186
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 50
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 196
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 199
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 48
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 202
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 52
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 38
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 45
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 53
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 220
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 43
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 41
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 226
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 48
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 46
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 235
      },
      "42": {
        name: "createWorkflowManagementClient",
        decl: {
          start: {
            line: 243,
            column: 9
          },
          end: {
            line: 243,
            column: 39
          }
        },
        loc: {
          start: {
            line: 243,
            column: 51
          },
          end: {
            line: 245,
            column: 1
          }
        },
        line: 243
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 95,
            column: 24
          },
          end: {
            line: 95,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 95,
            column: 36
          }
        }],
        line: 95
      },
      "1": {
        loc: {
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 35
          },
          end: {
            line: 121,
            column: 37
          }
        }],
        line: 121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/workflowManagementClient.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/workflowManagementClient.ts"],
      sourcesContent: ["/**\n * Workflow Management Client for n8n Fork Integration\n *\n * Provides comprehensive API client for programmatic workflow creation, execution,\n * monitoring, and management using n8n fork APIs with support for tags, projects,\n * and collaboration features.\n */\n\nimport { z } from 'zod';\nimport { N8nClient } from './n8nClient.js';\n\n// Workflow schemas\nexport const WorkflowSchema = z.object({\n  id: z.string().optional(),\n  name: z.string(),\n  active: z.boolean().default(false),\n  nodes: z.array(z.any()),\n  connections: z.record(z.any()),\n  settings: z.record(z.any()).default({}),\n  staticData: z.record(z.any()).default({}),\n  tags: z.array(z.string()).default([]),\n  meta: z.object({\n    templateCredsSetupCompleted: z.boolean().default(false),\n  }).default({}),\n  pinData: z.record(z.any()).default({}),\n  versionId: z.string().optional(),\n  createdAt: z.string().optional(),\n  updatedAt: z.string().optional(),\n});\n\nexport const WorkflowExecutionSchema = z.object({\n  id: z.string(),\n  workflowId: z.string(),\n  mode: z.enum(['cli', 'error', 'integrated', 'internal', 'manual', 'retry', 'trigger', 'webhook']),\n  retryOf: z.string().optional(),\n  retrySuccessId: z.string().optional(),\n  startedAt: z.string(),\n  stoppedAt: z.string().optional(),\n  finished: z.boolean(),\n  status: z.enum(['canceled', 'crashed', 'error', 'new', 'running', 'success', 'unknown', 'waiting']),\n  data: z.any().optional(),\n  workflowData: z.any().optional(),\n});\n\nexport const ProjectSchema = z.object({\n  id: z.string().optional(),\n  name: z.string(),\n  type: z.enum(['Personal', 'Team']).default('Personal'),\n  createdAt: z.string().optional(),\n  updatedAt: z.string().optional(),\n  relations: z.object({\n    projectRelations: z.array(z.any()).default([]),\n    workflowRelations: z.array(z.any()).default([]),\n  }).optional(),\n});\n\nexport const TagSchema = z.object({\n  id: z.string().optional(),\n  name: z.string(),\n  createdAt: z.string().optional(),\n  updatedAt: z.string().optional(),\n});\n\nexport const ShareSchema = z.object({\n  workflowId: z.string(),\n  userId: z.string(),\n  role: z.enum(['workflow:owner', 'workflow:editor', 'workflow:user']),\n});\n\nexport type Workflow = z.infer<typeof WorkflowSchema>;\nexport type WorkflowExecution = z.infer<typeof WorkflowExecutionSchema>;\nexport type Project = z.infer<typeof ProjectSchema>;\nexport type Tag = z.infer<typeof TagSchema>;\nexport type Share = z.infer<typeof ShareSchema>;\n\nexport interface WorkflowListOptions {\n  limit?: number;\n  offset?: number;\n  active?: boolean;\n  tags?: string[];\n  projectId?: string;\n  ownedBy?: string;\n  sharedWith?: string;\n}\n\nexport interface ExecutionListOptions {\n  limit?: number;\n  offset?: number;\n  workflowId?: string;\n  status?: string[];\n  finished?: boolean;\n  mode?: string[];\n  startedAfter?: string;\n  startedBefore?: string;\n}\n\nexport interface WorkflowAnalytics {\n  workflowId: string;\n  totalExecutions: number;\n  successfulExecutions: number;\n  failedExecutions: number;\n  averageExecutionTime: number;\n  lastExecuted: string;\n  successRate: number;\n  executionTrend: {\n    date: string;\n    executions: number;\n    successRate: number;\n  }[];\n}\n\n/**\n * Workflow Management Client\n *\n * Comprehensive client for managing workflows, executions, projects,\n * tags, and collaboration features in n8n fork.\n */\nexport class WorkflowManagementClient {\n  private client: N8nClient;\n\n  constructor(client: N8nClient) {\n    this.client = client;\n  }\n\n  // ============================================================================\n  // Workflow Management - leverages existing N8nClient methods\n  // ============================================================================\n\n  async createWorkflow(workflow: Omit<Workflow, 'id' | 'createdAt' | 'updatedAt'>): Promise<Workflow> {\n    const response = await this.client.createWorkflow(workflow as any);\n    return WorkflowSchema.parse(response);\n  }\n\n  async getWorkflow(workflowId: string): Promise<Workflow> {\n    const response = await this.client.getWorkflow(workflowId);\n    return WorkflowSchema.parse(response);\n  }\n\n  async updateWorkflow(workflowId: string, updates: Partial<Workflow>): Promise<Workflow> {\n    const response = await this.client.updateWorkflow(workflowId, updates as any);\n    return WorkflowSchema.parse(response);\n  }\n\n  async deleteWorkflow(workflowId: string): Promise<void> {\n    await this.client.deleteWorkflow(workflowId);\n  }\n\n  async listWorkflows(options: WorkflowListOptions = {}): Promise<{\n    workflows: Workflow[];\n    totalCount: number;\n  }> {\n    const response = await this.client.getWorkflows(options as any);\n    return {\n      workflows: response.data.map((workflow: any) => WorkflowSchema.parse(workflow)),\n      totalCount: response.data.length,\n    };\n  }\n\n  async activateWorkflow(workflowId: string): Promise<Workflow> {\n    const response = await this.client.activateWorkflow(workflowId);\n    return WorkflowSchema.parse(response);\n  }\n\n  async deactivateWorkflow(workflowId: string): Promise<Workflow> {\n    const response = await this.client.deactivateWorkflow(workflowId);\n    return WorkflowSchema.parse(response);\n  }\n\n  // ============================================================================\n  // Execution Management - leverages existing N8nClient methods\n  // ============================================================================\n\n  async executeWorkflow(\n    workflowId: string,\n    inputData?: any,\n    options?: { loadFromDatabase?: boolean; startNodes?: string[] }\n  ): Promise<WorkflowExecution> {\n    // Note: N8nClient doesn't have executeWorkflow method, this would need to be added\n    throw new Error('Workflow execution not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async getExecution(executionId: string): Promise<WorkflowExecution> {\n    const response = await this.client.getExecution(executionId);\n    return WorkflowExecutionSchema.parse(response);\n  }\n\n  async listExecutions(options: ExecutionListOptions = {}): Promise<{\n    executions: WorkflowExecution[];\n    totalCount: number;\n  }> {\n    const response = await this.client.getExecutions(options as any);\n    return {\n      executions: response.data.map((execution: any) => WorkflowExecutionSchema.parse(execution)),\n      totalCount: response.data.length,\n    };\n  }\n\n  async stopExecution(executionId: string): Promise<WorkflowExecution> {\n    // Note: This would require addition to N8nClient\n    throw new Error('Stop execution not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async retryExecution(\n    executionId: string,\n    options?: { loadFromDatabase?: boolean; startNodes?: string[] }\n  ): Promise<WorkflowExecution> {\n    // Note: This would require addition to N8nClient  \n    throw new Error('Retry execution not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async deleteExecution(executionId: string): Promise<void> {\n    await this.client.deleteExecution(executionId);\n  }\n\n  // ============================================================================\n  // Project Management - leverages existing N8nClient methods\n  // ============================================================================\n\n  async createProject(project: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>): Promise<Project> {\n    const response = await this.client.createProject(project as any);\n    return ProjectSchema.parse(response);\n  }\n\n  async getProject(projectId: string): Promise<Project> {\n    const response = await this.client.getProject(projectId);\n    return ProjectSchema.parse(response);\n  }\n\n  async listProjects(): Promise<Project[]> {\n    const response = await this.client.getProjects({});\n    return response.data.map((project: any) => ProjectSchema.parse(project));\n  }\n\n  async updateProject(projectId: string, updates: Partial<Project>): Promise<Project> {\n    const response = await this.client.updateProject(projectId, updates as any);\n    return ProjectSchema.parse(response);\n  }\n\n  async deleteProject(projectId: string): Promise<void> {\n    await this.client.deleteProject(projectId);\n  }\n\n  async moveWorkflowToProject(workflowId: string, projectId: string): Promise<void> {\n    // Note: This would require addition to N8nClient\n    throw new Error('Move workflow to project not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  // ============================================================================\n  // Tag Management - leverages existing N8nClient methods\n  // ============================================================================\n\n  async createTag(tag: Omit<Tag, 'id' | 'createdAt' | 'updatedAt'>): Promise<Tag> {\n    const response = await this.client.createTag(tag as any);\n    return TagSchema.parse(response);\n  }\n\n  async listTags(): Promise<Tag[]> {\n    const response = await this.client.getTags({});\n    return response.data.map((tag: any) => TagSchema.parse(tag));\n  }\n\n  async updateTag(tagId: string, updates: Partial<Tag>): Promise<Tag> {\n    const response = await this.client.updateTag(tagId, updates as any);\n    return TagSchema.parse(response);\n  }\n\n  async deleteTag(tagId: string): Promise<void> {\n    await this.client.deleteTag(tagId);\n  }\n\n  async addTagsToWorkflow(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.client.updateWorkflowTags(workflowId, tagIds);\n  }\n\n  async removeTagsFromWorkflow(workflowId: string, tagIds: string[]): Promise<void> {\n    // Note: This would require modification to updateWorkflowTags or new method\n    throw new Error('Remove tags from workflow not implemented in base N8nClient - would require API extension');\n  }\n\n  // ============================================================================\n  // Collaboration Features - would require n8n fork API extensions\n  // ============================================================================\n\n  async shareWorkflow(workflowId: string, userId: string, role: Share['role']): Promise<void> {\n    throw new Error('Workflow sharing not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async updateWorkflowShare(workflowId: string, userId: string, role: Share['role']): Promise<void> {\n    throw new Error('Update workflow sharing not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async removeWorkflowShare(workflowId: string, userId: string): Promise<void> {\n    throw new Error('Remove workflow sharing not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async listWorkflowCollaborators(workflowId: string): Promise<Array<{\n    userId: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    role: Share['role'];\n  }>> {\n    throw new Error('List workflow collaborators not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  // ============================================================================\n  // Analytics and Monitoring - would require n8n fork API extensions\n  // ============================================================================\n\n  async getWorkflowAnalytics(\n    workflowId: string, \n    options?: { \n      startDate?: string; \n      endDate?: string; \n      granularity?: 'day' | 'week' | 'month' \n    }\n  ): Promise<WorkflowAnalytics> {\n    throw new Error('Workflow analytics not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async getGlobalAnalytics(options?: { \n    startDate?: string; \n    endDate?: string; \n    projectId?: string \n  }): Promise<{\n    totalWorkflows: number;\n    activeWorkflows: number;\n    totalExecutions: number;\n    successfulExecutions: number;\n    failedExecutions: number;\n    averageExecutionTime: number;\n    topPerformingWorkflows: Array<{\n      workflowId: string;\n      name: string;\n      executions: number;\n      successRate: number;\n    }>;\n  }> {\n    throw new Error('Global analytics not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async getExecutionStatistics(workflowId?: string): Promise<{\n    totalExecutions: number;\n    runningExecutions: number;\n    successfulExecutions: number;\n    failedExecutions: number;\n    canceledExecutions: number;\n    averageExecutionTime: number;\n    medianExecutionTime: number;\n    executionsByStatus: Record<string, number>;\n    executionsByMode: Record<string, number>;\n    recentExecutions: WorkflowExecution[];\n  }> {\n    throw new Error('Execution statistics not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  // ============================================================================\n  // Bulk Operations - would require n8n fork API extensions\n  // ============================================================================\n\n  async bulkActivateWorkflows(workflowIds: string[], active: boolean): Promise<{\n    successful: string[];\n    failed: Array<{ id: string; error: string }>;\n  }> {\n    throw new Error('Bulk workflow operations not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async bulkDeleteWorkflows(workflowIds: string[]): Promise<{\n    successful: string[];\n    failed: Array<{ id: string; error: string }>;\n  }> {\n    throw new Error('Bulk workflow operations not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async bulkDeleteExecutions(\n    criteria: {\n      workflowId?: string;\n      status?: string[];\n      startedBefore?: string;\n      limit?: number;\n    }\n  ): Promise<{\n    deletedCount: number;\n    remainingCount: number;\n  }> {\n    throw new Error('Bulk execution operations not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  // ============================================================================\n  // Import/Export - would require n8n fork API extensions\n  // ============================================================================\n\n  async exportWorkflows(\n    workflowIds: string[],\n    options?: { \n      includeCredentials?: boolean; \n      format?: 'json' | 'zip' \n    }\n  ): Promise<any> {\n    throw new Error('Workflow export not implemented in base N8nClient - would require n8n fork API extension');\n  }\n\n  async importWorkflows(\n    workflows: any[], \n    options?: { \n      updateExisting?: boolean; \n      projectId?: string \n    }\n  ): Promise<{\n    imported: Array<{ id: string; name: string }>;\n    skipped: Array<{ name: string; reason: string }>;\n    errors: Array<{ name: string; error: string }>;\n  }> {\n    throw new Error('Workflow import not implemented in base N8nClient - would require n8n fork API extension');\n  }\n}\n\n/**\n * Create workflow management client with default configuration\n */\nexport function createWorkflowManagementClient(n8nClient: N8nClient): WorkflowManagementClient {\n  return new WorkflowManagementClient(n8nClient);\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ef627035ffc45e5eeb03f8870e04a2ac04da68b6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uanzse2i5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uanzse2i5();
cov_uanzse2i5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uanzse2i5().s[1]++;
exports.WorkflowManagementClient = exports.ShareSchema = exports.TagSchema = exports.ProjectSchema = exports.WorkflowExecutionSchema = exports.WorkflowSchema = void 0;
/* istanbul ignore next */
cov_uanzse2i5().s[2]++;
exports.createWorkflowManagementClient = createWorkflowManagementClient;
const zod_1 =
/* istanbul ignore next */
(cov_uanzse2i5().s[3]++, require("zod"));
// Workflow schemas
/* istanbul ignore next */
cov_uanzse2i5().s[4]++;
exports.WorkflowSchema = zod_1.z.object({
  id: zod_1.z.string().optional(),
  name: zod_1.z.string(),
  active: zod_1.z.boolean().default(false),
  nodes: zod_1.z.array(zod_1.z.any()),
  connections: zod_1.z.record(zod_1.z.any()),
  settings: zod_1.z.record(zod_1.z.any()).default({}),
  staticData: zod_1.z.record(zod_1.z.any()).default({}),
  tags: zod_1.z.array(zod_1.z.string()).default([]),
  meta: zod_1.z.object({
    templateCredsSetupCompleted: zod_1.z.boolean().default(false)
  }).default({}),
  pinData: zod_1.z.record(zod_1.z.any()).default({}),
  versionId: zod_1.z.string().optional(),
  createdAt: zod_1.z.string().optional(),
  updatedAt: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_uanzse2i5().s[5]++;
exports.WorkflowExecutionSchema = zod_1.z.object({
  id: zod_1.z.string(),
  workflowId: zod_1.z.string(),
  mode: zod_1.z.enum(['cli', 'error', 'integrated', 'internal', 'manual', 'retry', 'trigger', 'webhook']),
  retryOf: zod_1.z.string().optional(),
  retrySuccessId: zod_1.z.string().optional(),
  startedAt: zod_1.z.string(),
  stoppedAt: zod_1.z.string().optional(),
  finished: zod_1.z.boolean(),
  status: zod_1.z.enum(['canceled', 'crashed', 'error', 'new', 'running', 'success', 'unknown', 'waiting']),
  data: zod_1.z.any().optional(),
  workflowData: zod_1.z.any().optional()
});
/* istanbul ignore next */
cov_uanzse2i5().s[6]++;
exports.ProjectSchema = zod_1.z.object({
  id: zod_1.z.string().optional(),
  name: zod_1.z.string(),
  type: zod_1.z.enum(['Personal', 'Team']).default('Personal'),
  createdAt: zod_1.z.string().optional(),
  updatedAt: zod_1.z.string().optional(),
  relations: zod_1.z.object({
    projectRelations: zod_1.z.array(zod_1.z.any()).default([]),
    workflowRelations: zod_1.z.array(zod_1.z.any()).default([])
  }).optional()
});
/* istanbul ignore next */
cov_uanzse2i5().s[7]++;
exports.TagSchema = zod_1.z.object({
  id: zod_1.z.string().optional(),
  name: zod_1.z.string(),
  createdAt: zod_1.z.string().optional(),
  updatedAt: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_uanzse2i5().s[8]++;
exports.ShareSchema = zod_1.z.object({
  workflowId: zod_1.z.string(),
  userId: zod_1.z.string(),
  role: zod_1.z.enum(['workflow:owner', 'workflow:editor', 'workflow:user'])
});
/**
 * Workflow Management Client
 *
 * Comprehensive client for managing workflows, executions, projects,
 * tags, and collaboration features in n8n fork.
 */
class WorkflowManagementClient {
  client;
  constructor(client) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[0]++;
    cov_uanzse2i5().s[9]++;
    this.client = client;
  }
  // ============================================================================
  // Workflow Management - leverages existing N8nClient methods
  // ============================================================================
  async createWorkflow(workflow) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[1]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[10]++, await this.client.createWorkflow(workflow));
    /* istanbul ignore next */
    cov_uanzse2i5().s[11]++;
    return exports.WorkflowSchema.parse(response);
  }
  async getWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[2]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[12]++, await this.client.getWorkflow(workflowId));
    /* istanbul ignore next */
    cov_uanzse2i5().s[13]++;
    return exports.WorkflowSchema.parse(response);
  }
  async updateWorkflow(workflowId, updates) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[14]++, await this.client.updateWorkflow(workflowId, updates));
    /* istanbul ignore next */
    cov_uanzse2i5().s[15]++;
    return exports.WorkflowSchema.parse(response);
  }
  async deleteWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[4]++;
    cov_uanzse2i5().s[16]++;
    await this.client.deleteWorkflow(workflowId);
  }
  async listWorkflows(options =
  /* istanbul ignore next */
  (cov_uanzse2i5().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[5]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[17]++, await this.client.getWorkflows(options));
    /* istanbul ignore next */
    cov_uanzse2i5().s[18]++;
    return {
      workflows: response.data.map(workflow => {
        /* istanbul ignore next */
        cov_uanzse2i5().f[6]++;
        cov_uanzse2i5().s[19]++;
        return exports.WorkflowSchema.parse(workflow);
      }),
      totalCount: response.data.length
    };
  }
  async activateWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[20]++, await this.client.activateWorkflow(workflowId));
    /* istanbul ignore next */
    cov_uanzse2i5().s[21]++;
    return exports.WorkflowSchema.parse(response);
  }
  async deactivateWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[8]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[22]++, await this.client.deactivateWorkflow(workflowId));
    /* istanbul ignore next */
    cov_uanzse2i5().s[23]++;
    return exports.WorkflowSchema.parse(response);
  }
  // ============================================================================
  // Execution Management - leverages existing N8nClient methods
  // ============================================================================
  async executeWorkflow(workflowId, inputData, options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[9]++;
    cov_uanzse2i5().s[24]++;
    // Note: N8nClient doesn't have executeWorkflow method, this would need to be added
    throw new Error('Workflow execution not implemented in base N8nClient - would require n8n fork API extension');
  }
  async getExecution(executionId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[10]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[25]++, await this.client.getExecution(executionId));
    /* istanbul ignore next */
    cov_uanzse2i5().s[26]++;
    return exports.WorkflowExecutionSchema.parse(response);
  }
  async listExecutions(options =
  /* istanbul ignore next */
  (cov_uanzse2i5().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[11]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[27]++, await this.client.getExecutions(options));
    /* istanbul ignore next */
    cov_uanzse2i5().s[28]++;
    return {
      executions: response.data.map(execution => {
        /* istanbul ignore next */
        cov_uanzse2i5().f[12]++;
        cov_uanzse2i5().s[29]++;
        return exports.WorkflowExecutionSchema.parse(execution);
      }),
      totalCount: response.data.length
    };
  }
  async stopExecution(executionId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[13]++;
    cov_uanzse2i5().s[30]++;
    // Note: This would require addition to N8nClient
    throw new Error('Stop execution not implemented in base N8nClient - would require n8n fork API extension');
  }
  async retryExecution(executionId, options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[14]++;
    cov_uanzse2i5().s[31]++;
    // Note: This would require addition to N8nClient  
    throw new Error('Retry execution not implemented in base N8nClient - would require n8n fork API extension');
  }
  async deleteExecution(executionId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[15]++;
    cov_uanzse2i5().s[32]++;
    await this.client.deleteExecution(executionId);
  }
  // ============================================================================
  // Project Management - leverages existing N8nClient methods
  // ============================================================================
  async createProject(project) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[16]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[33]++, await this.client.createProject(project));
    /* istanbul ignore next */
    cov_uanzse2i5().s[34]++;
    return exports.ProjectSchema.parse(response);
  }
  async getProject(projectId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[17]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[35]++, await this.client.getProject(projectId));
    /* istanbul ignore next */
    cov_uanzse2i5().s[36]++;
    return exports.ProjectSchema.parse(response);
  }
  async listProjects() {
    /* istanbul ignore next */
    cov_uanzse2i5().f[18]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[37]++, await this.client.getProjects({}));
    /* istanbul ignore next */
    cov_uanzse2i5().s[38]++;
    return response.data.map(project => {
      /* istanbul ignore next */
      cov_uanzse2i5().f[19]++;
      cov_uanzse2i5().s[39]++;
      return exports.ProjectSchema.parse(project);
    });
  }
  async updateProject(projectId, updates) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[20]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[40]++, await this.client.updateProject(projectId, updates));
    /* istanbul ignore next */
    cov_uanzse2i5().s[41]++;
    return exports.ProjectSchema.parse(response);
  }
  async deleteProject(projectId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[21]++;
    cov_uanzse2i5().s[42]++;
    await this.client.deleteProject(projectId);
  }
  async moveWorkflowToProject(workflowId, projectId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[22]++;
    cov_uanzse2i5().s[43]++;
    // Note: This would require addition to N8nClient
    throw new Error('Move workflow to project not implemented in base N8nClient - would require n8n fork API extension');
  }
  // ============================================================================
  // Tag Management - leverages existing N8nClient methods
  // ============================================================================
  async createTag(tag) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[23]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[44]++, await this.client.createTag(tag));
    /* istanbul ignore next */
    cov_uanzse2i5().s[45]++;
    return exports.TagSchema.parse(response);
  }
  async listTags() {
    /* istanbul ignore next */
    cov_uanzse2i5().f[24]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[46]++, await this.client.getTags({}));
    /* istanbul ignore next */
    cov_uanzse2i5().s[47]++;
    return response.data.map(tag => {
      /* istanbul ignore next */
      cov_uanzse2i5().f[25]++;
      cov_uanzse2i5().s[48]++;
      return exports.TagSchema.parse(tag);
    });
  }
  async updateTag(tagId, updates) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[26]++;
    const response =
    /* istanbul ignore next */
    (cov_uanzse2i5().s[49]++, await this.client.updateTag(tagId, updates));
    /* istanbul ignore next */
    cov_uanzse2i5().s[50]++;
    return exports.TagSchema.parse(response);
  }
  async deleteTag(tagId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[27]++;
    cov_uanzse2i5().s[51]++;
    await this.client.deleteTag(tagId);
  }
  async addTagsToWorkflow(workflowId, tagIds) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[28]++;
    cov_uanzse2i5().s[52]++;
    await this.client.updateWorkflowTags(workflowId, tagIds);
  }
  async removeTagsFromWorkflow(workflowId, tagIds) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[29]++;
    cov_uanzse2i5().s[53]++;
    // Note: This would require modification to updateWorkflowTags or new method
    throw new Error('Remove tags from workflow not implemented in base N8nClient - would require API extension');
  }
  // ============================================================================
  // Collaboration Features - would require n8n fork API extensions
  // ============================================================================
  async shareWorkflow(workflowId, userId, role) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[30]++;
    cov_uanzse2i5().s[54]++;
    throw new Error('Workflow sharing not implemented in base N8nClient - would require n8n fork API extension');
  }
  async updateWorkflowShare(workflowId, userId, role) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[31]++;
    cov_uanzse2i5().s[55]++;
    throw new Error('Update workflow sharing not implemented in base N8nClient - would require n8n fork API extension');
  }
  async removeWorkflowShare(workflowId, userId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[32]++;
    cov_uanzse2i5().s[56]++;
    throw new Error('Remove workflow sharing not implemented in base N8nClient - would require n8n fork API extension');
  }
  async listWorkflowCollaborators(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[33]++;
    cov_uanzse2i5().s[57]++;
    throw new Error('List workflow collaborators not implemented in base N8nClient - would require n8n fork API extension');
  }
  // ============================================================================
  // Analytics and Monitoring - would require n8n fork API extensions
  // ============================================================================
  async getWorkflowAnalytics(workflowId, options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[34]++;
    cov_uanzse2i5().s[58]++;
    throw new Error('Workflow analytics not implemented in base N8nClient - would require n8n fork API extension');
  }
  async getGlobalAnalytics(options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[35]++;
    cov_uanzse2i5().s[59]++;
    throw new Error('Global analytics not implemented in base N8nClient - would require n8n fork API extension');
  }
  async getExecutionStatistics(workflowId) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[36]++;
    cov_uanzse2i5().s[60]++;
    throw new Error('Execution statistics not implemented in base N8nClient - would require n8n fork API extension');
  }
  // ============================================================================
  // Bulk Operations - would require n8n fork API extensions
  // ============================================================================
  async bulkActivateWorkflows(workflowIds, active) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[37]++;
    cov_uanzse2i5().s[61]++;
    throw new Error('Bulk workflow operations not implemented in base N8nClient - would require n8n fork API extension');
  }
  async bulkDeleteWorkflows(workflowIds) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[38]++;
    cov_uanzse2i5().s[62]++;
    throw new Error('Bulk workflow operations not implemented in base N8nClient - would require n8n fork API extension');
  }
  async bulkDeleteExecutions(criteria) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[39]++;
    cov_uanzse2i5().s[63]++;
    throw new Error('Bulk execution operations not implemented in base N8nClient - would require n8n fork API extension');
  }
  // ============================================================================
  // Import/Export - would require n8n fork API extensions
  // ============================================================================
  async exportWorkflows(workflowIds, options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[40]++;
    cov_uanzse2i5().s[64]++;
    throw new Error('Workflow export not implemented in base N8nClient - would require n8n fork API extension');
  }
  async importWorkflows(workflows, options) {
    /* istanbul ignore next */
    cov_uanzse2i5().f[41]++;
    cov_uanzse2i5().s[65]++;
    throw new Error('Workflow import not implemented in base N8nClient - would require n8n fork API extension');
  }
}
/* istanbul ignore next */
cov_uanzse2i5().s[66]++;
exports.WorkflowManagementClient = WorkflowManagementClient;
/**
 * Create workflow management client with default configuration
 */
function createWorkflowManagementClient(n8nClient) {
  /* istanbul ignore next */
  cov_uanzse2i5().f[42]++;
  cov_uanzse2i5().s[67]++;
  return new WorkflowManagementClient(n8nClient);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,