bf797cd3a00d251c2f7bb071e9051109
/* istanbul ignore next */
function cov_1dpfgwsx1t() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/executions.ts";
  var hash = "baed737eefb996709e33575a85e2241d143705fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/executions.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 26
        },
        end: {
          line: 6,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "3": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "4": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "5": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 94
        }
      },
      "6": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "7": {
        start: {
          line: 31,
          column: 32
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "8": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "9": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "10": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 35,
          column: 49
        }
      },
      "11": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 49
        }
      },
      "12": {
        start: {
          line: 36,
          column: 33
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "13": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "14": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "15": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 78
        }
      },
      "16": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "17": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "18": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 78
        }
      },
      "19": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 81
        }
      },
      "20": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 76
        }
      },
      "21": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "22": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 98
        }
      },
      "23": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "24": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 102
        }
      },
      "25": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "26": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 90
        }
      },
      "27": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "28": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "29": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "30": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "31": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 95
        }
      },
      "32": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 30
        }
      },
      "33": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "34": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 87
        }
      },
      "35": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 84
        }
      },
      "36": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "37": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "38": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "39": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 94
        }
      },
      "40": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "41": {
        start: {
          line: 96,
          column: 34
        },
        end: {
          line: 96,
          column: 77
        }
      },
      "42": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 103,
          column: 33
        }
      },
      "43": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "44": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "45": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 71
        }
      },
      "46": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 58
        }
      },
      "47": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 96
        }
      },
      "48": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "49": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 100
        }
      },
      "50": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 81
        }
      },
      "51": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "52": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "53": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "54": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 84
        }
      },
      "55": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "56": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 99
        }
      },
      "57": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "58": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 61
        }
      },
      "59": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 75
        }
      },
      "60": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 94
        }
      },
      "61": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 84
        }
      },
      "62": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 30
        }
      },
      "63": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "64": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 85
        }
      },
      "65": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 82
        }
      },
      "66": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "67": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 38
        }
      },
      "68": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "69": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 94
        }
      },
      "70": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "71": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 63
        }
      },
      "72": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 87
        }
      },
      "73": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "74": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 88
        }
      },
      "75": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 85
        }
      }
    },
    fnMap: {
      "0": {
        name: "createExecutionTools",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 36
          }
        },
        loc: {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 39
          }
        },
        loc: {
          start: {
            line: 41,
            column: 60
          },
          end: {
            line: 64,
            column: 17
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 90,
            column: 17
          },
          end: {
            line: 90,
            column: 18
          }
        },
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 90
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 151,
            column: 18
          }
        },
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 151
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 33,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 35,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 35,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 48,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 48,
            column: 37
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 48,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 30
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 48,
            column: 37
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 48,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 34
          },
          end: {
            line: 47,
            column: 38
          }
        }, {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 37
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 73
          },
          end: {
            line: 58,
            column: 78
          }
        }, {
          start: {
            line: 58,
            column: 81
          },
          end: {
            line: 58,
            column: 85
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 103,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 25
          }
        }, {
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 103,
            column: 33
          }
        }],
        line: 97
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 103,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 29
          }
        }, {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 103,
            column: 33
          }
        }],
        line: 99
      },
      "16": {
        loc: {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 103,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 34
          }
        }, {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 33
          }
        }],
        line: 101
      },
      "17": {
        loc: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "18": {
        loc: {
          start: {
            line: 112,
            column: 43
          },
          end: {
            line: 112,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 69
          }
        }, {
          start: {
            line: 112,
            column: 72
          },
          end: {
            line: 112,
            column: 76
          }
        }],
        line: 112
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "22": {
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "23": {
        loc: {
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 126,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 77
          },
          end: {
            line: 126,
            column: 82
          }
        }, {
          start: {
            line: 126,
            column: 85
          },
          end: {
            line: 126,
            column: 89
          }
        }],
        line: 126
      },
      "24": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/executions.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/executions.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nExecution, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst ExecutionIdSchema = z.object({\n  executionId: z.string().min(1, 'Execution ID is required'),\n});\n\nconst ListExecutionsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\n// Tool registration function\nexport function createExecutionTools(getClient: () => N8nClient | null, server: any) {\n  // List executions tool\n  server.addTool({\n    name: 'list-executions',\n    description: 'List all workflow executions in the n8n instance with pagination support',\n    parameters: ListExecutionsSchema,\n    annotations: {\n      title: 'List n8n Executions',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListExecutionsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getExecutions(options);\n\n        if (response.data.length === 0) {\n          return 'No executions found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} execution(s):\\n\\n`;\n\n        response.data.forEach((execution: N8nExecution, index: number) => {\n          const statusIcon =\n            execution.status === 'success'\n              ? '\u2705'\n              : execution.status === 'error'\n                ? '\u274C'\n                : execution.status === 'running'\n                  ? '\uD83D\uDD04'\n                  : '\u23F3';\n\n          result += `${index + 1}. **Execution ${execution.id}**\\n`;\n          result += `   - Status: ${statusIcon} ${execution.status}\\n`;\n          result += `   - Workflow ID: ${execution.workflowId}\\n`;\n          result += `   - Mode: ${execution.mode}\\n`;\n          result += `   - Started: ${new Date(execution.startedAt).toLocaleString()}\\n`;\n\n          if (execution.stoppedAt) {\n            result += `   - Stopped: ${new Date(execution.stoppedAt).toLocaleString()}\\n`;\n          }\n\n          if (execution.finished !== undefined) {\n            result += `   - Finished: ${execution.finished ? 'Yes' : 'No'}\\n`;\n          }\n\n          if (execution.retryOf) {\n            result += `   - Retry Of: ${execution.retryOf}\\n`;\n          }\n\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n\uD83D\uDCC4 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to list executions: ${error.message}`);\n        }\n        throw new UserError('Failed to list executions with unknown error');\n      }\n    },\n  });\n\n  // Get execution tool\n  server.addTool({\n    name: 'get-execution',\n    description: 'Get detailed information about a specific execution by ID',\n    parameters: ExecutionIdSchema,\n    annotations: {\n      title: 'Get Execution Details',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ExecutionIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const execution = await client.getExecution(args.executionId);\n\n        const statusIcon =\n          execution.status === 'success'\n            ? '\u2705'\n            : execution.status === 'error'\n              ? '\u274C'\n              : execution.status === 'running'\n                ? '\uD83D\uDD04'\n                : '\u23F3';\n\n        let result = `# Execution: ${execution.id}\\n\\n`;\n        result += `**Status:** ${statusIcon} ${execution.status}\\n`;\n        result += `**Workflow ID:** ${execution.workflowId}\\n`;\n        result += `**Mode:** ${execution.mode}\\n`;\n        result += `**Started At:** ${new Date(execution.startedAt).toLocaleString()}\\n`;\n\n        if (execution.stoppedAt) {\n          result += `**Stopped At:** ${new Date(execution.stoppedAt).toLocaleString()}\\n`;\n        }\n\n        result += `**Finished:** ${execution.finished ? 'Yes' : 'No'}\\n`;\n\n        if (execution.retryOf) {\n          result += `**Retry Of:** ${execution.retryOf}\\n`;\n        }\n\n        if (execution.retrySuccessId) {\n          result += `**Retry Success ID:** ${execution.retrySuccessId}\\n`;\n        }\n\n        if (execution.waitTill) {\n          result += `**Wait Until:** ${new Date(execution.waitTill).toLocaleString()}\\n`;\n        }\n\n        // Include workflow information if available\n        if (execution.workflowData) {\n          result += `\\n## Workflow Information:\\n`;\n          result += `**Name:** ${execution.workflowData.name}\\n`;\n          result += `**Active:** ${execution.workflowData.active ? 'Yes' : 'No'}\\n`;\n          result += `**Nodes:** ${execution.workflowData.nodes.length}\\n`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get execution: ${error.message}`);\n        }\n        throw new UserError('Failed to get execution with unknown error');\n      }\n    },\n  });\n\n  // Delete execution tool\n  server.addTool({\n    name: 'delete-execution',\n    description: 'Delete an execution from n8n permanently. WARNING: This action cannot be undone',\n    parameters: ExecutionIdSchema,\n    annotations: {\n      title: 'Delete Execution',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ExecutionIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteExecution(args.executionId);\n        return `\u2705 Successfully deleted execution with ID: ${args.executionId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to delete execution: ${error.message}`);\n        }\n        throw new UserError('Failed to delete execution with unknown error');\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "baed737eefb996709e33575a85e2241d143705fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dpfgwsx1t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dpfgwsx1t();
import { z } from 'zod';
import { UserError } from 'fastmcp';
// Zod schemas for validation
const ExecutionIdSchema =
/* istanbul ignore next */
(cov_1dpfgwsx1t().s[0]++, z.object({
  executionId: z.string().min(1, 'Execution ID is required')
}));
const ListExecutionsSchema =
/* istanbul ignore next */
(cov_1dpfgwsx1t().s[1]++, z.object({
  limit: z.number().min(1).max(100).optional(),
  cursor: z.string().optional()
}));
// Tool registration function
export function createExecutionTools(getClient, server) {
  /* istanbul ignore next */
  cov_1dpfgwsx1t().f[0]++;
  cov_1dpfgwsx1t().s[2]++;
  // List executions tool
  server.addTool({
    name: 'list-executions',
    description: 'List all workflow executions in the n8n instance with pagination support',
    parameters: ListExecutionsSchema,
    annotations: {
      title: 'List n8n Executions',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1dpfgwsx1t().f[1]++;
      const client =
      /* istanbul ignore next */
      (cov_1dpfgwsx1t().s[3]++, getClient());
      /* istanbul ignore next */
      cov_1dpfgwsx1t().s[4]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().b[0][0]++;
        cov_1dpfgwsx1t().s[5]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1dpfgwsx1t().b[0][1]++;
      }
      cov_1dpfgwsx1t().s[6]++;
      try {
        const options =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[7]++, {});
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[8]++;
        if (args.limit) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[1][0]++;
          cov_1dpfgwsx1t().s[9]++;
          options.limit = args.limit;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[1][1]++;
        }
        cov_1dpfgwsx1t().s[10]++;
        if (args.cursor) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[2][0]++;
          cov_1dpfgwsx1t().s[11]++;
          options.cursor = args.cursor;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[2][1]++;
        }
        const response =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[12]++, await client.getExecutions(options));
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[13]++;
        if (response.data.length === 0) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[3][0]++;
          cov_1dpfgwsx1t().s[14]++;
          return 'No executions found in the n8n instance.';
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[3][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[15]++, `Found ${response.data.length} execution(s):\n\n`);
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[16]++;
        response.data.forEach((execution, index) => {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().f[2]++;
          const statusIcon =
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().s[17]++, execution.status === 'success' ?
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[4][0]++, '✅') :
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[4][1]++, execution.status === 'error' ?
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[5][0]++, '❌') :
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[5][1]++, execution.status === 'running' ?
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[6][0]++, '🔄') :
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[6][1]++, '⏳'))));
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[18]++;
          result += `${index + 1}. **Execution ${execution.id}**\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[19]++;
          result += `   - Status: ${statusIcon} ${execution.status}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[20]++;
          result += `   - Workflow ID: ${execution.workflowId}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[21]++;
          result += `   - Mode: ${execution.mode}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[22]++;
          result += `   - Started: ${new Date(execution.startedAt).toLocaleString()}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[23]++;
          if (execution.stoppedAt) {
            /* istanbul ignore next */
            cov_1dpfgwsx1t().b[7][0]++;
            cov_1dpfgwsx1t().s[24]++;
            result += `   - Stopped: ${new Date(execution.stoppedAt).toLocaleString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1dpfgwsx1t().b[7][1]++;
          }
          cov_1dpfgwsx1t().s[25]++;
          if (execution.finished !== undefined) {
            /* istanbul ignore next */
            cov_1dpfgwsx1t().b[8][0]++;
            cov_1dpfgwsx1t().s[26]++;
            result += `   - Finished: ${execution.finished ?
            /* istanbul ignore next */
            (cov_1dpfgwsx1t().b[9][0]++, 'Yes') :
            /* istanbul ignore next */
            (cov_1dpfgwsx1t().b[9][1]++, 'No')}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1dpfgwsx1t().b[8][1]++;
          }
          cov_1dpfgwsx1t().s[27]++;
          if (execution.retryOf) {
            /* istanbul ignore next */
            cov_1dpfgwsx1t().b[10][0]++;
            cov_1dpfgwsx1t().s[28]++;
            result += `   - Retry Of: ${execution.retryOf}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1dpfgwsx1t().b[10][1]++;
          }
          cov_1dpfgwsx1t().s[29]++;
          result += '\n';
        });
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[30]++;
        if (response.nextCursor) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[11][0]++;
          cov_1dpfgwsx1t().s[31]++;
          result += `\n📄 Use cursor "${response.nextCursor}" to get the next page.`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[11][1]++;
        }
        cov_1dpfgwsx1t().s[32]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[33]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[12][0]++;
          cov_1dpfgwsx1t().s[34]++;
          throw new UserError(`Failed to list executions: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[12][1]++;
        }
        cov_1dpfgwsx1t().s[35]++;
        throw new UserError('Failed to list executions with unknown error');
      }
    }
  });
  // Get execution tool
  /* istanbul ignore next */
  cov_1dpfgwsx1t().s[36]++;
  server.addTool({
    name: 'get-execution',
    description: 'Get detailed information about a specific execution by ID',
    parameters: ExecutionIdSchema,
    annotations: {
      title: 'Get Execution Details',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1dpfgwsx1t().f[3]++;
      const client =
      /* istanbul ignore next */
      (cov_1dpfgwsx1t().s[37]++, getClient());
      /* istanbul ignore next */
      cov_1dpfgwsx1t().s[38]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().b[13][0]++;
        cov_1dpfgwsx1t().s[39]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1dpfgwsx1t().b[13][1]++;
      }
      cov_1dpfgwsx1t().s[40]++;
      try {
        const execution =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[41]++, await client.getExecution(args.executionId));
        const statusIcon =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[42]++, execution.status === 'success' ?
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[14][0]++, '✅') :
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[14][1]++, execution.status === 'error' ?
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[15][0]++, '❌') :
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[15][1]++, execution.status === 'running' ?
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[16][0]++, '🔄') :
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[16][1]++, '⏳'))));
        let result =
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().s[43]++, `# Execution: ${execution.id}\n\n`);
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[44]++;
        result += `**Status:** ${statusIcon} ${execution.status}\n`;
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[45]++;
        result += `**Workflow ID:** ${execution.workflowId}\n`;
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[46]++;
        result += `**Mode:** ${execution.mode}\n`;
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[47]++;
        result += `**Started At:** ${new Date(execution.startedAt).toLocaleString()}\n`;
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[48]++;
        if (execution.stoppedAt) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[17][0]++;
          cov_1dpfgwsx1t().s[49]++;
          result += `**Stopped At:** ${new Date(execution.stoppedAt).toLocaleString()}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[17][1]++;
        }
        cov_1dpfgwsx1t().s[50]++;
        result += `**Finished:** ${execution.finished ?
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[18][0]++, 'Yes') :
        /* istanbul ignore next */
        (cov_1dpfgwsx1t().b[18][1]++, 'No')}\n`;
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[51]++;
        if (execution.retryOf) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[19][0]++;
          cov_1dpfgwsx1t().s[52]++;
          result += `**Retry Of:** ${execution.retryOf}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[19][1]++;
        }
        cov_1dpfgwsx1t().s[53]++;
        if (execution.retrySuccessId) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[20][0]++;
          cov_1dpfgwsx1t().s[54]++;
          result += `**Retry Success ID:** ${execution.retrySuccessId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[20][1]++;
        }
        cov_1dpfgwsx1t().s[55]++;
        if (execution.waitTill) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[21][0]++;
          cov_1dpfgwsx1t().s[56]++;
          result += `**Wait Until:** ${new Date(execution.waitTill).toLocaleString()}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[21][1]++;
        }
        // Include workflow information if available
        cov_1dpfgwsx1t().s[57]++;
        if (execution.workflowData) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[22][0]++;
          cov_1dpfgwsx1t().s[58]++;
          result += `\n## Workflow Information:\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[59]++;
          result += `**Name:** ${execution.workflowData.name}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[60]++;
          result += `**Active:** ${execution.workflowData.active ?
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[23][0]++, 'Yes') :
          /* istanbul ignore next */
          (cov_1dpfgwsx1t().b[23][1]++, 'No')}\n`;
          /* istanbul ignore next */
          cov_1dpfgwsx1t().s[61]++;
          result += `**Nodes:** ${execution.workflowData.nodes.length}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[22][1]++;
        }
        cov_1dpfgwsx1t().s[62]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[63]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[24][0]++;
          cov_1dpfgwsx1t().s[64]++;
          throw new UserError(`Failed to get execution: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[24][1]++;
        }
        cov_1dpfgwsx1t().s[65]++;
        throw new UserError('Failed to get execution with unknown error');
      }
    }
  });
  // Delete execution tool
  /* istanbul ignore next */
  cov_1dpfgwsx1t().s[66]++;
  server.addTool({
    name: 'delete-execution',
    description: 'Delete an execution from n8n permanently. WARNING: This action cannot be undone',
    parameters: ExecutionIdSchema,
    annotations: {
      title: 'Delete Execution',
      readOnlyHint: false,
      destructiveHint: true,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1dpfgwsx1t().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_1dpfgwsx1t().s[67]++, getClient());
      /* istanbul ignore next */
      cov_1dpfgwsx1t().s[68]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().b[25][0]++;
        cov_1dpfgwsx1t().s[69]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1dpfgwsx1t().b[25][1]++;
      }
      cov_1dpfgwsx1t().s[70]++;
      try {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[71]++;
        await client.deleteExecution(args.executionId);
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[72]++;
        return `✅ Successfully deleted execution with ID: ${args.executionId}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1dpfgwsx1t().s[73]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1dpfgwsx1t().b[26][0]++;
          cov_1dpfgwsx1t().s[74]++;
          throw new UserError(`Failed to delete execution: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1dpfgwsx1t().b[26][1]++;
        }
        cov_1dpfgwsx1t().s[75]++;
        throw new UserError('Failed to delete execution with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,