906011d0c5e04243e007a1f4a4462d15
/* istanbul ignore next */
function cov_1ts539ri58() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts";
  var hash = "dbf8f2eb19da83521bc847bab781464ad86e3d9f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 31
        }
      },
      "1": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "4": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 55
        }
      },
      "5": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 27,
          column: 14
        }
      },
      "8": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "9": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 29,
          column: 55
        }
      },
      "10": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 73
        }
      },
      "11": {
        start: {
          line: 32,
          column: 32
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "12": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "13": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "16": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 76
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 73
        }
      },
      "18": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 51,
          column: 52
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 52
        }
      },
      "23": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 70
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "25": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "26": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "28": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "29": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "30": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "31": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 81,
          column: 52
        }
      },
      "33": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 52
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "36": {
        start: {
          line: 84,
          column: 22
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "37": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "38": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 52
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "40": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "41": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "42": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "43": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "44": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 119,
          column: 44
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 121,
          column: 61
        }
      },
      "46": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 61
        }
      },
      "47": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "48": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "49": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 70
        }
      },
      "50": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 55
        }
      },
      "51": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 53
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "53": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "54": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "55": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "56": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 141,
          column: 52
        }
      },
      "57": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 52
        }
      },
      "58": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "59": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "60": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 144,
          column: 70
        }
      },
      "61": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "62": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 54
        }
      },
      "63": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "64": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "65": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 73
        }
      },
      "66": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 44
        }
      },
      "67": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "68": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "69": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "70": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "71": {
        start: {
          line: 171,
          column: 22
        },
        end: {
          line: 171,
          column: 70
        }
      },
      "72": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 53
        }
      },
      "73": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 51
        }
      },
      "74": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "75": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "76": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "77": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 44
        }
      },
      "78": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 198,
          column: 61
        }
      },
      "79": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 61
        }
      },
      "80": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "81": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "82": {
        start: {
          line: 201,
          column: 22
        },
        end: {
          line: 201,
          column: 70
        }
      },
      "83": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 54
        }
      },
      "84": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "85": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "86": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "87": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 219,
          column: 61
        }
      },
      "88": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 61
        }
      },
      "89": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 221,
          column: 52
        }
      },
      "90": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 52
        }
      },
      "91": {
        start: {
          line: 222,
          column: 22
        },
        end: {
          line: 222,
          column: 70
        }
      },
      "92": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 49
        }
      },
      "93": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 47
        }
      },
      "94": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "95": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "96": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "97": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 65
        }
      },
      "98": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 252,
          column: 11
        }
      },
      "99": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "100": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 55
        }
      },
      "101": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "102": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "103": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "104": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 47
        }
      },
      "105": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 79
        }
      },
      "106": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 57
        }
      },
      "107": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 85
        }
      },
      "108": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "109": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "110": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 45
        }
      },
      "111": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 313,
          column: 11
        }
      },
      "112": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 89
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 33
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 46
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 22
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 37
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 39
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 96
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 102
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 31
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 112
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 38
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 118
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 30
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 136
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 28
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 147
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 43
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 150
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 156
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 46
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 36
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 165
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 25
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 174
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 37
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 177
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 41
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 183
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 189
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 195
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 39
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 204
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 29
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 210
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 216
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 21
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 225
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 228
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 234
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 24
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 240
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 38
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 245
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 248
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 32
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 255
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 259
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 262
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 59
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 268
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 49
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 274
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 25
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 280
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 32
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 283
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 34
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 286
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 37
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 289
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 44
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 293
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 45
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 299
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        loc: {
          start: {
            line: 306,
            column: 23
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 306
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 35
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 309
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 41
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 315
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 42
          },
          end: {
            line: 13,
            column: 44
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 39
          }
        }, {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 71
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 46,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 31
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 42
          },
          end: {
            line: 52,
            column: 65
          }
        }, {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 52,
            column: 70
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 35
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 79,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 79,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 84,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 42
          },
          end: {
            line: 84,
            column: 65
          }
        }, {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 84,
            column: 70
          }
        }],
        line: 84
      },
      "15": {
        loc: {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 118,
            column: 34
          },
          end: {
            line: 118,
            column: 36
          }
        }],
        line: 118
      },
      "16": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 121,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 121,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "17": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "18": {
        loc: {
          start: {
            line: 124,
            column: 22
          },
          end: {
            line: 124,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 42
          },
          end: {
            line: 124,
            column: 65
          }
        }, {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 124,
            column: 70
          }
        }],
        line: 124
      },
      "19": {
        loc: {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 136,
            column: 37
          }
        }],
        line: 136
      },
      "20": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "21": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "22": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "23": {
        loc: {
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 144,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 42
          },
          end: {
            line: 144,
            column: 65
          }
        }, {
          start: {
            line: 144,
            column: 68
          },
          end: {
            line: 144,
            column: 70
          }
        }],
        line: 144
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 22
          },
          end: {
            line: 165,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 32
          },
          end: {
            line: 165,
            column: 34
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "26": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 170,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 170,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "27": {
        loc: {
          start: {
            line: 171,
            column: 22
          },
          end: {
            line: 171,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 65
          }
        }, {
          start: {
            line: 171,
            column: 68
          },
          end: {
            line: 171,
            column: 70
          }
        }],
        line: 171
      },
      "28": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 33
          },
          end: {
            line: 195,
            column: 35
          }
        }],
        line: 195
      },
      "29": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 198,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 198,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "30": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 200,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 200,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "31": {
        loc: {
          start: {
            line: 201,
            column: 22
          },
          end: {
            line: 201,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 42
          },
          end: {
            line: 201,
            column: 65
          }
        }, {
          start: {
            line: 201,
            column: 68
          },
          end: {
            line: 201,
            column: 70
          }
        }],
        line: 201
      },
      "32": {
        loc: {
          start: {
            line: 216,
            column: 18
          },
          end: {
            line: 216,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 216,
            column: 28
          },
          end: {
            line: 216,
            column: 30
          }
        }],
        line: 216
      },
      "33": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 219,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 219,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "34": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 221,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 221,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "35": {
        loc: {
          start: {
            line: 222,
            column: 22
          },
          end: {
            line: 222,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 42
          },
          end: {
            line: 222,
            column: 65
          }
        }, {
          start: {
            line: 222,
            column: 68
          },
          end: {
            line: 222,
            column: 70
          }
        }],
        line: 222
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
      mappings: "AAAA,OAAO,KAAK,MAAM,YAAY,CAAC;AAiC/B,MAAM,OAAO,SAAS;IAEV;IACA;IAFV,YACU,OAAe,EACf,MAAc;QADd,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QAEtB,mCAAmC;QACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC1C,qCAAqC;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEO,KAAK,CAAC,WAAW,CACvB,QAAgB,EAChB,UAAmC,EAAE;QAErC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,UAAU,QAAQ,EAAE,CAAC;QAChD,MAAM,OAAO,GAAG;YACd,eAAe,EAAE,IAAI,CAAC,MAAM;YAC5B,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE,kBAAkB;SACnC,CAAC;QAEF,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;gBAChC,GAAG,OAAO;gBACV,OAAO,EAAE;oBACP,GAAG,OAAO;oBACV,GAAG,CAAE,OAAO,CAAC,OAAkC,IAAI,EAAE,CAAC;iBACvD;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACxC,MAAM,IAAI,KAAK,CAAC,QAAQ,QAAQ,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC,CAAC;YAC3D,CAAC;YAED,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YACzD,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;gBAC5D,OAAO,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAM,CAAC;YACtC,CAAC;YAED,OAAO,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAiB,CAAC;QACjD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;gBAC3B,MAAM,IAAI,KAAK,CAAC,2BAA2B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9D,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,KAAK,CAAC,QAAQ,CAAC,UAA6B,EAAE;QAC5C,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5D,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAAyB,SAAS,KAAK,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAA2B;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAU,QAAQ,EAAE;YACzC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,QAA2B;QACtD,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,EAAE,EAAE,EAAE;YAC/C,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,MAAM,IAAI,CAAC,WAAW,CAAO,UAAU,EAAE,EAAE,EAAE;YAC3C,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,KAAK,CAAC,YAAY,CAAC,UAA6B,EAAE;QAChD,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,OAAO,CAAC,SAAS;YAAE,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAErE,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAA6B,aAAa,KAAK,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAc,cAAc,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,YAAmC;QACtD,OAAO,IAAI,CAAC,WAAW,CAAc,YAAY,EAAE;YACjD,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAU,EAAE,YAAmC;QAClE,OAAO,IAAI,CAAC,WAAW,CAAc,cAAc,EAAE,EAAE,EAAE;YACvD,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAU;QAC7B,MAAM,IAAI,CAAC,WAAW,CAAO,cAAc,EAAE,EAAE,EAAE;YAC/C,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,EAAU;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAc,cAAc,EAAE,WAAW,EAAE;YAChE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,WAAW,CAAc,cAAc,EAAE,aAAa,EAAE;YAClE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,aAAa,CAAC,UAA6B,EAAE;QACjD,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5D,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAA8B,cAAc,KAAK,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAe,eAAe,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,EAAU;QAC9B,MAAM,IAAI,CAAC,WAAW,CAAO,eAAe,EAAE,EAAE,EAAE;YAChD,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,KAAK,CAAC,cAAc,CAAC,UAA6B,EAAE;QAClD,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,OAAO,CAAC,SAAS;YAAE,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAErE,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAA+B,eAAe,KAAK,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAgB,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,cAAuC;QAC5D,OAAO,IAAI,CAAC,WAAW,CAAgB,cAAc,EAAE;YACrD,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,EAAU;QAC/B,MAAM,IAAI,CAAC,WAAW,CAAO,gBAAgB,EAAE,EAAE,EAAE;YACjD,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,cAAsB;QAC9C,OAAO,IAAI,CAAC,WAAW,CAA0B,uBAAuB,cAAc,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,kCAAkC;IAClC,KAAK,CAAC,WAAW,CAAC,UAA6B,EAAE;QAC/C,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5D,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAA4B,YAAY,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,WAAW,CAAa,aAAa,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,WAAiC;QACnD,OAAO,IAAI,CAAC,WAAW,CAAa,WAAW,EAAE;YAC/C,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAU,EAAE,WAAiC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAAa,aAAa,EAAE,EAAE,EAAE;YACrD,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAU;QAC5B,MAAM,IAAI,CAAC,WAAW,CAAO,aAAa,EAAE,EAAE,EAAE;YAC9C,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,mCAAmC;IACnC,KAAK,CAAC,YAAY,CAAC,UAA6B,EAAE;QAChD,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5D,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAA6B,aAAa,KAAK,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,YAAmC;QACtD,OAAO,IAAI,CAAC,WAAW,CAAc,YAAY,EAAE;YACjD,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAU;QAC7B,MAAM,IAAI,CAAC,WAAW,CAAO,cAAc,EAAE,EAAE,EAAE;YAC/C,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;IACjB,KAAK,CAAC,OAAO,CAAC,UAA6B,EAAE;QAC3C,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,OAAO,CAAC,KAAK;YAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,OAAO,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5D,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,IAAI,CAAC,WAAW,CAAwB,QAAQ,KAAK,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,OAAyB;QACvC,OAAO,IAAI,CAAC,WAAW,CAAS,OAAO,EAAE;YACvC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,EAAU,EAAE,OAAyB;QACnD,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,EAAE,EAAE,EAAE;YAC7C,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,EAAU;QACxB,MAAM,IAAI,CAAC,WAAW,CAAO,SAAS,EAAE,EAAE,EAAE;YAC1C,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,UAAkB;QACtC,OAAO,IAAI,CAAC,WAAW,CAAW,cAAc,UAAU,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,UAAkB,EAAE,MAAgB;QAC3D,MAAM,IAAI,CAAC,WAAW,CAAO,cAAc,UAAU,OAAO,EAAE;YAC5D,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,KAAK,CAAC,mBAAmB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAiB,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,+BAA+B;IAC/B,KAAK,CAAC,oBAAoB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAqC,qBAAqB,CAAC,CAAC;IACrF,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAA2C;QACvE,OAAO,IAAI,CAAC,WAAW,CAAsB,qBAAqB,EAAE;YAClE,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,WAAmB,EAAE,WAA0C;QAC1F,OAAO,IAAI,CAAC,WAAW,CAAsB,uBAAuB,kBAAkB,CAAC,WAAW,CAAC,EAAE,EAAE;YACrG,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,WAAmB;QACjD,MAAM,IAAI,CAAC,WAAW,CAAO,uBAAuB,kBAAkB,CAAC,WAAW,CAAC,EAAE,EAAE;YACrF,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,CAAC,WAAW,CAA2B,aAAa,CAAC,CAAC;IACnE,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAgB;QAChC,OAAO,IAAI,CAAC,WAAW,CAAyB,eAAe,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,OAAO,IAAI,CAAC,WAAW,CAA2B,uBAAuB,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,IAAY;QACrC,OAAO,IAAI,CAAC,WAAW,CAAyB,yBAAyB,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,0BAA0B;IAC1B,KAAK,CAAC,wBAAwB,CAAC,OAA2B;QACxD,OAAO,IAAI,CAAC,WAAW,CAAyB,kCAAkC,EAAE;YAClF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,OAA2B;QACzD,OAAO,IAAI,CAAC,WAAW,CAA0B,2CAA2C,EAAE;YAC5F,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,WAAW,CAA2B,WAAW,CAAC,CAAC;IACjE,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,QAAgB;QACnC,OAAO,IAAI,CAAC,WAAW,CAAuB,oBAAoB,EAAE;YAClE,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,QAAgB;QACzC,OAAO,IAAI,CAAC,WAAW,CAAqB,aAAa,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACvG,CAAC;CACF",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts"],
      sourcesContent: ["import fetch from 'node-fetch';\nimport {\n  N8nUser,\n  N8nWorkflow,\n  N8nExecution,\n  N8nCredential,\n  N8nProject,\n  N8nVariable,\n  N8nTag,\n  N8nAuditReport,\n  N8nCommunityPackage,\n  N8nNodeTypeDescription,\n  ApiResponse,\n  PaginationOptions,\n  CreateUserRequest,\n  UpdateUserRequest,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  CreateCredentialRequest,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  CreateVariableRequest,\n  CreateTagRequest,\n  UpdateTagRequest,\n  CommunityPackageInstallRequest,\n  CommunityPackageUpdateRequest,\n  DynamicNodeOptions,\n  DynamicNodeParameter,\n  ResourceLocatorResult,\n  AINodeClassification,\n  AINodeSuggestion,\n} from '../types/n8n.js';\n\nexport class N8nClient {\n  constructor(\n    private baseUrl: string,\n    private apiKey: string\n  ) {\n    // Remove trailing slash if present\n    this.baseUrl = baseUrl.replace(/\\/$/, '');\n    // Ensure apiKey is properly assigned\n    this.apiKey = apiKey;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: Record<string, unknown> = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}/api/v1${endpoint}`;\n    const headers = {\n      'X-N8N-API-KEY': this.apiKey,\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...((options.headers as Record<string, string>) || {}),\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return (await response.json()) as T;\n      }\n\n      return (await response.text()) as unknown as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`n8n API request failed: ${error.message}`);\n      }\n      throw new Error('n8n API request failed with unknown error');\n    }\n  }\n\n  // User Management\n  async getUsers(options: PaginationOptions = {}): Promise<ApiResponse<N8nUser[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nUser[]>>(`/users${query}`);\n  }\n\n  async getUser(id: string): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`);\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(id: string, userData: UpdateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.makeRequest<void>(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Workflow Management\n  async getWorkflows(options: PaginationOptions = {}): Promise<ApiResponse<N8nWorkflow[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nWorkflow[]>>(`/workflows${query}`);\n  }\n\n  async getWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`);\n  }\n\n  async createWorkflow(workflowData: CreateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>('/workflows', {\n      method: 'POST',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async updateWorkflow(id: string, workflowData: UpdateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async deleteWorkflow(id: string): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async activateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/activate`, {\n      method: 'POST',\n    });\n  }\n\n  async deactivateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/deactivate`, {\n      method: 'POST',\n    });\n  }\n\n  // Execution Management\n  async getExecutions(options: PaginationOptions = {}): Promise<ApiResponse<N8nExecution[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nExecution[]>>(`/executions${query}`);\n  }\n\n  async getExecution(id: string): Promise<N8nExecution> {\n    return this.makeRequest<N8nExecution>(`/executions/${id}`);\n  }\n\n  async deleteExecution(id: string): Promise<void> {\n    await this.makeRequest<void>(`/executions/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Credential Management\n  async getCredentials(options: PaginationOptions = {}): Promise<ApiResponse<N8nCredential[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nCredential[]>>(`/credentials${query}`);\n  }\n\n  async getCredential(id: string): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`);\n  }\n\n  async createCredential(credentialData: CreateCredentialRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>('/credentials', {\n      method: 'POST',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async deleteCredential(id: string): Promise<void> {\n    await this.makeRequest<void>(`/credentials/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getCredentialSchema(credentialType: string): Promise<Record<string, unknown>> {\n    return this.makeRequest<Record<string, unknown>>(`/credentials/schema/${credentialType}`);\n  }\n\n  // Project Management (Enterprise)\n  async getProjects(options: PaginationOptions = {}): Promise<ApiResponse<N8nProject[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nProject[]>>(`/projects${query}`);\n  }\n\n  async getProject(id: string): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`);\n  }\n\n  async createProject(projectData: CreateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>('/projects', {\n      method: 'POST',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async updateProject(id: string, projectData: UpdateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Variable Management (Enterprise)\n  async getVariables(options: PaginationOptions = {}): Promise<ApiResponse<N8nVariable[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nVariable[]>>(`/variables${query}`);\n  }\n\n  async createVariable(variableData: CreateVariableRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>('/variables', {\n      method: 'POST',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  async deleteVariable(id: string): Promise<void> {\n    await this.makeRequest<void>(`/variables/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tag Management\n  async getTags(options: PaginationOptions = {}): Promise<ApiResponse<N8nTag[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nTag[]>>(`/tags${query}`);\n  }\n\n  async getTag(id: string): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`);\n  }\n\n  async createTag(tagData: CreateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>('/tags', {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(id: string, tagData: UpdateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(id: string): Promise<void> {\n    await this.makeRequest<void>(`/tags/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWorkflowTags(workflowId: string): Promise<N8nTag[]> {\n    return this.makeRequest<N8nTag[]>(`/workflows/${workflowId}/tags`);\n  }\n\n  async updateWorkflowTags(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${workflowId}/tags`, {\n      method: 'PUT',\n      body: JSON.stringify({ tagIds }),\n    });\n  }\n\n  // Audit Report\n  async generateAuditReport(): Promise<N8nAuditReport> {\n    return this.makeRequest<N8nAuditReport>('/audit');\n  }\n\n  // Community Package Management\n  async getCommunityPackages(): Promise<ApiResponse<N8nCommunityPackage[]>> {\n    return this.makeRequest<ApiResponse<N8nCommunityPackage[]>>('/community-packages');\n  }\n\n  async installCommunityPackage(packageData: CommunityPackageInstallRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>('/community-packages', {\n      method: 'POST',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async updateCommunityPackage(packageName: string, packageData: CommunityPackageUpdateRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'PATCH',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async uninstallCommunityPackage(packageName: string): Promise<void> {\n    await this.makeRequest<void>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Node Type Management\n  async getNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/node-types');\n  }\n\n  async getNodeType(nodeType: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/node-types/${encodeURIComponent(nodeType)}`);\n  }\n\n  async getCommunityNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/community-node-types');\n  }\n\n  async getCommunityNodeType(name: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/community-node-types/${encodeURIComponent(name)}`);\n  }\n\n  // Dynamic Node Parameters\n  async getDynamicNodeParameters(options: DynamicNodeOptions): Promise<DynamicNodeParameter[]> {\n    return this.makeRequest<DynamicNodeParameter[]>('/dynamic-node-parameters/options', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  async getResourceLocatorResults(options: DynamicNodeOptions): Promise<ResourceLocatorResult[]> {\n    return this.makeRequest<ResourceLocatorResult[]>('/dynamic-node-parameters/resource-locator', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  // AI Node Features\n  async getAINodes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/ai-nodes');\n  }\n\n  async classifyAINode(nodeType: string): Promise<AINodeClassification> {\n    return this.makeRequest<AINodeClassification>('/ai-nodes/classify', {\n      method: 'POST',\n      body: JSON.stringify({ nodeType }),\n    });\n  }\n\n  async getAINodeSuggestions(nodeType: string): Promise<AINodeSuggestion[]> {\n    return this.makeRequest<AINodeSuggestion[]>(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbf8f2eb19da83521bc847bab781464ad86e3d9f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ts539ri58 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ts539ri58();
import fetch from 'node-fetch';
export class N8nClient {
  baseUrl;
  apiKey;
  constructor(baseUrl, apiKey) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[0]++;
    cov_1ts539ri58().s[0]++;
    this.baseUrl = baseUrl;
    /* istanbul ignore next */
    cov_1ts539ri58().s[1]++;
    this.apiKey = apiKey;
    // Remove trailing slash if present
    /* istanbul ignore next */
    cov_1ts539ri58().s[2]++;
    this.baseUrl = baseUrl.replace(/\/$/, '');
    // Ensure apiKey is properly assigned
    /* istanbul ignore next */
    cov_1ts539ri58().s[3]++;
    this.apiKey = apiKey;
  }
  async makeRequest(endpoint, options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[1]++;
    const url =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[4]++, `${this.baseUrl}/api/v1${endpoint}`);
    const headers =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[5]++, {
      'X-N8N-API-KEY': this.apiKey,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    });
    /* istanbul ignore next */
    cov_1ts539ri58().s[6]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[7]++, await fetch(url, {
        ...options,
        headers: {
          ...headers,
          ...(
          /* istanbul ignore next */
          (cov_1ts539ri58().b[1][0]++, options.headers) ||
          /* istanbul ignore next */
          (cov_1ts539ri58().b[1][1]++, {}))
        }
      }));
      /* istanbul ignore next */
      cov_1ts539ri58().s[8]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[2][0]++;
        const errorText =
        /* istanbul ignore next */
        (cov_1ts539ri58().s[9]++, await response.text());
        /* istanbul ignore next */
        cov_1ts539ri58().s[10]++;
        throw new Error(`HTTP ${response.status}: ${errorText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[2][1]++;
      }
      const contentType =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[11]++, response.headers.get('content-type'));
      /* istanbul ignore next */
      cov_1ts539ri58().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_1ts539ri58().b[4][0]++, contentType) &&
      /* istanbul ignore next */
      (cov_1ts539ri58().b[4][1]++, contentType.includes('application/json'))) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[3][0]++;
        cov_1ts539ri58().s[13]++;
        return await response.json();
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[3][1]++;
      }
      cov_1ts539ri58().s[14]++;
      return await response.text();
    } catch (error) {
      /* istanbul ignore next */
      cov_1ts539ri58().s[15]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][0]++;
        cov_1ts539ri58().s[16]++;
        throw new Error(`n8n API request failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[5][1]++;
      }
      cov_1ts539ri58().s[17]++;
      throw new Error('n8n API request failed with unknown error');
    }
  }
  // User Management
  async getUsers(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[2]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[18]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[19]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[7][0]++;
      cov_1ts539ri58().s[20]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[7][1]++;
    }
    cov_1ts539ri58().s[21]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[8][0]++;
      cov_1ts539ri58().s[22]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[8][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[23]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[9][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[9][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[24]++;
    return this.makeRequest(`/users${query}`);
  }
  async getUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[3]++;
    cov_1ts539ri58().s[25]++;
    return this.makeRequest(`/users/${id}`);
  }
  async createUser(userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[4]++;
    cov_1ts539ri58().s[26]++;
    return this.makeRequest('/users', {
      method: 'POST',
      body: JSON.stringify(userData)
    });
  }
  async updateUser(id, userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[5]++;
    cov_1ts539ri58().s[27]++;
    return this.makeRequest(`/users/${id}`, {
      method: 'PATCH',
      body: JSON.stringify(userData)
    });
  }
  async deleteUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[6]++;
    cov_1ts539ri58().s[28]++;
    await this.makeRequest(`/users/${id}`, {
      method: 'DELETE'
    });
  }
  // Workflow Management
  async getWorkflows(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[10][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[7]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[29]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[30]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[11][0]++;
      cov_1ts539ri58().s[31]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[11][1]++;
    }
    cov_1ts539ri58().s[32]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[12][0]++;
      cov_1ts539ri58().s[33]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[12][1]++;
    }
    cov_1ts539ri58().s[34]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[13][0]++;
      cov_1ts539ri58().s[35]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[13][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[36]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[14][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[14][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[37]++;
    return this.makeRequest(`/workflows${query}`);
  }
  async getWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[8]++;
    cov_1ts539ri58().s[38]++;
    return this.makeRequest(`/workflows/${id}`);
  }
  async createWorkflow(workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[9]++;
    cov_1ts539ri58().s[39]++;
    return this.makeRequest('/workflows', {
      method: 'POST',
      body: JSON.stringify(workflowData)
    });
  }
  async updateWorkflow(id, workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[10]++;
    cov_1ts539ri58().s[40]++;
    return this.makeRequest(`/workflows/${id}`, {
      method: 'PUT',
      body: JSON.stringify(workflowData)
    });
  }
  async deleteWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[11]++;
    cov_1ts539ri58().s[41]++;
    await this.makeRequest(`/workflows/${id}`, {
      method: 'DELETE'
    });
  }
  async activateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[12]++;
    cov_1ts539ri58().s[42]++;
    return this.makeRequest(`/workflows/${id}/activate`, {
      method: 'POST'
    });
  }
  async deactivateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[13]++;
    cov_1ts539ri58().s[43]++;
    return this.makeRequest(`/workflows/${id}/deactivate`, {
      method: 'POST'
    });
  }
  // Execution Management
  async getExecutions(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[14]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[44]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[45]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[16][0]++;
      cov_1ts539ri58().s[46]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[16][1]++;
    }
    cov_1ts539ri58().s[47]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[17][0]++;
      cov_1ts539ri58().s[48]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[17][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[49]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[18][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[18][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[50]++;
    return this.makeRequest(`/executions${query}`);
  }
  async getExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[15]++;
    cov_1ts539ri58().s[51]++;
    return this.makeRequest(`/executions/${id}`);
  }
  async deleteExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[16]++;
    cov_1ts539ri58().s[52]++;
    await this.makeRequest(`/executions/${id}`, {
      method: 'DELETE'
    });
  }
  // Credential Management
  async getCredentials(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[19][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[17]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[53]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[54]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[20][0]++;
      cov_1ts539ri58().s[55]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[20][1]++;
    }
    cov_1ts539ri58().s[56]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[21][0]++;
      cov_1ts539ri58().s[57]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[21][1]++;
    }
    cov_1ts539ri58().s[58]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[22][0]++;
      cov_1ts539ri58().s[59]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[22][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[60]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[23][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[23][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[61]++;
    return this.makeRequest(`/credentials${query}`);
  }
  async getCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[18]++;
    cov_1ts539ri58().s[62]++;
    return this.makeRequest(`/credentials/${id}`);
  }
  async createCredential(credentialData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[19]++;
    cov_1ts539ri58().s[63]++;
    return this.makeRequest('/credentials', {
      method: 'POST',
      body: JSON.stringify(credentialData)
    });
  }
  async deleteCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[20]++;
    cov_1ts539ri58().s[64]++;
    await this.makeRequest(`/credentials/${id}`, {
      method: 'DELETE'
    });
  }
  async getCredentialSchema(credentialType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[21]++;
    cov_1ts539ri58().s[65]++;
    return this.makeRequest(`/credentials/schema/${credentialType}`);
  }
  // Project Management (Enterprise)
  async getProjects(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[24][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[22]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[66]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[67]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[25][0]++;
      cov_1ts539ri58().s[68]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[25][1]++;
    }
    cov_1ts539ri58().s[69]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[26][0]++;
      cov_1ts539ri58().s[70]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[26][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[71]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[27][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[27][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[72]++;
    return this.makeRequest(`/projects${query}`);
  }
  async getProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[23]++;
    cov_1ts539ri58().s[73]++;
    return this.makeRequest(`/projects/${id}`);
  }
  async createProject(projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[24]++;
    cov_1ts539ri58().s[74]++;
    return this.makeRequest('/projects', {
      method: 'POST',
      body: JSON.stringify(projectData)
    });
  }
  async updateProject(id, projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[25]++;
    cov_1ts539ri58().s[75]++;
    return this.makeRequest(`/projects/${id}`, {
      method: 'PUT',
      body: JSON.stringify(projectData)
    });
  }
  async deleteProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[26]++;
    cov_1ts539ri58().s[76]++;
    await this.makeRequest(`/projects/${id}`, {
      method: 'DELETE'
    });
  }
  // Variable Management (Enterprise)
  async getVariables(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[28][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[27]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[77]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[78]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[29][0]++;
      cov_1ts539ri58().s[79]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[29][1]++;
    }
    cov_1ts539ri58().s[80]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[30][0]++;
      cov_1ts539ri58().s[81]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[30][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[82]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[31][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[31][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[83]++;
    return this.makeRequest(`/variables${query}`);
  }
  async createVariable(variableData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[28]++;
    cov_1ts539ri58().s[84]++;
    return this.makeRequest('/variables', {
      method: 'POST',
      body: JSON.stringify(variableData)
    });
  }
  async deleteVariable(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[29]++;
    cov_1ts539ri58().s[85]++;
    await this.makeRequest(`/variables/${id}`, {
      method: 'DELETE'
    });
  }
  // Tag Management
  async getTags(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[32][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[30]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[86]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[87]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[33][0]++;
      cov_1ts539ri58().s[88]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[33][1]++;
    }
    cov_1ts539ri58().s[89]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[34][0]++;
      cov_1ts539ri58().s[90]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[34][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[91]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[35][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[35][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[92]++;
    return this.makeRequest(`/tags${query}`);
  }
  async getTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[31]++;
    cov_1ts539ri58().s[93]++;
    return this.makeRequest(`/tags/${id}`);
  }
  async createTag(tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[32]++;
    cov_1ts539ri58().s[94]++;
    return this.makeRequest('/tags', {
      method: 'POST',
      body: JSON.stringify(tagData)
    });
  }
  async updateTag(id, tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[33]++;
    cov_1ts539ri58().s[95]++;
    return this.makeRequest(`/tags/${id}`, {
      method: 'PUT',
      body: JSON.stringify(tagData)
    });
  }
  async deleteTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[34]++;
    cov_1ts539ri58().s[96]++;
    await this.makeRequest(`/tags/${id}`, {
      method: 'DELETE'
    });
  }
  async getWorkflowTags(workflowId) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[35]++;
    cov_1ts539ri58().s[97]++;
    return this.makeRequest(`/workflows/${workflowId}/tags`);
  }
  async updateWorkflowTags(workflowId, tagIds) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[36]++;
    cov_1ts539ri58().s[98]++;
    await this.makeRequest(`/workflows/${workflowId}/tags`, {
      method: 'PUT',
      body: JSON.stringify({
        tagIds
      })
    });
  }
  // Audit Report
  async generateAuditReport() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[37]++;
    cov_1ts539ri58().s[99]++;
    return this.makeRequest('/audit');
  }
  // Community Package Management
  async getCommunityPackages() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[38]++;
    cov_1ts539ri58().s[100]++;
    return this.makeRequest('/community-packages');
  }
  async installCommunityPackage(packageData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[39]++;
    cov_1ts539ri58().s[101]++;
    return this.makeRequest('/community-packages', {
      method: 'POST',
      body: JSON.stringify(packageData)
    });
  }
  async updateCommunityPackage(packageName, packageData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[40]++;
    cov_1ts539ri58().s[102]++;
    return this.makeRequest(`/community-packages/${encodeURIComponent(packageName)}`, {
      method: 'PATCH',
      body: JSON.stringify(packageData)
    });
  }
  async uninstallCommunityPackage(packageName) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[41]++;
    cov_1ts539ri58().s[103]++;
    await this.makeRequest(`/community-packages/${encodeURIComponent(packageName)}`, {
      method: 'DELETE'
    });
  }
  // Node Type Management
  async getNodeTypes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[42]++;
    cov_1ts539ri58().s[104]++;
    return this.makeRequest('/node-types');
  }
  async getNodeType(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[43]++;
    cov_1ts539ri58().s[105]++;
    return this.makeRequest(`/node-types/${encodeURIComponent(nodeType)}`);
  }
  async getCommunityNodeTypes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[44]++;
    cov_1ts539ri58().s[106]++;
    return this.makeRequest('/community-node-types');
  }
  async getCommunityNodeType(name) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[45]++;
    cov_1ts539ri58().s[107]++;
    return this.makeRequest(`/community-node-types/${encodeURIComponent(name)}`);
  }
  // Dynamic Node Parameters
  async getDynamicNodeParameters(options) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[46]++;
    cov_1ts539ri58().s[108]++;
    return this.makeRequest('/dynamic-node-parameters/options', {
      method: 'POST',
      body: JSON.stringify(options)
    });
  }
  async getResourceLocatorResults(options) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[47]++;
    cov_1ts539ri58().s[109]++;
    return this.makeRequest('/dynamic-node-parameters/resource-locator', {
      method: 'POST',
      body: JSON.stringify(options)
    });
  }
  // AI Node Features
  async getAINodes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[48]++;
    cov_1ts539ri58().s[110]++;
    return this.makeRequest('/ai-nodes');
  }
  async classifyAINode(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[49]++;
    cov_1ts539ri58().s[111]++;
    return this.makeRequest('/ai-nodes/classify', {
      method: 'POST',
      body: JSON.stringify({
        nodeType
      })
    });
  }
  async getAINodeSuggestions(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[50]++;
    cov_1ts539ri58().s[112]++;
    return this.makeRequest(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,