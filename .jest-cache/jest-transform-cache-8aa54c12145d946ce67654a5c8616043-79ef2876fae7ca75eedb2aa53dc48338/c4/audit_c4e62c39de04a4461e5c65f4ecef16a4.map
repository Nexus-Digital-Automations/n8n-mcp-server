{"version":3,"names":["cov_wmo7ylmjl","actualCoverage","z","UserError","createAuditTools","getClient","server","f","s","addTool","name","description","parameters","object","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","client","b","auditReport","generateAuditReport","result","Date","toLocaleString","dbSettings","JSON","stringify","credRisk","entries","Object","length","forEach","key","value","nodesRisk","instanceRisk","knownSections","additionalSections","keys","filter","includes","section","error","Error","message"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/audit.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\n\n// Tool registration function\nexport function createAuditTools(getClient: () => N8nClient | null, server: any) {\n  // Generate audit report tool\n  server.addTool({\n    name: 'generate-audit-report',\n    description:\n      'Generate a comprehensive security and configuration audit report for the n8n instance. NOTE: May require Enterprise license',\n    parameters: z.object({}),\n    annotations: {\n      title: 'Generate Audit Report',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const auditReport = await client.generateAuditReport();\n\n        let result = `# n8n Security Audit Report\\n\\n`;\n        result += `**Generated:** ${new Date().toLocaleString()}\\n\\n`;\n\n        // Database Settings section\n        if (auditReport['Database Settings']) {\n          result += `## Database Settings\\n\\n`;\n          const dbSettings = auditReport['Database Settings'];\n          result += '```json\\n';\n          result += JSON.stringify(dbSettings, null, 2);\n          result += '\\n```\\n\\n';\n        }\n\n        // Credentials Risk Report section\n        if (auditReport['Credentials Risk Report']) {\n          result += `## Credentials Risk Assessment\\n\\n`;\n          const credRisk = auditReport['Credentials Risk Report'];\n\n          if (typeof credRisk === 'object' && credRisk !== null) {\n            const entries = Object.entries(credRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No credential risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(credRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Nodes Risk Report section\n        if (auditReport['Nodes Risk Report']) {\n          result += `## Nodes Risk Assessment\\n\\n`;\n          const nodesRisk = auditReport['Nodes Risk Report'];\n\n          if (typeof nodesRisk === 'object' && nodesRisk !== null) {\n            const entries = Object.entries(nodesRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No node risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(nodesRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Instance Risk Report section\n        if (auditReport['Instance Risk Report']) {\n          result += `## Instance Risk Assessment\\n\\n`;\n          const instanceRisk = auditReport['Instance Risk Report'];\n\n          if (typeof instanceRisk === 'object' && instanceRisk !== null) {\n            const entries = Object.entries(instanceRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No instance risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(instanceRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Add any additional sections that might be present\n        const knownSections = [\n          'Database Settings',\n          'Credentials Risk Report',\n          'Nodes Risk Report',\n          'Instance Risk Report',\n        ];\n        const additionalSections = Object.keys(auditReport).filter(\n          key => !knownSections.includes(key)\n        );\n\n        if (additionalSections.length > 0) {\n          result += `## Additional Audit Information\\n\\n`;\n          additionalSections.forEach(section => {\n            result += `### ${section}\\n\\n`;\n            result += '```json\\n';\n            result += JSON.stringify((auditReport as Record<string, unknown>)[section], null, 2);\n            result += '\\n```\\n\\n';\n          });\n        }\n\n        result += `---\\n\\n`;\n        result += `**Security Recommendations:**\\n`;\n        result += `- Review any identified risk issues above\\n`;\n        result += `- Ensure credentials are properly scoped and secured\\n`;\n        result += `- Regularly update n8n to the latest version\\n`;\n        result += `- Monitor and audit workflow access permissions\\n`;\n        result += `- Use environment variables for sensitive configuration\\n`;\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license') || error.message.includes('Enterprise')) {\n            throw new UserError(\n              `This operation may require an n8n Enterprise license. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to generate audit report: ${error.message}`);\n        }\n        throw new UserError('Failed to generate audit report with unknown error');\n      }\n    },\n  });\n}\n"],"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","ignoreList":[]}