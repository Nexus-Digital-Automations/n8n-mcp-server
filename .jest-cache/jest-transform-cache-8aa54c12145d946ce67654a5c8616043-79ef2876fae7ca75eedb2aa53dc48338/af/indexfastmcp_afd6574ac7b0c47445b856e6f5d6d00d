738407da0b374c400577e4b3449d7426
"use strict";

/* istanbul ignore next */
function cov_26nrb6tjz3() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/index-fastmcp.ts";
  var hash = "5fcf45e9263595259cd0e476a1bc0f703f7f6b54";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/index-fastmcp.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 55
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "7": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 54
        }
      },
      "8": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 56
        }
      },
      "9": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "10": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "11": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "12": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "13": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "14": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "15": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "16": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "17": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 54
        }
      },
      "18": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "19": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 70
        }
      },
      "20": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "21": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "22": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "23": {
        start: {
          line: 64,
          column: 18
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "24": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "25": {
        start: {
          line: 66,
          column: 18
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "26": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "27": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 58
        }
      },
      "28": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 71,
          column: 57
        }
      },
      "29": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 51
        }
      },
      "30": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "31": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "32": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "33": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "34": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "35": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "36": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "37": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "38": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 59
        }
      },
      "39": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "40": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 87,
          column: 60
        }
      },
      "41": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 89,
          column: 59
        }
      },
      "42": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 122,
          column: 3
        }
      },
      "43": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "44": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 82
        }
      },
      "45": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 52
        }
      },
      "46": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 30
        }
      },
      "47": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 81
        }
      },
      "48": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "49": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 78
        }
      },
      "50": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "51": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "53": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 74
        }
      },
      "54": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "55": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "56": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 58
        }
      },
      "57": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 128
        }
      },
      "58": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "59": {
        start: {
          line: 153,
          column: 32
        },
        end: {
          line: 153,
          column: 81
        }
      },
      "60": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 98
        }
      },
      "61": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 65
        }
      },
      "62": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 66
        }
      },
      "63": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 45
        }
      },
      "64": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 58
        }
      },
      "65": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "66": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "67": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "68": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 32
        }
      },
      "69": {
        start: {
          line: 167,
          column: 33
        },
        end: {
          line: 167,
          column: 99
        }
      },
      "70": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 39
        }
      },
      "71": {
        start: {
          line: 170,
          column: 30
        },
        end: {
          line: 170,
          column: 85
        }
      },
      "72": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "73": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 51
        }
      },
      "74": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "75": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 58
        }
      },
      "76": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 42
        }
      },
      "77": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 58
        }
      },
      "78": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "79": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "80": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 195,
          column: 3
        }
      },
      "81": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 66
        }
      },
      "82": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 20
        }
      },
      "83": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 199,
          column: 3
        }
      },
      "84": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 67
        }
      },
      "85": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 19
          }
        },
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 33
          }
        },
        line: 64
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 66,
            column: 19
          }
        },
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 105,
            column: 13
          },
          end: {
            line: 105,
            column: 14
          }
        },
        loc: {
          start: {
            line: 105,
            column: 29
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 105
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 135,
            column: 14
          }
        },
        loc: {
          start: {
            line: 135,
            column: 25
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 135
      },
      "4": {
        name: "startServer",
        decl: {
          start: {
            line: 150,
            column: 15
          },
          end: {
            line: 150,
            column: 26
          }
        },
        loc: {
          start: {
            line: 150,
            column: 29
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 150
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 192,
            column: 21
          },
          end: {
            line: 192,
            column: 22
          }
        },
        loc: {
          start: {
            line: 192,
            column: 27
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 192
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 196,
            column: 23
          }
        },
        loc: {
          start: {
            line: 196,
            column: 28
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 196
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "1": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "2": {
        loc: {
          start: {
            line: 145,
            column: 71
          },
          end: {
            line: 145,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 96
          },
          end: {
            line: 145,
            column: 109
          }
        }, {
          start: {
            line: 145,
            column: 112
          },
          end: {
            line: 145,
            column: 125
          }
        }],
        line: 145
      },
      "3": {
        loc: {
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 157,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 39
          },
          end: {
            line: 157,
            column: 52
          }
        }, {
          start: {
            line: 157,
            column: 55
          },
          end: {
            line: 157,
            column: 66
          }
        }],
        line: 157
      },
      "4": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 181,
            column: 9
          }
        }],
        line: 160
      },
      "5": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "6": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/index-fastmcp.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/index-fastmcp.ts"],
      sourcesContent: ["\n\nimport { FastMCP } from 'fastmcp';\nimport { z } from 'zod';\nimport { N8nClient } from './client/n8nClient.js';\nimport { createWorkflowTools } from './tools/workflow.js';\nimport { createProjectTools } from './tools/projects.js';\nimport { createUserTools } from './tools/users.js';\nimport { createVariableTools } from './tools/variables.js';\nimport { createExecutionTools } from './tools/executions.js';\nimport { createTagTools } from './tools/tags.js';\nimport { createCredentialTools } from './tools/credentials.js';\nimport { createAuditTools } from './tools/audit.js';\nimport { createAIConfigTools } from './tools/ai-config.js';\nimport { createAITestingTools } from './tools/ai-testing.js';\nimport { createAIModelsTools } from './tools/ai-models.js';\nimport { createMonitoringTools } from './tools/monitoring.js';\nimport { createAnalyticsTools } from './tools/analytics.js';\nimport { createTemplateTools } from './tools/templates.js';\nimport { createSourceControlTools } from './tools/source-control.js';\nimport {\n  detectTransportConfig,\n  validateTransportConfig,\n  getServerUrl,\n} from './transport/transportConfig.js';\nimport { createSSETransport, SSEUtils } from './transport/sseTransport.js';\n\n// Global client instance\nlet n8nClient: N8nClient | null = null;\n\n// FastMCP server instance\nconst server = new FastMCP({\n  name: 'n8n-mcp-server',\n  version: '2.0.0',\n  instructions: `\nThis server provides comprehensive access to n8n workflows, executions, users, projects, credentials, and AI capabilities through the Model Context Protocol.\n\nKey Features:\n- Complete workflow management (create, read, update, delete, activate/deactivate)\n- User and project management (Enterprise features)\n- Execution monitoring and management\n- Credential and variable management\n- Tag system for organization\n- Audit and security reporting\n- AI-centric features for AI node configuration and testing\n- AI model management and recommendations\n- AI prompt validation and testing tools\n- Advanced monitoring and alerting system\n- Workflow performance tracking and health checks\n- Error notification and alert rule management\n- Workflow intelligence and complexity analysis\n- Performance bottleneck identification and optimization suggestions\n- Workflow comparison and best practice identification\n- Template and pattern management with curated library\n- Workflow template search, import/export, and pattern analysis\n\nGetting Started:\n1. Initialize connection: Use 'init-n8n' with your n8n instance URL and API key\n2. Explore workflows: Use 'list-workflows' to see available workflows\n3. Manage workflows: Create, update, activate/deactivate workflows as needed\n4. Explore AI features: Use 'list-ai-models' to see available AI models and 'list-ai-nodes' to find AI nodes in workflows\n5. Monitor system health: Use 'get-monitoring-dashboard' for real-time system overview and 'check-workflow-health' for detailed analysis\n\nThe server supports both Community and Enterprise n8n features. Enterprise features (projects, variables) will return appropriate errors if not available in your n8n instance.\n\nAll operations include proper error handling and user-friendly messages. Long-running operations report progress when possible.\n  `.trim(),\n});\n\n// Function to get the global client instance\nconst getClient = () => n8nClient;\n\n// Helper function to set the global client\nconst setClient = (client: N8nClient) => {\n  n8nClient = client;\n};\n\n// Register all tools using the create*Tools helpers\ncreateWorkflowTools(getClient, server);\ncreateProjectTools(getClient, server);\ncreateUserTools(getClient, server);\ncreateVariableTools(getClient, server);\ncreateExecutionTools(getClient, server);\ncreateTagTools(getClient, server);\ncreateCredentialTools(getClient, server);\ncreateAuditTools(getClient, server);\n\n// Register source control integration tools (Phase 1)\ncreateSourceControlTools(getClient, server);\n\n// Register AI-centric tools (Phase 3)\ncreateAIConfigTools(getClient, server);\ncreateAITestingTools(getClient, server);\ncreateAIModelsTools(getClient, server);\n\n// Register advanced monitoring tools (Phase 3)\ncreateMonitoringTools(getClient, server);\n\n// Register workflow analytics and intelligence tools (Phase 3)\ncreateAnalyticsTools(getClient, server);\n\n// Register template and pattern management tools (Phase 3)\ncreateTemplateTools(getClient, server);\n\n// Override the init-n8n tool to properly set the global client\nserver.addTool({\n  name: 'init-n8n',\n  description: 'Initialize connection to n8n instance with base URL and API key',\n  parameters: z.object({\n    baseUrl: z.string().url('Must be a valid URL'),\n    apiKey: z.string().min(1, 'API key is required'),\n  }),\n  annotations: {\n    title: 'Initialize n8n Connection',\n    readOnlyHint: false,\n    destructiveHint: false,\n    idempotentHint: true,\n    openWorldHint: true,\n  },\n  execute: async (args: any) => {\n    try {\n      // Create and set the global client\n      const client = new N8nClient(args.baseUrl, args.apiKey);\n\n      // Test the connection\n      await client.getWorkflows({ limit: 1 });\n\n      // Set the global client\n      setClient(client);\n\n      return `\u2705 Successfully connected to n8n instance at ${args.baseUrl}`;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Failed to connect to n8n: ${error.message}`);\n      }\n      throw new Error('Failed to connect to n8n with unknown error');\n    }\n  },\n});\n\n// Add a simple status check tool\nserver.addTool({\n  name: 'status',\n  description: 'Check the current connection status to n8n',\n  parameters: z.object({}),\n  annotations: {\n    title: 'Check n8n Connection Status',\n    readOnlyHint: true,\n    destructiveHint: false,\n    idempotentHint: true,\n    openWorldHint: true,\n  },\n  execute: async () => {\n    if (!n8nClient) {\n      return \"\u274C Not connected to n8n. Please run 'init-n8n' first.\";\n    }\n\n    try {\n      // Test the connection\n      await n8nClient.getWorkflows({ limit: 1 });\n      return '\u2705 Connected to n8n and ready to use.';\n    } catch (error) {\n      return `\u26A0\uFE0F Connected but unable to communicate with n8n: ${error instanceof Error ? error.message : String(error)}`;\n    }\n  },\n});\n\n// Configure and start the server with appropriate transport\nasync function startServer() {\n  try {\n    // Detect transport configuration\n    const transportConfig = detectTransportConfig();\n    const validatedConfig = validateTransportConfig(transportConfig);\n\n    // Only log to stderr for stdio transport to avoid corrupting JSON-RPC communication\n    const isStdioTransport = validatedConfig.type === 'stdio';\n    const log = isStdioTransport ? console.error : console.log;\n\n    log(`\uD83D\uDE80 Starting n8n MCP Server...`);\n    log(`\uD83D\uDCE1 Transport type: ${validatedConfig.type}`);\n\n    if (validatedConfig.type === 'sse') {\n      // Validate SSE configuration\n      if (!SSEUtils.validateConfig(validatedConfig)) {\n        console.error('\u274C Invalid SSE configuration');\n        process.exit(1);\n      }\n\n      // Create and start SSE transport\n      const sseTransport = createSSETransport(server, validatedConfig);\n      await sseTransport.start();\n\n      // Log connection URL\n      const serverUrl = getServerUrl(validatedConfig);\n      if (serverUrl) {\n        log(`\uD83C\uDF10 Server URL: ${serverUrl}`);\n      }\n    } else {\n      // Start with stdio transport (default)\n      await server.start({\n        transportType: 'stdio',\n      });\n      log('\uD83D\uDCDF Server started with stdio transport');\n    }\n\n    log('\u2705 n8n MCP Server is ready!');\n  } catch (error) {\n    console.error('\u274C Failed to start server:', error);\n    process.exit(1);\n  }\n}\n\n// Start the server\nstartServer();\n\n// Handle graceful shutdown\nprocess.on('SIGINT', () => {\n  console.error('Received SIGINT, shutting down gracefully...');\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  console.error('Received SIGTERM, shutting down gracefully...');\n  process.exit(0);\n});\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5fcf45e9263595259cd0e476a1bc0f703f7f6b54"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26nrb6tjz3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26nrb6tjz3();
cov_26nrb6tjz3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const fastmcp_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[1]++, require("fastmcp"));
const zod_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[2]++, require("zod"));
const n8nClient_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[3]++, require("./client/n8nClient.js"));
const workflow_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[4]++, require("./tools/workflow.js"));
const projects_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[5]++, require("./tools/projects.js"));
const users_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[6]++, require("./tools/users.js"));
const variables_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[7]++, require("./tools/variables.js"));
const executions_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[8]++, require("./tools/executions.js"));
const tags_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[9]++, require("./tools/tags.js"));
const credentials_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[10]++, require("./tools/credentials.js"));
const audit_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[11]++, require("./tools/audit.js"));
const ai_config_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[12]++, require("./tools/ai-config.js"));
const ai_testing_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[13]++, require("./tools/ai-testing.js"));
const ai_models_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[14]++, require("./tools/ai-models.js"));
const monitoring_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[15]++, require("./tools/monitoring.js"));
const analytics_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[16]++, require("./tools/analytics.js"));
const templates_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[17]++, require("./tools/templates.js"));
const source_control_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[18]++, require("./tools/source-control.js"));
const transportConfig_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[19]++, require("./transport/transportConfig.js"));
const sseTransport_js_1 =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[20]++, require("./transport/sseTransport.js"));
// Global client instance
let n8nClient =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[21]++, null);
// FastMCP server instance
const server =
/* istanbul ignore next */
(cov_26nrb6tjz3().s[22]++, new fastmcp_1.FastMCP({
  name: 'n8n-mcp-server',
  version: '2.0.0',
  instructions: `
This server provides comprehensive access to n8n workflows, executions, users, projects, credentials, and AI capabilities through the Model Context Protocol.

Key Features:
- Complete workflow management (create, read, update, delete, activate/deactivate)
- User and project management (Enterprise features)
- Execution monitoring and management
- Credential and variable management
- Tag system for organization
- Audit and security reporting
- AI-centric features for AI node configuration and testing
- AI model management and recommendations
- AI prompt validation and testing tools
- Advanced monitoring and alerting system
- Workflow performance tracking and health checks
- Error notification and alert rule management
- Workflow intelligence and complexity analysis
- Performance bottleneck identification and optimization suggestions
- Workflow comparison and best practice identification
- Template and pattern management with curated library
- Workflow template search, import/export, and pattern analysis

Getting Started:
1. Initialize connection: Use 'init-n8n' with your n8n instance URL and API key
2. Explore workflows: Use 'list-workflows' to see available workflows
3. Manage workflows: Create, update, activate/deactivate workflows as needed
4. Explore AI features: Use 'list-ai-models' to see available AI models and 'list-ai-nodes' to find AI nodes in workflows
5. Monitor system health: Use 'get-monitoring-dashboard' for real-time system overview and 'check-workflow-health' for detailed analysis

The server supports both Community and Enterprise n8n features. Enterprise features (projects, variables) will return appropriate errors if not available in your n8n instance.

All operations include proper error handling and user-friendly messages. Long-running operations report progress when possible.
  `.trim()
}));
// Function to get the global client instance
/* istanbul ignore next */
cov_26nrb6tjz3().s[23]++;
const getClient = () => {
  /* istanbul ignore next */
  cov_26nrb6tjz3().f[0]++;
  cov_26nrb6tjz3().s[24]++;
  return n8nClient;
};
// Helper function to set the global client
/* istanbul ignore next */
cov_26nrb6tjz3().s[25]++;
const setClient = client => {
  /* istanbul ignore next */
  cov_26nrb6tjz3().f[1]++;
  cov_26nrb6tjz3().s[26]++;
  n8nClient = client;
};
// Register all tools using the create*Tools helpers
/* istanbul ignore next */
cov_26nrb6tjz3().s[27]++;
(0, workflow_js_1.createWorkflowTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[28]++;
(0, projects_js_1.createProjectTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[29]++;
(0, users_js_1.createUserTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[30]++;
(0, variables_js_1.createVariableTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[31]++;
(0, executions_js_1.createExecutionTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[32]++;
(0, tags_js_1.createTagTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[33]++;
(0, credentials_js_1.createCredentialTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[34]++;
(0, audit_js_1.createAuditTools)(getClient, server);
// Register source control integration tools (Phase 1)
/* istanbul ignore next */
cov_26nrb6tjz3().s[35]++;
(0, source_control_js_1.createSourceControlTools)(getClient, server);
// Register AI-centric tools (Phase 3)
/* istanbul ignore next */
cov_26nrb6tjz3().s[36]++;
(0, ai_config_js_1.createAIConfigTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[37]++;
(0, ai_testing_js_1.createAITestingTools)(getClient, server);
/* istanbul ignore next */
cov_26nrb6tjz3().s[38]++;
(0, ai_models_js_1.createAIModelsTools)(getClient, server);
// Register advanced monitoring tools (Phase 3)
/* istanbul ignore next */
cov_26nrb6tjz3().s[39]++;
(0, monitoring_js_1.createMonitoringTools)(getClient, server);
// Register workflow analytics and intelligence tools (Phase 3)
/* istanbul ignore next */
cov_26nrb6tjz3().s[40]++;
(0, analytics_js_1.createAnalyticsTools)(getClient, server);
// Register template and pattern management tools (Phase 3)
/* istanbul ignore next */
cov_26nrb6tjz3().s[41]++;
(0, templates_js_1.createTemplateTools)(getClient, server);
// Override the init-n8n tool to properly set the global client
/* istanbul ignore next */
cov_26nrb6tjz3().s[42]++;
server.addTool({
  name: 'init-n8n',
  description: 'Initialize connection to n8n instance with base URL and API key',
  parameters: zod_1.z.object({
    baseUrl: zod_1.z.string().url('Must be a valid URL'),
    apiKey: zod_1.z.string().min(1, 'API key is required')
  }),
  annotations: {
    title: 'Initialize n8n Connection',
    readOnlyHint: false,
    destructiveHint: false,
    idempotentHint: true,
    openWorldHint: true
  },
  execute: async args => {
    /* istanbul ignore next */
    cov_26nrb6tjz3().f[2]++;
    cov_26nrb6tjz3().s[43]++;
    try {
      // Create and set the global client
      const client =
      /* istanbul ignore next */
      (cov_26nrb6tjz3().s[44]++, new n8nClient_js_1.N8nClient(args.baseUrl, args.apiKey));
      // Test the connection
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[45]++;
      await client.getWorkflows({
        limit: 1
      });
      // Set the global client
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[46]++;
      setClient(client);
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[47]++;
      return `✅ Successfully connected to n8n instance at ${args.baseUrl}`;
    } catch (error) {
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[48]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_26nrb6tjz3().b[0][0]++;
        cov_26nrb6tjz3().s[49]++;
        throw new Error(`Failed to connect to n8n: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_26nrb6tjz3().b[0][1]++;
      }
      cov_26nrb6tjz3().s[50]++;
      throw new Error('Failed to connect to n8n with unknown error');
    }
  }
});
// Add a simple status check tool
/* istanbul ignore next */
cov_26nrb6tjz3().s[51]++;
server.addTool({
  name: 'status',
  description: 'Check the current connection status to n8n',
  parameters: zod_1.z.object({}),
  annotations: {
    title: 'Check n8n Connection Status',
    readOnlyHint: true,
    destructiveHint: false,
    idempotentHint: true,
    openWorldHint: true
  },
  execute: async () => {
    /* istanbul ignore next */
    cov_26nrb6tjz3().f[3]++;
    cov_26nrb6tjz3().s[52]++;
    if (!n8nClient) {
      /* istanbul ignore next */
      cov_26nrb6tjz3().b[1][0]++;
      cov_26nrb6tjz3().s[53]++;
      return "❌ Not connected to n8n. Please run 'init-n8n' first.";
    } else
    /* istanbul ignore next */
    {
      cov_26nrb6tjz3().b[1][1]++;
    }
    cov_26nrb6tjz3().s[54]++;
    try {
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[55]++;
      // Test the connection
      await n8nClient.getWorkflows({
        limit: 1
      });
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[56]++;
      return '✅ Connected to n8n and ready to use.';
    } catch (error) {
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[57]++;
      return `⚠️ Connected but unable to communicate with n8n: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_26nrb6tjz3().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_26nrb6tjz3().b[2][1]++, String(error))}`;
    }
  }
});
// Configure and start the server with appropriate transport
async function startServer() {
  /* istanbul ignore next */
  cov_26nrb6tjz3().f[4]++;
  cov_26nrb6tjz3().s[58]++;
  try {
    // Detect transport configuration
    const transportConfig =
    /* istanbul ignore next */
    (cov_26nrb6tjz3().s[59]++, (0, transportConfig_js_1.detectTransportConfig)());
    const validatedConfig =
    /* istanbul ignore next */
    (cov_26nrb6tjz3().s[60]++, (0, transportConfig_js_1.validateTransportConfig)(transportConfig));
    // Only log to stderr for stdio transport to avoid corrupting JSON-RPC communication
    const isStdioTransport =
    /* istanbul ignore next */
    (cov_26nrb6tjz3().s[61]++, validatedConfig.type === 'stdio');
    const log =
    /* istanbul ignore next */
    (cov_26nrb6tjz3().s[62]++, isStdioTransport ?
    /* istanbul ignore next */
    (cov_26nrb6tjz3().b[3][0]++, console.error) :
    /* istanbul ignore next */
    (cov_26nrb6tjz3().b[3][1]++, console.log));
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[63]++;
    log(`🚀 Starting n8n MCP Server...`);
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[64]++;
    log(`📡 Transport type: ${validatedConfig.type}`);
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[65]++;
    if (validatedConfig.type === 'sse') {
      /* istanbul ignore next */
      cov_26nrb6tjz3().b[4][0]++;
      cov_26nrb6tjz3().s[66]++;
      // Validate SSE configuration
      if (!sseTransport_js_1.SSEUtils.validateConfig(validatedConfig)) {
        /* istanbul ignore next */
        cov_26nrb6tjz3().b[5][0]++;
        cov_26nrb6tjz3().s[67]++;
        console.error('❌ Invalid SSE configuration');
        /* istanbul ignore next */
        cov_26nrb6tjz3().s[68]++;
        process.exit(1);
      } else
      /* istanbul ignore next */
      {
        cov_26nrb6tjz3().b[5][1]++;
      }
      // Create and start SSE transport
      const sseTransport =
      /* istanbul ignore next */
      (cov_26nrb6tjz3().s[69]++, (0, sseTransport_js_1.createSSETransport)(server, validatedConfig));
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[70]++;
      await sseTransport.start();
      // Log connection URL
      const serverUrl =
      /* istanbul ignore next */
      (cov_26nrb6tjz3().s[71]++, (0, transportConfig_js_1.getServerUrl)(validatedConfig));
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[72]++;
      if (serverUrl) {
        /* istanbul ignore next */
        cov_26nrb6tjz3().b[6][0]++;
        cov_26nrb6tjz3().s[73]++;
        log(`🌐 Server URL: ${serverUrl}`);
      } else
      /* istanbul ignore next */
      {
        cov_26nrb6tjz3().b[6][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_26nrb6tjz3().b[4][1]++;
      cov_26nrb6tjz3().s[74]++;
      // Start with stdio transport (default)
      await server.start({
        transportType: 'stdio'
      });
      /* istanbul ignore next */
      cov_26nrb6tjz3().s[75]++;
      log('📟 Server started with stdio transport');
    }
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[76]++;
    log('✅ n8n MCP Server is ready!');
  } catch (error) {
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[77]++;
    console.error('❌ Failed to start server:', error);
    /* istanbul ignore next */
    cov_26nrb6tjz3().s[78]++;
    process.exit(1);
  }
}
// Start the server
/* istanbul ignore next */
cov_26nrb6tjz3().s[79]++;
startServer();
// Handle graceful shutdown
/* istanbul ignore next */
cov_26nrb6tjz3().s[80]++;
process.on('SIGINT', () => {
  /* istanbul ignore next */
  cov_26nrb6tjz3().f[5]++;
  cov_26nrb6tjz3().s[81]++;
  console.error('Received SIGINT, shutting down gracefully...');
  /* istanbul ignore next */
  cov_26nrb6tjz3().s[82]++;
  process.exit(0);
});
/* istanbul ignore next */
cov_26nrb6tjz3().s[83]++;
process.on('SIGTERM', () => {
  /* istanbul ignore next */
  cov_26nrb6tjz3().f[6]++;
  cov_26nrb6tjz3().s[84]++;
  console.error('Received SIGTERM, shutting down gracefully...');
  /* istanbul ignore next */
  cov_26nrb6tjz3().s[85]++;
  process.exit(0);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,