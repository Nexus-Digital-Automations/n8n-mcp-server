{"version":3,"names":["cov_efzsghwis","actualCoverage","z","UserError","ProjectIdSchema","s","object","projectId","string","min","ListProjectsSchema","limit","number","max","optional","cursor","CreateProjectSchema","name","type","UpdateProjectSchema","createProjectTools","getClient","server","f","addTool","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","client","b","options","response","getProjects","data","length","result","forEach","project","index","id","createdAt","Date","toLocaleDateString","nextCursor","error","Error","message","includes","projectData","createProject","updateData","updateProject","deleteProject"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  N8nProject,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  PaginationOptions,\n} from '../types/n8n.js';\n\n// Zod schemas for validation\nconst ProjectIdSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n});\n\nconst ListProjectsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateProjectSchema = z.object({\n  name: z.string().min(1, 'Project name is required'),\n  type: z.string().optional(),\n});\n\nconst UpdateProjectSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n  name: z.string().min(1, 'Project name is required'),\n});\n\n// Tool registration function\nexport function createProjectTools(getClient: () => N8nClient | null, server: any) {\n  // List projects tool\n  server.addTool({\n    name: 'list-projects',\n    description:\n      'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ListProjectsSchema,\n    annotations: {\n      title: 'List n8n Projects',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListProjectsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getProjects(options);\n\n        if (response.data.length === 0) {\n          return 'No projects found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} project(s):\\n\\n`;\n\n        response.data.forEach((project: N8nProject, index: number) => {\n          result += `${index + 1}. **${project.name}**\\n`;\n          result += `   - ID: ${project.id}\\n`;\n          if (project.type) {\n            result += `   - Type: ${project.type}\\n`;\n          }\n          if (project.createdAt) {\n            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\nðŸ“„ Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list projects: ${error.message}`);\n        }\n        throw new UserError('Failed to list projects with unknown error');\n      }\n    },\n  });\n\n  // Create project tool\n  server.addTool({\n    name: 'create-project',\n    description:\n      'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: CreateProjectSchema,\n    annotations: {\n      title: 'Create New Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const projectData: CreateProjectRequest = {\n          name: args.name,\n          type: args.type,\n        };\n\n        const project = await client.createProject(projectData);\n\n        return (\n          `âœ… Successfully created project \"${project.name}\" with ID: ${project.id}\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create project: ${error.message}`);\n        }\n        throw new UserError('Failed to create project with unknown error');\n      }\n    },\n  });\n\n  // Update project tool\n  server.addTool({\n    name: 'update-project',\n    description:\n      \"Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled\",\n    parameters: UpdateProjectSchema,\n    annotations: {\n      title: 'Update Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { projectId, ...updateData } = args;\n        const projectData: UpdateProjectRequest = {\n          name: updateData.name,\n        };\n\n        const project = await client.updateProject(projectId, projectData);\n\n        return (\n          `âœ… Successfully updated project \"${project.name}\" (ID: ${project.id})\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to update project: ${error.message}`);\n        }\n        throw new UserError('Failed to update project with unknown error');\n      }\n    },\n  });\n\n  // Delete project tool\n  server.addTool({\n    name: 'delete-project',\n    description:\n      'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ProjectIdSchema,\n    annotations: {\n      title: 'Delete Project',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ProjectIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteProject(args.projectId);\n        return `âœ… Successfully deleted project with ID: ${args.projectId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete project: ${error.message}`);\n        }\n        throw new UserError('Failed to delete project with unknown error');\n      }\n    },\n  });\n}\n"],"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","ignoreList":[]}