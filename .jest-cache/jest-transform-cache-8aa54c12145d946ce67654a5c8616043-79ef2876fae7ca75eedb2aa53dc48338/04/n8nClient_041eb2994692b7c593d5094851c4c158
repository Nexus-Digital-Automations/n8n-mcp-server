ccaff4af0e181d62a991baf3dc9ec785
"use strict";

/* istanbul ignore next */
function cov_1ts539ri58() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts";
  var hash = "38d060869d0dc599b405dc54c91fa5132efdc56d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 27
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 55
        }
      },
      "10": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "12": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 33,
          column: 14
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "14": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "15": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "16": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "20": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "21": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 76
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 73
        }
      },
      "23": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "26": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "27": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "28": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 70
        }
      },
      "29": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "30": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "31": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "33": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "34": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "35": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "36": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 87,
          column: 52
        }
      },
      "38": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 52
        }
      },
      "39": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "40": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "41": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 70
        }
      },
      "42": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "43": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 52
        }
      },
      "44": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "45": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "46": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "47": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "48": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "49": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "50": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "51": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "52": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "53": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "54": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 70
        }
      },
      "55": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 55
        }
      },
      "56": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 53
        }
      },
      "57": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "58": {
        start: {
          line: 143,
          column: 23
        },
        end: {
          line: 143,
          column: 44
        }
      },
      "59": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "61": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 147,
          column: 52
        }
      },
      "62": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 52
        }
      },
      "63": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "64": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "65": {
        start: {
          line: 150,
          column: 22
        },
        end: {
          line: 150,
          column: 70
        }
      },
      "66": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "67": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 54
        }
      },
      "68": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "69": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "70": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 73
        }
      },
      "71": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 44
        }
      },
      "72": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 174,
          column: 61
        }
      },
      "73": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 61
        }
      },
      "74": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "75": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "76": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 70
        }
      },
      "77": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 53
        }
      },
      "78": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 51
        }
      },
      "79": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "80": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "81": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "82": {
        start: {
          line: 202,
          column: 23
        },
        end: {
          line: 202,
          column: 44
        }
      },
      "83": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "84": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "85": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 206,
          column: 52
        }
      },
      "86": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 52
        }
      },
      "87": {
        start: {
          line: 207,
          column: 22
        },
        end: {
          line: 207,
          column: 70
        }
      },
      "88": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 54
        }
      },
      "89": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "90": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 219,
          column: 11
        }
      },
      "91": {
        start: {
          line: 223,
          column: 23
        },
        end: {
          line: 223,
          column: 44
        }
      },
      "92": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 225,
          column: 61
        }
      },
      "93": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 61
        }
      },
      "94": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 227,
          column: 52
        }
      },
      "95": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 52
        }
      },
      "96": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 228,
          column: 70
        }
      },
      "97": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 49
        }
      },
      "98": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 47
        }
      },
      "99": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "100": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "101": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "102": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 65
        }
      },
      "103": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "104": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 42
        }
      },
      "105": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 265,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 25
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 37
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 82
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 93
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 39
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 96
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 43
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 102
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 113
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 33
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 118
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 124
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 27
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 133
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 136
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 39
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 142
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 156
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 31
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 162
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 46
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 171
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 25
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 183
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 41
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 189
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 28
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 195
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 201
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 210
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 29
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 216
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 222
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 231
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 29
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 234
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 33
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 240
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 246
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 38
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 251
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 49
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 254
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 32
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 19,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 19,
            column: 44
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 39
          }
        }, {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 71
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 31
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 65
          }
        }, {
          start: {
            line: 58,
            column: 68
          },
          end: {
            line: 58,
            column: 70
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 33
          },
          end: {
            line: 82,
            column: 35
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 85,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 85,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 87,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 89,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 89,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 42
          },
          end: {
            line: 90,
            column: 65
          }
        }, {
          start: {
            line: 90,
            column: 68
          },
          end: {
            line: 90,
            column: 70
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 124,
            column: 36
          }
        }],
        line: 124
      },
      "19": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 127,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 127,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "20": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 129,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 129,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "21": {
        loc: {
          start: {
            line: 130,
            column: 22
          },
          end: {
            line: 130,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 65
          }
        }, {
          start: {
            line: 130,
            column: 68
          },
          end: {
            line: 130,
            column: 70
          }
        }],
        line: 130
      },
      "22": {
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 142,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 142,
            column: 35
          },
          end: {
            line: 142,
            column: 37
          }
        }],
        line: 142
      },
      "23": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "24": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "25": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "26": {
        loc: {
          start: {
            line: 150,
            column: 22
          },
          end: {
            line: 150,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 42
          },
          end: {
            line: 150,
            column: 65
          }
        }, {
          start: {
            line: 150,
            column: 68
          },
          end: {
            line: 150,
            column: 70
          }
        }],
        line: 150
      },
      "27": {
        loc: {
          start: {
            line: 171,
            column: 22
          },
          end: {
            line: 171,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 32
          },
          end: {
            line: 171,
            column: 34
          }
        }],
        line: 171
      },
      "28": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 174,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 174,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "29": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 176,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 176,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "30": {
        loc: {
          start: {
            line: 177,
            column: 22
          },
          end: {
            line: 177,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 42
          },
          end: {
            line: 177,
            column: 65
          }
        }, {
          start: {
            line: 177,
            column: 68
          },
          end: {
            line: 177,
            column: 70
          }
        }],
        line: 177
      },
      "31": {
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 201,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 201,
            column: 33
          },
          end: {
            line: 201,
            column: 35
          }
        }],
        line: 201
      },
      "32": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "33": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 206,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 206,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "34": {
        loc: {
          start: {
            line: 207,
            column: 22
          },
          end: {
            line: 207,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 42
          },
          end: {
            line: 207,
            column: 65
          }
        }, {
          start: {
            line: 207,
            column: 68
          },
          end: {
            line: 207,
            column: 70
          }
        }],
        line: 207
      },
      "35": {
        loc: {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 222,
            column: 28
          },
          end: {
            line: 222,
            column: 30
          }
        }],
        line: 222
      },
      "36": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 225,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 225,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "37": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 227,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 227,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "38": {
        loc: {
          start: {
            line: 228,
            column: 22
          },
          end: {
            line: 228,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 42
          },
          end: {
            line: 228,
            column: 65
          }
        }, {
          start: {
            line: 228,
            column: 68
          },
          end: {
            line: 228,
            column: 70
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts"],
      sourcesContent: ["import fetch from 'node-fetch';\nimport {\n  N8nUser,\n  N8nWorkflow,\n  N8nExecution,\n  N8nCredential,\n  N8nProject,\n  N8nVariable,\n  N8nTag,\n  N8nAuditReport,\n  ApiResponse,\n  PaginationOptions,\n  CreateUserRequest,\n  UpdateUserRequest,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  CreateCredentialRequest,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  CreateVariableRequest,\n  CreateTagRequest,\n  UpdateTagRequest,\n} from '../types/n8n.js';\n\nexport class N8nClient {\n  constructor(\n    private baseUrl: string,\n    private apiKey: string\n  ) {\n    // Remove trailing slash if present\n    this.baseUrl = baseUrl.replace(/\\/$/, '');\n    // Ensure apiKey is properly assigned\n    this.apiKey = apiKey;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: Record<string, unknown> = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}/api/v1${endpoint}`;\n    const headers = {\n      'X-N8N-API-KEY': this.apiKey,\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...((options.headers as Record<string, string>) || {}),\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return (await response.json()) as T;\n      }\n\n      return (await response.text()) as unknown as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`n8n API request failed: ${error.message}`);\n      }\n      throw new Error('n8n API request failed with unknown error');\n    }\n  }\n\n  // User Management\n  async getUsers(options: PaginationOptions = {}): Promise<ApiResponse<N8nUser[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nUser[]>>(`/users${query}`);\n  }\n\n  async getUser(id: string): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`);\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(id: string, userData: UpdateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.makeRequest<void>(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Workflow Management\n  async getWorkflows(options: PaginationOptions = {}): Promise<ApiResponse<N8nWorkflow[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nWorkflow[]>>(`/workflows${query}`);\n  }\n\n  async getWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`);\n  }\n\n  async createWorkflow(workflowData: CreateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>('/workflows', {\n      method: 'POST',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async updateWorkflow(id: string, workflowData: UpdateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async deleteWorkflow(id: string): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async activateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/activate`, {\n      method: 'POST',\n    });\n  }\n\n  async deactivateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/deactivate`, {\n      method: 'POST',\n    });\n  }\n\n  // Execution Management\n  async getExecutions(options: PaginationOptions = {}): Promise<ApiResponse<N8nExecution[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nExecution[]>>(`/executions${query}`);\n  }\n\n  async getExecution(id: string): Promise<N8nExecution> {\n    return this.makeRequest<N8nExecution>(`/executions/${id}`);\n  }\n\n  async deleteExecution(id: string): Promise<void> {\n    await this.makeRequest<void>(`/executions/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Credential Management\n  async getCredentials(options: PaginationOptions = {}): Promise<ApiResponse<N8nCredential[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nCredential[]>>(`/credentials${query}`);\n  }\n\n  async getCredential(id: string): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`);\n  }\n\n  async createCredential(credentialData: CreateCredentialRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>('/credentials', {\n      method: 'POST',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async deleteCredential(id: string): Promise<void> {\n    await this.makeRequest<void>(`/credentials/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getCredentialSchema(credentialType: string): Promise<Record<string, unknown>> {\n    return this.makeRequest<Record<string, unknown>>(`/credentials/schema/${credentialType}`);\n  }\n\n  // Project Management (Enterprise)\n  async getProjects(options: PaginationOptions = {}): Promise<ApiResponse<N8nProject[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nProject[]>>(`/projects${query}`);\n  }\n\n  async getProject(id: string): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`);\n  }\n\n  async createProject(projectData: CreateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>('/projects', {\n      method: 'POST',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async updateProject(id: string, projectData: UpdateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Variable Management (Enterprise)\n  async getVariables(options: PaginationOptions = {}): Promise<ApiResponse<N8nVariable[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nVariable[]>>(`/variables${query}`);\n  }\n\n  async createVariable(variableData: CreateVariableRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>('/variables', {\n      method: 'POST',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  async deleteVariable(id: string): Promise<void> {\n    await this.makeRequest<void>(`/variables/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tag Management\n  async getTags(options: PaginationOptions = {}): Promise<ApiResponse<N8nTag[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nTag[]>>(`/tags${query}`);\n  }\n\n  async getTag(id: string): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`);\n  }\n\n  async createTag(tagData: CreateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>('/tags', {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(id: string, tagData: UpdateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(id: string): Promise<void> {\n    await this.makeRequest<void>(`/tags/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWorkflowTags(workflowId: string): Promise<N8nTag[]> {\n    return this.makeRequest<N8nTag[]>(`/workflows/${workflowId}/tags`);\n  }\n\n  async updateWorkflowTags(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${workflowId}/tags`, {\n      method: 'PUT',\n      body: JSON.stringify({ tagIds }),\n    });\n  }\n\n  // Audit Report\n  async generateAuditReport(): Promise<N8nAuditReport> {\n    return this.makeRequest<N8nAuditReport>('/audit');\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "38d060869d0dc599b405dc54c91fa5132efdc56d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ts539ri58 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ts539ri58();
var __importDefault =
/* istanbul ignore next */
(cov_1ts539ri58().s[0]++,
/* istanbul ignore next */
(cov_1ts539ri58().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ts539ri58().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ts539ri58().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ts539ri58().f[0]++;
  cov_1ts539ri58().s[1]++;
  return /* istanbul ignore next */(cov_1ts539ri58().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ts539ri58().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ts539ri58().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ts539ri58().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ts539ri58().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ts539ri58().s[3]++;
exports.N8nClient = void 0;
const node_fetch_1 =
/* istanbul ignore next */
(cov_1ts539ri58().s[4]++, __importDefault(require("node-fetch")));
class N8nClient {
  baseUrl;
  apiKey;
  constructor(baseUrl, apiKey) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[1]++;
    cov_1ts539ri58().s[5]++;
    this.baseUrl = baseUrl;
    /* istanbul ignore next */
    cov_1ts539ri58().s[6]++;
    this.apiKey = apiKey;
    // Remove trailing slash if present
    /* istanbul ignore next */
    cov_1ts539ri58().s[7]++;
    this.baseUrl = baseUrl.replace(/\/$/, '');
    // Ensure apiKey is properly assigned
    /* istanbul ignore next */
    cov_1ts539ri58().s[8]++;
    this.apiKey = apiKey;
  }
  async makeRequest(endpoint, options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[2]++;
    const url =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[9]++, `${this.baseUrl}/api/v1${endpoint}`);
    const headers =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[10]++, {
      'X-N8N-API-KEY': this.apiKey,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    });
    /* istanbul ignore next */
    cov_1ts539ri58().s[11]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[12]++, await (0, node_fetch_1.default)(url, {
        ...options,
        headers: {
          ...headers,
          ...(
          /* istanbul ignore next */
          (cov_1ts539ri58().b[4][0]++, options.headers) ||
          /* istanbul ignore next */
          (cov_1ts539ri58().b[4][1]++, {}))
        }
      }));
      /* istanbul ignore next */
      cov_1ts539ri58().s[13]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][0]++;
        const errorText =
        /* istanbul ignore next */
        (cov_1ts539ri58().s[14]++, await response.text());
        /* istanbul ignore next */
        cov_1ts539ri58().s[15]++;
        throw new Error(`HTTP ${response.status}: ${errorText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[5][1]++;
      }
      const contentType =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[16]++, response.headers.get('content-type'));
      /* istanbul ignore next */
      cov_1ts539ri58().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_1ts539ri58().b[7][0]++, contentType) &&
      /* istanbul ignore next */
      (cov_1ts539ri58().b[7][1]++, contentType.includes('application/json'))) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[6][0]++;
        cov_1ts539ri58().s[18]++;
        return await response.json();
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[6][1]++;
      }
      cov_1ts539ri58().s[19]++;
      return await response.text();
    } catch (error) {
      /* istanbul ignore next */
      cov_1ts539ri58().s[20]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[8][0]++;
        cov_1ts539ri58().s[21]++;
        throw new Error(`n8n API request failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[8][1]++;
      }
      cov_1ts539ri58().s[22]++;
      throw new Error('n8n API request failed with unknown error');
    }
  }
  // User Management
  async getUsers(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[3]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[23]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[24]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[10][0]++;
      cov_1ts539ri58().s[25]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[10][1]++;
    }
    cov_1ts539ri58().s[26]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[11][0]++;
      cov_1ts539ri58().s[27]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[11][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[28]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[12][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[12][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[29]++;
    return this.makeRequest(`/users${query}`);
  }
  async getUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[4]++;
    cov_1ts539ri58().s[30]++;
    return this.makeRequest(`/users/${id}`);
  }
  async createUser(userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[5]++;
    cov_1ts539ri58().s[31]++;
    return this.makeRequest('/users', {
      method: 'POST',
      body: JSON.stringify(userData)
    });
  }
  async updateUser(id, userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[6]++;
    cov_1ts539ri58().s[32]++;
    return this.makeRequest(`/users/${id}`, {
      method: 'PATCH',
      body: JSON.stringify(userData)
    });
  }
  async deleteUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[7]++;
    cov_1ts539ri58().s[33]++;
    await this.makeRequest(`/users/${id}`, {
      method: 'DELETE'
    });
  }
  // Workflow Management
  async getWorkflows(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[13][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[8]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[34]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[35]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[14][0]++;
      cov_1ts539ri58().s[36]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[14][1]++;
    }
    cov_1ts539ri58().s[37]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[15][0]++;
      cov_1ts539ri58().s[38]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[15][1]++;
    }
    cov_1ts539ri58().s[39]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[16][0]++;
      cov_1ts539ri58().s[40]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[16][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[41]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[17][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[17][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[42]++;
    return this.makeRequest(`/workflows${query}`);
  }
  async getWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[9]++;
    cov_1ts539ri58().s[43]++;
    return this.makeRequest(`/workflows/${id}`);
  }
  async createWorkflow(workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[10]++;
    cov_1ts539ri58().s[44]++;
    return this.makeRequest('/workflows', {
      method: 'POST',
      body: JSON.stringify(workflowData)
    });
  }
  async updateWorkflow(id, workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[11]++;
    cov_1ts539ri58().s[45]++;
    return this.makeRequest(`/workflows/${id}`, {
      method: 'PUT',
      body: JSON.stringify(workflowData)
    });
  }
  async deleteWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[12]++;
    cov_1ts539ri58().s[46]++;
    await this.makeRequest(`/workflows/${id}`, {
      method: 'DELETE'
    });
  }
  async activateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[13]++;
    cov_1ts539ri58().s[47]++;
    return this.makeRequest(`/workflows/${id}/activate`, {
      method: 'POST'
    });
  }
  async deactivateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[14]++;
    cov_1ts539ri58().s[48]++;
    return this.makeRequest(`/workflows/${id}/deactivate`, {
      method: 'POST'
    });
  }
  // Execution Management
  async getExecutions(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[18][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[15]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[49]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[50]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[19][0]++;
      cov_1ts539ri58().s[51]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[19][1]++;
    }
    cov_1ts539ri58().s[52]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[20][0]++;
      cov_1ts539ri58().s[53]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[20][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[54]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[21][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[21][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[55]++;
    return this.makeRequest(`/executions${query}`);
  }
  async getExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[16]++;
    cov_1ts539ri58().s[56]++;
    return this.makeRequest(`/executions/${id}`);
  }
  async deleteExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[17]++;
    cov_1ts539ri58().s[57]++;
    await this.makeRequest(`/executions/${id}`, {
      method: 'DELETE'
    });
  }
  // Credential Management
  async getCredentials(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[22][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[18]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[58]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[59]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[23][0]++;
      cov_1ts539ri58().s[60]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[23][1]++;
    }
    cov_1ts539ri58().s[61]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[24][0]++;
      cov_1ts539ri58().s[62]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[24][1]++;
    }
    cov_1ts539ri58().s[63]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[25][0]++;
      cov_1ts539ri58().s[64]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[25][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[65]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[26][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[26][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[66]++;
    return this.makeRequest(`/credentials${query}`);
  }
  async getCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[19]++;
    cov_1ts539ri58().s[67]++;
    return this.makeRequest(`/credentials/${id}`);
  }
  async createCredential(credentialData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[20]++;
    cov_1ts539ri58().s[68]++;
    return this.makeRequest('/credentials', {
      method: 'POST',
      body: JSON.stringify(credentialData)
    });
  }
  async deleteCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[21]++;
    cov_1ts539ri58().s[69]++;
    await this.makeRequest(`/credentials/${id}`, {
      method: 'DELETE'
    });
  }
  async getCredentialSchema(credentialType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[22]++;
    cov_1ts539ri58().s[70]++;
    return this.makeRequest(`/credentials/schema/${credentialType}`);
  }
  // Project Management (Enterprise)
  async getProjects(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[27][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[23]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[71]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[72]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[28][0]++;
      cov_1ts539ri58().s[73]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[28][1]++;
    }
    cov_1ts539ri58().s[74]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[29][0]++;
      cov_1ts539ri58().s[75]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[29][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[76]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[30][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[30][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[77]++;
    return this.makeRequest(`/projects${query}`);
  }
  async getProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[24]++;
    cov_1ts539ri58().s[78]++;
    return this.makeRequest(`/projects/${id}`);
  }
  async createProject(projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[25]++;
    cov_1ts539ri58().s[79]++;
    return this.makeRequest('/projects', {
      method: 'POST',
      body: JSON.stringify(projectData)
    });
  }
  async updateProject(id, projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[26]++;
    cov_1ts539ri58().s[80]++;
    return this.makeRequest(`/projects/${id}`, {
      method: 'PUT',
      body: JSON.stringify(projectData)
    });
  }
  async deleteProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[27]++;
    cov_1ts539ri58().s[81]++;
    await this.makeRequest(`/projects/${id}`, {
      method: 'DELETE'
    });
  }
  // Variable Management (Enterprise)
  async getVariables(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[31][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[28]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[82]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[83]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[32][0]++;
      cov_1ts539ri58().s[84]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[32][1]++;
    }
    cov_1ts539ri58().s[85]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[33][0]++;
      cov_1ts539ri58().s[86]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[33][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[87]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[34][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[34][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[88]++;
    return this.makeRequest(`/variables${query}`);
  }
  async createVariable(variableData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[29]++;
    cov_1ts539ri58().s[89]++;
    return this.makeRequest('/variables', {
      method: 'POST',
      body: JSON.stringify(variableData)
    });
  }
  async deleteVariable(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[30]++;
    cov_1ts539ri58().s[90]++;
    await this.makeRequest(`/variables/${id}`, {
      method: 'DELETE'
    });
  }
  // Tag Management
  async getTags(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[35][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[31]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[91]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[92]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[36][0]++;
      cov_1ts539ri58().s[93]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[36][1]++;
    }
    cov_1ts539ri58().s[94]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[37][0]++;
      cov_1ts539ri58().s[95]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[37][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[96]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[38][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[38][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[97]++;
    return this.makeRequest(`/tags${query}`);
  }
  async getTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[32]++;
    cov_1ts539ri58().s[98]++;
    return this.makeRequest(`/tags/${id}`);
  }
  async createTag(tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[33]++;
    cov_1ts539ri58().s[99]++;
    return this.makeRequest('/tags', {
      method: 'POST',
      body: JSON.stringify(tagData)
    });
  }
  async updateTag(id, tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[34]++;
    cov_1ts539ri58().s[100]++;
    return this.makeRequest(`/tags/${id}`, {
      method: 'PUT',
      body: JSON.stringify(tagData)
    });
  }
  async deleteTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[35]++;
    cov_1ts539ri58().s[101]++;
    await this.makeRequest(`/tags/${id}`, {
      method: 'DELETE'
    });
  }
  async getWorkflowTags(workflowId) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[36]++;
    cov_1ts539ri58().s[102]++;
    return this.makeRequest(`/workflows/${workflowId}/tags`);
  }
  async updateWorkflowTags(workflowId, tagIds) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[37]++;
    cov_1ts539ri58().s[103]++;
    await this.makeRequest(`/workflows/${workflowId}/tags`, {
      method: 'PUT',
      body: JSON.stringify({
        tagIds
      })
    });
  }
  // Audit Report
  async generateAuditReport() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[38]++;
    cov_1ts539ri58().s[104]++;
    return this.makeRequest('/audit');
  }
}
/* istanbul ignore next */
cov_1ts539ri58().s[105]++;
exports.N8nClient = N8nClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,