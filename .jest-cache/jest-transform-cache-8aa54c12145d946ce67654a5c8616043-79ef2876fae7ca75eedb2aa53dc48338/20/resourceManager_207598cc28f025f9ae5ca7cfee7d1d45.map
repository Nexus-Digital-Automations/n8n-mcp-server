{"version":3,"names":["cov_2dbxy2tc76","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createResourceManager","parseResourceConfigFromEnv","workflowResources_js_1","require","executionResources_js_1","ResourceManager","config","workflowResources","executionResources","constructor","baseUri","enableWorkflows","enableExecutions","enableCredentials","enableNodes","globalCacheDuration","maxItems","register","server","getClient","console","log","createWorkflowResources","maxWorkflows","cacheDuration","createExecutionResources","maxExecutions","registerNodeResources","registerCredentialResources","registerGeneralResources","addResource","uri","mimeType","load","nodes","getAvailableNodes","text","JSON","stringify","addResourceTemplate","uriTemplate","arguments","description","required","nodeType","nodeDoc","getNodeDocumentation","credTypes","getCredentialTypes","credType","template","getCredentialTemplate","client","Error","info","getInstanceInfo","directory","getResourceDirectory","category","metadata","totalNodes","categories","lastUpdated","Date","toISOString","resourceInfo","lastAccessed","split","pop","parameters","examples","credentialTypes","displayName","properties","totalTypes","credentialType","data","fields","workflows","getWorkflows","limit","executions","getExecutions","status","features","projects","testFeature","getProjects","users","getUsers","variables","getVariables","statistics","totalWorkflows","length","totalExecutions","error","message","String","testFn","resources","push","endpoints","totalResources","clearAllCaches","clearCache","getAllCacheStats","getCacheStats","size","keys","RESOURCE_ENV_CONFIG","BASE_URI","ENABLE_WORKFLOWS","ENABLE_EXECUTIONS","ENABLE_CREDENTIALS","ENABLE_NODES","CACHE_DURATION","MAX_ITEMS","process","env","value","parseInt"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/resources/resourceManager.ts"],"sourcesContent":["/**\n * Resource Manager for n8n MCP Server\n *\n * Central coordinator for all MCP resources, managing registration,\n * configuration, and lifecycle of resource providers.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-unused-vars */\n\nimport { FastMCP } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { WorkflowResourceManager, createWorkflowResources } from './workflowResources.js';\nimport { ExecutionResourceManager, createExecutionResources } from './executionResources.js';\n\n/**\n * Resource manager configuration\n */\nexport interface ResourceManagerConfig {\n  /** Base URI prefix for all n8n resources */\n  baseUri?: string;\n\n  /** Whether to enable workflow resources */\n  enableWorkflows?: boolean;\n\n  /** Whether to enable execution resources */\n  enableExecutions?: boolean;\n\n  /** Whether to enable credential resources */\n  enableCredentials?: boolean;\n\n  /** Whether to enable node documentation resources */\n  enableNodes?: boolean;\n\n  /** Global cache duration for all resources (ms) */\n  globalCacheDuration?: number;\n\n  /** Maximum number of items in resource listings */\n  maxItems?: number;\n}\n\n/**\n * Central resource manager\n *\n * Coordinates all resource providers and handles global resource configuration.\n */\nexport class ResourceManager {\n  private config: Required<ResourceManagerConfig>;\n  private workflowResources?: WorkflowResourceManager;\n  private executionResources?: ExecutionResourceManager;\n\n  constructor(config: ResourceManagerConfig = {}) {\n    this.config = {\n      baseUri: 'n8n://',\n      enableWorkflows: true,\n      enableExecutions: true,\n      enableCredentials: false, // Disabled by default for security\n      enableNodes: true,\n      globalCacheDuration: 5 * 60 * 1000, // 5 minutes\n      maxItems: 100,\n      ...config,\n    };\n  }\n\n  /**\n   * Register all enabled resources with FastMCP server\n   */\n  public register(server: FastMCP, getClient: () => N8nClient | null): void {\n    console.log('üìö Registering n8n MCP resources...');\n\n    // Register workflow resources\n    if (this.config.enableWorkflows) {\n      this.workflowResources = createWorkflowResources({\n        baseUri: `${this.config.baseUri}workflows`,\n        maxWorkflows: this.config.maxItems,\n        cacheDuration: this.config.globalCacheDuration,\n      });\n      this.workflowResources.register(server, getClient);\n    }\n\n    // Register execution resources\n    if (this.config.enableExecutions) {\n      this.executionResources = createExecutionResources({\n        baseUri: `${this.config.baseUri}executions`,\n        maxExecutions: this.config.maxItems,\n        cacheDuration: this.config.globalCacheDuration,\n      });\n      this.executionResources.register(server, getClient);\n    }\n\n    // Register node documentation resources\n    if (this.config.enableNodes) {\n      this.registerNodeResources(server, getClient);\n    }\n\n    // Register credential template resources (if enabled)\n    if (this.config.enableCredentials) {\n      this.registerCredentialResources(server, getClient);\n    }\n\n    // Register general n8n information resources\n    this.registerGeneralResources(server, getClient);\n\n    console.log('‚úÖ All n8n MCP resources registered');\n  }\n\n  /**\n   * Register node documentation resources\n   */\n  private registerNodeResources(server: FastMCP, getClient: () => N8nClient | null): void {\n    // Available nodes resource\n    server.addResource({\n      uri: `${this.config.baseUri}nodes/available`,\n      name: 'n8n Available Nodes',\n      mimeType: 'application/json',\n      load: async () => {\n        const nodes = await this.getAvailableNodes();\n        return {\n          text: JSON.stringify(nodes, null, 2),\n        };\n      },\n    });\n\n    // Node documentation template\n    server.addResourceTemplate({\n      uriTemplate: `${this.config.baseUri}nodes/{nodeType}`,\n      name: 'n8n Node Documentation',\n      mimeType: 'application/json',\n      arguments: [\n        {\n          name: 'nodeType',\n          description: 'The type of n8n node (e.g., \"n8n-nodes-base.httpRequest\")',\n          required: true,\n        },\n      ],\n      load: async ({ nodeType }: { nodeType: string }) => {\n        const nodeDoc = await this.getNodeDocumentation(nodeType);\n        return {\n          text: JSON.stringify(nodeDoc, null, 2),\n        };\n      },\n    });\n\n    console.log('üì¶ Node resources registered');\n  }\n\n  /**\n   * Register credential template resources\n   */\n  private registerCredentialResources(server: FastMCP, getClient: () => N8nClient | null): void {\n    // Credential types resource\n    server.addResource({\n      uri: `${this.config.baseUri}credentials/types`,\n      name: 'n8n Credential Types',\n      mimeType: 'application/json',\n      load: async () => {\n        const credTypes = await this.getCredentialTypes();\n        return {\n          text: JSON.stringify(credTypes, null, 2),\n        };\n      },\n    });\n\n    // Credential template\n    server.addResourceTemplate({\n      uriTemplate: `${this.config.baseUri}credentials/template/{credType}`,\n      name: 'n8n Credential Template',\n      mimeType: 'application/json',\n      arguments: [\n        {\n          name: 'credType',\n          description: 'The credential type name',\n          required: true,\n        },\n      ],\n      load: async ({ credType }: { credType: string }) => {\n        const template = await this.getCredentialTemplate(credType);\n        return {\n          text: JSON.stringify(template, null, 2),\n        };\n      },\n    });\n\n    console.log('üîê Credential resources registered');\n  }\n\n  /**\n   * Register general n8n information resources\n   */\n  private registerGeneralResources(server: FastMCP, getClient: () => N8nClient | null): void {\n    // n8n instance information\n    server.addResource({\n      uri: `${this.config.baseUri}info`,\n      name: 'n8n Instance Information',\n      mimeType: 'application/json',\n      load: async () => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const info = await this.getInstanceInfo(client);\n        return {\n          text: JSON.stringify(info, null, 2),\n        };\n      },\n    });\n\n    // Resource directory/index\n    server.addResource({\n      uri: `${this.config.baseUri}index`,\n      name: 'n8n Resource Directory',\n      mimeType: 'application/json',\n      load: async () => {\n        const directory = this.getResourceDirectory();\n        return {\n          text: JSON.stringify(directory, null, 2),\n        };\n      },\n    });\n\n    console.log('‚ÑπÔ∏è  General resources registered');\n  }\n\n  /**\n   * Get available n8n nodes (mock data - would need to be retrieved from n8n API)\n   */\n  private async getAvailableNodes(): Promise<any> {\n    // This would typically fetch from n8n API or node registry\n    return {\n      nodes: [\n        {\n          name: 'HTTP Request',\n          type: 'n8n-nodes-base.httpRequest',\n          description: 'Makes HTTP requests and returns the response data',\n          category: 'Core Nodes',\n          version: 1,\n        },\n        {\n          name: 'Code',\n          type: 'n8n-nodes-base.code',\n          description: 'Run custom JavaScript code',\n          category: 'Core Nodes',\n          version: 1,\n        },\n        {\n          name: 'If',\n          type: 'n8n-nodes-base.if',\n          description: 'Conditional routing based on comparison operations',\n          category: 'Core Nodes',\n          version: 1,\n        },\n        // More nodes would be listed here\n      ],\n      metadata: {\n        totalNodes: 500, // Example count\n        categories: ['Core Nodes', 'Trigger Nodes', 'Regular Nodes'],\n        lastUpdated: new Date().toISOString(),\n      },\n      resourceInfo: {\n        uri: `${this.config.baseUri}nodes/available`,\n        type: 'n8n-available-nodes',\n        version: '1.0',\n        lastAccessed: new Date().toISOString(),\n      },\n    };\n  }\n\n  /**\n   * Get node documentation\n   */\n  private async getNodeDocumentation(nodeType: string): Promise<any> {\n    // This would fetch actual node documentation from n8n\n    return {\n      nodeType,\n      name: nodeType.split('.').pop(),\n      description: `Documentation for ${nodeType}`,\n      parameters: [],\n      examples: [],\n      resourceInfo: {\n        uri: `${this.config.baseUri}nodes/${nodeType}`,\n        type: 'n8n-node-documentation',\n        version: '1.0',\n        lastAccessed: new Date().toISOString(),\n      },\n    };\n  }\n\n  /**\n   * Get credential types\n   */\n  private async getCredentialTypes(): Promise<any> {\n    return {\n      credentialTypes: [\n        {\n          name: 'httpBasicAuth',\n          displayName: 'Basic Auth',\n          properties: ['user', 'password'],\n        },\n        {\n          name: 'httpHeaderAuth',\n          displayName: 'Header Auth',\n          properties: ['name', 'value'],\n        },\n        // More credential types\n      ],\n      metadata: {\n        totalTypes: 50, // Example count\n        lastUpdated: new Date().toISOString(),\n      },\n      resourceInfo: {\n        uri: `${this.config.baseUri}credentials/types`,\n        type: 'n8n-credential-types',\n        version: '1.0',\n        lastAccessed: new Date().toISOString(),\n      },\n    };\n  }\n\n  /**\n   * Get credential template (without sensitive data)\n   */\n  private async getCredentialTemplate(credType: string): Promise<any> {\n    return {\n      credentialType: credType,\n      template: {\n        name: `${credType} Template`,\n        type: credType,\n        data: {\n          // Template structure without actual values\n          fields: ['user', 'password'], // Example fields\n        },\n      },\n      resourceInfo: {\n        uri: `${this.config.baseUri}credentials/template/${credType}`,\n        type: 'n8n-credential-template',\n        version: '1.0',\n        lastAccessed: new Date().toISOString(),\n      },\n    };\n  }\n\n  /**\n   * Get n8n instance information\n   */\n  private async getInstanceInfo(client: N8nClient): Promise<any> {\n    try {\n      // Attempt to gather instance information\n      const workflows = await client.getWorkflows({ limit: 1 });\n      const executions = await client.getExecutions({ limit: 1 });\n\n      return {\n        status: 'connected',\n        features: {\n          workflows: true,\n          executions: true,\n          // Test for Enterprise features\n          projects: await this.testFeature(() => client.getProjects({ limit: 1 })),\n          users: await this.testFeature(() => client.getUsers({ limit: 1 })),\n          variables: await this.testFeature(() => client.getVariables({ limit: 1 })),\n        },\n        statistics: {\n          totalWorkflows: workflows.data.length,\n          totalExecutions: executions.data.length,\n        },\n        resourceInfo: {\n          uri: `${this.config.baseUri}info`,\n          type: 'n8n-instance-info',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n    } catch (error) {\n      return {\n        status: 'error',\n        error: error instanceof Error ? error.message : String(error),\n        resourceInfo: {\n          uri: `${this.config.baseUri}info`,\n          type: 'n8n-instance-info',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n    }\n  }\n\n  /**\n   * Test if a feature is available\n   */\n  private async testFeature(testFn: () => Promise<any>): Promise<boolean> {\n    try {\n      await testFn();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get resource directory\n   */\n  private getResourceDirectory(): any {\n    const resources: any[] = [];\n\n    if (this.config.enableWorkflows) {\n      resources.push({\n        name: 'Workflows',\n        baseUri: `${this.config.baseUri}workflows`,\n        description: 'Access n8n workflow definitions and metadata',\n        endpoints: [\n          `${this.config.baseUri}workflows/list`,\n          `${this.config.baseUri}workflows/active`,\n          `${this.config.baseUri}workflows/stats`,\n          `${this.config.baseUri}workflows/{id}`,\n        ],\n      });\n    }\n\n    if (this.config.enableExecutions) {\n      resources.push({\n        name: 'Executions',\n        baseUri: `${this.config.baseUri}executions`,\n        description: 'Access n8n execution data, logs, and statistics',\n        endpoints: [\n          `${this.config.baseUri}executions/recent`,\n          `${this.config.baseUri}executions/failures`,\n          `${this.config.baseUri}executions/stats`,\n          `${this.config.baseUri}executions/{id}`,\n          `${this.config.baseUri}executions/{id}/logs`,\n        ],\n      });\n    }\n\n    if (this.config.enableNodes) {\n      resources.push({\n        name: 'Nodes',\n        baseUri: `${this.config.baseUri}nodes`,\n        description: 'Access n8n node documentation and information',\n        endpoints: [\n          `${this.config.baseUri}nodes/available`,\n          `${this.config.baseUri}nodes/{nodeType}`,\n        ],\n      });\n    }\n\n    return {\n      resources,\n      metadata: {\n        totalResources: resources.length,\n        baseUri: this.config.baseUri,\n        version: '1.0',\n      },\n      resourceInfo: {\n        uri: `${this.config.baseUri}index`,\n        type: 'n8n-resource-directory',\n        version: '1.0',\n        lastAccessed: new Date().toISOString(),\n      },\n    };\n  }\n\n  /**\n   * Clear all resource caches\n   */\n  public clearAllCaches(): void {\n    this.workflowResources?.clearCache();\n    this.executionResources?.clearCache();\n    console.log('üßπ All resource caches cleared');\n  }\n\n  /**\n   * Get cache statistics for all resources\n   */\n  public getAllCacheStats(): any {\n    return {\n      workflows: this.workflowResources?.getCacheStats() || { size: 0, keys: [] },\n      executions: this.executionResources?.getCacheStats() || { size: 0, keys: [] },\n    };\n  }\n}\n\n/**\n * Create resource manager\n */\nexport function createResourceManager(config?: ResourceManagerConfig): ResourceManager {\n  return new ResourceManager(config);\n}\n\n/**\n * Environment variable configuration for resources\n */\nexport const RESOURCE_ENV_CONFIG = {\n  /** Base URI for resources */\n  BASE_URI: 'N8N_MCP_RESOURCE_BASE_URI',\n\n  /** Enable/disable specific resource types */\n  ENABLE_WORKFLOWS: 'N8N_MCP_ENABLE_WORKFLOW_RESOURCES',\n  ENABLE_EXECUTIONS: 'N8N_MCP_ENABLE_EXECUTION_RESOURCES',\n  ENABLE_CREDENTIALS: 'N8N_MCP_ENABLE_CREDENTIAL_RESOURCES',\n  ENABLE_NODES: 'N8N_MCP_ENABLE_NODE_RESOURCES',\n\n  /** Global configuration */\n  CACHE_DURATION: 'N8N_MCP_RESOURCE_CACHE_DURATION',\n  MAX_ITEMS: 'N8N_MCP_RESOURCE_MAX_ITEMS',\n} as const;\n\n/**\n * Parse resource configuration from environment variables\n */\nexport function parseResourceConfigFromEnv(): ResourceManagerConfig {\n  return {\n    baseUri: process.env[RESOURCE_ENV_CONFIG.BASE_URI] || undefined,\n    enableWorkflows: process.env[RESOURCE_ENV_CONFIG.ENABLE_WORKFLOWS] !== 'false',\n    enableExecutions: process.env[RESOURCE_ENV_CONFIG.ENABLE_EXECUTIONS] !== 'false',\n    enableCredentials: process.env[RESOURCE_ENV_CONFIG.ENABLE_CREDENTIALS] === 'true',\n    enableNodes: process.env[RESOURCE_ENV_CONFIG.ENABLE_NODES] !== 'false',\n    globalCacheDuration: (() => {\n      const value = process.env[RESOURCE_ENV_CONFIG.CACHE_DURATION];\n      return value ? parseInt(value) : undefined;\n    })(),\n    maxItems: (() => {\n      const value = process.env[RESOURCE_ENV_CONFIG.MAX_ITEMS];\n      return value ? parseInt(value) : undefined;\n    })(),\n  };\n}\n"],"mappings":"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","ignoreList":[]}