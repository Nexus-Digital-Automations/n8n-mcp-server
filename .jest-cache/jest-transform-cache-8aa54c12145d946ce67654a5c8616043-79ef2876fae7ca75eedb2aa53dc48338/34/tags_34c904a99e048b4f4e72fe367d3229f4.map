{"version":3,"names":["cov_1giyc2czfi","actualCoverage","s","exports","createTagTools","zod_1","require","fastmcp_1","TagIdSchema","z","object","tagId","string","min","WorkflowIdSchema","workflowId","ListTagsSchema","limit","number","max","optional","cursor","CreateTagSchema","name","UpdateTagSchema","UpdateWorkflowTagsSchema","tagIds","array","getClient","server","f","addTool","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","client","b","UserError","options","response","getTags","data","length","result","forEach","tag","index","id","usageCount","undefined","createdAt","Date","toLocaleDateString","updatedAt","nextCursor","error","Error","message","getTag","toLocaleString","tagData","createTag","updateData","updateTag","deleteTag","tags","getWorkflowTags","updateWorkflowTags","tagCount"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/tags.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nTag, CreateTagRequest, UpdateTagRequest, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst TagIdSchema = z.object({\n  tagId: z.string().min(1, 'Tag ID is required'),\n});\n\nconst WorkflowIdSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n});\n\nconst ListTagsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateTagSchema = z.object({\n  name: z.string().min(1, 'Tag name is required'),\n});\n\nconst UpdateTagSchema = z.object({\n  tagId: z.string().min(1, 'Tag ID is required'),\n  name: z.string().min(1, 'Tag name is required'),\n});\n\nconst UpdateWorkflowTagsSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  tagIds: z.array(z.string()).min(0, 'Tag IDs must be an array'),\n});\n\n// Tool registration function\nexport function createTagTools(getClient: () => N8nClient | null, server: any) {\n  // List tags tool\n  server.addTool({\n    name: 'list-tags',\n    description: 'List all tags in the n8n instance with pagination support and usage statistics',\n    parameters: ListTagsSchema,\n    annotations: {\n      title: 'List n8n Tags',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListTagsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getTags(options);\n\n        if (response.data.length === 0) {\n          return 'No tags found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} tag(s):\\n\\n`;\n\n        response.data.forEach((tag: N8nTag, index: number) => {\n          result += `${index + 1}. **${tag.name}**\\n`;\n          result += `   - ID: ${tag.id}\\n`;\n\n          if (tag.usageCount !== undefined) {\n            result += `   - Usage Count: ${tag.usageCount}\\n`;\n          }\n\n          if (tag.createdAt) {\n            result += `   - Created: ${new Date(tag.createdAt).toLocaleDateString()}\\n`;\n          }\n\n          if (tag.updatedAt) {\n            result += `   - Updated: ${new Date(tag.updatedAt).toLocaleDateString()}\\n`;\n          }\n\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\nðŸ“„ Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to list tags: ${error.message}`);\n        }\n        throw new UserError('Failed to list tags with unknown error');\n      }\n    },\n  });\n\n  // Get tag tool\n  server.addTool({\n    name: 'get-tag',\n    description: 'Get detailed information about a specific tag by ID',\n    parameters: TagIdSchema,\n    annotations: {\n      title: 'Get Tag Details',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TagIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const tag = await client.getTag(args.tagId);\n\n        let result = `# Tag: ${tag.name}\\n\\n`;\n        result += `**ID:** ${tag.id}\\n`;\n        result += `**Name:** ${tag.name}\\n`;\n\n        if (tag.usageCount !== undefined) {\n          result += `**Usage Count:** ${tag.usageCount}\\n`;\n        }\n\n        if (tag.createdAt) {\n          result += `**Created:** ${new Date(tag.createdAt).toLocaleString()}\\n`;\n        }\n\n        if (tag.updatedAt) {\n          result += `**Updated:** ${new Date(tag.updatedAt).toLocaleString()}\\n`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get tag: ${error.message}`);\n        }\n        throw new UserError('Failed to get tag with unknown error');\n      }\n    },\n  });\n\n  // Create tag tool\n  server.addTool({\n    name: 'create-tag',\n    description: 'Create a new tag in n8n for organizing workflows',\n    parameters: CreateTagSchema,\n    annotations: {\n      title: 'Create New Tag',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateTagSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const tagData: CreateTagRequest = {\n          name: args.name,\n        };\n\n        const tag = await client.createTag(tagData);\n\n        return `âœ… Successfully created tag \"${tag.name}\" with ID: ${tag.id}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to create tag: ${error.message}`);\n        }\n        throw new UserError('Failed to create tag with unknown error');\n      }\n    },\n  });\n\n  // Update tag tool\n  server.addTool({\n    name: 'update-tag',\n    description: \"Update a tag's name in n8n\",\n    parameters: UpdateTagSchema,\n    annotations: {\n      title: 'Update Tag',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateTagSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { tagId, ...updateData } = args;\n        const tagData: UpdateTagRequest = {\n          name: updateData.name,\n        };\n\n        const tag = await client.updateTag(tagId, tagData);\n\n        return `âœ… Successfully updated tag to \"${tag.name}\" (ID: ${tag.id})`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to update tag: ${error.message}`);\n        }\n        throw new UserError('Failed to update tag with unknown error');\n      }\n    },\n  });\n\n  // Delete tag tool\n  server.addTool({\n    name: 'delete-tag',\n    description:\n      'Delete a tag from n8n permanently. This will remove the tag from all workflows using it',\n    parameters: TagIdSchema,\n    annotations: {\n      title: 'Delete Tag',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TagIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteTag(args.tagId);\n        return `âœ… Successfully deleted tag with ID: ${args.tagId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to delete tag: ${error.message}`);\n        }\n        throw new UserError('Failed to delete tag with unknown error');\n      }\n    },\n  });\n\n  // Get workflow tags tool\n  server.addTool({\n    name: 'get-workflow-tags',\n    description: 'Get all tags assigned to a specific workflow',\n    parameters: WorkflowIdSchema,\n    annotations: {\n      title: 'Get Workflow Tags',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof WorkflowIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const tags = await client.getWorkflowTags(args.workflowId);\n\n        if (tags.length === 0) {\n          return `No tags found for workflow ID: ${args.workflowId}`;\n        }\n\n        let result = `Found ${tags.length} tag(s) for workflow ${args.workflowId}:\\n\\n`;\n\n        tags.forEach((tag: N8nTag, index: number) => {\n          result += `${index + 1}. **${tag.name}** (ID: ${tag.id})\\n`;\n        });\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get workflow tags: ${error.message}`);\n        }\n        throw new UserError('Failed to get workflow tags with unknown error');\n      }\n    },\n  });\n\n  // Update workflow tags tool\n  server.addTool({\n    name: 'update-workflow-tags',\n    description:\n      'Update the tags assigned to a workflow. This replaces all existing tags with the provided list',\n    parameters: UpdateWorkflowTagsSchema,\n    annotations: {\n      title: 'Update Workflow Tags',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateWorkflowTagsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.updateWorkflowTags(args.workflowId, args.tagIds);\n\n        const tagCount = args.tagIds.length;\n        return `âœ… Successfully updated workflow ${args.workflowId} with ${tagCount} tag(s)`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to update workflow tags: ${error.message}`);\n        }\n        throw new UserError('Failed to update workflow tags with unknown error');\n      }\n    },\n  });\n}\n"],"mappingsiBG;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;AAiBHC,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAlCA,MAAAC,KAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAAI,OAAA;AACA,MAAAC,SAAA;AAAA;AAAA,CAAAP,cAAA,GAAAE,CAAA,OAAAI,OAAA;AAIA;AACA,MAAME,WAAW;AAAA;AAAA,CAAAR,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EAC3BC,KAAK,EAAEN,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,oBAAoB;CAC9C,CAAC;AAEF,MAAMC,gBAAgB;AAAA;AAAA,CAAAd,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EAChCK,UAAU,EAAEV,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,yBAAyB;CACxD,CAAC;AAEF,MAAMG,cAAc;AAAA;AAAA,CAAAhB,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EAC9BO,KAAK,EAAEZ,KAAA,CAAAI,CAAC,CAACS,MAAM,EAAE,CAACL,GAAG,CAAC,CAAC,CAAC,CAACM,GAAG,CAAC,GAAG,CAAC,CAACC,QAAQ,EAAE;EAC5CC,MAAM,EAAEhB,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACQ,QAAQ;CAC5B,CAAC;AAEF,MAAME,eAAe;AAAA;AAAA,CAAAtB,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EAC/Ba,IAAI,EAAElB,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,sBAAsB;CAC/C,CAAC;AAEF,MAAMW,eAAe;AAAA;AAAA,CAAAxB,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EAC/BC,KAAK,EAAEN,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,oBAAoB,CAAC;EAC9CU,IAAI,EAAElB,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,sBAAsB;CAC/C,CAAC;AAEF,MAAMY,wBAAwB;AAAA;AAAA,CAAAzB,cAAA,GAAAE,CAAA,OAAGG,KAAA,CAAAI,CAAC,CAACC,MAAM,CAAC;EACxCK,UAAU,EAAEV,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,EAAE,yBAAyB,CAAC;EACxDa,MAAM,EAAErB,KAAA,CAAAI,CAAC,CAACkB,KAAK,CAACtB,KAAA,CAAAI,CAAC,CAACG,MAAM,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,0BAA0B;CAC9D,CAAC;AAEF;AACA,SAAgBT,cAAcA,CAACwB,SAAiC,EAAEC,MAAW;EAAA;EAAA7B,cAAA,GAAA8B,CAAA;EAAA9B,cAAA,GAAAE,CAAA;EAC3E;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,WAAW;IACjBS,WAAW,EAAE,gFAAgF;IAC7FC,UAAU,EAAEjB,cAAc;IAC1BkB,WAAW,EAAE;MACXC,KAAK,EAAE,eAAe;MACtBC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAoC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACtD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QACF,MAAM2C,OAAO;QAAA;QAAA,CAAA7C,cAAA,GAAAE,CAAA,QAAsB,EAAE;QAAC;QAAAF,cAAA,GAAAE,CAAA;QACtC,IAAIuC,IAAI,CAACxB,KAAK,EAAE;UAAA;UAAAjB,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAAA2C,OAAO,CAAC5B,KAAK,GAAGwB,IAAI,CAACxB,KAAK;QAAA,CAAC;QAAA;QAAA;UAAAjB,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QAC3C,IAAIuC,IAAI,CAACpB,MAAM,EAAE;UAAA;UAAArB,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAAA2C,OAAO,CAACxB,MAAM,GAAGoB,IAAI,CAACpB,MAAM;QAAA,CAAC;QAAA;QAAA;UAAArB,cAAA,GAAA2C,CAAA;QAAA;QAE9C,MAAMG,QAAQ;QAAA;QAAA,CAAA9C,cAAA,GAAAE,CAAA,QAAG,MAAMwC,MAAM,CAACK,OAAO,CAACF,OAAO,CAAC;QAAC;QAAA7C,cAAA,GAAAE,CAAA;QAE/C,IAAI4C,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;UAAA;UAAAjD,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC9B,OAAO,oCAAoC;QAC7C,CAAC;QAAA;QAAA;UAAAF,cAAA,GAAA2C,CAAA;QAAA;QAED,IAAIO,MAAM;QAAA;QAAA,CAAAlD,cAAA,GAAAE,CAAA,QAAG,SAAS4C,QAAQ,CAACE,IAAI,CAACC,MAAM,cAAc;QAAC;QAAAjD,cAAA,GAAAE,CAAA;QAEzD4C,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC,CAACC,GAAW,EAAEC,KAAa,KAAI;UAAA;UAAArD,cAAA,GAAA8B,CAAA;UAAA9B,cAAA,GAAAE,CAAA;UACnDgD,MAAM,IAAI,GAAGG,KAAK,GAAG,CAAC,OAAOD,GAAG,CAAC7B,IAAI,MAAM;UAAC;UAAAvB,cAAA,GAAAE,CAAA;UAC5CgD,MAAM,IAAI,YAAYE,GAAG,CAACE,EAAE,IAAI;UAAC;UAAAtD,cAAA,GAAAE,CAAA;UAEjC,IAAIkD,GAAG,CAACG,UAAU,KAAKC,SAAS,EAAE;YAAA;YAAAxD,cAAA,GAAA2C,CAAA;YAAA3C,cAAA,GAAAE,CAAA;YAChCgD,MAAM,IAAI,qBAAqBE,GAAG,CAACG,UAAU,IAAI;UACnD,CAAC;UAAA;UAAA;YAAAvD,cAAA,GAAA2C,CAAA;UAAA;UAAA3C,cAAA,GAAAE,CAAA;UAED,IAAIkD,GAAG,CAACK,SAAS,EAAE;YAAA;YAAAzD,cAAA,GAAA2C,CAAA;YAAA3C,cAAA,GAAAE,CAAA;YACjBgD,MAAM,IAAI,iBAAiB,IAAIQ,IAAI,CAACN,GAAG,CAACK,SAAS,CAAC,CAACE,kBAAkB,EAAE,IAAI;UAC7E,CAAC;UAAA;UAAA;YAAA3D,cAAA,GAAA2C,CAAA;UAAA;UAAA3C,cAAA,GAAAE,CAAA;UAED,IAAIkD,GAAG,CAACQ,SAAS,EAAE;YAAA;YAAA5D,cAAA,GAAA2C,CAAA;YAAA3C,cAAA,GAAAE,CAAA;YACjBgD,MAAM,IAAI,iBAAiB,IAAIQ,IAAI,CAACN,GAAG,CAACQ,SAAS,CAAC,CAACD,kBAAkB,EAAE,IAAI;UAC7E,CAAC;UAAA;UAAA;YAAA3D,cAAA,GAAA2C,CAAA;UAAA;UAAA3C,cAAA,GAAAE,CAAA;UAEDgD,MAAM,IAAI,IAAI;QAChB,CAAC,CAAC;QAAC;QAAAlD,cAAA,GAAAE,CAAA;QAEH,IAAI4C,QAAQ,CAACe,UAAU,EAAE;UAAA;UAAA7D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UACvBgD,MAAM,IAAI,oBAAoBJ,QAAQ,CAACe,UAAU,yBAAyB;QAC5E,CAAC;QAAA;QAAA;UAAA7D,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QAED,OAAOgD,MAAM;MACf,CAAC,CAAC,OAAOY,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wBAAwBkB,KAAK,CAACE,OAAO,EAAE,CAAC;QAC9D,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wCAAwC,CAAC;MAC/D;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,SAAS;IACfS,WAAW,EAAE,qDAAqD;IAClEC,UAAU,EAAEzB,WAAW;IACvB0B,WAAW,EAAE;MACXC,KAAK,EAAE,iBAAiB;MACxBC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAiC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACnD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QACF,MAAMkD,GAAG;QAAA;QAAA,CAAApD,cAAA,GAAAE,CAAA,QAAG,MAAMwC,MAAM,CAACuB,MAAM,CAACxB,IAAI,CAAC9B,KAAK,CAAC;QAE3C,IAAIuC,MAAM;QAAA;QAAA,CAAAlD,cAAA,GAAAE,CAAA,QAAG,UAAUkD,GAAG,CAAC7B,IAAI,MAAM;QAAC;QAAAvB,cAAA,GAAAE,CAAA;QACtCgD,MAAM,IAAI,WAAWE,GAAG,CAACE,EAAE,IAAI;QAAC;QAAAtD,cAAA,GAAAE,CAAA;QAChCgD,MAAM,IAAI,aAAaE,GAAG,CAAC7B,IAAI,IAAI;QAAC;QAAAvB,cAAA,GAAAE,CAAA;QAEpC,IAAIkD,GAAG,CAACG,UAAU,KAAKC,SAAS,EAAE;UAAA;UAAAxD,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAChCgD,MAAM,IAAI,oBAAoBE,GAAG,CAACG,UAAU,IAAI;QAClD,CAAC;QAAA;QAAA;UAAAvD,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QAED,IAAIkD,GAAG,CAACK,SAAS,EAAE;UAAA;UAAAzD,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UACjBgD,MAAM,IAAI,gBAAgB,IAAIQ,IAAI,CAACN,GAAG,CAACK,SAAS,CAAC,CAACS,cAAc,EAAE,IAAI;QACxE,CAAC;QAAA;QAAA;UAAAlE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QAED,IAAIkD,GAAG,CAACQ,SAAS,EAAE;UAAA;UAAA5D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UACjBgD,MAAM,IAAI,gBAAgB,IAAIQ,IAAI,CAACN,GAAG,CAACQ,SAAS,CAAC,CAACM,cAAc,EAAE,IAAI;QACxE,CAAC;QAAA;QAAA;UAAAlE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QAED,OAAOgD,MAAM;MACf,CAAC,CAAC,OAAOY,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,sBAAsBkB,KAAK,CAACE,OAAO,EAAE,CAAC;QAC5D,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,sCAAsC,CAAC;MAC7D;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,YAAY;IAClBS,WAAW,EAAE,kDAAkD;IAC/DC,UAAU,EAAEX,eAAe;IAC3BY,WAAW,EAAE;MACXC,KAAK,EAAE,gBAAgB;MACvBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,KAAK;MACrBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAqC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACvD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QACF,MAAMiE,OAAO;QAAA;QAAA,CAAAnE,cAAA,GAAAE,CAAA,QAAqB;UAChCqB,IAAI,EAAEkB,IAAI,CAAClB;SACZ;QAED,MAAM6B,GAAG;QAAA;QAAA,CAAApD,cAAA,GAAAE,CAAA,QAAG,MAAMwC,MAAM,CAAC0B,SAAS,CAACD,OAAO,CAAC;QAAC;QAAAnE,cAAA,GAAAE,CAAA;QAE5C,OAAO,+BAA+BkD,GAAG,CAAC7B,IAAI,cAAc6B,GAAG,CAACE,EAAE,EAAE;MACtE,CAAC,CAAC,OAAOQ,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yBAAyBkB,KAAK,CAACE,OAAO,EAAE,CAAC;QAC/D,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yCAAyC,CAAC;MAChE;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,YAAY;IAClBS,WAAW,EAAE,4BAA4B;IACzCC,UAAU,EAAET,eAAe;IAC3BU,WAAW,EAAE;MACXC,KAAK,EAAE,YAAY;MACnBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAqC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACvD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QACF,MAAM;UAAES,KAAK;UAAE,GAAG0D;QAAU,CAAE;QAAA;QAAA,CAAArE,cAAA,GAAAE,CAAA,QAAGuC,IAAI;QACrC,MAAM0B,OAAO;QAAA;QAAA,CAAAnE,cAAA,GAAAE,CAAA,QAAqB;UAChCqB,IAAI,EAAE8C,UAAU,CAAC9C;SAClB;QAED,MAAM6B,GAAG;QAAA;QAAA,CAAApD,cAAA,GAAAE,CAAA,QAAG,MAAMwC,MAAM,CAAC4B,SAAS,CAAC3D,KAAK,EAAEwD,OAAO,CAAC;QAAC;QAAAnE,cAAA,GAAAE,CAAA;QAEnD,OAAO,kCAAkCkD,GAAG,CAAC7B,IAAI,UAAU6B,GAAG,CAACE,EAAE,GAAG;MACtE,CAAC,CAAC,OAAOQ,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yBAAyBkB,KAAK,CAACE,OAAO,EAAE,CAAC;QAC/D,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yCAAyC,CAAC;MAChE;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,YAAY;IAClBS,WAAW,EACT,yFAAyF;IAC3FC,UAAU,EAAEzB,WAAW;IACvB0B,WAAW,EAAE;MACXC,KAAK,EAAE,YAAY;MACnBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,IAAI;MACrBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAiC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACnD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QAAA;QAAAF,cAAA,GAAAE,CAAA;QACF,MAAMwC,MAAM,CAAC6B,SAAS,CAAC9B,IAAI,CAAC9B,KAAK,CAAC;QAAC;QAAAX,cAAA,GAAAE,CAAA;QACnC,OAAO,uCAAuCuC,IAAI,CAAC9B,KAAK,EAAE;MAC5D,CAAC,CAAC,OAAOmD,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yBAAyBkB,KAAK,CAACE,OAAO,EAAE,CAAC;QAC/D,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,yCAAyC,CAAC;MAChE;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,mBAAmB;IACzBS,WAAW,EAAE,8CAA8C;IAC3DC,UAAU,EAAEnB,gBAAgB;IAC5BoB,WAAW,EAAE;MACXC,KAAK,EAAE,mBAAmB;MAC1BC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAAsC,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MACxD,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QACF,MAAMsE,IAAI;QAAA;QAAA,CAAAxE,cAAA,GAAAE,CAAA,QAAG,MAAMwC,MAAM,CAAC+B,eAAe,CAAChC,IAAI,CAAC1B,UAAU,CAAC;QAAC;QAAAf,cAAA,GAAAE,CAAA;QAE3D,IAAIsE,IAAI,CAACvB,MAAM,KAAK,CAAC,EAAE;UAAA;UAAAjD,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UACrB,OAAO,kCAAkCuC,IAAI,CAAC1B,UAAU,EAAE;QAC5D,CAAC;QAAA;QAAA;UAAAf,cAAA,GAAA2C,CAAA;QAAA;QAED,IAAIO,MAAM;QAAA;QAAA,CAAAlD,cAAA,GAAAE,CAAA,SAAG,SAASsE,IAAI,CAACvB,MAAM,wBAAwBR,IAAI,CAAC1B,UAAU,OAAO;QAAC;QAAAf,cAAA,GAAAE,CAAA;QAEhFsE,IAAI,CAACrB,OAAO,CAAC,CAACC,GAAW,EAAEC,KAAa,KAAI;UAAA;UAAArD,cAAA,GAAA8B,CAAA;UAAA9B,cAAA,GAAAE,CAAA;UAC1CgD,MAAM,IAAI,GAAGG,KAAK,GAAG,CAAC,OAAOD,GAAG,CAAC7B,IAAI,WAAW6B,GAAG,CAACE,EAAE,KAAK;QAC7D,CAAC,CAAC;QAAC;QAAAtD,cAAA,GAAAE,CAAA;QAEH,OAAOgD,MAAM;MACf,CAAC,CAAC,OAAOY,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,gCAAgCkB,KAAK,CAACE,OAAO,EAAE,CAAC;QACtE,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,gDAAgD,CAAC;MACvE;IACF;GACD,CAAC;EAEF;EAAA;EAAA5C,cAAA,GAAAE,CAAA;EACA2B,MAAM,CAACE,OAAO,CAAC;IACbR,IAAI,EAAE,sBAAsB;IAC5BS,WAAW,EACT,gGAAgG;IAClGC,UAAU,EAAER,wBAAwB;IACpCS,WAAW,EAAE;MACXC,KAAK,EAAE,sBAAsB;MAC7BC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE;KAChB;IACDC,OAAO,EAAE,MAAOC,IAA8C,IAAI;MAAA;MAAAzC,cAAA,GAAA8B,CAAA;MAChE,MAAMY,MAAM;MAAA;MAAA,CAAA1C,cAAA,GAAAE,CAAA,SAAG0B,SAAS,EAAE;MAAC;MAAA5B,cAAA,GAAAE,CAAA;MAC3B,IAAI,CAACwC,MAAM,EAAE;QAAA;QAAA1C,cAAA,GAAA2C,CAAA;QAAA3C,cAAA,GAAAE,CAAA;QACX,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,wDAAwD,CAAC;MAC/E,CAAC;MAAA;MAAA;QAAA5C,cAAA,GAAA2C,CAAA;MAAA;MAAA3C,cAAA,GAAAE,CAAA;MAED,IAAI;QAAA;QAAAF,cAAA,GAAAE,CAAA;QACF,MAAMwC,MAAM,CAACgC,kBAAkB,CAACjC,IAAI,CAAC1B,UAAU,EAAE0B,IAAI,CAACf,MAAM,CAAC;QAE7D,MAAMiD,QAAQ;QAAA;QAAA,CAAA3E,cAAA,GAAAE,CAAA,SAAGuC,IAAI,CAACf,MAAM,CAACuB,MAAM;QAAC;QAAAjD,cAAA,GAAAE,CAAA;QACpC,OAAO,mCAAmCuC,IAAI,CAAC1B,UAAU,SAAS4D,QAAQ,SAAS;MACrF,CAAC,CAAC,OAAOb,KAAK,EAAE;QAAA;QAAA9D,cAAA,GAAAE,CAAA;QACd,IAAI4D,KAAK,YAAYC,KAAK,EAAE;UAAA;UAAA/D,cAAA,GAAA2C,CAAA;UAAA3C,cAAA,GAAAE,CAAA;UAC1B,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,mCAAmCkB,KAAK,CAACE,OAAO,EAAE,CAAC;QACzE,CAAC;QAAA;QAAA;UAAAhE,cAAA,GAAA2C,CAAA;QAAA;QAAA3C,cAAA,GAAAE,CAAA;QACD,MAAM,IAAIK,SAAA,CAAAqC,SAAS,CAAC,mDAAmD,CAAC;MAC1E;IACF;GACD,CAAC;AACJ","ignoreList":[]}