87c43190bd4203a11c621a8da5d2fbe8
/* istanbul ignore next */
function cov_2g9xt8gi7r() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/mcpParser.ts";
  var hash = "d167325bfb001b0f9424a09bcc54df5e11f93a6c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/mcpParser.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 8,
          column: 9
        }
      },
      "1": {
        start: {
          line: 7,
          column: 12
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "2": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 12,
          column: 9
        }
      },
      "4": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "6": {
        start: {
          line: 14,
          column: 52
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "8": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "9": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "13": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 62
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "19": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 33
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 72
        }
      },
      "22": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "23": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 68
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "25": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "28": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "31": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "32": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "33": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "34": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "35": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "36": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "37": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "38": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "39": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "40": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 78
        }
      },
      "41": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 104,
          column: 52
        }
      },
      "43": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 52
        }
      },
      "44": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "45": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "46": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "47": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "48": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "49": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "50": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "51": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 115,
          column: 48
        }
      },
      "52": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 48
        }
      },
      "53": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 117,
          column: 48
        }
      },
      "54": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 48
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "56": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 125,
          column: 88
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 69
        }
      },
      "58": {
        start: {
          line: 132,
          column: 23
        },
        end: {
          line: 132,
          column: 25
        }
      },
      "59": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "60": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "61": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 130
        }
      },
      "62": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "63": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 111
        }
      },
      "64": {
        start: {
          line: 143,
          column: 27
        },
        end: {
          line: 143,
          column: 75
        }
      },
      "65": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "66": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 107
        }
      },
      "67": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "68": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 92
        }
      },
      "69": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "70": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 162,
          column: 56
        }
      },
      "71": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 81
        }
      },
      "72": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 169,
          column: 26
        }
      },
      "73": {
        start: {
          line: 170,
          column: 32
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "74": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 25
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "76": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 27
        }
      },
      "77": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "78": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 62
        }
      },
      "79": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "80": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 68
        }
      },
      "81": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 25
        }
      },
      "82": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 56
        }
      },
      "83": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 26
        }
      },
      "84": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "85": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "86": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "87": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 30
        }
      },
      "88": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "89": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "90": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 199,
          column: 21
        }
      },
      "91": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 36
        }
      },
      "92": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "93": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 205,
          column: 17
        }
      },
      "94": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 32
        }
      },
      "95": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 33
        }
      },
      "96": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 25
        }
      },
      "97": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "98": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "99": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "100": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 21
        }
      },
      "101": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "102": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 24
        }
      },
      "103": {
        start: {
          line: 235,
          column: 21
        },
        end: {
          line: 235,
          column: 23
        }
      },
      "104": {
        start: {
          line: 236,
          column: 21
        },
        end: {
          line: 236,
          column: 69
        }
      },
      "105": {
        start: {
          line: 238,
          column: 25
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "106": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "107": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "108": {
        start: {
          line: 248,
          column: 41
        },
        end: {
          line: 248,
          column: 63
        }
      },
      "109": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 36
        }
      },
      "110": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 46
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 42
          },
          end: {
            line: 14,
            column: 43
          }
        },
        loc: {
          start: {
            line: 14,
            column: 52
          },
          end: {
            line: 14,
            column: 72
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 30
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 124
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 160
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 38
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 168
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 33
          }
        },
        loc: {
          start: {
            line: 170,
            column: 48
          },
          end: {
            line: 182,
            column: 9
          }
        },
        line: 170
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 55
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 189
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 190,
            column: 30
          },
          end: {
            line: 190,
            column: 31
          }
        },
        loc: {
          start: {
            line: 190,
            column: 46
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 190
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 30
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 220
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 22
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 234
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 248,
            column: 30
          },
          end: {
            line: 248,
            column: 31
          }
        },
        loc: {
          start: {
            line: 248,
            column: 41
          },
          end: {
            line: 248,
            column: 63
          }
        },
        line: 248
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 8
          },
          end: {
            line: 8,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 8
          },
          end: {
            line: 8,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 29
          }
        }, {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 69
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 31
          }
        }, {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 69
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 45
          }
        }, {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 51
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 21
          }
        }, {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 53
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 22
          }
        }, {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 55
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "10": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 29
          }
        }, {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 69
          }
        }],
        line: 30
      },
      "11": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 23
          }
        }, {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 57
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "16": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 30
          }
        }, {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 53,
            column: 71
          }
        }],
        line: 53
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 59,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 55
          },
          end: {
            line: 59,
            column: 70
          }
        }, {
          start: {
            line: 59,
            column: 73
          },
          end: {
            line: 59,
            column: 75
          }
        }],
        line: 59
      },
      "18": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "19": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 21
          }
        }, {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 53
          }
        }],
        line: 77
      },
      "20": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "21": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 22
          }
        }, {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 62
          }
        }],
        line: 81
      },
      "22": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "23": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 21
          }
        }, {
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 90,
            column: 49
          }
        }],
        line: 90
      },
      "24": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "25": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 33
          }
        }, {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 47
          }
        }],
        line: 94
      },
      "26": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "27": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 34
          }
        }, {
          start: {
            line: 98,
            column: 38
          },
          end: {
            line: 98,
            column: 53
          }
        }],
        line: 98
      },
      "28": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "29": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "30": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 106,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 106,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "31": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 108,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 108,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "32": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 110,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 110,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "33": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "34": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 34
          }
        }, {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 61
          }
        }],
        line: 113
      },
      "35": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 115,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 115,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "36": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 117,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 117,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "37": {
        loc: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 39
          }
        }, {
          start: {
            line: 126,
            column: 43
          },
          end: {
            line: 126,
            column: 68
          }
        }],
        line: 126
      },
      "38": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "39": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "40": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 29
          }
        }, {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 61
          }
        }],
        line: 139
      },
      "41": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "42": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "43": {
        loc: {
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 163,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 163,
            column: 39
          }
        }, {
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 163,
            column: 59
          }
        }, {
          start: {
            line: 163,
            column: 63
          },
          end: {
            line: 163,
            column: 80
          }
        }],
        line: 163
      },
      "44": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "45": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 42
          }
        }, {
          start: {
            line: 174,
            column: 46
          },
          end: {
            line: 174,
            column: 61
          }
        }],
        line: 174
      },
      "46": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "47": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 41
          }
        }, {
          start: {
            line: 177,
            column: 45
          },
          end: {
            line: 177,
            column: 74
          }
        }, {
          start: {
            line: 177,
            column: 78
          },
          end: {
            line: 177,
            column: 99
          }
        }],
        line: 177
      },
      "48": {
        loc: {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 189,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 189,
            column: 44
          },
          end: {
            line: 189,
            column: 53
          }
        }],
        line: 189
      },
      "49": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "50": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "51": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 38
          }
        }, {
          start: {
            line: 195,
            column: 42
          },
          end: {
            line: 195,
            column: 57
          }
        }],
        line: 195
      },
      "52": {
        loc: {
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 199,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 199,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "53": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "54": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 37
          }
        }, {
          start: {
            line: 202,
            column: 41
          },
          end: {
            line: 202,
            column: 51
          }
        }],
        line: 202
      },
      "55": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "56": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "57": {
        loc: {
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 225,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 225,
            column: 65
          }
        }, {
          start: {
            line: 225,
            column: 69
          },
          end: {
            line: 225,
            column: 70
          }
        }],
        line: 225
      },
      "58": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0],
      "48": [0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/mcpParser.ts",
      mappings: "AASA,MAAM,OAAO,aAAa;IACxB;;OAEG;IACH,uBAAuB,CAAC,gBAAyB;QAC/C,IAAI,CAAC,gBAAgB,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE,CAAC;YAC9D,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,YAAY,GAAG,gBAAuB,CAAC;QAE7C,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9D,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC/D,CAAC;QAED,OAAO;YACL,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAa,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtE,SAAS,EAAE,YAAY,CAAC,SAAS,IAAI,EAAE;YACvC,QAAQ,EAAE,YAAY,CAAC,QAAQ;SAChC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,QAAiB;QACzB,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC9C,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,IAAI,GAAG,QAAe,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC/C,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE,CAAC;YAC9D,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACtD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;SACpD,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,UAAmB;QACjC,IAAI,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,CAAC;YAClD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC7C,CAAC;QAED,MAAM,MAAM,GAAG,UAAiB,CAAC;QAEjC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC7B,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC9D,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO;YACL,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAU,CAAC;YACzD,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC/D,oBAAoB,EAAE,MAAM,CAAC,oBAAoB,KAAK,KAAK;SAC5D,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,qBAAqB,CAC3B,UAAmC;QAEnC,MAAM,MAAM,GAAoC,EAAE,CAAC;QAEnD,KAAK,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,QAAiB;QACzC,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC9C,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC/C,CAAC;QAED,MAAM,IAAI,GAAG,QAAe,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvD,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,MAAM,QAAQ,GAAoB;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;QAEF,qBAAqB;QACrB,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1C,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC;QAED,qBAAqB;QACrB,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACxC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC;QAED,2BAA2B;QAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAC9C,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC;QAED,4BAA4B;QAC5B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC3B,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;gBAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC5E,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;gBAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC5E,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ;gBAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACtE,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ;gBAAE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACrE,CAAC;QAED,4BAA4B;QAC5B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YACtD,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ;gBAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACtE,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ;gBAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACxE,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,IAAa;QACvC,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACjF,OAAO,OAAO,IAAI,KAAK,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,IAAa;QACxB,MAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACrC,MAAM,CAAC,IAAI,CACT,sBAAsB,IAAI,CAAC,IAAI,yEAAyE,CACzG,CAAC;QACJ,CAAC;QAED,uBAAuB;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YACtD,QAAQ,CAAC,IAAI,CACX,mFAAmF,CACpF,CAAC;QACJ,CAAC;QAED,6BAA6B;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpE,IAAI,UAAU,GAAG,EAAE,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CACX,+EAA+E,CAChF,CAAC;QACJ,CAAC;QAED,gCAAgC;QAChC,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC;QAClF,CAAC;QAED,OAAO;YACL,OAAO,EAAE,MAAM,CAAC,MAAM,KAAK,CAAC;YAC5B,MAAM;YACN,QAAQ;SACT,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,IAAY;QAClC,mEAAmE;QACnE,MAAM,aAAa,GAAG,0BAA0B,CAAC;QACjD,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;IAC3E,CAAC;IAED;;OAEG;IACK,yBAAyB,CAAC,MAAqB;QACrD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,MAAM,eAAe,GAAG,CAAC,UAA2C,EAAU,EAAE;YAC9E,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC7C,KAAK,IAAI,CAAC,CAAC;gBACX,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBAC9C,KAAK,IAAI,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5C,CAAC;gBACD,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;oBACpF,KAAK,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;OAEG;IACK,qBAAqB,CAAC,MAAqB,EAAE,UAAU,IAAI,GAAG,EAAU;QAC9E,MAAM,aAAa,GAAG,CAAC,IAAqB,EAAE,IAAY,EAAW,EAAE;YACrE,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtB,OAAO,IAAI,CAAC;YACd,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAC9C,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC9D,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC;wBAC9C,OAAO,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;YACH,CAAC;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACxC,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC;oBAC3C,OAAO,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;YAED,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;YAC7D,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACH,mBAAmB,CAAC,IAAa;QAC/B,MAAM,QAAQ,GAAG;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM;YAC/D,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC;YAC1D,UAAU,EAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,CAAC;YAC5D,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SAC7B,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,IAAa;QAC/B,MAAM,IAAI,GAAa,EAAE,CAAC;QAC1B,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;QAE9D,4BAA4B;QAC5B,MAAM,QAAQ,GAAG;YACf,iBAAiB,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;YACzE,GAAG,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC;YACnD,IAAI,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC;YAC9D,QAAQ,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;YACxD,aAAa,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,EAAE,SAAS,CAAC;YACtE,QAAQ,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,CAAC;YACrE,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;SACrE,CAAC;QAEF,KAAK,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5D,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;gBACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/mcpParser.ts"],
      sourcesContent: ["import {\n  MCPTool,\n  MCPToolSchema,\n  MCPToolProperty,\n  MCPServer,\n  MCPCapabilities,\n  ConversionResult,\n} from '../types/mcpTypes.js';\n\nexport class MCPToolParser {\n  /**\n   * Parse and validate MCP server capabilities\n   */\n  parseServerCapabilities(capabilitiesData: unknown): MCPCapabilities {\n    if (!capabilitiesData || typeof capabilitiesData !== 'object') {\n      throw new Error('Invalid MCP capabilities data');\n    }\n\n    const capabilities = capabilitiesData as any;\n\n    if (!capabilities.tools || !Array.isArray(capabilities.tools)) {\n      throw new Error('MCP capabilities must include tools array');\n    }\n\n    return {\n      tools: capabilities.tools.map((tool: unknown) => this.parseTool(tool)),\n      resources: capabilities.resources || [],\n      sampling: capabilities.sampling,\n    };\n  }\n\n  /**\n   * Parse individual MCP tool definition\n   */\n  parseTool(toolData: unknown): MCPTool {\n    if (!toolData || typeof toolData !== 'object') {\n      throw new Error('Invalid MCP tool data');\n    }\n\n    const tool = toolData as any;\n\n    if (!tool.name || typeof tool.name !== 'string') {\n      throw new Error('MCP tool must have a name');\n    }\n\n    if (!tool.description || typeof tool.description !== 'string') {\n      throw new Error('MCP tool must have a description');\n    }\n\n    if (!tool.inputSchema) {\n      throw new Error('MCP tool must have inputSchema');\n    }\n\n    return {\n      name: tool.name,\n      description: tool.description,\n      inputSchema: this.parseToolSchema(tool.inputSchema),\n    };\n  }\n\n  /**\n   * Parse MCP tool input schema\n   */\n  parseToolSchema(schemaData: unknown): MCPToolSchema {\n    if (!schemaData || typeof schemaData !== 'object') {\n      throw new Error('Invalid MCP tool schema');\n    }\n\n    const schema = schemaData as any;\n\n    if (schema.type !== 'object') {\n      throw new Error('MCP tool schema must be of type \"object\"');\n    }\n\n    if (!schema.properties || typeof schema.properties !== 'object') {\n      throw new Error('MCP tool schema must have properties');\n    }\n\n    return {\n      type: 'object',\n      properties: this.parseSchemaProperties(schema.properties),\n      required: Array.isArray(schema.required) ? schema.required : [],\n      additionalProperties: schema.additionalProperties !== false,\n    };\n  }\n\n  /**\n   * Parse schema properties recursively\n   */\n  private parseSchemaProperties(\n    properties: Record<string, unknown>\n  ): Record<string, MCPToolProperty> {\n    const result: Record<string, MCPToolProperty> = {};\n\n    for (const [name, propData] of Object.entries(properties)) {\n      result[name] = this.parseToolProperty(propData);\n    }\n\n    return result;\n  }\n\n  /**\n   * Parse individual tool property\n   */\n  private parseToolProperty(propData: unknown): MCPToolProperty {\n    if (!propData || typeof propData !== 'object') {\n      throw new Error('Invalid MCP tool property');\n    }\n\n    const prop = propData as any;\n\n    if (!prop.type || !this.isValidPropertyType(prop.type)) {\n      throw new Error(`Invalid MCP property type: ${prop.type}`);\n    }\n\n    const property: MCPToolProperty = {\n      type: prop.type,\n      description: prop.description,\n      default: prop.default,\n    };\n\n    // Handle enum values\n    if (prop.enum && Array.isArray(prop.enum)) {\n      property.enum = prop.enum;\n    }\n\n    // Handle array items\n    if (prop.type === 'array' && prop.items) {\n      property.items = this.parseToolProperty(prop.items);\n    }\n\n    // Handle object properties\n    if (prop.type === 'object' && prop.properties) {\n      property.properties = this.parseSchemaProperties(prop.properties);\n    }\n\n    // Handle string constraints\n    if (prop.type === 'string') {\n      if (typeof prop.minLength === 'number') property.minLength = prop.minLength;\n      if (typeof prop.maxLength === 'number') property.maxLength = prop.maxLength;\n      if (typeof prop.pattern === 'string') property.pattern = prop.pattern;\n      if (typeof prop.format === 'string') property.format = prop.format;\n    }\n\n    // Handle number constraints\n    if (prop.type === 'number' || prop.type === 'integer') {\n      if (typeof prop.minimum === 'number') property.minimum = prop.minimum;\n      if (typeof prop.maximum === 'number') property.maximum = prop.maximum;\n    }\n\n    return property;\n  }\n\n  /**\n   * Validate property type\n   */\n  private isValidPropertyType(type: unknown): type is MCPToolProperty['type'] {\n    const validTypes = ['string', 'number', 'integer', 'boolean', 'array', 'object'];\n    return typeof type === 'string' && validTypes.includes(type);\n  }\n\n  /**\n   * Validate parsed tool against MCP specification\n   */\n  validateTool(tool: MCPTool): ConversionResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate tool name\n    if (!this.isValidNodeName(tool.name)) {\n      errors.push(\n        `Invalid tool name \"${tool.name}\". Must contain only alphanumeric characters, underscores, and hyphens.`\n      );\n    }\n\n    // Validate description\n    if (!tool.description || tool.description.length < 10) {\n      warnings.push(\n        'Tool description should be at least 10 characters long for better user experience'\n      );\n    }\n\n    // Validate schema complexity\n    const complexity = this.calculateSchemaComplexity(tool.inputSchema);\n    if (complexity > 50) {\n      warnings.push(\n        'Tool schema is very complex. Consider simplifying for better user experience.'\n      );\n    }\n\n    // Check for circular references\n    if (this.hasCircularReferences(tool.inputSchema)) {\n      errors.push('Tool schema contains circular references which are not supported');\n    }\n\n    return {\n      success: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if tool name is valid for n8n node names\n   */\n  private isValidNodeName(name: string): boolean {\n    // n8n node names must be alphanumeric with underscores and hyphens\n    const nodeNameRegex = /^[a-zA-Z][a-zA-Z0-9_-]*$/;\n    return nodeNameRegex.test(name) && name.length >= 2 && name.length <= 50;\n  }\n\n  /**\n   * Calculate schema complexity score\n   */\n  private calculateSchemaComplexity(schema: MCPToolSchema): number {\n    let complexity = 0;\n\n    const countProperties = (properties: Record<string, MCPToolProperty>): number => {\n      let count = 0;\n      for (const prop of Object.values(properties)) {\n        count += 1;\n        if (prop.type === 'object' && prop.properties) {\n          count += countProperties(prop.properties);\n        }\n        if (prop.type === 'array' && prop.items?.type === 'object' && prop.items.properties) {\n          count += countProperties(prop.items.properties);\n        }\n      }\n      return count;\n    };\n\n    complexity = countProperties(schema.properties);\n    return complexity;\n  }\n\n  /**\n   * Check for circular references in schema\n   */\n  private hasCircularReferences(schema: MCPToolSchema, visited = new Set<string>()): boolean {\n    const checkProperty = (prop: MCPToolProperty, path: string): boolean => {\n      if (visited.has(path)) {\n        return true;\n      }\n\n      visited.add(path);\n\n      if (prop.type === 'object' && prop.properties) {\n        for (const [name, subProp] of Object.entries(prop.properties)) {\n          if (checkProperty(subProp, `${path}.${name}`)) {\n            return true;\n          }\n        }\n      }\n\n      if (prop.type === 'array' && prop.items) {\n        if (checkProperty(prop.items, `${path}[]`)) {\n          return true;\n        }\n      }\n\n      visited.delete(path);\n      return false;\n    };\n\n    for (const [name, prop] of Object.entries(schema.properties)) {\n      if (checkProperty(prop, name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Extract tool metadata for indexing and search\n   */\n  extractToolMetadata(tool: MCPTool) {\n    const metadata = {\n      name: tool.name,\n      description: tool.description,\n      parameterCount: Object.keys(tool.inputSchema.properties).length,\n      requiredParameters: tool.inputSchema.required?.length || 0,\n      complexity: this.calculateSchemaComplexity(tool.inputSchema),\n      tags: this.extractTags(tool),\n    };\n\n    return metadata;\n  }\n\n  /**\n   * Extract semantic tags from tool for categorization\n   */\n  private extractTags(tool: MCPTool): string[] {\n    const tags: string[] = [];\n    const text = `${tool.name} ${tool.description}`.toLowerCase();\n\n    // Common operation patterns\n    const patterns = {\n      'data-processing': ['process', 'transform', 'convert', 'parse', 'format'],\n      api: ['api', 'request', 'http', 'rest', 'endpoint'],\n      file: ['file', 'document', 'upload', 'download', 'attachment'],\n      database: ['database', 'query', 'sql', 'data', 'record'],\n      communication: ['email', 'message', 'notification', 'send', 'receive'],\n      analysis: ['analyze', 'calculate', 'compute', 'statistics', 'report'],\n      automation: ['automate', 'schedule', 'trigger', 'workflow', 'batch'],\n    };\n\n    for (const [category, keywords] of Object.entries(patterns)) {\n      if (keywords.some(keyword => text.includes(keyword))) {\n        tags.push(category);\n      }\n    }\n\n    return tags;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d167325bfb001b0f9424a09bcc54df5e11f93a6c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g9xt8gi7r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g9xt8gi7r();
export class MCPToolParser {
  /**
   * Parse and validate MCP server capabilities
   */
  parseServerCapabilities(capabilitiesData) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[0]++;
    cov_2g9xt8gi7r().s[0]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[1][0]++, !capabilitiesData) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[1][1]++, typeof capabilitiesData !== 'object')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[0][0]++;
      cov_2g9xt8gi7r().s[1]++;
      throw new Error('Invalid MCP capabilities data');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[0][1]++;
    }
    const capabilities =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[2]++, capabilitiesData);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[3]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[3][0]++, !capabilities.tools) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[3][1]++, !Array.isArray(capabilities.tools))) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[2][0]++;
      cov_2g9xt8gi7r().s[4]++;
      throw new Error('MCP capabilities must include tools array');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[2][1]++;
    }
    cov_2g9xt8gi7r().s[5]++;
    return {
      tools: capabilities.tools.map(tool => {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().f[1]++;
        cov_2g9xt8gi7r().s[6]++;
        return this.parseTool(tool);
      }),
      resources:
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[4][0]++, capabilities.resources) ||
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[4][1]++, []),
      sampling: capabilities.sampling
    };
  }
  /**
   * Parse individual MCP tool definition
   */
  parseTool(toolData) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[2]++;
    cov_2g9xt8gi7r().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[6][0]++, !toolData) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[6][1]++, typeof toolData !== 'object')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[5][0]++;
      cov_2g9xt8gi7r().s[8]++;
      throw new Error('Invalid MCP tool data');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[5][1]++;
    }
    const tool =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[9]++, toolData);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[8][0]++, !tool.name) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[8][1]++, typeof tool.name !== 'string')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[7][0]++;
      cov_2g9xt8gi7r().s[11]++;
      throw new Error('MCP tool must have a name');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[7][1]++;
    }
    cov_2g9xt8gi7r().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[10][0]++, !tool.description) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[10][1]++, typeof tool.description !== 'string')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[9][0]++;
      cov_2g9xt8gi7r().s[13]++;
      throw new Error('MCP tool must have a description');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[9][1]++;
    }
    cov_2g9xt8gi7r().s[14]++;
    if (!tool.inputSchema) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[11][0]++;
      cov_2g9xt8gi7r().s[15]++;
      throw new Error('MCP tool must have inputSchema');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[11][1]++;
    }
    cov_2g9xt8gi7r().s[16]++;
    return {
      name: tool.name,
      description: tool.description,
      inputSchema: this.parseToolSchema(tool.inputSchema)
    };
  }
  /**
   * Parse MCP tool input schema
   */
  parseToolSchema(schemaData) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[3]++;
    cov_2g9xt8gi7r().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[13][0]++, !schemaData) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[13][1]++, typeof schemaData !== 'object')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[12][0]++;
      cov_2g9xt8gi7r().s[18]++;
      throw new Error('Invalid MCP tool schema');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[12][1]++;
    }
    const schema =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[19]++, schemaData);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[20]++;
    if (schema.type !== 'object') {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[14][0]++;
      cov_2g9xt8gi7r().s[21]++;
      throw new Error('MCP tool schema must be of type "object"');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[14][1]++;
    }
    cov_2g9xt8gi7r().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[16][0]++, !schema.properties) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[16][1]++, typeof schema.properties !== 'object')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[15][0]++;
      cov_2g9xt8gi7r().s[23]++;
      throw new Error('MCP tool schema must have properties');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[15][1]++;
    }
    cov_2g9xt8gi7r().s[24]++;
    return {
      type: 'object',
      properties: this.parseSchemaProperties(schema.properties),
      required: Array.isArray(schema.required) ?
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[17][0]++, schema.required) :
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[17][1]++, []),
      additionalProperties: schema.additionalProperties !== false
    };
  }
  /**
   * Parse schema properties recursively
   */
  parseSchemaProperties(properties) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[4]++;
    const result =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[25]++, {});
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[26]++;
    for (const [name, propData] of Object.entries(properties)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[27]++;
      result[name] = this.parseToolProperty(propData);
    }
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[28]++;
    return result;
  }
  /**
   * Parse individual tool property
   */
  parseToolProperty(propData) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[5]++;
    cov_2g9xt8gi7r().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[19][0]++, !propData) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[19][1]++, typeof propData !== 'object')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[18][0]++;
      cov_2g9xt8gi7r().s[30]++;
      throw new Error('Invalid MCP tool property');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[18][1]++;
    }
    const prop =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[31]++, propData);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[21][0]++, !prop.type) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[21][1]++, !this.isValidPropertyType(prop.type))) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[20][0]++;
      cov_2g9xt8gi7r().s[33]++;
      throw new Error(`Invalid MCP property type: ${prop.type}`);
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[20][1]++;
    }
    const property =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[34]++, {
      type: prop.type,
      description: prop.description,
      default: prop.default
    });
    // Handle enum values
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[23][0]++, prop.enum) &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[23][1]++, Array.isArray(prop.enum))) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[22][0]++;
      cov_2g9xt8gi7r().s[36]++;
      property.enum = prop.enum;
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[22][1]++;
    }
    // Handle array items
    cov_2g9xt8gi7r().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[25][0]++, prop.type === 'array') &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[25][1]++, prop.items)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[24][0]++;
      cov_2g9xt8gi7r().s[38]++;
      property.items = this.parseToolProperty(prop.items);
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[24][1]++;
    }
    // Handle object properties
    cov_2g9xt8gi7r().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[27][0]++, prop.type === 'object') &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[27][1]++, prop.properties)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[26][0]++;
      cov_2g9xt8gi7r().s[40]++;
      property.properties = this.parseSchemaProperties(prop.properties);
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[26][1]++;
    }
    // Handle string constraints
    cov_2g9xt8gi7r().s[41]++;
    if (prop.type === 'string') {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[28][0]++;
      cov_2g9xt8gi7r().s[42]++;
      if (typeof prop.minLength === 'number') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[29][0]++;
        cov_2g9xt8gi7r().s[43]++;
        property.minLength = prop.minLength;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[29][1]++;
      }
      cov_2g9xt8gi7r().s[44]++;
      if (typeof prop.maxLength === 'number') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[30][0]++;
        cov_2g9xt8gi7r().s[45]++;
        property.maxLength = prop.maxLength;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[30][1]++;
      }
      cov_2g9xt8gi7r().s[46]++;
      if (typeof prop.pattern === 'string') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[31][0]++;
        cov_2g9xt8gi7r().s[47]++;
        property.pattern = prop.pattern;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[31][1]++;
      }
      cov_2g9xt8gi7r().s[48]++;
      if (typeof prop.format === 'string') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[32][0]++;
        cov_2g9xt8gi7r().s[49]++;
        property.format = prop.format;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[28][1]++;
    }
    // Handle number constraints
    cov_2g9xt8gi7r().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[34][0]++, prop.type === 'number') ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[34][1]++, prop.type === 'integer')) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[33][0]++;
      cov_2g9xt8gi7r().s[51]++;
      if (typeof prop.minimum === 'number') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[35][0]++;
        cov_2g9xt8gi7r().s[52]++;
        property.minimum = prop.minimum;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[35][1]++;
      }
      cov_2g9xt8gi7r().s[53]++;
      if (typeof prop.maximum === 'number') {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[36][0]++;
        cov_2g9xt8gi7r().s[54]++;
        property.maximum = prop.maximum;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[36][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[33][1]++;
    }
    cov_2g9xt8gi7r().s[55]++;
    return property;
  }
  /**
   * Validate property type
   */
  isValidPropertyType(type) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[6]++;
    const validTypes =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[56]++, ['string', 'number', 'integer', 'boolean', 'array', 'object']);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[57]++;
    return /* istanbul ignore next */(cov_2g9xt8gi7r().b[37][0]++, typeof type === 'string') &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[37][1]++, validTypes.includes(type));
  }
  /**
   * Validate parsed tool against MCP specification
   */
  validateTool(tool) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[7]++;
    const errors =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[58]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[59]++, []);
    // Validate tool name
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[60]++;
    if (!this.isValidNodeName(tool.name)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[38][0]++;
      cov_2g9xt8gi7r().s[61]++;
      errors.push(`Invalid tool name "${tool.name}". Must contain only alphanumeric characters, underscores, and hyphens.`);
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[38][1]++;
    }
    // Validate description
    cov_2g9xt8gi7r().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[40][0]++, !tool.description) ||
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[40][1]++, tool.description.length < 10)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[39][0]++;
      cov_2g9xt8gi7r().s[63]++;
      warnings.push('Tool description should be at least 10 characters long for better user experience');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[39][1]++;
    }
    // Validate schema complexity
    const complexity =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[64]++, this.calculateSchemaComplexity(tool.inputSchema));
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[65]++;
    if (complexity > 50) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[41][0]++;
      cov_2g9xt8gi7r().s[66]++;
      warnings.push('Tool schema is very complex. Consider simplifying for better user experience.');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[41][1]++;
    }
    // Check for circular references
    cov_2g9xt8gi7r().s[67]++;
    if (this.hasCircularReferences(tool.inputSchema)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().b[42][0]++;
      cov_2g9xt8gi7r().s[68]++;
      errors.push('Tool schema contains circular references which are not supported');
    } else
    /* istanbul ignore next */
    {
      cov_2g9xt8gi7r().b[42][1]++;
    }
    cov_2g9xt8gi7r().s[69]++;
    return {
      success: errors.length === 0,
      errors,
      warnings
    };
  }
  /**
   * Check if tool name is valid for n8n node names
   */
  isValidNodeName(name) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[8]++;
    // n8n node names must be alphanumeric with underscores and hyphens
    const nodeNameRegex =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[70]++, /^[a-zA-Z][a-zA-Z0-9_-]*$/);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[71]++;
    return /* istanbul ignore next */(cov_2g9xt8gi7r().b[43][0]++, nodeNameRegex.test(name)) &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[43][1]++, name.length >= 2) &&
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().b[43][2]++, name.length <= 50);
  }
  /**
   * Calculate schema complexity score
   */
  calculateSchemaComplexity(schema) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[9]++;
    let complexity =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[72]++, 0);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[73]++;
    const countProperties = properties => {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().f[10]++;
      let count =
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().s[74]++, 0);
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[75]++;
      for (const prop of Object.values(properties)) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().s[76]++;
        count += 1;
        /* istanbul ignore next */
        cov_2g9xt8gi7r().s[77]++;
        if (
        /* istanbul ignore next */
        (cov_2g9xt8gi7r().b[45][0]++, prop.type === 'object') &&
        /* istanbul ignore next */
        (cov_2g9xt8gi7r().b[45][1]++, prop.properties)) {
          /* istanbul ignore next */
          cov_2g9xt8gi7r().b[44][0]++;
          cov_2g9xt8gi7r().s[78]++;
          count += countProperties(prop.properties);
        } else
        /* istanbul ignore next */
        {
          cov_2g9xt8gi7r().b[44][1]++;
        }
        cov_2g9xt8gi7r().s[79]++;
        if (
        /* istanbul ignore next */
        (cov_2g9xt8gi7r().b[47][0]++, prop.type === 'array') &&
        /* istanbul ignore next */
        (cov_2g9xt8gi7r().b[47][1]++, prop.items?.type === 'object') &&
        /* istanbul ignore next */
        (cov_2g9xt8gi7r().b[47][2]++, prop.items.properties)) {
          /* istanbul ignore next */
          cov_2g9xt8gi7r().b[46][0]++;
          cov_2g9xt8gi7r().s[80]++;
          count += countProperties(prop.items.properties);
        } else
        /* istanbul ignore next */
        {
          cov_2g9xt8gi7r().b[46][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[81]++;
      return count;
    };
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[82]++;
    complexity = countProperties(schema.properties);
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[83]++;
    return complexity;
  }
  /**
   * Check for circular references in schema
   */
  hasCircularReferences(schema, visited =
  /* istanbul ignore next */
  (cov_2g9xt8gi7r().b[48][0]++, new Set())) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[11]++;
    cov_2g9xt8gi7r().s[84]++;
    const checkProperty = (prop, path) => {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().f[12]++;
      cov_2g9xt8gi7r().s[85]++;
      if (visited.has(path)) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[49][0]++;
        cov_2g9xt8gi7r().s[86]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[49][1]++;
      }
      cov_2g9xt8gi7r().s[87]++;
      visited.add(path);
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[88]++;
      if (
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[51][0]++, prop.type === 'object') &&
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[51][1]++, prop.properties)) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[50][0]++;
        cov_2g9xt8gi7r().s[89]++;
        for (const [name, subProp] of Object.entries(prop.properties)) {
          /* istanbul ignore next */
          cov_2g9xt8gi7r().s[90]++;
          if (checkProperty(subProp, `${path}.${name}`)) {
            /* istanbul ignore next */
            cov_2g9xt8gi7r().b[52][0]++;
            cov_2g9xt8gi7r().s[91]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_2g9xt8gi7r().b[52][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[50][1]++;
      }
      cov_2g9xt8gi7r().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[54][0]++, prop.type === 'array') &&
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[54][1]++, prop.items)) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[53][0]++;
        cov_2g9xt8gi7r().s[93]++;
        if (checkProperty(prop.items, `${path}[]`)) {
          /* istanbul ignore next */
          cov_2g9xt8gi7r().b[55][0]++;
          cov_2g9xt8gi7r().s[94]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_2g9xt8gi7r().b[55][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[53][1]++;
      }
      cov_2g9xt8gi7r().s[95]++;
      visited.delete(path);
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[96]++;
      return false;
    };
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[97]++;
    for (const [name, prop] of Object.entries(schema.properties)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[98]++;
      if (checkProperty(prop, name)) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[56][0]++;
        cov_2g9xt8gi7r().s[99]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[56][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[100]++;
    return false;
  }
  /**
   * Extract tool metadata for indexing and search
   */
  extractToolMetadata(tool) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[13]++;
    const metadata =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[101]++, {
      name: tool.name,
      description: tool.description,
      parameterCount: Object.keys(tool.inputSchema.properties).length,
      requiredParameters:
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[57][0]++, tool.inputSchema.required?.length) ||
      /* istanbul ignore next */
      (cov_2g9xt8gi7r().b[57][1]++, 0),
      complexity: this.calculateSchemaComplexity(tool.inputSchema),
      tags: this.extractTags(tool)
    });
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[102]++;
    return metadata;
  }
  /**
   * Extract semantic tags from tool for categorization
   */
  extractTags(tool) {
    /* istanbul ignore next */
    cov_2g9xt8gi7r().f[14]++;
    const tags =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[103]++, []);
    const text =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[104]++, `${tool.name} ${tool.description}`.toLowerCase());
    // Common operation patterns
    const patterns =
    /* istanbul ignore next */
    (cov_2g9xt8gi7r().s[105]++, {
      'data-processing': ['process', 'transform', 'convert', 'parse', 'format'],
      api: ['api', 'request', 'http', 'rest', 'endpoint'],
      file: ['file', 'document', 'upload', 'download', 'attachment'],
      database: ['database', 'query', 'sql', 'data', 'record'],
      communication: ['email', 'message', 'notification', 'send', 'receive'],
      analysis: ['analyze', 'calculate', 'compute', 'statistics', 'report'],
      automation: ['automate', 'schedule', 'trigger', 'workflow', 'batch']
    });
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[106]++;
    for (const [category, keywords] of Object.entries(patterns)) {
      /* istanbul ignore next */
      cov_2g9xt8gi7r().s[107]++;
      if (keywords.some(keyword => {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().f[15]++;
        cov_2g9xt8gi7r().s[108]++;
        return text.includes(keyword);
      })) {
        /* istanbul ignore next */
        cov_2g9xt8gi7r().b[58][0]++;
        cov_2g9xt8gi7r().s[109]++;
        tags.push(category);
      } else
      /* istanbul ignore next */
      {
        cov_2g9xt8gi7r().b[58][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2g9xt8gi7r().s[110]++;
    return tags;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,