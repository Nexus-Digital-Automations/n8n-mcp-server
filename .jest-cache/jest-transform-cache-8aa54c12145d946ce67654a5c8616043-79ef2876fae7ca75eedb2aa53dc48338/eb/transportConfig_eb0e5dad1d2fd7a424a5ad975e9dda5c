9340ef0e77174648cd0bf9e0037a8523
"use strict";

/**
 * Transport Configuration for n8n MCP Server
 *
 * Provides transport type detection and configuration for different deployment scenarios.
 * Supports both stdio (local development) and SSE (remote/web access) transports.
 */
/* istanbul ignore next */
function cov_r9sl8ujhn() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/transportConfig.ts";
  var hash = "f777ac4c753239c265eda2394bc688256ee03d42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/transportConfig.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 86
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 58
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "6": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "8": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "9": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "10": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "11": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "12": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "13": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 51
        }
      },
      "14": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "15": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 43
        }
      },
      "16": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "17": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 43
        }
      },
      "18": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 47
        }
      },
      "19": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 55
        }
      },
      "20": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "21": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 20
        }
      },
      "22": {
        start: {
          line: 117,
          column: 37
        },
        end: {
          line: 117,
          column: 47
        }
      },
      "23": {
        start: {
          line: 118,
          column: 21
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "24": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 54
        }
      },
      "25": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 137,
          column: 2
        }
      },
      "26": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 142,
          column: 21
        }
      },
      "27": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "28": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "29": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 154,
          column: 63
        }
      },
      "30": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "31": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "32": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 170,
          column: 10
        }
      },
      "33": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "detectTransportConfig",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 33
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 84
      },
      "1": {
        name: "validateTransportConfig",
        decl: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 32
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 107
      },
      "2": {
        name: "getServerUrl",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 21
          }
        },
        loc: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 113
      },
      "3": {
        name: "parseConfigFromEnv",
        decl: {
          start: {
            line: 141,
            column: 9
          },
          end: {
            line: 141,
            column: 27
          }
        },
        loc: {
          start: {
            line: 141,
            column: 30
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 66,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 63
          }
        }, {
          start: {
            line: 66,
            column: 66
          },
          end: {
            line: 66,
            column: 70
          }
        }],
        line: 66
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 61
          }
        }, {
          start: {
            line: 71,
            column: 65
          },
          end: {
            line: 71,
            column: 70
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 45
          }
        }, {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 65
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 39
          }
        }, {
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 98,
            column: 61
          }
        }, {
          start: {
            line: 98,
            column: 65
          },
          end: {
            line: 98,
            column: 83
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 29
          }
        }, {
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 44
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 118,
            column: 43
          }
        }, {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 118,
            column: 52
          }
        }],
        line: 118
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 154,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 70
          }
        }, {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 149,
            column: 50
          }
        }, {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 150,
            column: 54
          }
        }, {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 151,
            column: 54
          }
        }, {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 58
          }
        }, {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 153,
            column: 62
          }
        }, {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 63
          }
        }],
        line: 148
      },
      "13": {
        loc: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 29
          }
        }, {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 155,
            column: 48
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 158,
            column: 18
          },
          end: {
            line: 158,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 31
          },
          end: {
            line: 158,
            column: 51
          }
        }, {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 158,
            column: 58
          }
        }],
        line: 158
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 18
          },
          end: {
            line: 159,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 18
          },
          end: {
            line: 159,
            column: 58
          }
        }, {
          start: {
            line: 159,
            column: 62
          },
          end: {
            line: 159,
            column: 73
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 22
          },
          end: {
            line: 160,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 22
          },
          end: {
            line: 160,
            column: 66
          }
        }, {
          start: {
            line: 160,
            column: 70
          },
          end: {
            line: 160,
            column: 76
          }
        }],
        line: 160
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 81
          }
        }, {
          start: {
            line: 163,
            column: 85
          },
          end: {
            line: 163,
            column: 90
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 79
          }
        }, {
          start: {
            line: 168,
            column: 83
          },
          end: {
            line: 168,
            column: 92
          }
        }],
        line: 168
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/transportConfig.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/transportConfig.ts"],
      sourcesContent: ["/**\n * Transport Configuration for n8n MCP Server\n *\n * Provides transport type detection and configuration for different deployment scenarios.\n * Supports both stdio (local development) and SSE (remote/web access) transports.\n */\n\nimport { z } from 'zod';\n\n// Transport configuration schema\nexport const TransportConfigSchema = z.object({\n  type: z.enum(['stdio', 'sse']).default('stdio'),\n  sse: z\n    .object({\n      port: z.number().min(1024).max(65535).default(8080),\n      endpoint: z.string().default('/sse'),\n      host: z.string().default('localhost'),\n      cors: z\n        .object({\n          enabled: z.boolean().default(true),\n          origins: z.array(z.string()).default(['*']),\n          credentials: z.boolean().default(false),\n        })\n        .default({}),\n      healthCheck: z\n        .object({\n          enabled: z.boolean().default(true),\n          endpoint: z.string().default('/health'),\n        })\n        .default({}),\n    })\n    .optional(),\n});\n\nexport type TransportConfig = z.infer<typeof TransportConfigSchema>;\n\n/**\n * Default transport configurations for different environments\n */\nexport const DEFAULT_CONFIGS = {\n  development: {\n    type: 'stdio' as const,\n  },\n  production: {\n    type: 'sse' as const,\n    sse: {\n      port: 8080,\n      endpoint: '/sse',\n      host: '0.0.0.0',\n      cors: {\n        enabled: true,\n        origins: ['*'],\n        credentials: false,\n      },\n      healthCheck: {\n        enabled: true,\n        endpoint: '/health',\n      },\n    },\n  },\n  web: {\n    type: 'sse' as const,\n    sse: {\n      port: process.env.PORT ? parseInt(process.env.PORT) : 3000,\n      endpoint: '/sse',\n      host: '0.0.0.0',\n      cors: {\n        enabled: true,\n        origins: process.env.CORS_ORIGINS?.split(',') || ['*'],\n        credentials: true,\n      },\n      healthCheck: {\n        enabled: true,\n        endpoint: '/health',\n      },\n    },\n  },\n} as const;\n\n/**\n * Detect appropriate transport configuration based on environment\n */\nexport function detectTransportConfig(): TransportConfig {\n  // Check environment variables for explicit transport type\n  const transportType = process.env.N8N_MCP_TRANSPORT as 'stdio' | 'sse' | undefined;\n\n  if (transportType === 'sse') {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  if (transportType === 'stdio') {\n    return DEFAULT_CONFIGS.development;\n  }\n\n  // Auto-detect based on environment\n  if (process.env.NODE_ENV === 'production' || process.env.PORT) {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  // Check if running in a web environment (Railway, Vercel, etc.)\n  if (process.env.RAILWAY_ENVIRONMENT || process.env.VERCEL || process.env.RENDER) {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  // Default to stdio for local development\n  return DEFAULT_CONFIGS.development;\n}\n\n/**\n * Validate and normalize transport configuration\n */\nexport function validateTransportConfig(config: unknown): TransportConfig {\n  return TransportConfigSchema.parse(config);\n}\n\n/**\n * Get SSE server URL from configuration\n */\nexport function getServerUrl(config: TransportConfig): string | null {\n  if (config.type !== 'sse' || !config.sse) {\n    return null;\n  }\n\n  const { host, port, endpoint } = config.sse;\n  const protocol = port === 443 ? 'https' : 'http';\n  return `${protocol}://${host}:${port}${endpoint}`;\n}\n\n/**\n * Environment variable configuration helpers\n */\nexport const ENV_CONFIG = {\n  // Transport type selection\n  TRANSPORT_TYPE: 'N8N_MCP_TRANSPORT', // 'stdio' | 'sse'\n\n  // SSE configuration\n  SSE_PORT: 'N8N_MCP_SSE_PORT',\n  SSE_HOST: 'N8N_MCP_SSE_HOST',\n  SSE_ENDPOINT: 'N8N_MCP_SSE_ENDPOINT',\n\n  // CORS configuration\n  CORS_ORIGINS: 'N8N_MCP_CORS_ORIGINS', // comma-separated list\n  CORS_CREDENTIALS: 'N8N_MCP_CORS_CREDENTIALS', // 'true' | 'false'\n\n  // Health check configuration\n  HEALTH_CHECK_ENABLED: 'N8N_MCP_HEALTH_CHECK_ENABLED',\n  HEALTH_CHECK_ENDPOINT: 'N8N_MCP_HEALTH_CHECK_ENDPOINT',\n} as const;\n\n/**\n * Parse transport configuration from environment variables\n */\nexport function parseConfigFromEnv(): Partial<TransportConfig> {\n  const config: Partial<TransportConfig> = {};\n\n  // Transport type\n  if (process.env[ENV_CONFIG.TRANSPORT_TYPE]) {\n    config.type = process.env[ENV_CONFIG.TRANSPORT_TYPE] as 'stdio' | 'sse';\n  }\n\n  // SSE configuration - create if any SSE-related environment variables are set\n  const hasAnySSEConfig =\n    ENV_CONFIG.SSE_PORT in process.env ||\n    ENV_CONFIG.SSE_HOST in process.env ||\n    ENV_CONFIG.SSE_ENDPOINT in process.env ||\n    ENV_CONFIG.CORS_ORIGINS in process.env ||\n    ENV_CONFIG.CORS_CREDENTIALS in process.env ||\n    ENV_CONFIG.HEALTH_CHECK_ENABLED in process.env ||\n    ENV_CONFIG.HEALTH_CHECK_ENDPOINT in process.env;\n\n  if (config.type === 'sse' || hasAnySSEConfig) {\n    const ssePortEnv = process.env[ENV_CONFIG.SSE_PORT];\n    config.sse = {\n      port: ssePortEnv ? parseInt(ssePortEnv) : 8080,\n      host: process.env[ENV_CONFIG.SSE_HOST] || 'localhost',\n      endpoint: process.env[ENV_CONFIG.SSE_ENDPOINT] || '/sse',\n      cors: {\n        enabled: process.env[ENV_CONFIG.CORS_ORIGINS] !== undefined,\n        origins: process.env[ENV_CONFIG.CORS_ORIGINS]?.split(',') ?? ['*'],\n        credentials: process.env[ENV_CONFIG.CORS_CREDENTIALS] === 'true',\n      },\n      healthCheck: {\n        enabled: process.env[ENV_CONFIG.HEALTH_CHECK_ENABLED] !== 'false',\n        endpoint: process.env[ENV_CONFIG.HEALTH_CHECK_ENDPOINT] || '/health',\n      },\n    };\n  }\n\n  return config;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f777ac4c753239c265eda2394bc688256ee03d42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r9sl8ujhn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r9sl8ujhn();
cov_r9sl8ujhn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r9sl8ujhn().s[1]++;
exports.ENV_CONFIG = exports.DEFAULT_CONFIGS = exports.TransportConfigSchema = void 0;
/* istanbul ignore next */
cov_r9sl8ujhn().s[2]++;
exports.detectTransportConfig = detectTransportConfig;
/* istanbul ignore next */
cov_r9sl8ujhn().s[3]++;
exports.validateTransportConfig = validateTransportConfig;
/* istanbul ignore next */
cov_r9sl8ujhn().s[4]++;
exports.getServerUrl = getServerUrl;
/* istanbul ignore next */
cov_r9sl8ujhn().s[5]++;
exports.parseConfigFromEnv = parseConfigFromEnv;
const zod_1 =
/* istanbul ignore next */
(cov_r9sl8ujhn().s[6]++, require("zod"));
// Transport configuration schema
/* istanbul ignore next */
cov_r9sl8ujhn().s[7]++;
exports.TransportConfigSchema = zod_1.z.object({
  type: zod_1.z.enum(['stdio', 'sse']).default('stdio'),
  sse: zod_1.z.object({
    port: zod_1.z.number().min(1024).max(65535).default(8080),
    endpoint: zod_1.z.string().default('/sse'),
    host: zod_1.z.string().default('localhost'),
    cors: zod_1.z.object({
      enabled: zod_1.z.boolean().default(true),
      origins: zod_1.z.array(zod_1.z.string()).default(['*']),
      credentials: zod_1.z.boolean().default(false)
    }).default({}),
    healthCheck: zod_1.z.object({
      enabled: zod_1.z.boolean().default(true),
      endpoint: zod_1.z.string().default('/health')
    }).default({})
  }).optional()
});
/**
 * Default transport configurations for different environments
 */
/* istanbul ignore next */
cov_r9sl8ujhn().s[8]++;
exports.DEFAULT_CONFIGS = {
  development: {
    type: 'stdio'
  },
  production: {
    type: 'sse',
    sse: {
      port: 8080,
      endpoint: '/sse',
      host: '0.0.0.0',
      cors: {
        enabled: true,
        origins: ['*'],
        credentials: false
      },
      healthCheck: {
        enabled: true,
        endpoint: '/health'
      }
    }
  },
  web: {
    type: 'sse',
    sse: {
      port: process.env.PORT ?
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[0][0]++, parseInt(process.env.PORT)) :
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[0][1]++, 3000),
      endpoint: '/sse',
      host: '0.0.0.0',
      cors: {
        enabled: true,
        origins:
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[1][0]++, process.env.CORS_ORIGINS?.split(',')) ||
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[1][1]++, ['*']),
        credentials: true
      },
      healthCheck: {
        enabled: true,
        endpoint: '/health'
      }
    }
  }
};
/**
 * Detect appropriate transport configuration based on environment
 */
function detectTransportConfig() {
  /* istanbul ignore next */
  cov_r9sl8ujhn().f[0]++;
  // Check environment variables for explicit transport type
  const transportType =
  /* istanbul ignore next */
  (cov_r9sl8ujhn().s[9]++, process.env.N8N_MCP_TRANSPORT);
  /* istanbul ignore next */
  cov_r9sl8ujhn().s[10]++;
  if (transportType === 'sse') {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[2][0]++;
    cov_r9sl8ujhn().s[11]++;
    return exports.DEFAULT_CONFIGS.web;
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[2][1]++;
  }
  cov_r9sl8ujhn().s[12]++;
  if (transportType === 'stdio') {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[3][0]++;
    cov_r9sl8ujhn().s[13]++;
    return exports.DEFAULT_CONFIGS.development;
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[3][1]++;
  }
  // Auto-detect based on environment
  cov_r9sl8ujhn().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[5][0]++, process.env.NODE_ENV === 'production') ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[5][1]++, process.env.PORT)) {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[4][0]++;
    cov_r9sl8ujhn().s[15]++;
    return exports.DEFAULT_CONFIGS.web;
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[4][1]++;
  }
  // Check if running in a web environment (Railway, Vercel, etc.)
  cov_r9sl8ujhn().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[7][0]++, process.env.RAILWAY_ENVIRONMENT) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[7][1]++, process.env.VERCEL) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[7][2]++, process.env.RENDER)) {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[6][0]++;
    cov_r9sl8ujhn().s[17]++;
    return exports.DEFAULT_CONFIGS.web;
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[6][1]++;
  }
  // Default to stdio for local development
  cov_r9sl8ujhn().s[18]++;
  return exports.DEFAULT_CONFIGS.development;
}
/**
 * Validate and normalize transport configuration
 */
function validateTransportConfig(config) {
  /* istanbul ignore next */
  cov_r9sl8ujhn().f[1]++;
  cov_r9sl8ujhn().s[19]++;
  return exports.TransportConfigSchema.parse(config);
}
/**
 * Get SSE server URL from configuration
 */
function getServerUrl(config) {
  /* istanbul ignore next */
  cov_r9sl8ujhn().f[2]++;
  cov_r9sl8ujhn().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[9][0]++, config.type !== 'sse') ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[9][1]++, !config.sse)) {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[8][0]++;
    cov_r9sl8ujhn().s[21]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[8][1]++;
  }
  const {
    host,
    port,
    endpoint
  } =
  /* istanbul ignore next */
  (cov_r9sl8ujhn().s[22]++, config.sse);
  const protocol =
  /* istanbul ignore next */
  (cov_r9sl8ujhn().s[23]++, port === 443 ?
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[10][0]++, 'https') :
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[10][1]++, 'http'));
  /* istanbul ignore next */
  cov_r9sl8ujhn().s[24]++;
  return `${protocol}://${host}:${port}${endpoint}`;
}
/**
 * Environment variable configuration helpers
 */
/* istanbul ignore next */
cov_r9sl8ujhn().s[25]++;
exports.ENV_CONFIG = {
  // Transport type selection
  TRANSPORT_TYPE: 'N8N_MCP_TRANSPORT',
  // 'stdio' | 'sse'
  // SSE configuration
  SSE_PORT: 'N8N_MCP_SSE_PORT',
  SSE_HOST: 'N8N_MCP_SSE_HOST',
  SSE_ENDPOINT: 'N8N_MCP_SSE_ENDPOINT',
  // CORS configuration
  CORS_ORIGINS: 'N8N_MCP_CORS_ORIGINS',
  // comma-separated list
  CORS_CREDENTIALS: 'N8N_MCP_CORS_CREDENTIALS',
  // 'true' | 'false'
  // Health check configuration
  HEALTH_CHECK_ENABLED: 'N8N_MCP_HEALTH_CHECK_ENABLED',
  HEALTH_CHECK_ENDPOINT: 'N8N_MCP_HEALTH_CHECK_ENDPOINT'
};
/**
 * Parse transport configuration from environment variables
 */
function parseConfigFromEnv() {
  /* istanbul ignore next */
  cov_r9sl8ujhn().f[3]++;
  const config =
  /* istanbul ignore next */
  (cov_r9sl8ujhn().s[26]++, {});
  // Transport type
  /* istanbul ignore next */
  cov_r9sl8ujhn().s[27]++;
  if (process.env[exports.ENV_CONFIG.TRANSPORT_TYPE]) {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[11][0]++;
    cov_r9sl8ujhn().s[28]++;
    config.type = process.env[exports.ENV_CONFIG.TRANSPORT_TYPE];
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[11][1]++;
  }
  // SSE configuration - create if any SSE-related environment variables are set
  const hasAnySSEConfig =
  /* istanbul ignore next */
  (cov_r9sl8ujhn().s[29]++,
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][0]++, exports.ENV_CONFIG.SSE_PORT in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][1]++, exports.ENV_CONFIG.SSE_HOST in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][2]++, exports.ENV_CONFIG.SSE_ENDPOINT in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][3]++, exports.ENV_CONFIG.CORS_ORIGINS in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][4]++, exports.ENV_CONFIG.CORS_CREDENTIALS in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][5]++, exports.ENV_CONFIG.HEALTH_CHECK_ENABLED in process.env) ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[12][6]++, exports.ENV_CONFIG.HEALTH_CHECK_ENDPOINT in process.env));
  /* istanbul ignore next */
  cov_r9sl8ujhn().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[14][0]++, config.type === 'sse') ||
  /* istanbul ignore next */
  (cov_r9sl8ujhn().b[14][1]++, hasAnySSEConfig)) {
    /* istanbul ignore next */
    cov_r9sl8ujhn().b[13][0]++;
    const ssePortEnv =
    /* istanbul ignore next */
    (cov_r9sl8ujhn().s[31]++, process.env[exports.ENV_CONFIG.SSE_PORT]);
    /* istanbul ignore next */
    cov_r9sl8ujhn().s[32]++;
    config.sse = {
      port: ssePortEnv ?
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[15][0]++, parseInt(ssePortEnv)) :
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[15][1]++, 8080),
      host:
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[16][0]++, process.env[exports.ENV_CONFIG.SSE_HOST]) ||
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[16][1]++, 'localhost'),
      endpoint:
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[17][0]++, process.env[exports.ENV_CONFIG.SSE_ENDPOINT]) ||
      /* istanbul ignore next */
      (cov_r9sl8ujhn().b[17][1]++, '/sse'),
      cors: {
        enabled: process.env[exports.ENV_CONFIG.CORS_ORIGINS] !== undefined,
        origins:
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[18][0]++, process.env[exports.ENV_CONFIG.CORS_ORIGINS]?.split(',')) ??
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[18][1]++, ['*']),
        credentials: process.env[exports.ENV_CONFIG.CORS_CREDENTIALS] === 'true'
      },
      healthCheck: {
        enabled: process.env[exports.ENV_CONFIG.HEALTH_CHECK_ENABLED] !== 'false',
        endpoint:
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[19][0]++, process.env[exports.ENV_CONFIG.HEALTH_CHECK_ENDPOINT]) ||
        /* istanbul ignore next */
        (cov_r9sl8ujhn().b[19][1]++, '/health')
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_r9sl8ujhn().b[13][1]++;
  }
  cov_r9sl8ujhn().s[33]++;
  return config;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,