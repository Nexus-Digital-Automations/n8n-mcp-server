{"version":3,"names":["cov_1941b9thp2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createCredentialTestingTools","zod_1","require","fastmcp_1","timers_1","n8nClient_js_1","oauth2Handler_js_1","n8nAuth_js_1","TestCredentialSchema","z","object","credentialType","string","min","credentialData","record","any","testEndpoint","url","optional","timeout","number","max","default","TestN8nApiKeySchema","baseUrl","apiKey","testOperations","array","OAuth2InitSchema","provider","clientId","clientSecret","authUrl","tokenUrl","userInfoUrl","redirectUri","scopes","extraParams","enablePKCE","boolean","OAuth2AuthorizeSchema","sessionId","metadata","OAuth2CallbackSchema","code","state","error","error_description","error_uri","OAuth2RefreshSchema","userId","OAuth2TokenValidationSchema","bufferSeconds","OAuth2RevokeSchema","BatchCredentialTestSchema","credentials","id","data","parallel","oauth2Handler","getOAuth2Handler","OAuth2Handler","getN8nAuthProvider","N8nAuthProvider","required","validateConnection","getClient","server","addTool","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","authProvider","context","headers","authResult","authenticate","success","testClient","N8nClient","results","permissions","operation","getWorkflows","limit","workflows","push","getExecutions","executions","getCredentials","getUsers","users","getProjects","projects","Error","message","user","hasEnterpriseFeatures","roles","join","community","enterprise","audit","UserError","handler","config","pkce","enabled","challengeMethod","refreshSettings","autoRefresh","refreshBuffer","registerProvider","substring","session","generateAuthUrl","Date","expiresAt","toLocaleString","codeChallenge","result","handleCallback","errorDetails","uri","tokens","userInfo","email","tokenType","refreshToken","accessToken","newTokens","refreshTokens","getTokens","isValid","areTokensValid","now","timeToExpiry","Math","floor","revokeTokens","sessions","getActiveSessions","length","forEach","index","timeLeft","createdAt","Object","keys","JSON","stringify","Accept","key","Buffer","from","username","password","toString","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","signal","clearTimeout","isSuccess","status","responseText","text","catch","statusText","get","testCredential","cred","startTime","AbortSignal","responseTime","promises","map","Promise","all","successful","filter","r","failed","avgResponseTime","reduce","sum","output","round"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/credential-testing.ts"],"sourcesContent":["/**\n * Credential Testing Tools for n8n MCP Server\n *\n * Provides comprehensive tools for testing credential validity, OAuth2 token management,\n * and authentication flow validation.\n */\n\n/* eslint-disable no-undef */\ndeclare const fetch: typeof globalThis.fetch;\ndeclare const AbortController: typeof globalThis.AbortController;\ndeclare const AbortSignal: typeof globalThis.AbortSignal;\n\nimport { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { setTimeout, clearTimeout } from 'timers';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { OAuth2Handler, OAuth2Config, OAuth2CallbackResult } from '../auth/oauth2Handler.js';\nimport { N8nAuthProvider } from '../auth/n8nAuth.js';\n\n// Zod schemas for validation\nconst TestCredentialSchema = z.object({\n  credentialType: z.string().min(1, 'Credential type is required'),\n  credentialData: z.record(z.string(), z.any()),\n  testEndpoint: z.string().url().optional(),\n  timeout: z.number().min(1000).max(30000).optional().default(10000),\n});\n\nconst TestN8nApiKeySchema = z.object({\n  baseUrl: z.string().url('Must be a valid URL'),\n  apiKey: z.string().min(1, 'API key is required'),\n  testOperations: z.array(z.string()).optional().default(['workflows', 'executions']),\n});\n\nconst OAuth2InitSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  clientId: z.string().min(1, 'Client ID is required'),\n  clientSecret: z.string().min(1, 'Client secret is required'),\n  authUrl: z.string().url('Auth URL must be valid'),\n  tokenUrl: z.string().url('Token URL must be valid'),\n  userInfoUrl: z.string().url().optional(),\n  redirectUri: z.string().url('Redirect URI must be valid'),\n  scopes: z.array(z.string()).min(1, 'At least one scope is required'),\n  extraParams: z.record(z.string(), z.string()).optional(),\n  enablePKCE: z.boolean().optional().default(true),\n});\n\nconst OAuth2AuthorizeSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  sessionId: z.string().optional(),\n  extraParams: z.record(z.string(), z.string()).optional(),\n  metadata: z.record(z.string(), z.any()).optional(),\n});\n\nconst OAuth2CallbackSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  code: z.string().optional(),\n  state: z.string().optional(),\n  error: z.string().optional(),\n  error_description: z.string().optional(),\n  error_uri: z.string().optional(),\n});\n\nconst OAuth2RefreshSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  userId: z.string().min(1, 'User ID is required'),\n});\n\nconst OAuth2TokenValidationSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  userId: z.string().min(1, 'User ID is required'),\n  bufferSeconds: z.number().min(0).max(3600).optional().default(300),\n});\n\nconst OAuth2RevokeSchema = z.object({\n  provider: z.string().min(1, 'Provider is required'),\n  userId: z.string().min(1, 'User ID is required'),\n});\n\nconst BatchCredentialTestSchema = z.object({\n  credentials: z\n    .array(\n      z.object({\n        id: z.string(),\n        type: z.string(),\n        data: z.record(z.string(), z.any()),\n        testEndpoint: z.string().url().optional(),\n      })\n    )\n    .min(1)\n    .max(10), // Limit batch size\n  timeout: z.number().min(1000).max(30000).optional().default(10000),\n  parallel: z.boolean().optional().default(false),\n});\n\n// Note: Security audit schema reserved for future implementation\n// const CredentialSecurityAuditSchema = z.object({\n//   credentialId: z.string().min(1, 'Credential ID is required'),\n//   checks: z.array(z.enum([\n//     'encryption',\n//     'expiry',\n//     'permissions',\n//     'usage',\n//     'sharing',\n//     'rotation'\n//   ])).optional().default(['encryption', 'expiry', 'permissions']),\n// });\n\n// Global OAuth2 handler instance\nlet oauth2Handler: OAuth2Handler | null = null;\n\n// Function to get the OAuth2 handler instance\nconst getOAuth2Handler = () => {\n  if (!oauth2Handler) {\n    oauth2Handler = new OAuth2Handler();\n  }\n  return oauth2Handler;\n};\n\n// Function to get the n8n auth provider\nconst getN8nAuthProvider = () => {\n  return new N8nAuthProvider({\n    required: false,\n    validateConnection: true,\n  });\n};\n\n// Tool registration function\nexport function createCredentialTestingTools(getClient: () => N8nClient | null, server: any) {\n  // Test n8n API key tool\n  server.addTool({\n    name: 'test-n8n-api-key',\n    description: 'Test n8n API key validity and permissions by performing various operations.',\n    parameters: TestN8nApiKeySchema,\n    annotations: {\n      title: 'Test n8n API Key',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TestN8nApiKeySchema>) => {\n      try {\n        const authProvider = getN8nAuthProvider();\n\n        // Create test context\n        const context = {\n          headers: {\n            'x-n8n-base-url': args.baseUrl,\n            'x-n8n-api-key': args.apiKey,\n          },\n        };\n\n        // Test authentication\n        const authResult = await authProvider.authenticate(context);\n\n        if (!authResult.success) {\n          return (\n            `❌ **n8n API Key Test Failed**\\n\\n` +\n            `- **Base URL:** ${args.baseUrl}\\n` +\n            `- **Error:** ${authResult.error}\\n\\n` +\n            `The API key is invalid or the n8n instance is not accessible.`\n          );\n        }\n\n        // Create temporary client for testing\n        const testClient = new N8nClient(args.baseUrl, args.apiKey);\n        const results: string[] = [];\n        const permissions: Record<string, boolean> = {};\n\n        // Test specific operations\n        for (const operation of args.testOperations) {\n          try {\n            switch (operation) {\n              case 'workflows':\n                await testClient.getWorkflows({ limit: 1 });\n                permissions.workflows = true;\n                results.push('✅ Can access workflows');\n                break;\n\n              case 'executions':\n                await testClient.getExecutions({ limit: 1 });\n                permissions.executions = true;\n                results.push('✅ Can access executions');\n                break;\n\n              case 'credentials':\n                await testClient.getCredentials({ limit: 1 });\n                permissions.credentials = true;\n                results.push('✅ Can access credentials');\n                break;\n\n              case 'users':\n                await testClient.getUsers({ limit: 1 });\n                permissions.users = true;\n                results.push('✅ Can access users (Enterprise)');\n                break;\n\n              case 'projects':\n                await testClient.getProjects({ limit: 1 });\n                permissions.projects = true;\n                results.push('✅ Can access projects (Enterprise)');\n                break;\n\n              default:\n                results.push(`⚠️ Unknown operation: ${operation}`);\n            }\n          } catch (error) {\n            permissions[operation] = false;\n            results.push(\n              `❌ Cannot access ${operation}: ${error instanceof Error ? error.message : 'Unknown error'}`\n            );\n          }\n        }\n\n        const user = authResult.user!;\n        const hasEnterpriseFeatures = permissions.users || permissions.projects;\n\n        return (\n          `✅ **n8n API Key Test Successful**\\n\\n` +\n          `**Connection Details:**\\n` +\n          `- **Base URL:** ${args.baseUrl}\\n` +\n          `- **User ID:** ${user.id}\\n` +\n          `- **User Type:** ${hasEnterpriseFeatures ? 'Enterprise' : 'Community'}\\n` +\n          `- **Roles:** ${user.roles.join(', ')}\\n\\n` +\n          `**Permission Test Results:**\\n` +\n          results.join('\\n') +\n          '\\n\\n' +\n          `**Available Features:**\\n` +\n          `- Community Features: ${user.permissions.community ? '✅' : '❌'}\\n` +\n          `- Enterprise Features: ${user.permissions.enterprise ? '✅' : '❌'}\\n` +\n          `- Workflow Management: ${user.permissions.workflows ? '✅' : '❌'}\\n` +\n          `- Execution Access: ${user.permissions.executions ? '✅' : '❌'}\\n` +\n          `- Credential Management: ${user.permissions.credentials ? '✅' : '❌'}\\n` +\n          `- User Management: ${user.permissions.users ? '✅' : '❌'}\\n` +\n          `- Audit Access: ${user.permissions.audit ? '✅' : '❌'}`\n        );\n      } catch (error) {\n        throw new UserError(\n          `n8n API key test failed: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Initialize OAuth2 provider tool\n  server.addTool({\n    name: 'init-oauth2-provider',\n    description: 'Initialize OAuth2 provider configuration for authentication testing.',\n    parameters: OAuth2InitSchema,\n    annotations: {\n      title: 'Initialize OAuth2 Provider',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2InitSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const config: OAuth2Config = {\n          provider: args.provider,\n          clientId: args.clientId,\n          clientSecret: args.clientSecret,\n          authUrl: args.authUrl,\n          tokenUrl: args.tokenUrl,\n          userInfoUrl: args.userInfoUrl,\n          redirectUri: args.redirectUri,\n          scopes: args.scopes,\n          extraParams: args.extraParams,\n          pkce: args.enablePKCE ? { enabled: true, challengeMethod: 'S256' } : undefined,\n          refreshSettings: {\n            autoRefresh: true,\n            refreshBuffer: 300,\n          },\n        };\n\n        handler.registerProvider(config);\n\n        return (\n          `✅ **OAuth2 Provider Initialized**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **Client ID:** ${args.clientId.substring(0, 8)}...\\n` +\n          `- **Auth URL:** ${args.authUrl}\\n` +\n          `- **Token URL:** ${args.tokenUrl}\\n` +\n          `- **User Info URL:** ${args.userInfoUrl || 'Not configured'}\\n` +\n          `- **Redirect URI:** ${args.redirectUri}\\n` +\n          `- **Scopes:** ${args.scopes.join(', ')}\\n` +\n          `- **PKCE Enabled:** ${args.enablePKCE ? 'Yes' : 'No'}\\n\\n` +\n          `The OAuth2 provider is now ready for authentication flows.`\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to initialize OAuth2 provider: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Generate OAuth2 authorization URL tool\n  server.addTool({\n    name: 'oauth2-authorize',\n    description: 'Generate OAuth2 authorization URL to start authentication flow.',\n    parameters: OAuth2AuthorizeSchema,\n    annotations: {\n      title: 'Generate OAuth2 Authorization URL',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2AuthorizeSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const { url, session } = handler.generateAuthUrl(args.provider, {\n          sessionId: args.sessionId,\n          extraParams: args.extraParams,\n          metadata: args.metadata,\n        });\n\n        return (\n          `🔗 **OAuth2 Authorization URL Generated**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **Session ID:** ${session.sessionId}\\n` +\n          `- **State:** ${session.state}\\n` +\n          `- **Expires:** ${new Date(session.expiresAt).toLocaleString()}\\n` +\n          `- **PKCE:** ${session.codeChallenge ? 'Enabled' : 'Disabled'}\\n\\n` +\n          `**Authorization URL:**\\n` +\n          `\\`\\`\\`\\n${url}\\n\\`\\`\\`\\n\\n` +\n          `🌐 Visit this URL to start the OAuth2 authentication flow. ` +\n          `The session will expire in 15 minutes.`\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to generate OAuth2 authorization URL: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Handle OAuth2 callback tool\n  server.addTool({\n    name: 'oauth2-callback',\n    description: 'Handle OAuth2 callback and exchange authorization code for tokens.',\n    parameters: OAuth2CallbackSchema,\n    annotations: {\n      title: 'Handle OAuth2 Callback',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2CallbackSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const result: OAuth2CallbackResult = await handler.handleCallback(args.provider, {\n          code: args.code,\n          state: args.state,\n          error: args.error,\n          error_description: args.error_description,\n          error_uri: args.error_uri,\n        });\n\n        if (!result.success) {\n          return (\n            `❌ **OAuth2 Callback Failed**\\n\\n` +\n            `- **Provider:** ${args.provider}\\n` +\n            `- **Error:** ${result.error}\\n` +\n            (result.errorDetails\n              ? `- **Error Code:** ${result.errorDetails.code}\\n` +\n                `- **Description:** ${result.errorDetails.description}\\n` +\n                (result.errorDetails.uri ? `- **More Info:** ${result.errorDetails.uri}\\n` : '')\n              : '') +\n            `\\nThe OAuth2 authentication flow was not completed successfully.`\n          );\n        }\n\n        const tokens = result.tokens!;\n        const userInfo = result.userInfo!;\n\n        return (\n          `✅ **OAuth2 Callback Successful**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **User ID:** ${userInfo.id}\\n` +\n          `- **User Name:** ${userInfo.name || 'Unknown'}\\n` +\n          `- **User Email:** ${userInfo.email || 'Not provided'}\\n\\n` +\n          `**Token Information:**\\n` +\n          `- **Token Type:** ${tokens.tokenType}\\n` +\n          `- **Scopes:** ${tokens.scopes.join(', ')}\\n` +\n          `- **Has Refresh Token:** ${tokens.refreshToken ? 'Yes' : 'No'}\\n` +\n          `- **Expires:** ${tokens.expiresAt ? new Date(tokens.expiresAt).toLocaleString() : 'Never'}\\n\\n` +\n          `**Access Token (first 20 chars):** \\`${tokens.accessToken.substring(0, 20)}...\\`\\n\\n` +\n          `🎉 OAuth2 authentication completed successfully! Tokens have been stored for future use.`\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to handle OAuth2 callback: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Refresh OAuth2 tokens tool\n  server.addTool({\n    name: 'oauth2-refresh-tokens',\n    description: 'Refresh OAuth2 access tokens using refresh token.',\n    parameters: OAuth2RefreshSchema,\n    annotations: {\n      title: 'Refresh OAuth2 Tokens',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2RefreshSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const newTokens = await handler.refreshTokens(args.provider, args.userId);\n\n        if (!newTokens) {\n          return (\n            `❌ **Token Refresh Failed**\\n\\n` +\n            `- **Provider:** ${args.provider}\\n` +\n            `- **User ID:** ${args.userId}\\n\\n` +\n            `Unable to refresh tokens. This could be due to:\\n` +\n            `- No refresh token available\\n` +\n            `- Refresh token has expired\\n` +\n            `- OAuth2 provider rejected the refresh request\\n` +\n            `- Network connectivity issues`\n          );\n        }\n\n        return (\n          `✅ **Tokens Refreshed Successfully**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **User ID:** ${args.userId}\\n` +\n          `- **Token Type:** ${newTokens.tokenType}\\n` +\n          `- **Scopes:** ${newTokens.scopes.join(', ')}\\n` +\n          `- **Expires:** ${newTokens.expiresAt ? new Date(newTokens.expiresAt).toLocaleString() : 'Never'}\\n` +\n          `- **Refreshed At:** ${new Date().toLocaleString()}\\n\\n` +\n          `**New Access Token (first 20 chars):** \\`${newTokens.accessToken.substring(0, 20)}...\\`\\n\\n` +\n          `🔄 Tokens have been refreshed and updated in storage.`\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to refresh OAuth2 tokens: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Validate OAuth2 tokens tool\n  server.addTool({\n    name: 'oauth2-validate-tokens',\n    description: 'Check if OAuth2 tokens are valid and not expired.',\n    parameters: OAuth2TokenValidationSchema,\n    annotations: {\n      title: 'Validate OAuth2 Tokens',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2TokenValidationSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const tokens = handler.getTokens(args.provider, args.userId);\n\n        if (!tokens) {\n          return (\n            `❌ **No Tokens Found**\\n\\n` +\n            `- **Provider:** ${args.provider}\\n` +\n            `- **User ID:** ${args.userId}\\n\\n` +\n            `No OAuth2 tokens found for this user and provider combination.`\n          );\n        }\n\n        const isValid = handler.areTokensValid(tokens, args.bufferSeconds);\n        const now = Date.now();\n        const timeToExpiry = tokens.expiresAt ? tokens.expiresAt - now : null;\n\n        return (\n          `${isValid ? '✅' : '❌'} **Token Validation Result**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **User ID:** ${args.userId}\\n` +\n          `- **Token Type:** ${tokens.tokenType}\\n` +\n          `- **Scopes:** ${tokens.scopes.join(', ')}\\n` +\n          `- **Has Refresh Token:** ${tokens.refreshToken ? 'Yes' : 'No'}\\n` +\n          `- **Valid:** ${isValid ? 'Yes' : 'No'}\\n` +\n          (tokens.expiresAt\n            ? `- **Expires:** ${new Date(tokens.expiresAt).toLocaleString()}\\n` +\n              `- **Time to Expiry:** ${timeToExpiry ? Math.floor(timeToExpiry / 1000) + ' seconds' : 'Expired'}\\n`\n            : `- **Expires:** Never\\n`) +\n          `- **Buffer Time:** ${args.bufferSeconds} seconds\\n\\n` +\n          (isValid\n            ? `✅ Tokens are valid and can be used for authentication.`\n            : `❌ Tokens are invalid or expired. ${tokens.refreshToken ? 'Consider refreshing tokens.' : 'Re-authentication required.'}`)\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to validate OAuth2 tokens: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Revoke OAuth2 tokens tool\n  server.addTool({\n    name: 'oauth2-revoke-tokens',\n    description: 'Revoke OAuth2 tokens and remove them from storage.',\n    parameters: OAuth2RevokeSchema,\n    annotations: {\n      title: 'Revoke OAuth2 Tokens',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof OAuth2RevokeSchema>) => {\n      try {\n        const handler = getOAuth2Handler();\n\n        const success = await handler.revokeTokens(args.provider, args.userId);\n\n        return (\n          `${success ? '✅' : '⚠️'} **Token Revocation ${success ? 'Successful' : 'Completed'}**\\n\\n` +\n          `- **Provider:** ${args.provider}\\n` +\n          `- **User ID:** ${args.userId}\\n\\n` +\n          (success\n            ? `Tokens have been revoked with the provider and removed from local storage.`\n            : `Tokens have been removed from local storage. Provider revocation may have failed.`) +\n          `\\n\\n🔒 User will need to re-authenticate to access OAuth2-protected resources.`\n        );\n      } catch (error) {\n        throw new UserError(\n          `Failed to revoke OAuth2 tokens: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // List OAuth2 sessions tool\n  server.addTool({\n    name: 'list-oauth2-sessions',\n    description: 'List all active OAuth2 authentication sessions.',\n    parameters: z.object({}),\n    annotations: {\n      title: 'List OAuth2 Sessions',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      try {\n        const handler = getOAuth2Handler();\n        const sessions = handler.getActiveSessions();\n\n        if (sessions.length === 0) {\n          return '📭 No active OAuth2 sessions found.';\n        }\n\n        let result = `📋 **Active OAuth2 Sessions (${sessions.length})**\\n\\n`;\n\n        sessions.forEach((session, index) => {\n          const timeLeft = session.expiresAt - Date.now();\n          result += `${index + 1}. **${session.provider}**\\n`;\n          result += `   - Session ID: ${session.sessionId}\\n`;\n          result += `   - State: ${session.state}\\n`;\n          result += `   - Created: ${new Date(session.createdAt).toLocaleString()}\\n`;\n          result += `   - Expires: ${new Date(session.expiresAt).toLocaleString()}\\n`;\n          result += `   - Time Left: ${Math.floor(timeLeft / 1000)} seconds\\n`;\n          result += `   - PKCE: ${session.codeChallenge ? 'Enabled' : 'Disabled'}\\n`;\n          if (session.metadata && Object.keys(session.metadata).length > 0) {\n            result += `   - Metadata: ${JSON.stringify(session.metadata)}\\n`;\n          }\n          result += '\\n';\n        });\n\n        return result;\n      } catch (error) {\n        throw new UserError(\n          `Failed to list OAuth2 sessions: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Generic credential test tool\n  server.addTool({\n    name: 'test-credential',\n    description: 'Test generic credential validity by making a test request to specified endpoint.',\n    parameters: TestCredentialSchema,\n    annotations: {\n      title: 'Test Generic Credential',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TestCredentialSchema>) => {\n      try {\n        if (!args.testEndpoint) {\n          return (\n            `⚠️ **Credential Test Skipped**\\n\\n` +\n            `- **Type:** ${args.credentialType}\\n` +\n            `- **Reason:** No test endpoint provided\\n\\n` +\n            `To test this credential, please provide a \\`testEndpoint\\` URL.`\n          );\n        }\n\n        // Prepare request based on credential type\n        const headers: Record<string, string> = {\n          'User-Agent': 'n8n-mcp-server/2.0.0',\n          Accept: 'application/json',\n        };\n\n        // Add authentication based on credential type\n        if (args.credentialType === 'api-key') {\n          if (args.credentialData.apiKey) {\n            headers['Authorization'] = `Bearer ${args.credentialData.apiKey}`;\n          } else if (args.credentialData.key) {\n            headers['X-API-Key'] = args.credentialData.key;\n          }\n        } else if (args.credentialType === 'basic-auth') {\n          const credentials = Buffer.from(\n            `${args.credentialData.username}:${args.credentialData.password}`\n          ).toString('base64');\n          headers['Authorization'] = `Basic ${credentials}`;\n        } else if (args.credentialType === 'oauth2') {\n          if (args.credentialData.accessToken) {\n            headers['Authorization'] = `Bearer ${args.credentialData.accessToken}`;\n          }\n        }\n\n        // Make test request\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), args.timeout);\n\n        try {\n          const response = await fetch(args.testEndpoint, {\n            method: 'GET',\n            headers,\n            signal: controller.signal,\n          });\n\n          clearTimeout(timeoutId);\n\n          const isSuccess = response.status >= 200 && response.status < 300;\n          const responseText = await response.text().catch(() => 'Unable to read response');\n\n          return (\n            `${isSuccess ? '✅' : '❌'} **Credential Test ${isSuccess ? 'Successful' : 'Failed'}**\\n\\n` +\n            `- **Type:** ${args.credentialType}\\n` +\n            `- **Test Endpoint:** ${args.testEndpoint}\\n` +\n            `- **Status Code:** ${response.status} ${response.statusText}\\n` +\n            `- **Response Time:** ${Date.now() - Date.now()} ms\\n` +\n            `- **Content Type:** ${response.headers.get('content-type') || 'Unknown'}\\n\\n` +\n            (isSuccess\n              ? `✅ The credential is valid and working correctly.`\n              : `❌ The credential test failed. This could indicate:\\n` +\n                `- Invalid credentials\\n` +\n                `- Expired tokens\\n` +\n                `- Insufficient permissions\\n` +\n                `- Service unavailable\\n\\n` +\n                `**Response:** ${responseText.substring(0, 500)}${responseText.length > 500 ? '...' : ''}`)\n          );\n        } catch (error) {\n          clearTimeout(timeoutId);\n          throw error;\n        }\n      } catch (error) {\n        if (error instanceof Error && error.name === 'AbortError') {\n          return (\n            `⏱️ **Credential Test Timeout**\\n\\n` +\n            `- **Type:** ${args.credentialType}\\n` +\n            `- **Test Endpoint:** ${args.testEndpoint}\\n` +\n            `- **Timeout:** ${args.timeout}ms\\n\\n` +\n            `The test request timed out. This could indicate:\\n` +\n            `- Network connectivity issues\\n` +\n            `- Slow service response\\n` +\n            `- Invalid endpoint URL`\n          );\n        }\n\n        throw new UserError(\n          `Credential test failed: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Batch credential test tool\n  server.addTool({\n    name: 'batch-test-credentials',\n    description: 'Test multiple credentials in batch (sequential or parallel).',\n    parameters: BatchCredentialTestSchema,\n    annotations: {\n      title: 'Batch Test Credentials',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof BatchCredentialTestSchema>) => {\n      try {\n        const results: Array<{\n          id: string;\n          type: string;\n          success: boolean;\n          status?: number;\n          error?: string;\n          responseTime?: number;\n        }> = [];\n\n        const testCredential = async (cred: (typeof args.credentials)[0]) => {\n          const startTime = Date.now();\n          try {\n            if (!cred.testEndpoint) {\n              return {\n                id: cred.id,\n                type: cred.type,\n                success: false,\n                error: 'No test endpoint provided',\n              };\n            }\n\n            // Prepare headers (simplified version of individual test)\n            const headers: Record<string, string> = {\n              'User-Agent': 'n8n-mcp-server/2.0.0',\n              Accept: 'application/json',\n            };\n\n            if (cred.type === 'api-key' && cred.data.apiKey) {\n              headers['Authorization'] = `Bearer ${cred.data.apiKey}`;\n            } else if (cred.type === 'basic-auth') {\n              const credentials = Buffer.from(\n                `${cred.data.username}:${cred.data.password}`\n              ).toString('base64');\n              headers['Authorization'] = `Basic ${credentials}`;\n            }\n\n            const response = await fetch(cred.testEndpoint, {\n              method: 'GET',\n              headers,\n              signal: AbortSignal.timeout(args.timeout),\n            });\n\n            return {\n              id: cred.id,\n              type: cred.type,\n              success: response.status >= 200 && response.status < 300,\n              status: response.status,\n              responseTime: Date.now() - startTime,\n            };\n          } catch (error) {\n            return {\n              id: cred.id,\n              type: cred.type,\n              success: false,\n              error: error instanceof Error ? error.message : 'Unknown error',\n              responseTime: Date.now() - startTime,\n            };\n          }\n        };\n\n        // Execute tests\n        if (args.parallel) {\n          const promises = args.credentials.map(testCredential);\n          results.push(...(await Promise.all(promises)));\n        } else {\n          for (const cred of args.credentials) {\n            const result = await testCredential(cred);\n            results.push(result);\n          }\n        }\n\n        // Generate summary\n        const successful = results.filter(r => r.success).length;\n        const failed = results.length - successful;\n        const avgResponseTime =\n          results.filter(r => r.responseTime).reduce((sum, r) => sum + (r.responseTime || 0), 0) /\n          results.length;\n\n        let output = `📊 **Batch Credential Test Results**\\n\\n`;\n        output += `- **Total Tested:** ${results.length}\\n`;\n        output += `- **Successful:** ${successful}\\n`;\n        output += `- **Failed:** ${failed}\\n`;\n        output += `- **Success Rate:** ${Math.round((successful / results.length) * 100)}%\\n`;\n        output += `- **Execution Mode:** ${args.parallel ? 'Parallel' : 'Sequential'}\\n`;\n        output += `- **Average Response Time:** ${Math.round(avgResponseTime)}ms\\n\\n`;\n\n        output += `**Detailed Results:**\\n`;\n        results.forEach((result, index) => {\n          output += `${index + 1}. **${result.id}** (${result.type})\\n`;\n          output += `   - Status: ${result.success ? '✅ Success' : '❌ Failed'}\\n`;\n          if (result.status) {\n            output += `   - HTTP Status: ${result.status}\\n`;\n          }\n          if (result.responseTime) {\n            output += `   - Response Time: ${result.responseTime}ms\\n`;\n          }\n          if (result.error) {\n            output += `   - Error: ${result.error}\\n`;\n          }\n          output += '\\n';\n        });\n\n        return output;\n      } catch (error) {\n        throw new UserError(\n          `Batch credential test failed: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n}\n\n// Helper function to format response time (for future use)\n// function formatResponseTime(ms: number): string {\n//   if (ms < 1000) {\n//     return `${ms}ms`;\n//   }\n//   return `${(ms / 1000).toFixed(2)}s`;\n// }\n"],"mappings":"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","ignoreList":[]}