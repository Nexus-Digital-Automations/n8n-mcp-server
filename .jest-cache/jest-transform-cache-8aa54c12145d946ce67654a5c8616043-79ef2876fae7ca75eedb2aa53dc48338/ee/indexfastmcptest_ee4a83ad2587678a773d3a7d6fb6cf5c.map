{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/index-fastmcp.test.ts","mappings":"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","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/index-fastmcp.test.ts"],"sourcesContent":["import { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\nimport { FastMCP } from 'fastmcp';\nimport { z } from 'zod';\n\n// Mock all dependencies\njest.mock('fastmcp');\njest.mock('zod', () => ({\n  z: {\n    object: jest.fn(() => ({ min: jest.fn() })),\n    string: () => ({ min: jest.fn(() => 'mocked') }),\n    number: () => ({ optional: jest.fn(() => 'mocked') }),\n    boolean: () => ({ optional: jest.fn(() => 'mocked') }),\n    array: () => ({ optional: jest.fn(() => 'mocked') }),\n    enum: () => ({ optional: jest.fn(() => 'mocked') }),\n  },\n}));\njest.mock('../../src/client/n8nClient', () => ({\n  N8nClient: jest.fn(),\n}));\njest.mock('../../src/tools/workflow', () => ({\n  createWorkflowTools: jest.fn(),\n}));\njest.mock('../../src/tools/projects', () => ({\n  createProjectTools: jest.fn(),\n}));\njest.mock('../../src/tools/users', () => ({\n  createUserTools: jest.fn(),\n}));\njest.mock('../../src/tools/variables', () => ({\n  createVariableTools: jest.fn(),\n}));\njest.mock('../../src/tools/executions', () => ({\n  createExecutionTools: jest.fn(),\n}));\njest.mock('../../src/tools/tags', () => ({\n  createTagTools: jest.fn(),\n}));\njest.mock('../../src/tools/credentials', () => ({\n  createCredentialTools: jest.fn(),\n}));\njest.mock('../../src/tools/audit', () => ({\n  createAuditTools: jest.fn(),\n}));\njest.mock('../../src/transport/transportConfig', () => ({\n  detectTransportConfig: jest.fn(),\n  validateTransportConfig: jest.fn(),\n  getServerUrl: jest.fn(),\n}));\njest.mock('../../src/transport/sseTransport', () => ({\n  createSSETransport: jest.fn(),\n  SSEUtils: {\n    validateConfig: jest.fn(),\n  },\n}));\n\ndescribe('src/index-fastmcp.ts - FastMCP Server Entry Point', () => {\n  let mockFastMCP: jest.Mocked<FastMCP>;\n  let mockN8nClient: any;\n  let mockConsoleLog: any;\n  let mockConsoleError: any;\n  let originalProcessExit: typeof process.exit;\n  let originalProcessOn: typeof process.on;\n\n  // Mock tool creation functions\n  const mockCreateWorkflowTools = jest.fn();\n  const mockCreateProjectTools = jest.fn();\n  const mockCreateUserTools = jest.fn();\n  const mockCreateVariableTools = jest.fn();\n  const mockCreateExecutionTools = jest.fn();\n  const mockCreateTagTools = jest.fn();\n  const mockCreateCredentialTools = jest.fn();\n  const mockCreateAuditTools = jest.fn();\n\n  // Mock transport functions\n  const mockDetectTransportConfig = jest.fn();\n  const mockValidateTransportConfig = jest.fn();\n  const mockGetServerUrl = jest.fn();\n  const mockCreateSSETransport = jest.fn();\n  const mockSSEUtils = {\n    validateConfig: jest.fn(),\n  };\n\n  beforeEach(() => {\n    // Mock console methods\n    mockConsoleLog = jest.spyOn(console, 'log').mockImplementation(() => {});\n    mockConsoleError = jest.spyOn(console, 'error').mockImplementation(() => {});\n\n    // Mock process methods\n    originalProcessExit = process.exit;\n    originalProcessOn = process.on;\n    process.exit = jest.fn() as any;\n    process.on = jest.fn() as any;\n\n    // Mock FastMCP instance\n    mockFastMCP = {\n      addTool: jest.fn().mockReturnThis(),\n      start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined),\n      on: jest.fn().mockReturnThis(),\n    } as any;\n    (FastMCP as jest.MockedClass<typeof FastMCP>).mockImplementation(() => mockFastMCP);\n\n    // Mock N8nClient\n    mockN8nClient = {\n      getWorkflows: jest.fn<() => Promise<{ data: any[] }>>().mockResolvedValue({ data: [] }),\n    };\n\n    // Reset mock implementations for each test\n    mockCreateWorkflowTools.mockClear();\n    mockCreateProjectTools.mockClear();\n    mockCreateUserTools.mockClear();\n    mockCreateVariableTools.mockClear();\n    mockCreateExecutionTools.mockClear();\n    mockCreateTagTools.mockClear();\n    mockCreateCredentialTools.mockClear();\n    mockCreateAuditTools.mockClear();\n\n    // Set default mock behaviors\n    mockDetectTransportConfig.mockReturnValue({ type: 'stdio' });\n    mockValidateTransportConfig.mockReturnValue({ type: 'stdio' });\n    mockGetServerUrl.mockReturnValue(null);\n    mockCreateSSETransport.mockReturnValue({ start: jest.fn(), stop: jest.fn() });\n    mockSSEUtils.validateConfig.mockReturnValue(true);\n\n    // Clear all mocks\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    // Restore original functions\n    process.exit = originalProcessExit;\n    process.on = originalProcessOn;\n    mockConsoleLog.mockRestore();\n    mockConsoleError.mockRestore();\n  });\n\n  describe('FastMCP Server Initialization', () => {\n    it('should create FastMCP instance with correct configuration', async () => {\n      await import('../../src/index-fastmcp');\n\n      expect(FastMCP).toHaveBeenCalledWith({\n        name: 'n8n-mcp-server',\n        version: '2.0.0',\n        instructions: expect.stringContaining(\n          'This server provides comprehensive access to n8n workflows'\n        ),\n      });\n    });\n\n    it('should include comprehensive instructions in FastMCP config', async () => {\n      await import('../../src/index-fastmcp');\n\n      const config = (FastMCP as jest.MockedClass<typeof FastMCP>).mock.calls[0][0];\n      expect(config.instructions).toContain('Key Features:');\n      expect(config.instructions).toContain('Complete workflow management');\n      expect(config.instructions).toContain('User and project management');\n      expect(config.instructions).toContain('Execution monitoring');\n      expect(config.instructions).toContain('Getting Started:');\n      expect(config.instructions).toContain('init-n8n');\n    });\n  });\n\n  describe('Tool Registration', () => {\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n    });\n\n    it('should register all tool categories', () => {\n      expect(mockCreateWorkflowTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateProjectTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateUserTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateVariableTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateExecutionTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateTagTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateCredentialTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      expect(mockCreateAuditTools).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n    });\n\n    it('should register tools with the same server instance', () => {\n      const serverInstances = [\n        mockCreateWorkflowTools.mock.calls[0][1],\n        mockCreateProjectTools.mock.calls[0][1],\n        mockCreateUserTools.mock.calls[0][1],\n        mockCreateVariableTools.mock.calls[0][1],\n        mockCreateExecutionTools.mock.calls[0][1],\n        mockCreateTagTools.mock.calls[0][1],\n        mockCreateCredentialTools.mock.calls[0][1],\n        mockCreateAuditTools.mock.calls[0][1],\n      ];\n\n      // All should reference the same server instance\n      serverInstances.forEach(instance => {\n        expect(instance).toBe(mockFastMCP);\n      });\n    });\n\n    it('should pass client getter function to all tool creators', () => {\n      const clientGetters = [\n        mockCreateWorkflowTools.mock.calls[0][0],\n        mockCreateProjectTools.mock.calls[0][0],\n        mockCreateUserTools.mock.calls[0][0],\n        mockCreateVariableTools.mock.calls[0][0],\n        mockCreateExecutionTools.mock.calls[0][0],\n        mockCreateTagTools.mock.calls[0][0],\n        mockCreateCredentialTools.mock.calls[0][0],\n        mockCreateAuditTools.mock.calls[0][0],\n      ];\n\n      // All should be functions\n      clientGetters.forEach(getter => {\n        expect(typeof getter).toBe('function');\n      });\n\n      // All should return null initially (no client set)\n      clientGetters.forEach(getter => {\n        expect((getter as () => any)()).toBeNull();\n      });\n    });\n  });\n\n  describe('Custom Tools Registration', () => {\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n    });\n\n    it('should register init-n8n tool', () => {\n      const initToolCalls = mockFastMCP.addTool.mock.calls.filter(\n        call => call[0].name === 'init-n8n'\n      );\n\n      expect(initToolCalls).toHaveLength(1);\n\n      const initTool = initToolCalls[0][0];\n      expect(initTool).toHaveProperty('name', 'init-n8n');\n      expect(initTool).toHaveProperty('description');\n      expect(initTool).toHaveProperty('parameters');\n      expect(initTool).toHaveProperty('execute');\n      expect(initTool).toHaveProperty('annotations');\n    });\n\n    it('should register status tool', () => {\n      const statusToolCalls = mockFastMCP.addTool.mock.calls.filter(\n        call => call[0].name === 'status'\n      );\n\n      expect(statusToolCalls).toHaveLength(1);\n\n      const statusTool = statusToolCalls[0][0];\n      expect(statusTool).toHaveProperty('name', 'status');\n      expect(statusTool).toHaveProperty('description');\n      expect(statusTool).toHaveProperty('parameters');\n      expect(statusTool).toHaveProperty('execute');\n      expect(statusTool).toHaveProperty('annotations');\n    });\n\n    it('should configure init-n8n tool with proper schema validation', () => {\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      expect(initTool).toBeDefined();\n      if (initTool) {\n        expect(initTool.annotations).toEqual({\n          title: 'Initialize n8n Connection',\n          readOnlyHint: false,\n          destructiveHint: false,\n          idempotentHint: true,\n          openWorldHint: true,\n        });\n      }\n    });\n\n    it('should configure status tool with proper annotations', () => {\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'status'\n      )?.[0];\n\n      expect(statusTool).toBeDefined();\n      if (statusTool) {\n        expect(statusTool.annotations).toEqual({\n          title: 'Check n8n Connection Status',\n          readOnlyHint: true,\n          destructiveHint: false,\n          idempotentHint: true,\n          openWorldHint: true,\n        });\n      }\n    });\n  });\n\n  describe('init-n8n Tool Execution', () => {\n    let initToolExecute: Function;\n\n    beforeEach(async () => {\n      // Mock N8nClient constructor\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      await import('../../src/index-fastmcp');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n      if (initTool) {\n        initToolExecute = initTool.execute;\n      }\n    });\n\n    it('should successfully initialize n8n connection', async () => {\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      const result = await initToolExecute(args);\n\n      expect(result).toBe('✅ Successfully connected to n8n instance at http://localhost:5678');\n      expect(mockN8nClient.getWorkflows).toHaveBeenCalledWith({ limit: 1 });\n    });\n\n    it('should handle connection errors gracefully', async () => {\n      mockN8nClient.getWorkflows.mockRejectedValueOnce(new Error('Connection failed'));\n\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      await expect(initToolExecute(args)).rejects.toThrow(\n        'Failed to connect to n8n: Connection failed'\n      );\n    });\n\n    it('should handle unknown connection errors', async () => {\n      mockN8nClient.getWorkflows.mockRejectedValueOnce('Unknown error');\n\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      await expect(initToolExecute(args)).rejects.toThrow(\n        'Failed to connect to n8n with unknown error'\n      );\n    });\n\n    it('should set global client instance on successful connection', async () => {\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      await initToolExecute(args);\n\n      // Test that client getter now returns the client\n      const clientGetter = mockCreateWorkflowTools.mock.calls[0][0] as () => any;\n      expect(clientGetter()).toBe(mockN8nClient);\n    });\n  });\n\n  describe('status Tool Execution', () => {\n    let statusToolExecute: Function;\n\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'status'\n      )?.[0];\n      if (statusTool) {\n        statusToolExecute = statusTool.execute;\n      }\n    });\n\n    it('should return not connected message when no client is set', async () => {\n      const result = await statusToolExecute();\n\n      expect(result).toBe(\"❌ Not connected to n8n. Please run 'init-n8n' first.\");\n    });\n\n    it('should return connected status when client is working', async () => {\n      // First initialize a client\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      if (initTool) {\n        await initTool.execute({\n          baseUrl: 'http://localhost:5678',\n          apiKey: 'test-api-key',\n        });\n      }\n\n      // Now check status\n      const result = await statusToolExecute();\n\n      expect(result).toBe('✅ Connected to n8n and ready to use.');\n      expect(mockN8nClient.getWorkflows).toHaveBeenCalledWith({ limit: 1 });\n    });\n\n    it('should return connection error when client fails', async () => {\n      // Initialize a client first\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      if (initTool) {\n        await initTool.execute({\n          baseUrl: 'http://localhost:5678',\n          apiKey: 'test-api-key',\n        });\n      }\n\n      // Make subsequent calls fail\n      mockN8nClient.getWorkflows.mockRejectedValueOnce(new Error('API Error'));\n\n      const result = await statusToolExecute();\n\n      expect(result).toBe('⚠️ Connected but unable to communicate with n8n: API Error');\n    });\n\n    it('should handle non-Error exceptions in status check', async () => {\n      // Initialize a client first\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      if (initTool) {\n        await initTool.execute({\n          baseUrl: 'http://localhost:5678',\n          apiKey: 'test-api-key',\n        });\n      }\n\n      // Make subsequent calls fail with non-Error\n      mockN8nClient.getWorkflows.mockRejectedValueOnce('String error');\n\n      const result = await statusToolExecute();\n\n      expect(result).toBe('⚠️ Connected but unable to communicate with n8n: String error');\n    });\n  });\n\n  describe('Server Startup with stdio Transport', () => {\n    beforeEach(() => {\n      mockDetectTransportConfig.mockReturnValue({ type: 'stdio' });\n      mockValidateTransportConfig.mockReturnValue({ type: 'stdio' });\n    });\n\n    it('should start server with stdio transport', async () => {\n      await import('../../src/index-fastmcp');\n\n      // Wait for async operations to complete\n      await Promise.resolve();\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('🚀 Starting n8n MCP Server...');\n      expect(mockConsoleLog).toHaveBeenCalledWith('📡 Transport type: stdio');\n      expect(mockFastMCP.start).toHaveBeenCalledWith({ transportType: 'stdio' });\n      expect(mockConsoleLog).toHaveBeenCalledWith('📟 Server started with stdio transport');\n      expect(mockConsoleLog).toHaveBeenCalledWith('✅ n8n MCP Server is ready!');\n    });\n\n    it('should call transport detection and validation', async () => {\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockDetectTransportConfig).toHaveBeenCalled();\n      expect(mockValidateTransportConfig).toHaveBeenCalled();\n    });\n  });\n\n  describe('Server Startup with SSE Transport', () => {\n    const mockSSETransport = {\n      start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined),\n    };\n\n    beforeEach(() => {\n      mockDetectTransportConfig.mockReturnValue({\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      mockValidateTransportConfig.mockReturnValue({\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      mockSSEUtils.validateConfig.mockReturnValue(true);\n      mockCreateSSETransport.mockReturnValue(mockSSETransport);\n      mockGetServerUrl.mockReturnValue('http://localhost:3000');\n    });\n\n    it('should start server with SSE transport', async () => {\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('🚀 Starting n8n MCP Server...');\n      expect(mockConsoleLog).toHaveBeenCalledWith('📡 Transport type: sse');\n      expect(mockSSEUtils.validateConfig).toHaveBeenCalled();\n      expect(mockCreateSSETransport).toHaveBeenCalledWith(mockFastMCP, {\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      expect(mockSSETransport.start).toHaveBeenCalled();\n      expect(mockConsoleLog).toHaveBeenCalledWith('🌐 Server URL: http://localhost:3000');\n      expect(mockConsoleLog).toHaveBeenCalledWith('✅ n8n MCP Server is ready!');\n    });\n\n    it('should handle invalid SSE configuration', async () => {\n      mockSSEUtils.validateConfig.mockReturnValue(false);\n\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockConsoleError).toHaveBeenCalledWith('❌ Invalid SSE configuration');\n      expect(process.exit).toHaveBeenCalledWith(1);\n    });\n\n    it('should handle missing server URL', async () => {\n      mockGetServerUrl.mockReturnValue(null);\n\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockSSETransport.start).toHaveBeenCalled();\n      expect(mockConsoleLog).not.toHaveBeenCalledWith(expect.stringContaining('🌐 Server URL:'));\n      expect(mockConsoleLog).toHaveBeenCalledWith('✅ n8n MCP Server is ready!');\n    });\n  });\n\n  describe('Server Startup Error Handling', () => {\n    beforeEach(() => {\n      mockDetectTransportConfig.mockReturnValue({ type: 'stdio' });\n      mockValidateTransportConfig.mockReturnValue({ type: 'stdio' });\n    });\n\n    it('should handle server startup errors', async () => {\n      mockFastMCP.start.mockRejectedValueOnce(new Error('Server startup failed'));\n\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockConsoleError).toHaveBeenCalledWith(\n        '❌ Failed to start server:',\n        expect.any(Error)\n      );\n      expect(process.exit).toHaveBeenCalledWith(1);\n    });\n\n    it('should handle SSE transport startup errors', async () => {\n      mockDetectTransportConfig.mockReturnValue({ type: 'sse', port: 3000 });\n      mockValidateTransportConfig.mockReturnValue({ type: 'sse', port: 3000 });\n      mockSSEUtils.validateConfig.mockReturnValue(true);\n\n      const mockSSETransport = {\n        start: jest\n          .fn<() => Promise<void>>()\n          .mockRejectedValueOnce(new Error('SSE startup failed')),\n      };\n      mockCreateSSETransport.mockReturnValue(mockSSETransport);\n\n      await import('../../src/index-fastmcp');\n\n      await Promise.resolve();\n\n      expect(mockConsoleError).toHaveBeenCalledWith(\n        '❌ Failed to start server:',\n        expect.any(Error)\n      );\n      expect(process.exit).toHaveBeenCalledWith(1);\n    });\n  });\n\n  describe('Process Signal Handling', () => {\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n    });\n\n    it('should register SIGINT handler', () => {\n      expect(process.on).toHaveBeenCalledWith('SIGINT', expect.any(Function));\n    });\n\n    it('should register SIGTERM handler', () => {\n      expect(process.on).toHaveBeenCalledWith('SIGTERM', expect.any(Function));\n    });\n\n    it('should handle SIGINT gracefully', () => {\n      const sigintCall = (process.on as jest.Mock).mock.calls.find(call => call[0] === 'SIGINT');\n\n      if (sigintCall) {\n        const sigintHandler = sigintCall[1] as () => void;\n        sigintHandler();\n\n        expect(mockConsoleError).toHaveBeenCalledWith(\n          'Received SIGINT, shutting down gracefully...'\n        );\n        expect(process.exit).toHaveBeenCalledWith(0);\n      }\n    });\n\n    it('should handle SIGTERM gracefully', () => {\n      const sigtermCall = (process.on as jest.Mock).mock.calls.find(call => call[0] === 'SIGTERM');\n\n      if (sigtermCall) {\n        const sigtermHandler = sigtermCall[1] as () => void;\n        sigtermHandler();\n\n        expect(mockConsoleError).toHaveBeenCalledWith(\n          'Received SIGTERM, shutting down gracefully...'\n        );\n        expect(process.exit).toHaveBeenCalledWith(0);\n      }\n    });\n  });\n\n  describe('Global Client State Management', () => {\n    let clientGetter: () => any;\n\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n      clientGetter = mockCreateWorkflowTools.mock.calls[0][0] as () => any;\n    });\n\n    it('should start with null client', () => {\n      expect(clientGetter()).toBeNull();\n    });\n\n    it('should update global client after successful init', async () => {\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      if (initTool) {\n        await initTool.execute({\n          baseUrl: 'http://localhost:5678',\n          apiKey: 'test-api-key',\n        });\n      }\n\n      expect(clientGetter()).toBe(mockN8nClient);\n    });\n\n    it('should maintain client state across multiple tool registrations', async () => {\n      const { N8nClient } = jest.requireMock('../../src/client/n8nClient.js') as any;\n      N8nClient.mockImplementation(() => mockN8nClient);\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      if (initTool) {\n        await initTool.execute({\n          baseUrl: 'http://localhost:5678',\n          apiKey: 'test-api-key',\n        });\n      }\n\n      // Check that all tool categories get the same client\n      const allClientGetters = [\n        mockCreateWorkflowTools.mock.calls[0][0],\n        mockCreateProjectTools.mock.calls[0][0],\n        mockCreateUserTools.mock.calls[0][0],\n        mockCreateVariableTools.mock.calls[0][0],\n        mockCreateExecutionTools.mock.calls[0][0],\n        mockCreateTagTools.mock.calls[0][0],\n        mockCreateCredentialTools.mock.calls[0][0],\n        mockCreateAuditTools.mock.calls[0][0],\n      ];\n\n      allClientGetters.forEach(getter => {\n        expect((getter as any)()).toBe(mockN8nClient);\n      });\n    });\n  });\n\n  describe('Parameter Validation', () => {\n    it('should use Zod for init-n8n parameter validation', async () => {\n      await import('../../src/index-fastmcp');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'init-n8n'\n      )?.[0];\n\n      expect(initTool).toBeDefined();\n      if (initTool) {\n        // The parameters should be a z.object result\n        expect(initTool.parameters).toBeDefined();\n        // We can't easily test the actual Zod schema structure in mocked environment,\n        // but we can verify it was called to create the parameters\n      }\n    });\n\n    it('should use empty Zod object for status parameters', async () => {\n      await import('../../src/index-fastmcp');\n\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        call => call[0].name === 'status'\n      )?.[0];\n\n      expect(statusTool).toBeDefined();\n      if (statusTool) {\n        expect(statusTool.parameters).toBeDefined();\n      }\n    });\n  });\n\n  describe('Integration with Tool Modules', () => {\n    beforeEach(async () => {\n      await import('../../src/index-fastmcp');\n    });\n\n    it('should pass consistent server instance to all tools', () => {\n      const serverInstances = [\n        mockCreateWorkflowTools.mock.calls[0][1],\n        mockCreateProjectTools.mock.calls[0][1],\n        mockCreateUserTools.mock.calls[0][1],\n        mockCreateVariableTools.mock.calls[0][1],\n        mockCreateExecutionTools.mock.calls[0][1],\n        mockCreateTagTools.mock.calls[0][1],\n        mockCreateCredentialTools.mock.calls[0][1],\n        mockCreateAuditTools.mock.calls[0][1],\n      ];\n\n      // All tools should receive the same FastMCP instance\n      serverInstances.forEach(instance => {\n        expect(instance).toBe(mockFastMCP);\n      });\n    });\n\n    it('should ensure tool registration happens before server start', () => {\n      // Verify all tool creation functions were called before server.start\n      expect(mockCreateWorkflowTools).toHaveBeenCalled();\n      expect(mockCreateProjectTools).toHaveBeenCalled();\n      expect(mockCreateUserTools).toHaveBeenCalled();\n      expect(mockCreateVariableTools).toHaveBeenCalled();\n      expect(mockCreateExecutionTools).toHaveBeenCalled();\n      expect(mockCreateTagTools).toHaveBeenCalled();\n      expect(mockCreateCredentialTools).toHaveBeenCalled();\n      expect(mockCreateAuditTools).toHaveBeenCalled();\n\n      // The custom tools should also be registered\n      expect(mockFastMCP.addTool).toHaveBeenCalledWith(\n        expect.objectContaining({ name: 'init-n8n' })\n      );\n      expect(mockFastMCP.addTool).toHaveBeenCalledWith(expect.objectContaining({ name: 'status' }));\n    });\n  });\n});\n"],"version":3}