{"version":3,"names":["cov_2lqwwbml3a","actualCoverage","SSETransportManager","server","config","constructor","f","s","start","b","type","sse","Error","port","endpoint","host","healthCheck","console","log","transportType","httpStream","enabled","setupHealthCheck","logServerInfo","healthEndpoint","cors","origins","join","credentials","stop","createSSETransport","SSEUtils","validateConfig","error","startsWith","getConnectionUrl","protocol","formatConnectionInstructions","url","inspector","claudeDesktop","mcpServers","n8n","command","args","env","N8N_MCP_TRANSPORT","N8N_MCP_SSE_PORT","toString","N8N_MCP_SSE_HOST","curl","DEFAULT_SSE_CONFIG"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/sseTransport.ts"],"sourcesContent":["/**\n * SSE Transport Implementation for n8n MCP Server\n *\n * Provides Server-Sent Events (SSE) transport capability for remote access to the n8n MCP server.\n * Enables web-based clients to connect and use n8n tools through HTTP/SSE protocol.\n */\n\nimport { FastMCP } from 'fastmcp';\nimport type { TransportConfig } from './transportConfig.js';\n\n/**\n * SSE Transport Manager\n *\n * Handles SSE server configuration, health checks, and connection management\n * for the n8n MCP server.\n */\nexport class SSETransportManager {\n  private server: FastMCP;\n  private config: TransportConfig;\n\n  constructor(server: FastMCP, config: TransportConfig) {\n    this.server = server;\n    this.config = config;\n  }\n\n  /**\n   * Start the SSE transport server\n   */\n  public async start(): Promise<void> {\n    if (this.config.type !== 'sse' || !this.config.sse) {\n      throw new Error('SSE transport not configured');\n    }\n\n    const { port, endpoint, host, healthCheck } = this.config.sse;\n\n    console.log(`üöÄ Starting n8n MCP Server with SSE transport`);\n    console.log(`üì° Server will be available at: http://${host}:${port}${endpoint}`);\n\n    // Configure FastMCP server for SSE transport\n    await this.server.start({\n      transportType: 'httpStream',\n      httpStream: {\n        port,\n        endpoint: endpoint as `/${string}`,\n      },\n    });\n\n    // Add health check endpoint if enabled\n    if (healthCheck?.enabled) {\n      this.setupHealthCheck();\n    }\n\n    this.logServerInfo();\n  }\n\n  /**\n   * Setup health check endpoint\n   */\n  private setupHealthCheck(): void {\n    if (!this.config.sse?.healthCheck) return;\n\n    const healthEndpoint = this.config.sse.healthCheck.endpoint;\n\n    // Note: FastMCP automatically handles health checks\n    // This is a placeholder for custom health check logic if needed\n    console.log(`üíö Health check endpoint: ${healthEndpoint}`);\n  }\n\n  /**\n   * Log server information and connection details\n   */\n  private logServerInfo(): void {\n    if (!this.config.sse) return;\n\n    const { port, endpoint, host, cors } = this.config.sse;\n\n    console.log('\\nüìã Server Configuration:');\n    console.log(`   Transport: SSE (Server-Sent Events)`);\n    console.log(`   Host: ${host}`);\n    console.log(`   Port: ${port}`);\n    console.log(`   Endpoint: ${endpoint}`);\n    console.log(`   CORS: ${cors.enabled ? 'Enabled' : 'Disabled'}`);\n\n    if (cors.enabled) {\n      console.log(`   Allowed Origins: ${cors.origins.join(', ')}`);\n      console.log(`   Credentials: ${cors.credentials ? 'Allowed' : 'Not allowed'}`);\n    }\n\n    console.log('\\nüîå Connection Instructions:');\n    console.log('   For MCP Inspector:');\n    console.log(`   npx @modelcontextprotocol/inspector http://${host}:${port}${endpoint}`);\n    console.log('');\n    console.log('   For Claude Desktop (claude_desktop_config.json):');\n    console.log('   {');\n    console.log('     \"mcpServers\": {');\n    console.log('       \"n8n\": {');\n    console.log(`         \"command\": \"npx\",`);\n    console.log(`         \"args\": [\"@illuminaresolutions/n8n-mcp-server\"],`);\n    console.log(`         \"env\": {`);\n    console.log(`           \"N8N_MCP_TRANSPORT\": \"sse\",`);\n    console.log(`           \"N8N_MCP_SSE_PORT\": \"${port}\",`);\n    console.log(`           \"N8N_MCP_SSE_HOST\": \"${host}\"`);\n    console.log(`         }`);\n    console.log('       }');\n    console.log('     }');\n    console.log('   }');\n    console.log('');\n  }\n\n  /**\n   * Stop the server (cleanup)\n   */\n  public async stop(): Promise<void> {\n    console.log('üõë Stopping SSE transport server...');\n    // FastMCP handles cleanup automatically\n  }\n}\n\n/**\n * Create and configure SSE transport for FastMCP server\n */\nexport function createSSETransport(server: FastMCP, config: TransportConfig): SSETransportManager {\n  return new SSETransportManager(server, config);\n}\n\n/**\n * SSE-specific utilities and helpers\n */\nexport const SSEUtils = {\n  /**\n   * Validate SSE configuration\n   */\n  validateConfig(config: TransportConfig): boolean {\n    if (config.type !== 'sse') return false;\n    if (!config.sse) return false;\n\n    const { port, endpoint } = config.sse;\n\n    // Port validation\n    if (port < 1024 || port > 65535) {\n      console.error(`‚ùå Invalid port: ${port}. Must be between 1024-65535`);\n      return false;\n    }\n\n    // Endpoint validation\n    if (!endpoint.startsWith('/')) {\n      console.error(`‚ùå Invalid endpoint: ${endpoint}. Must start with '/'`);\n      return false;\n    }\n\n    return true;\n  },\n\n  /**\n   * Get connection URL for the SSE server\n   */\n  getConnectionUrl(config: TransportConfig): string | null {\n    if (config.type !== 'sse' || !config.sse) return null;\n\n    const { host, port, endpoint } = config.sse;\n    const protocol = port === 443 ? 'https' : 'http';\n    return `${protocol}://${host}:${port}${endpoint}`;\n  },\n\n  /**\n   * Format connection instructions for different clients\n   */\n  formatConnectionInstructions(config: TransportConfig): {\n    inspector: string;\n    claudeDesktop: object;\n    curl: string;\n  } | null {\n    const url = this.getConnectionUrl(config);\n    if (!url) return null;\n\n    return {\n      inspector: `npx @modelcontextprotocol/inspector ${url}`,\n      claudeDesktop: {\n        mcpServers: {\n          n8n: {\n            command: 'npx',\n            args: ['@illuminaresolutions/n8n-mcp-server'],\n            env: {\n              N8N_MCP_TRANSPORT: 'sse',\n              N8N_MCP_SSE_PORT: config.sse?.port.toString(),\n              N8N_MCP_SSE_HOST: config.sse?.host,\n            },\n          },\n        },\n      },\n      curl: `curl -N -H \"Accept: text/event-stream\" ${url}`,\n    };\n  },\n};\n\n/**\n * Default SSE server configuration\n */\nexport const DEFAULT_SSE_CONFIG = {\n  port: 8080,\n  endpoint: '/sse',\n  host: 'localhost',\n  cors: {\n    enabled: true,\n    origins: ['*'],\n    credentials: false,\n  },\n  healthCheck: {\n    enabled: true,\n    endpoint: '/health',\n  },\n} as const;\n"],"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","ignoreList":[]}