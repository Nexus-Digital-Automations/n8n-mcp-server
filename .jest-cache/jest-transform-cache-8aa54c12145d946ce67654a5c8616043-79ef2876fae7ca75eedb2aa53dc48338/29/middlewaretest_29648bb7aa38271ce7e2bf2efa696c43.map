{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/auth/middleware.test.ts","mappings":";;AAAA,2CAAuE;AAgBvE,eAAe;AACf,cAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAhBrB,6DAOsC;AAYtC,gCAAgC;AAChC,MAAM,gBAAgB;IACZ,kBAAkB,CAAU;IAC5B,QAAQ,CAA2B;IACnC,YAAY,CAAc;IAC1B,gBAAgB,CAAc;IAEtC,YACE,kBAAkB,GAAG,IAAI,EACzB,WAAqC,IAAI,EACzC,eAAyB,EAAE,EAC3B,mBAA6B,EAAE;QAE/B,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI;YAC1B,EAAE,EAAE,WAAW;YACf,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,kBAAkB;YACzB,KAAK,EAAE,CAAC,QAAQ,CAAC;YACjB,WAAW,EAAE;gBACX,SAAS,EAAE,IAAI;gBACf,UAAU,EAAE,KAAK;gBACjB,SAAS,EAAE,IAAI;gBACf,UAAU,EAAE,IAAI;gBAChB,WAAW,EAAE,KAAK;gBAClB,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;aACb;SACF,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAuB;QACxC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,uBAAuB;aAC/B,CAAC;QACJ,CAAC;QAED,OAAO;YACL,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,SAAS;YAChC,OAAO,EAAE;gBACP,QAAQ,EAAE,MAAM;aACjB;SACF,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAgB,EAAE,OAAuB;QAC3D,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvE,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,WAAmB,EAAE,OAAuB;QAClE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClF,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAuB;QACnC,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CACF;AAED,IAAA,kBAAQ,EAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,gBAAkC,CAAC;IACvC,IAAI,UAAgC,CAAC;IACrC,IAAI,UAAiC,CAAC;IAEtC,IAAA,oBAAU,EAAC,GAAG,EAAE;QACd,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAClE,UAAU,GAAG;YACX,OAAO,EAAE,cAAI,CAAC,EAAE,EAAE;YAClB,sCAAsC;SAChC,CAAC;QAET,UAAU,GAAG,IAAI,kCAAqB,CAAC;YACrC,YAAY,EAAE,gBAAgB;SAC/B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,IAAA,YAAE,EAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,gBAAgB;aAC/B,CAAC,CAAC;YAEH,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,kCAAqB,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,gBAAgB;gBAC9B,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,CAAC,aAAa,CAAC;gBAC5B,eAAe,EAAE,CAAC,mBAAmB,CAAC;gBACtC,UAAU,EAAE,eAAe;gBAC3B,gBAAgB,EAAE,mBAAmB;gBACrC,iBAAiB,EAAE,oBAAoB;aACxC,CAAC,CAAC;YAEH,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,kCAAqB,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,OAAO,EAAE,GAAG,EAAE;QACrB,IAAA,YAAE,EAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,MAAM,UAAU,GAAG,cAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;YAE3E,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE7B,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,oBAAoB,CACrC,qEAAqE,CACtE,CAAC;YACF,IAAA,gBAAM,EAAE,UAAkB,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE7D,UAAU,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,IAAA,YAAE,EAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;YAC1E,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACrF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE;oBACP,aAAa,EAAE,oBAAoB;iBACpC;aACF,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;YAChF,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACjF,yBAAyB,CAC1B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,uBAAuB,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,mBAAmB;YACzF,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,uBAAuB;aACtC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE;oBACP,aAAa,EAAE,oBAAoB;iBACpC;aACF,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACjF,+BAA+B,CAChC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;YACpE,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,KAAK;aACnB,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,QAAQ,GAAsB;gBAClC,EAAE,EAAE,eAAe;gBACnB,KAAK,EAAE,CAAC,QAAQ,CAAC;gBACjB,WAAW,EAAE;oBACX,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,KAAK;oBACjB,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,IAAI;oBAChB,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;YAEF,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,QAAQ;aACf,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7F,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,IAAA,YAAE,EAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,gBAAgB;gBAC9B,eAAe,EAAE,CAAC,mBAAmB,CAAC;aACvC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EACV,UAAU,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAC7D,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;YACtF,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE;oBACP,aAAa,EAAE,oBAAoB;iBACpC;aACF,CAAC;YAEF,MAAM,IAAA,gBAAM,EACV,UAAU,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAC/D,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,sEAAsE,EAAE,KAAK,IAAI,EAAE;YACpF,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAC1F,yBAAyB,CAC1B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,uBAAuB,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,uBAAuB;YACpG,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,uBAAuB;aACtC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE;oBACP,aAAa,EAAE,oBAAoB;iBACpC;aACF,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAC1F,oCAAoC,CACrC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,gBAAgB;gBAC9B,eAAe,EAAE,CAAC,cAAc,CAAC;aAClC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,IAAA,gBAAM,EACV,UAAU,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,OAAO,CAAC,CACjE,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,QAAQ,GAAsB;gBAClC,EAAE,EAAE,eAAe;gBACnB,KAAK,EAAE,CAAC,QAAQ,CAAC;gBACjB,WAAW,EAAE;oBACX,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,KAAK;oBACjB,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,IAAI;oBAChB,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;YAEF,MAAM,OAAO,GAAmB;gBAC9B,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,QAAQ;aACf,CAAC;YAEF,MAAM,IAAA,gBAAM,EACV,UAAU,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAC/D,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,UAAU,EAAE,GAAG,EAAE;QACxB,IAAA,YAAE,EAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACpC,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,MAAM,IAAI,GAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;YACxF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;YAE1C,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,CAAC;YACvD,IAAA,gBAAM,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACpC,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,MAAM,IAAI,GAAU;gBAClB,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB;oBACE,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE;oBAC9B,OAAO,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE;oBAC1C,QAAQ,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;iBAChC;aACF,CAAC;YAEF,MAAM,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;YAE3B,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACpC,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;YAE5E,MAAM,IAAI,GAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAEvC,MAAM,IAAA,gBAAM,EAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC9E,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,IAAA,YAAE,EAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,oBAAoB,GAAG,cAAI;iBAC9B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YACxC,MAAM,eAAe,GAAG,UAAU,CAAC,YAAY,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;YAE7F,MAAM,IAAI,GAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;YACxF,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC;YAE9C,IAAA,gBAAM,EAAC,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3D,IAAA,gBAAM,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,MAAM,oBAAoB,GAAG,cAAI;iBAC9B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YACxC,MAAM,eAAe,GAAG,UAAU,CAAC,YAAY,CAC7C,0BAA0B,EAC1B,oBAAoB,CACrB,CAAC;YAEF,MAAM,IAAI,GAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAEvC,MAAM,IAAA,gBAAM,EAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAClF,IAAA,gBAAM,EAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,IAAA,YAAE,EAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;YAClE,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC/B,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,MAAM,IAAI,GAAU;gBAClB,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB;oBACE,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE;oBAC9B,OAAO,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE;oBAC1C,QAAQ,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE;iBACvC;aACF,CAAC;YAEF,mDAAmD;YACnD,MAAM,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,8BAA8B;YAE1E,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC/B,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,MAAM,IAAI,GAAU,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;YAE9D,mDAAmD;YACnD,MAAM,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,8BAA8B;YAE1E,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC/B,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,mDAAmD;YACnD,MAAM,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,8BAA8B;YAEnE,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,IAAA,YAAE,EAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,mBAAmB;gBACjC,WAAW,EAAE,IAAI;gBACjB,gBAAgB,EAAE,6BAA6B;gBAC/C,iBAAiB,EAAE,4BAA4B;aAChD,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;YAEhD,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACjF,6BAA6B,CAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,uBAAuB,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,mBAAmB;YACzF,MAAM,UAAU,GAAG,IAAI,kCAAqB,CAAC;gBAC3C,YAAY,EAAE,uBAAuB;gBACrC,iBAAiB,EAAE,4BAA4B;aAChD,CAAC,CAAC;YAEH,MAAM,OAAO,GAAmB;gBAC9B,OAAO,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE;aAC3C,CAAC;YAEF,MAAM,IAAA,gBAAM,EAAC,UAAU,CAAC,eAAe,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAClF,6CAA6C,CAC9C,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,gBAAgB,GAAG,cAAI,CAAC,EAAE,EAAyB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACtF,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,wDAAwD;YACxD,MAAM,IAAA,gBAAM,EAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,gBAAgB,GAAG,cAAI;iBAC1B,EAAE,EAAuC;iBACzC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC/B,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YAEvE,MAAM,WAAW,GAAU;gBACzB,EAAE,MAAM,EAAE,QAAQ,EAAE;gBACpB,EAAE,MAAM,EAAE,QAAQ,EAAE;gBACpB;oBACE,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE;oBACzD,OAAO,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE;oBACrC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;iBACpC;aACF,CAAC;YAEF,MAAM,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC;YAElC,IAAA,gBAAM,EAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,GAAG,WAAW,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,kBAAQ,EAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,IAAA,YAAE,EAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAChD,MAAM,UAAU,GAAG,IAAA,iCAAoB,EAAC;YACtC,YAAY,EAAE,gBAAgB;SAC/B,CAAC,CAAC;QAEH,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,kCAAqB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,IAAA,YAAE,EAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAChD,MAAM,MAAM,GAAG;YACb,YAAY,EAAE,gBAAgB;YAC9B,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,CAAC,aAAa,CAAC;SAC7B,CAAC;QAEF,MAAM,UAAU,GAAG,IAAA,iCAAoB,EAAC,MAAM,CAAC,CAAC;QAEhD,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,cAAc,CAAC,kCAAqB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,kBAAQ,EAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,IAAA,kBAAQ,EAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,IAAA,YAAE,EAAC,wCAAwC,EAAE,GAAG,EAAE;YAChD,MAAM,SAAS,GAAG,IAAA,wBAAW,EAAC,WAAW,CAAC,CAAC;YAC3C,IAAA,gBAAM,EAAC,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,IAAA,YAAE,EAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,SAAS,GAAG,IAAA,8BAAiB,EAAC,WAAW,CAAC,CAAC;YACjD,IAAA,gBAAM,EAAC,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,kBAAQ,EAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,IAAA,kBAAQ,EAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,IAAA,YAAE,EAAC,uDAAuD,EAAE,GAAG,EAAE;YAC/D,IAAA,gBAAM,EAAC,4BAAe,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAClE,IAAA,gBAAM,EAAC,4BAAe,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAClE,IAAA,gBAAM,EAAC,4BAAe,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC1E,IAAA,gBAAM,EAAC,4BAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAChE,IAAA,gBAAM,EAAC,4BAAe,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAC9E,IAAA,gBAAM,EAAC,4BAAe,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,kBAAQ,EAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,IAAI,WAA+B,CAAC;QAEpC,IAAA,oBAAU,EAAC,GAAG,EAAE;YACd,WAAW,GAAG,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,OAAO,CAAC,GAAG,GAAG,WAAW,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,uDAAuD,EAAE,GAAG,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,YAAY,CAAC,GAAG,mBAAmB,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,gBAAgB,CAAC,GAAG,qBAAqB,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,kBAAkB,CAAC,GAAG,mBAAmB,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,mBAAmB,CAAC,GAAG,oBAAoB,CAAC;YAExE,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,IAAA,mCAAsB,EAAC,gBAAgB,CAAC,CAAC;YAExD,IAAA,gBAAM,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnD,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;YAChE,IAAA,gBAAM,EAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;YACnE,IAAA,gBAAM,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAChD,IAAA,gBAAM,EAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC1D,IAAA,gBAAM,EAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,4DAA4D,EAAE,GAAG,EAAE;YACpE,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,IAAA,mCAAsB,EAAC,gBAAgB,CAAC,CAAC;YAExD,IAAA,gBAAM,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnD,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,CAAC;YAC3C,IAAA,gBAAM,EAAC,MAAM,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;YAC/C,IAAA,gBAAM,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;YAC1C,IAAA,gBAAM,EAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,aAAa,EAAE,CAAC;YAChD,IAAA,gBAAM,EAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,aAAa,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,kDAAkD,EAAE,GAAG,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YAE/C,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,IAAA,mCAAsB,EAAC,gBAAgB,CAAC,CAAC;YAExD,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAA,YAAE,EAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,4BAAe,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;YAEpD,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,IAAA,mCAAsB,EAAC,gBAAgB,CAAC,CAAC;YAExD,IAAA,gBAAM,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/auth/middleware.test.ts"],"sourcesContent":["import { describe, it, expect, beforeEach, jest } from '@jest/globals';\nimport {\n  FastMCPAuthMiddleware,\n  createAuthMiddleware,\n  requireAuth,\n  requirePermission,\n  parseAuthConfigFromEnv,\n  AUTH_ENV_CONFIG,\n} from '../../../src/auth/middleware';\nimport {\n  AuthProvider,\n  RequestContext,\n  AuthResult,\n  AuthenticatedUser,\n} from '../../../src/auth/authProvider';\n\n// Mock FastMCP\njest.mock('fastmcp');\nimport { FastMCP } from 'fastmcp';\n\n// Mock AuthProvider for testing\nclass MockAuthProvider implements AuthProvider {\n  private shouldAuthenticate: boolean;\n  private mockUser: AuthenticatedUser | null;\n  private allowedTools: Set<string>;\n  private allowedResources: Set<string>;\n\n  constructor(\n    shouldAuthenticate = true,\n    mockUser: AuthenticatedUser | null = null,\n    allowedTools: string[] = [],\n    allowedResources: string[] = []\n  ) {\n    this.shouldAuthenticate = shouldAuthenticate;\n    this.mockUser = mockUser || {\n      id: 'test-user',\n      name: 'Test User',\n      email: 'test@example.com',\n      roles: ['member'],\n      permissions: {\n        community: true,\n        enterprise: false,\n        workflows: true,\n        executions: true,\n        credentials: false,\n        users: false,\n        audit: false,\n      },\n    };\n    this.allowedTools = new Set(allowedTools);\n    this.allowedResources = new Set(allowedResources);\n  }\n\n  async authenticate(context: RequestContext): Promise<AuthResult> {\n    if (!this.shouldAuthenticate) {\n      return {\n        success: false,\n        error: 'Authentication failed',\n      };\n    }\n\n    return {\n      success: true,\n      user: this.mockUser || undefined,\n      context: {\n        authType: 'mock',\n      },\n    };\n  }\n\n  async canAccessTool(toolName: string, context: RequestContext): Promise<boolean> {\n    return this.allowedTools.has(toolName) || this.allowedTools.has('*');\n  }\n\n  async canAccessResource(resourceUri: string, context: RequestContext): Promise<boolean> {\n    return this.allowedResources.has(resourceUri) || this.allowedResources.has('*');\n  }\n\n  async refresh(context: RequestContext): Promise<AuthResult> {\n    return this.authenticate(context);\n  }\n}\n\ndescribe('FastMCPAuthMiddleware', () => {\n  let mockAuthProvider: MockAuthProvider;\n  let mockServer: jest.Mocked<FastMCP>;\n  let middleware: FastMCPAuthMiddleware;\n\n  beforeEach(() => {\n    mockAuthProvider = new MockAuthProvider(true, null, ['*'], ['*']);\n    mockServer = {\n      addTool: jest.fn(),\n      // Add other FastMCP methods as needed\n    } as any;\n\n    middleware = new FastMCPAuthMiddleware({\n      authProvider: mockAuthProvider,\n    });\n  });\n\n  describe('constructor', () => {\n    it('should initialize with default configuration', () => {\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: mockAuthProvider,\n      });\n\n      expect(middleware).toBeInstanceOf(FastMCPAuthMiddleware);\n    });\n\n    it('should initialize with custom configuration', () => {\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: mockAuthProvider,\n        requireAuth: true,\n        publicTools: ['custom-tool'],\n        publicResources: ['custom://resource'],\n        authHeader: 'x-custom-auth',\n        authErrorMessage: 'Custom auth error',\n        authzErrorMessage: 'Custom authz error',\n      });\n\n      expect(middleware).toBeInstanceOf(FastMCPAuthMiddleware);\n    });\n  });\n\n  describe('apply', () => {\n    it('should apply middleware to FastMCP server', () => {\n      const consoleSpy = jest.spyOn(console, 'log').mockImplementation(() => {});\n\n      middleware.apply(mockServer);\n\n      expect(consoleSpy).toHaveBeenCalledWith(\n        '🔐 Authentication middleware configured (tool-level implementation)'\n      );\n      expect((mockServer as any)._authMiddleware).toBe(middleware);\n\n      consoleSpy.mockRestore();\n    });\n  });\n\n  describe('checkToolAccess', () => {\n    it('should allow access to public tools without authentication', async () => {\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(middleware.checkToolAccess('init-n8n', context)).resolves.not.toThrow();\n      await expect(middleware.checkToolAccess('status', context)).resolves.not.toThrow();\n    });\n\n    it('should authenticate and check tool access for non-public tools', async () => {\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {\n          authorization: 'Bearer valid-token',\n        },\n      };\n\n      await expect(middleware.checkToolAccess('list-workflows', context)).resolves.not.toThrow();\n    });\n\n    it('should throw error when authentication fails for protected tools', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: true,\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(middleware.checkToolAccess('list-workflows', context)).rejects.toThrow(\n        'Authentication required'\n      );\n    });\n\n    it('should throw error when tool access is denied', async () => {\n      const restrictiveAuthProvider = new MockAuthProvider(true, null, []); // No tools allowed\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: restrictiveAuthProvider,\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {\n          authorization: 'Bearer valid-token',\n        },\n      };\n\n      await expect(middleware.checkToolAccess('list-workflows', context)).rejects.toThrow(\n        'Access denied: list-workflows'\n      );\n    });\n\n    it('should allow anonymous access when auth not required', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: false,\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(middleware.checkToolAccess('list-workflows', context)).resolves.not.toThrow();\n    });\n\n    it('should use existing authenticated user if available', async () => {\n      const mockUser: AuthenticatedUser = {\n        id: 'existing-user',\n        roles: ['member'],\n        permissions: {\n          community: true,\n          enterprise: false,\n          workflows: true,\n          executions: true,\n          credentials: false,\n          users: false,\n          audit: false,\n        },\n      };\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n        user: mockUser,\n      };\n\n      await expect(middleware.checkToolAccess('list-workflows', context)).resolves.not.toThrow();\n    });\n  });\n\n  describe('checkResourceAccess', () => {\n    it('should allow access to public resources without authentication', async () => {\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: mockAuthProvider,\n        publicResources: ['public://resource'],\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(\n        middleware.checkResourceAccess('public://resource', context)\n      ).resolves.not.toThrow();\n    });\n\n    it('should authenticate and check resource access for non-public resources', async () => {\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {\n          authorization: 'Bearer valid-token',\n        },\n      };\n\n      await expect(\n        middleware.checkResourceAccess('n8n://workflows/123', context)\n      ).resolves.not.toThrow();\n    });\n\n    it('should throw error when authentication fails for protected resources', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: true,\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(middleware.checkResourceAccess('n8n://workflows/123', context)).rejects.toThrow(\n        'Authentication required'\n      );\n    });\n\n    it('should throw error when resource access is denied', async () => {\n      const restrictiveAuthProvider = new MockAuthProvider(true, null, ['*'], []); // No resources allowed\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: restrictiveAuthProvider,\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {\n          authorization: 'Bearer valid-token',\n        },\n      };\n\n      await expect(middleware.checkResourceAccess('n8n://workflows/123', context)).rejects.toThrow(\n        'Access denied: n8n://workflows/123'\n      );\n    });\n\n    it('should handle resource pattern matching', async () => {\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: mockAuthProvider,\n        publicResources: ['n8n://public'],\n      });\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n      };\n\n      await expect(\n        middleware.checkResourceAccess('n8n://public/resource', context)\n      ).resolves.not.toThrow();\n    });\n\n    it('should use existing authenticated user if available', async () => {\n      const mockUser: AuthenticatedUser = {\n        id: 'existing-user',\n        roles: ['member'],\n        permissions: {\n          community: true,\n          enterprise: false,\n          workflows: true,\n          executions: true,\n          credentials: false,\n          users: false,\n          audit: false,\n        },\n      };\n\n      const context: RequestContext = {\n        clientId: 'test-client',\n        headers: {},\n        user: mockUser,\n      };\n\n      await expect(\n        middleware.checkResourceAccess('n8n://workflows/123', context)\n      ).resolves.not.toThrow();\n    });\n  });\n\n  describe('wrapTool', () => {\n    it('should wrap tool function with authentication', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('tool result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      const args: any[] = [{ data: 'test' }, { session: { id: 'session-123' }, headers: {} }];\n      const result = await wrappedTool(...args);\n\n      expect(mockToolFunction).toHaveBeenCalledWith(...args);\n      expect(result).toBe('tool result');\n    });\n\n    it('should extract context from function arguments', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('tool result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      const args: any[] = [\n        { data: 'test' },\n        {\n          session: { id: 'session-123' },\n          headers: { authorization: 'Bearer token' },\n          metadata: { userAgent: 'test' },\n        },\n      ];\n\n      await wrappedTool(...args);\n\n      expect(mockToolFunction).toHaveBeenCalledWith(...args);\n    });\n\n    it('should handle authentication errors in wrapped tool', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: true,\n      });\n\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('tool result');\n      const wrappedTool = middleware.wrapTool('protected-tool', mockToolFunction);\n\n      const args: any[] = [{ data: 'test' }];\n\n      await expect(wrappedTool(...args)).rejects.toThrow('Authentication required');\n      expect(mockToolFunction).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('wrapResource', () => {\n    it('should wrap resource function with authentication', async () => {\n      const mockResourceFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('resource result');\n      const wrappedResource = middleware.wrapResource('n8n://test-resource', mockResourceFunction);\n\n      const args: any[] = [{ data: 'test' }, { session: { id: 'session-123' }, headers: {} }];\n      const result = await wrappedResource(...args);\n\n      expect(mockResourceFunction).toHaveBeenCalledWith(...args);\n      expect(result).toBe('resource result');\n    });\n\n    it('should handle authentication errors in wrapped resource', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: true,\n      });\n\n      const mockResourceFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('resource result');\n      const wrappedResource = middleware.wrapResource(\n        'n8n://protected-resource',\n        mockResourceFunction\n      );\n\n      const args: any[] = [{ data: 'test' }];\n\n      await expect(wrappedResource(...args)).rejects.toThrow('Authentication required');\n      expect(mockResourceFunction).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('context extraction', () => {\n    it('should extract context from arguments with session', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      const args: any[] = [\n        { data: 'test' },\n        {\n          session: { id: 'session-123' },\n          headers: { authorization: 'Bearer token' },\n          metadata: { userAgent: 'test-client' },\n        },\n      ];\n\n      // This will internally call extractContextFromArgs\n      await wrappedTool(...args).catch(() => {}); // Ignore errors for this test\n\n      expect(mockToolFunction).toHaveBeenCalled();\n    });\n\n    it('should handle arguments without session', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      const args: any[] = [{ data: 'test' }, { notASession: true }];\n\n      // This will internally call extractContextFromArgs\n      await wrappedTool(...args).catch(() => {}); // Ignore errors for this test\n\n      expect(mockToolFunction).toHaveBeenCalled();\n    });\n\n    it('should handle empty arguments', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      // This will internally call extractContextFromArgs\n      await wrappedTool().catch(() => {}); // Ignore errors for this test\n\n      expect(mockToolFunction).toHaveBeenCalled();\n    });\n  });\n\n  describe('error handling and edge cases', () => {\n    it('should handle custom error messages', async () => {\n      const failingAuthProvider = new MockAuthProvider(false);\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: failingAuthProvider,\n        requireAuth: true,\n        authErrorMessage: 'Custom authentication error',\n        authzErrorMessage: 'Custom authorization error',\n      });\n\n      const context: RequestContext = { headers: {} };\n\n      await expect(middleware.checkToolAccess('protected-tool', context)).rejects.toThrow(\n        'Custom authentication error'\n      );\n    });\n\n    it('should handle authorization errors with custom messages', async () => {\n      const restrictiveAuthProvider = new MockAuthProvider(true, null, []); // No tools allowed\n      const middleware = new FastMCPAuthMiddleware({\n        authProvider: restrictiveAuthProvider,\n        authzErrorMessage: 'Custom authorization error',\n      });\n\n      const context: RequestContext = {\n        headers: { authorization: 'Bearer token' },\n      };\n\n      await expect(middleware.checkToolAccess('restricted-tool', context)).rejects.toThrow(\n        'Custom authorization error: restricted-tool'\n      );\n    });\n\n    it('should handle null/undefined context gracefully', async () => {\n      const mockToolFunction = jest.fn<() => Promise<string>>().mockResolvedValue('result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      // Should not throw an error even with no proper context\n      await expect(wrappedTool()).resolves.toBe('result');\n    });\n\n    it('should handle complex argument structures', async () => {\n      const mockToolFunction = jest\n        .fn<(...args: any[]) => Promise<string>>()\n        .mockResolvedValue('result');\n      const wrappedTool = middleware.wrapTool('test-tool', mockToolFunction);\n\n      const complexArgs: any[] = [\n        { param1: 'value1' },\n        { param2: 'value2' },\n        {\n          session: { id: 'session-123', data: { nested: 'value' } },\n          headers: { 'custom-header': 'value' },\n          metadata: { timestamp: Date.now() },\n        },\n      ];\n\n      await wrappedTool(...complexArgs);\n\n      expect(mockToolFunction).toHaveBeenCalledWith(...complexArgs);\n    });\n  });\n});\n\ndescribe('createAuthMiddleware', () => {\n  it('should create FastMCPAuthMiddleware instance', () => {\n    const mockAuthProvider = new MockAuthProvider();\n    const middleware = createAuthMiddleware({\n      authProvider: mockAuthProvider,\n    });\n\n    expect(middleware).toBeInstanceOf(FastMCPAuthMiddleware);\n  });\n\n  it('should pass configuration to middleware', () => {\n    const mockAuthProvider = new MockAuthProvider();\n    const config = {\n      authProvider: mockAuthProvider,\n      requireAuth: true,\n      publicTools: ['public-tool'],\n    };\n\n    const middleware = createAuthMiddleware(config);\n\n    expect(middleware).toBeInstanceOf(FastMCPAuthMiddleware);\n  });\n});\n\ndescribe('decorators', () => {\n  describe('requireAuth', () => {\n    it('should create authentication decorator', () => {\n      const decorator = requireAuth('test-tool');\n      expect(typeof decorator).toBe('function');\n    });\n  });\n\n  describe('requirePermission', () => {\n    it('should create permission decorator', () => {\n      const decorator = requirePermission('workflows');\n      expect(typeof decorator).toBe('function');\n    });\n  });\n});\n\ndescribe('environment configuration', () => {\n  describe('AUTH_ENV_CONFIG', () => {\n    it('should define all required environment variable names', () => {\n      expect(AUTH_ENV_CONFIG.REQUIRE_AUTH).toBe('N8N_MCP_REQUIRE_AUTH');\n      expect(AUTH_ENV_CONFIG.PUBLIC_TOOLS).toBe('N8N_MCP_PUBLIC_TOOLS');\n      expect(AUTH_ENV_CONFIG.PUBLIC_RESOURCES).toBe('N8N_MCP_PUBLIC_RESOURCES');\n      expect(AUTH_ENV_CONFIG.AUTH_HEADER).toBe('N8N_MCP_AUTH_HEADER');\n      expect(AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE).toBe('N8N_MCP_AUTH_ERROR_MESSAGE');\n      expect(AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE).toBe('N8N_MCP_AUTHZ_ERROR_MESSAGE');\n    });\n  });\n\n  describe('parseAuthConfigFromEnv', () => {\n    let originalEnv: typeof process.env;\n\n    beforeEach(() => {\n      originalEnv = { ...process.env };\n    });\n\n    afterEach(() => {\n      process.env = originalEnv;\n    });\n\n    it('should parse configuration from environment variables', () => {\n      process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] = 'true';\n      process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS] = 'tool1,tool2,tool3';\n      process.env[AUTH_ENV_CONFIG.PUBLIC_RESOURCES] = 'resource1,resource2';\n      process.env[AUTH_ENV_CONFIG.AUTH_HEADER] = 'x-custom-auth';\n      process.env[AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE] = 'Custom auth error';\n      process.env[AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE] = 'Custom authz error';\n\n      const mockAuthProvider = new MockAuthProvider();\n      const config = parseAuthConfigFromEnv(mockAuthProvider);\n\n      expect(config.authProvider).toBe(mockAuthProvider);\n      expect(config.requireAuth).toBe(true);\n      expect(config.publicTools).toEqual(['tool1', 'tool2', 'tool3']);\n      expect(config.publicResources).toEqual(['resource1', 'resource2']);\n      expect(config.authHeader).toBe('x-custom-auth');\n      expect(config.authErrorMessage).toBe('Custom auth error');\n      expect(config.authzErrorMessage).toBe('Custom authz error');\n    });\n\n    it('should use defaults when environment variables are not set', () => {\n      const mockAuthProvider = new MockAuthProvider();\n      const config = parseAuthConfigFromEnv(mockAuthProvider);\n\n      expect(config.authProvider).toBe(mockAuthProvider);\n      expect(config.requireAuth).toBe(false);\n      expect(config.publicTools).toBeUndefined();\n      expect(config.publicResources).toBeUndefined();\n      expect(config.authHeader).toBeUndefined();\n      expect(config.authErrorMessage).toBeUndefined();\n      expect(config.authzErrorMessage).toBeUndefined();\n    });\n\n    it('should handle empty string environment variables', () => {\n      process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] = '';\n      process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS] = '';\n\n      const mockAuthProvider = new MockAuthProvider();\n      const config = parseAuthConfigFromEnv(mockAuthProvider);\n\n      expect(config.requireAuth).toBe(false);\n      expect(config.publicTools).toEqual(['']);\n    });\n\n    it('should parse boolean values correctly', () => {\n      process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] = 'false';\n\n      const mockAuthProvider = new MockAuthProvider();\n      const config = parseAuthConfigFromEnv(mockAuthProvider);\n\n      expect(config.requireAuth).toBe(false);\n    });\n  });\n});\n"],"version":3}