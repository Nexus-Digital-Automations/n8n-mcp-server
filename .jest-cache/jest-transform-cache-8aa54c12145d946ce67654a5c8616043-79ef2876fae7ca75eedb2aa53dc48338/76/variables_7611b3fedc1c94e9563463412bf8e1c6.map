{"version":3,"names":["cov_1q46ed8fbu","actualCoverage","z","UserError","VariableIdSchema","s","object","variableId","string","min","ListVariablesSchema","limit","number","max","optional","cursor","CreateVariableSchema","key","value","type","enum","default","createVariableTools","getClient","server","f","addTool","name","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","client","b","options","response","getVariables","data","length","result","forEach","variable","index","id","createdAt","Date","toLocaleDateString","updatedAt","nextCursor","error","Error","message","includes","variableData","createVariable","deleteVariable"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/variables.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nVariable, CreateVariableRequest, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst VariableIdSchema = z.object({\n  variableId: z.string().min(1, 'Variable ID is required'),\n});\n\nconst ListVariablesSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateVariableSchema = z.object({\n  key: z.string().min(1, 'Variable key is required'),\n  value: z.string().min(1, 'Variable value is required'),\n  type: z.enum(['string', 'number', 'boolean', 'json']).optional().default('string'),\n});\n\n// Tool registration function\nexport function createVariableTools(getClient: () => N8nClient | null, server: any) {\n  // List variables tool\n  server.addTool({\n    name: 'list-variables',\n    description:\n      'List all environment variables in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: ListVariablesSchema,\n    annotations: {\n      title: 'List n8n Variables',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListVariablesSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getVariables(options);\n\n        if (response.data.length === 0) {\n          return 'No variables found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} variable(s):\\n\\n`;\n\n        response.data.forEach((variable: N8nVariable, index: number) => {\n          result += `${index + 1}. **${variable.key}**\\n`;\n          result += `   - ID: ${variable.id}\\n`;\n          result += `   - Type: ${variable.type || 'string'}\\n`;\n          // Don't show actual values for security reasons\n          result += `   - Value: [HIDDEN]\\n`;\n          if (variable.createdAt) {\n            result += `   - Created: ${new Date(variable.createdAt).toLocaleDateString()}\\n`;\n          }\n          if (variable.updatedAt) {\n            result += `   - Updated: ${new Date(variable.updatedAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\nðŸ“„ Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list variables: ${error.message}`);\n        }\n        throw new UserError('Failed to list variables with unknown error');\n      }\n    },\n  });\n\n  // Create variable tool\n  server.addTool({\n    name: 'create-variable',\n    description:\n      'Create a new environment variable in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: CreateVariableSchema,\n    annotations: {\n      title: 'Create New Variable',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateVariableSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const variableData: CreateVariableRequest = {\n          key: args.key,\n          value: args.value,\n          type: args.type,\n        };\n\n        const variable = await client.createVariable(variableData);\n\n        return (\n          `âœ… Successfully created variable \"${variable.key}\" with ID: ${variable.id}\\n` +\n          `Type: ${variable.type || 'string'}\\n` +\n          `Value: [HIDDEN for security]`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create variable: ${error.message}`);\n        }\n        throw new UserError('Failed to create variable with unknown error');\n      }\n    },\n  });\n\n  // Delete variable tool\n  server.addTool({\n    name: 'delete-variable',\n    description:\n      'Delete an environment variable from n8n permanently. NOTE: Requires n8n Enterprise license with variable management features enabled',\n    parameters: VariableIdSchema,\n    annotations: {\n      title: 'Delete Variable',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof VariableIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteVariable(args.variableId);\n        return `âœ… Successfully deleted variable with ID: ${args.variableId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with variable management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete variable: ${error.message}`);\n        }\n        throw new UserError('Failed to delete variable with unknown error');\n      }\n    },\n  });\n}\n"],"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","ignoreList":[]}