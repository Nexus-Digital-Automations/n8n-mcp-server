{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/audit.ts","mappings":"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","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/audit.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\n\n// Tool registration function\nexport function createAuditTools(getClient: () => N8nClient | null, server: any) {\n  // Generate audit report tool\n  server.addTool({\n    name: 'generate-audit-report',\n    description:\n      'Generate a comprehensive security and configuration audit report for the n8n instance. NOTE: May require Enterprise license',\n    parameters: z.object({}),\n    annotations: {\n      title: 'Generate Audit Report',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const auditReport = await client.generateAuditReport();\n\n        let result = `# n8n Security Audit Report\\n\\n`;\n        result += `**Generated:** ${new Date().toLocaleString()}\\n\\n`;\n\n        // Database Settings section\n        if (auditReport['Database Settings']) {\n          result += `## Database Settings\\n\\n`;\n          const dbSettings = auditReport['Database Settings'];\n          result += '```json\\n';\n          result += JSON.stringify(dbSettings, null, 2);\n          result += '\\n```\\n\\n';\n        }\n\n        // Credentials Risk Report section\n        if (auditReport['Credentials Risk Report']) {\n          result += `## Credentials Risk Assessment\\n\\n`;\n          const credRisk = auditReport['Credentials Risk Report'];\n\n          if (typeof credRisk === 'object' && credRisk !== null) {\n            const entries = Object.entries(credRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No credential risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(credRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Nodes Risk Report section\n        if (auditReport['Nodes Risk Report']) {\n          result += `## Nodes Risk Assessment\\n\\n`;\n          const nodesRisk = auditReport['Nodes Risk Report'];\n\n          if (typeof nodesRisk === 'object' && nodesRisk !== null) {\n            const entries = Object.entries(nodesRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No node risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(nodesRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Instance Risk Report section\n        if (auditReport['Instance Risk Report']) {\n          result += `## Instance Risk Assessment\\n\\n`;\n          const instanceRisk = auditReport['Instance Risk Report'];\n\n          if (typeof instanceRisk === 'object' && instanceRisk !== null) {\n            const entries = Object.entries(instanceRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No instance risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(instanceRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Add any additional sections that might be present\n        const knownSections = [\n          'Database Settings',\n          'Credentials Risk Report',\n          'Nodes Risk Report',\n          'Instance Risk Report',\n        ];\n        const additionalSections = Object.keys(auditReport).filter(\n          key => !knownSections.includes(key)\n        );\n\n        if (additionalSections.length > 0) {\n          result += `## Additional Audit Information\\n\\n`;\n          additionalSections.forEach(section => {\n            result += `### ${section}\\n\\n`;\n            result += '```json\\n';\n            result += JSON.stringify((auditReport as Record<string, unknown>)[section], null, 2);\n            result += '\\n```\\n\\n';\n          });\n        }\n\n        result += `---\\n\\n`;\n        result += `**Security Recommendations:**\\n`;\n        result += `- Review any identified risk issues above\\n`;\n        result += `- Ensure credentials are properly scoped and secured\\n`;\n        result += `- Regularly update n8n to the latest version\\n`;\n        result += `- Monitor and audit workflow access permissions\\n`;\n        result += `- Use environment variables for sensitive configuration\\n`;\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license') || error.message.includes('Enterprise')) {\n            throw new UserError(\n              `This operation may require an n8n Enterprise license. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to generate audit report: ${error.message}`);\n        }\n        throw new UserError('Failed to generate audit report with unknown error');\n      }\n    },\n  });\n}\n"],"version":3}