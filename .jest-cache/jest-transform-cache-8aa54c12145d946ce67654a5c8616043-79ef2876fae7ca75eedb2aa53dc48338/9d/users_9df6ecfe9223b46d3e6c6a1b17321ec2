322f999332080bf080235c58c8c44a97
/* istanbul ignore next */
function cov_1wh3369e51() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/users.ts";
  var hash = "a11880cafd1a573a31a9ad870da42965cdfa5c42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/users.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 6,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "3": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 82,
          column: 7
        }
      },
      "5": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "6": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "7": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 94
        }
      },
      "8": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "9": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 34
        }
      },
      "10": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "11": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "12": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "13": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "14": {
        start: {
          line: 51,
          column: 33
        },
        end: {
          line: 51,
          column: 63
        }
      },
      "15": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "16": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 65
        }
      },
      "17": {
        start: {
          line: 55,
          column: 29
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "18": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "19": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 87
        }
      },
      "20": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 54
        }
      },
      "21": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "22": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "23": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "24": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 64,
          column: 21
        }
      },
      "25": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 101
        }
      },
      "26": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 67,
          column: 21
        }
      },
      "27": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 104
        }
      },
      "28": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "29": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "30": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 95
        }
      },
      "31": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "32": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "33": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 82
        }
      },
      "34": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 79
        }
      },
      "35": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "36": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 38
        }
      },
      "37": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "38": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 94
        }
      },
      "39": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "40": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 62
        }
      },
      "41": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 77
        }
      },
      "42": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 49
        }
      },
      "43": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 55
        }
      },
      "44": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 53
        }
      },
      "45": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 89
        }
      },
      "46": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "47": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 92
        }
      },
      "48": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "49": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 92
        }
      },
      "50": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "51": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 95
        }
      },
      "52": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 30
        }
      },
      "53": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "54": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 80
        }
      },
      "55": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "56": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "57": {
        start: {
          line: 139,
          column: 27
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "58": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "59": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 94
        }
      },
      "60": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "61": {
        start: {
          line: 144,
          column: 33
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "62": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 151,
          column: 62
        }
      },
      "63": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "64": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 159,
          column: 17
        }
      },
      "65": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 83
        }
      },
      "66": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 80
        }
      },
      "67": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 197,
          column: 7
        }
      },
      "68": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 38
        }
      },
      "69": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "70": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 94
        }
      },
      "71": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "72": {
        start: {
          line: 182,
          column: 50
        },
        end: {
          line: 182,
          column: 54
        }
      },
      "73": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 43
        }
      },
      "74": {
        start: {
          line: 184,
          column: 29
        },
        end: {
          line: 184,
          column: 70
        }
      },
      "75": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 188,
          column: 78
        }
      },
      "76": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "77": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "78": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 80
        }
      },
      "79": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "80": {
        start: {
          line: 211,
          column: 27
        },
        end: {
          line: 211,
          column: 38
        }
      },
      "81": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "82": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 94
        }
      },
      "83": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "84": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "85": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 77
        }
      },
      "86": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 222,
          column: 17
        }
      },
      "87": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 221,
          column: 83
        }
      },
      "88": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "createUserTools",
        decl: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 31
          }
        },
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 18
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 56,
            column: 39
          }
        },
        loc: {
          start: {
            line: 56,
            column: 55
          },
          end: {
            line: 69,
            column: 17
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 18
          }
        },
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 95
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 138,
            column: 17
          },
          end: {
            line: 138,
            column: 18
          }
        },
        loc: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 162,
            column: 9
          }
        },
        line: 138
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 176,
            column: 17
          },
          end: {
            line: 176,
            column: 18
          }
        },
        loc: {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 196,
            column: 9
          }
        },
        line: 176
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 210,
            column: 17
          },
          end: {
            line: 210,
            column: 18
          }
        },
        loc: {
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 48,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 48,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 50,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 50,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 46
          },
          end: {
            line: 61,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 62
          },
          end: {
            line: 61,
            column: 75
          }
        }, {
          start: {
            line: 61,
            column: 78
          },
          end: {
            line: 61,
            column: 89
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 67,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 67,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 106,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 70
          }
        }, {
          start: {
            line: 106,
            column: 73
          },
          end: {
            line: 106,
            column: 84
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "14": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "15": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "18": {
        loc: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 188,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 47
          },
          end: {
            line: 188,
            column: 60
          }
        }, {
          start: {
            line: 188,
            column: 63
          },
          end: {
            line: 188,
            column: 74
          }
        }],
        line: 188
      },
      "19": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/users.ts",
      mappings: "AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AAIpC,6BAA6B;AAC7B,MAAM,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;IAC5B,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC;CACjD,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC;IAC/B,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IAC5C,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CAAC;AAEH,MAAM,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC;IAChC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,iCAAiC,CAAC;IAC1D,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wBAAwB,CAAC;IACtD,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC;IACpD,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC;IACrE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;CACxE,CAAC,CAAC;AAEH,MAAM,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC;IAChC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC;IAChD,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IACpC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACvC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACtC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE;IACrD,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;CACjC,CAAC,CAAC;AAEH,6BAA6B;AAC7B,MAAM,UAAU,eAAe,CAAC,SAAiC,EAAE,MAAW;IAC5E,kBAAkB;IAClB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,4DAA4D;QACzE,UAAU,EAAE,eAAe;QAC3B,WAAW,EAAE;YACX,KAAK,EAAE,gBAAgB;YACvB,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAAqC,EAAE,EAAE;YACvD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,OAAO,GAAsB,EAAE,CAAC;gBACtC,IAAI,IAAI,CAAC,KAAK;oBAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC3C,IAAI,IAAI,CAAC,MAAM;oBAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAE9C,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAEhD,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAC/B,OAAO,qCAAqC,CAAC;gBAC/C,CAAC;gBAED,IAAI,MAAM,GAAG,SAAS,QAAQ,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC;gBAE1D,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAa,EAAE,KAAa,EAAE,EAAE;oBACrD,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,MAAM,CAAC;oBACnE,MAAM,IAAI,YAAY,IAAI,CAAC,EAAE,IAAI,CAAC;oBAClC,MAAM,IAAI,eAAe,IAAI,CAAC,KAAK,IAAI,CAAC;oBACxC,MAAM,IAAI,cAAc,IAAI,CAAC,IAAI,IAAI,CAAC;oBACtC,MAAM,IAAI,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC;oBAC1E,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;wBACnB,MAAM,IAAI,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC;oBAC/E,CAAC;oBACD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;wBACpB,MAAM,IAAI,mBAAmB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC;oBAClF,CAAC;oBACD,MAAM,IAAI,IAAI,CAAC;gBACjB,CAAC,CAAC,CAAC;gBAEH,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;oBACxB,MAAM,IAAI,oBAAoB,QAAQ,CAAC,UAAU,yBAAyB,CAAC;gBAC7E,CAAC;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,SAAS,CAAC,yBAAyB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAChE,CAAC;gBACD,MAAM,IAAI,SAAS,CAAC,yCAAyC,CAAC,CAAC;YACjE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,gBAAgB;IAChB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,sDAAsD;QACnE,UAAU,EAAE,YAAY;QACxB,WAAW,EAAE;YACX,KAAK,EAAE,kBAAkB;YACzB,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAAkC,EAAE,EAAE;YACpD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAE/C,IAAI,MAAM,GAAG,WAAW,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,MAAM,CAAC;gBAC9D,MAAM,IAAI,WAAW,IAAI,CAAC,EAAE,IAAI,CAAC;gBACjC,MAAM,IAAI,cAAc,IAAI,CAAC,KAAK,IAAI,CAAC;gBACvC,MAAM,IAAI,aAAa,IAAI,CAAC,IAAI,IAAI,CAAC;gBACrC,MAAM,IAAI,eAAe,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC;gBAEzE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;oBACnB,MAAM,IAAI,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC;gBAC1E,CAAC;gBAED,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;oBACnB,MAAM,IAAI,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC;gBAC1E,CAAC;gBAED,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,MAAM,IAAI,kBAAkB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC;gBAC7E,CAAC;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,SAAS,CAAC,uBAAuB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC9D,CAAC;gBACD,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,aAAa;QACnB,WAAW,EAAE,+DAA+D;QAC5E,UAAU,EAAE,gBAAgB;QAC5B,WAAW,EAAE;YACX,KAAK,EAAE,iBAAiB;YACxB,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAAsC,EAAE,EAAE;YACxD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,QAAQ,GAAsB;oBAClC,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,CAAC;gBAEF,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAE/C,OAAO,CACL,gCAAgC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,cAAc,IAAI,CAAC,EAAE,IAAI;oBACxF,UAAU,IAAI,CAAC,KAAK,IAAI;oBACxB,SAAS,IAAI,CAAC,IAAI,EAAE,CACrB,CAAC;YACJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,SAAS,CAAC,0BAA0B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjE,CAAC;gBACD,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,aAAa;QACnB,WAAW,EAAE,oEAAoE;QACjF,UAAU,EAAE,gBAAgB;QAC5B,WAAW,EAAE;YACX,KAAK,EAAE,aAAa;YACpB,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAAsC,EAAE,EAAE;YACxD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,EAAE,GAAG,IAAI,CAAC;gBACvC,MAAM,QAAQ,GAAsB,UAAU,CAAC;gBAE/C,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAEvD,OAAO,CACL,gCAAgC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,UAAU,IAAI,CAAC,EAAE,KAAK;oBACrF,UAAU,IAAI,CAAC,KAAK,IAAI;oBACxB,SAAS,IAAI,CAAC,IAAI,IAAI;oBACtB,WAAW,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CACzD,CAAC;YACJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,SAAS,CAAC,0BAA0B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjE,CAAC;gBACD,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,aAAa;QACnB,WAAW,EAAE,2EAA2E;QACxF,UAAU,EAAE,YAAY;QACxB,WAAW,EAAE;YACX,KAAK,EAAE,aAAa;YACpB,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,IAAI;YACrB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAAkC,EAAE,EAAE;YACpD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,OAAO,wCAAwC,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/D,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,SAAS,CAAC,0BAA0B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjE,CAAC;gBACD,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/users.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nUser, CreateUserRequest, UpdateUserRequest, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst UserIdSchema = z.object({\n  userId: z.string().min(1, 'User ID is required'),\n});\n\nconst ListUsersSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateUserSchema = z.object({\n  email: z.string().email('Valid email address is required'),\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  role: z.enum(['admin', 'member', 'owner']).optional().default('member'),\n});\n\nconst UpdateUserSchema = z.object({\n  userId: z.string().min(1, 'User ID is required'),\n  email: z.string().email().optional(),\n  firstName: z.string().min(1).optional(),\n  lastName: z.string().min(1).optional(),\n  role: z.enum(['admin', 'member', 'owner']).optional(),\n  disabled: z.boolean().optional(),\n});\n\n// Tool registration function\nexport function createUserTools(getClient: () => N8nClient | null, server: any) {\n  // List users tool\n  server.addTool({\n    name: 'list-users',\n    description: 'List all users in the n8n instance with pagination support',\n    parameters: ListUsersSchema,\n    annotations: {\n      title: 'List n8n Users',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListUsersSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getUsers(options);\n\n        if (response.data.length === 0) {\n          return 'No users found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} user(s):\\n\\n`;\n\n        response.data.forEach((user: N8nUser, index: number) => {\n          result += `${index + 1}. **${user.firstName} ${user.lastName}**\\n`;\n          result += `   - ID: ${user.id}\\n`;\n          result += `   - Email: ${user.email}\\n`;\n          result += `   - Role: ${user.role}\\n`;\n          result += `   - Status: ${user.disabled ? '\uD83D\uDD34 Disabled' : '\uD83D\uDFE2 Active'}\\n`;\n          if (user.createdAt) {\n            result += `   - Created: ${new Date(user.createdAt).toLocaleDateString()}\\n`;\n          }\n          if (user.lastSeenAt) {\n            result += `   - Last Seen: ${new Date(user.lastSeenAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n\uD83D\uDCC4 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to list users: ${error.message}`);\n        }\n        throw new UserError('Failed to list users with unknown error');\n      }\n    },\n  });\n\n  // Get user tool\n  server.addTool({\n    name: 'get-user',\n    description: 'Get detailed information about a specific user by ID',\n    parameters: UserIdSchema,\n    annotations: {\n      title: 'Get User Details',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UserIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const user = await client.getUser(args.userId);\n\n        let result = `# User: ${user.firstName} ${user.lastName}\\n\\n`;\n        result += `**ID:** ${user.id}\\n`;\n        result += `**Email:** ${user.email}\\n`;\n        result += `**Role:** ${user.role}\\n`;\n        result += `**Status:** ${user.disabled ? '\uD83D\uDD34 Disabled' : '\uD83D\uDFE2 Active'}\\n`;\n\n        if (user.createdAt) {\n          result += `**Created:** ${new Date(user.createdAt).toLocaleString()}\\n`;\n        }\n\n        if (user.updatedAt) {\n          result += `**Updated:** ${new Date(user.updatedAt).toLocaleString()}\\n`;\n        }\n\n        if (user.lastSeenAt) {\n          result += `**Last Seen:** ${new Date(user.lastSeenAt).toLocaleString()}\\n`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get user: ${error.message}`);\n        }\n        throw new UserError('Failed to get user with unknown error');\n      }\n    },\n  });\n\n  // Create user tool\n  server.addTool({\n    name: 'create-user',\n    description: 'Create a new user in n8n with email, name, password, and role',\n    parameters: CreateUserSchema,\n    annotations: {\n      title: 'Create New User',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateUserSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const userData: CreateUserRequest = {\n          email: args.email,\n          firstName: args.firstName,\n          lastName: args.lastName,\n          password: args.password,\n          role: args.role,\n        };\n\n        const user = await client.createUser(userData);\n\n        return (\n          `\u2705 Successfully created user \"${user.firstName} ${user.lastName}\" with ID: ${user.id}\\n` +\n          `Email: ${user.email}\\n` +\n          `Role: ${user.role}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to create user: ${error.message}`);\n        }\n        throw new UserError('Failed to create user with unknown error');\n      }\n    },\n  });\n\n  // Update user tool\n  server.addTool({\n    name: 'update-user',\n    description: \"Update a user's information including email, name, role, or status\",\n    parameters: UpdateUserSchema,\n    annotations: {\n      title: 'Update User',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateUserSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { userId, ...updateData } = args;\n        const userData: UpdateUserRequest = updateData;\n\n        const user = await client.updateUser(userId, userData);\n\n        return (\n          `\u2705 Successfully updated user \"${user.firstName} ${user.lastName}\" (ID: ${user.id})\\n` +\n          `Email: ${user.email}\\n` +\n          `Role: ${user.role}\\n` +\n          `Status: ${user.disabled ? '\uD83D\uDD34 Disabled' : '\uD83D\uDFE2 Active'}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to update user: ${error.message}`);\n        }\n        throw new UserError('Failed to update user with unknown error');\n      }\n    },\n  });\n\n  // Delete user tool\n  server.addTool({\n    name: 'delete-user',\n    description: 'Delete a user from n8n permanently. WARNING: This action cannot be undone',\n    parameters: UserIdSchema,\n    annotations: {\n      title: 'Delete User',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UserIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteUser(args.userId);\n        return `\u2705 Successfully deleted user with ID: ${args.userId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to delete user: ${error.message}`);\n        }\n        throw new UserError('Failed to delete user with unknown error');\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a11880cafd1a573a31a9ad870da42965cdfa5c42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wh3369e51 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wh3369e51();
import { z } from 'zod';
import { UserError } from 'fastmcp';
// Zod schemas for validation
const UserIdSchema =
/* istanbul ignore next */
(cov_1wh3369e51().s[0]++, z.object({
  userId: z.string().min(1, 'User ID is required')
}));
const ListUsersSchema =
/* istanbul ignore next */
(cov_1wh3369e51().s[1]++, z.object({
  limit: z.number().min(1).max(100).optional(),
  cursor: z.string().optional()
}));
const CreateUserSchema =
/* istanbul ignore next */
(cov_1wh3369e51().s[2]++, z.object({
  email: z.string().email('Valid email address is required'),
  firstName: z.string().min(1, 'First name is required'),
  lastName: z.string().min(1, 'Last name is required'),
  password: z.string().min(8, 'Password must be at least 8 characters'),
  role: z.enum(['admin', 'member', 'owner']).optional().default('member')
}));
const UpdateUserSchema =
/* istanbul ignore next */
(cov_1wh3369e51().s[3]++, z.object({
  userId: z.string().min(1, 'User ID is required'),
  email: z.string().email().optional(),
  firstName: z.string().min(1).optional(),
  lastName: z.string().min(1).optional(),
  role: z.enum(['admin', 'member', 'owner']).optional(),
  disabled: z.boolean().optional()
}));
// Tool registration function
export function createUserTools(getClient, server) {
  /* istanbul ignore next */
  cov_1wh3369e51().f[0]++;
  cov_1wh3369e51().s[4]++;
  // List users tool
  server.addTool({
    name: 'list-users',
    description: 'List all users in the n8n instance with pagination support',
    parameters: ListUsersSchema,
    annotations: {
      title: 'List n8n Users',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1wh3369e51().f[1]++;
      const client =
      /* istanbul ignore next */
      (cov_1wh3369e51().s[5]++, getClient());
      /* istanbul ignore next */
      cov_1wh3369e51().s[6]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1wh3369e51().b[0][0]++;
        cov_1wh3369e51().s[7]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1wh3369e51().b[0][1]++;
      }
      cov_1wh3369e51().s[8]++;
      try {
        const options =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[9]++, {});
        /* istanbul ignore next */
        cov_1wh3369e51().s[10]++;
        if (args.limit) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[1][0]++;
          cov_1wh3369e51().s[11]++;
          options.limit = args.limit;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[1][1]++;
        }
        cov_1wh3369e51().s[12]++;
        if (args.cursor) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[2][0]++;
          cov_1wh3369e51().s[13]++;
          options.cursor = args.cursor;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[2][1]++;
        }
        const response =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[14]++, await client.getUsers(options));
        /* istanbul ignore next */
        cov_1wh3369e51().s[15]++;
        if (response.data.length === 0) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[3][0]++;
          cov_1wh3369e51().s[16]++;
          return 'No users found in the n8n instance.';
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[3][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[17]++, `Found ${response.data.length} user(s):\n\n`);
        /* istanbul ignore next */
        cov_1wh3369e51().s[18]++;
        response.data.forEach((user, index) => {
          /* istanbul ignore next */
          cov_1wh3369e51().f[2]++;
          cov_1wh3369e51().s[19]++;
          result += `${index + 1}. **${user.firstName} ${user.lastName}**\n`;
          /* istanbul ignore next */
          cov_1wh3369e51().s[20]++;
          result += `   - ID: ${user.id}\n`;
          /* istanbul ignore next */
          cov_1wh3369e51().s[21]++;
          result += `   - Email: ${user.email}\n`;
          /* istanbul ignore next */
          cov_1wh3369e51().s[22]++;
          result += `   - Role: ${user.role}\n`;
          /* istanbul ignore next */
          cov_1wh3369e51().s[23]++;
          result += `   - Status: ${user.disabled ?
          /* istanbul ignore next */
          (cov_1wh3369e51().b[4][0]++, '🔴 Disabled') :
          /* istanbul ignore next */
          (cov_1wh3369e51().b[4][1]++, '🟢 Active')}\n`;
          /* istanbul ignore next */
          cov_1wh3369e51().s[24]++;
          if (user.createdAt) {
            /* istanbul ignore next */
            cov_1wh3369e51().b[5][0]++;
            cov_1wh3369e51().s[25]++;
            result += `   - Created: ${new Date(user.createdAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1wh3369e51().b[5][1]++;
          }
          cov_1wh3369e51().s[26]++;
          if (user.lastSeenAt) {
            /* istanbul ignore next */
            cov_1wh3369e51().b[6][0]++;
            cov_1wh3369e51().s[27]++;
            result += `   - Last Seen: ${new Date(user.lastSeenAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1wh3369e51().b[6][1]++;
          }
          cov_1wh3369e51().s[28]++;
          result += '\n';
        });
        /* istanbul ignore next */
        cov_1wh3369e51().s[29]++;
        if (response.nextCursor) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[7][0]++;
          cov_1wh3369e51().s[30]++;
          result += `\n📄 Use cursor "${response.nextCursor}" to get the next page.`;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[7][1]++;
        }
        cov_1wh3369e51().s[31]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1wh3369e51().s[32]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[8][0]++;
          cov_1wh3369e51().s[33]++;
          throw new UserError(`Failed to list users: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[8][1]++;
        }
        cov_1wh3369e51().s[34]++;
        throw new UserError('Failed to list users with unknown error');
      }
    }
  });
  // Get user tool
  /* istanbul ignore next */
  cov_1wh3369e51().s[35]++;
  server.addTool({
    name: 'get-user',
    description: 'Get detailed information about a specific user by ID',
    parameters: UserIdSchema,
    annotations: {
      title: 'Get User Details',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1wh3369e51().f[3]++;
      const client =
      /* istanbul ignore next */
      (cov_1wh3369e51().s[36]++, getClient());
      /* istanbul ignore next */
      cov_1wh3369e51().s[37]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1wh3369e51().b[9][0]++;
        cov_1wh3369e51().s[38]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1wh3369e51().b[9][1]++;
      }
      cov_1wh3369e51().s[39]++;
      try {
        const user =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[40]++, await client.getUser(args.userId));
        let result =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[41]++, `# User: ${user.firstName} ${user.lastName}\n\n`);
        /* istanbul ignore next */
        cov_1wh3369e51().s[42]++;
        result += `**ID:** ${user.id}\n`;
        /* istanbul ignore next */
        cov_1wh3369e51().s[43]++;
        result += `**Email:** ${user.email}\n`;
        /* istanbul ignore next */
        cov_1wh3369e51().s[44]++;
        result += `**Role:** ${user.role}\n`;
        /* istanbul ignore next */
        cov_1wh3369e51().s[45]++;
        result += `**Status:** ${user.disabled ?
        /* istanbul ignore next */
        (cov_1wh3369e51().b[10][0]++, '🔴 Disabled') :
        /* istanbul ignore next */
        (cov_1wh3369e51().b[10][1]++, '🟢 Active')}\n`;
        /* istanbul ignore next */
        cov_1wh3369e51().s[46]++;
        if (user.createdAt) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[11][0]++;
          cov_1wh3369e51().s[47]++;
          result += `**Created:** ${new Date(user.createdAt).toLocaleString()}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[11][1]++;
        }
        cov_1wh3369e51().s[48]++;
        if (user.updatedAt) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[12][0]++;
          cov_1wh3369e51().s[49]++;
          result += `**Updated:** ${new Date(user.updatedAt).toLocaleString()}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[12][1]++;
        }
        cov_1wh3369e51().s[50]++;
        if (user.lastSeenAt) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[13][0]++;
          cov_1wh3369e51().s[51]++;
          result += `**Last Seen:** ${new Date(user.lastSeenAt).toLocaleString()}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[13][1]++;
        }
        cov_1wh3369e51().s[52]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1wh3369e51().s[53]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[14][0]++;
          cov_1wh3369e51().s[54]++;
          throw new UserError(`Failed to get user: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[14][1]++;
        }
        cov_1wh3369e51().s[55]++;
        throw new UserError('Failed to get user with unknown error');
      }
    }
  });
  // Create user tool
  /* istanbul ignore next */
  cov_1wh3369e51().s[56]++;
  server.addTool({
    name: 'create-user',
    description: 'Create a new user in n8n with email, name, password, and role',
    parameters: CreateUserSchema,
    annotations: {
      title: 'Create New User',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1wh3369e51().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_1wh3369e51().s[57]++, getClient());
      /* istanbul ignore next */
      cov_1wh3369e51().s[58]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1wh3369e51().b[15][0]++;
        cov_1wh3369e51().s[59]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1wh3369e51().b[15][1]++;
      }
      cov_1wh3369e51().s[60]++;
      try {
        const userData =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[61]++, {
          email: args.email,
          firstName: args.firstName,
          lastName: args.lastName,
          password: args.password,
          role: args.role
        });
        const user =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[62]++, await client.createUser(userData));
        /* istanbul ignore next */
        cov_1wh3369e51().s[63]++;
        return `✅ Successfully created user "${user.firstName} ${user.lastName}" with ID: ${user.id}\n` + `Email: ${user.email}\n` + `Role: ${user.role}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1wh3369e51().s[64]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[16][0]++;
          cov_1wh3369e51().s[65]++;
          throw new UserError(`Failed to create user: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[16][1]++;
        }
        cov_1wh3369e51().s[66]++;
        throw new UserError('Failed to create user with unknown error');
      }
    }
  });
  // Update user tool
  /* istanbul ignore next */
  cov_1wh3369e51().s[67]++;
  server.addTool({
    name: 'update-user',
    description: "Update a user's information including email, name, role, or status",
    parameters: UpdateUserSchema,
    annotations: {
      title: 'Update User',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1wh3369e51().f[5]++;
      const client =
      /* istanbul ignore next */
      (cov_1wh3369e51().s[68]++, getClient());
      /* istanbul ignore next */
      cov_1wh3369e51().s[69]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1wh3369e51().b[17][0]++;
        cov_1wh3369e51().s[70]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1wh3369e51().b[17][1]++;
      }
      cov_1wh3369e51().s[71]++;
      try {
        const {
          userId,
          ...updateData
        } =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[72]++, args);
        const userData =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[73]++, updateData);
        const user =
        /* istanbul ignore next */
        (cov_1wh3369e51().s[74]++, await client.updateUser(userId, userData));
        /* istanbul ignore next */
        cov_1wh3369e51().s[75]++;
        return `✅ Successfully updated user "${user.firstName} ${user.lastName}" (ID: ${user.id})\n` + `Email: ${user.email}\n` + `Role: ${user.role}\n` + `Status: ${user.disabled ?
        /* istanbul ignore next */
        (cov_1wh3369e51().b[18][0]++, '🔴 Disabled') :
        /* istanbul ignore next */
        (cov_1wh3369e51().b[18][1]++, '🟢 Active')}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1wh3369e51().s[76]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[19][0]++;
          cov_1wh3369e51().s[77]++;
          throw new UserError(`Failed to update user: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[19][1]++;
        }
        cov_1wh3369e51().s[78]++;
        throw new UserError('Failed to update user with unknown error');
      }
    }
  });
  // Delete user tool
  /* istanbul ignore next */
  cov_1wh3369e51().s[79]++;
  server.addTool({
    name: 'delete-user',
    description: 'Delete a user from n8n permanently. WARNING: This action cannot be undone',
    parameters: UserIdSchema,
    annotations: {
      title: 'Delete User',
      readOnlyHint: false,
      destructiveHint: true,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_1wh3369e51().f[6]++;
      const client =
      /* istanbul ignore next */
      (cov_1wh3369e51().s[80]++, getClient());
      /* istanbul ignore next */
      cov_1wh3369e51().s[81]++;
      if (!client) {
        /* istanbul ignore next */
        cov_1wh3369e51().b[20][0]++;
        cov_1wh3369e51().s[82]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_1wh3369e51().b[20][1]++;
      }
      cov_1wh3369e51().s[83]++;
      try {
        /* istanbul ignore next */
        cov_1wh3369e51().s[84]++;
        await client.deleteUser(args.userId);
        /* istanbul ignore next */
        cov_1wh3369e51().s[85]++;
        return `✅ Successfully deleted user with ID: ${args.userId}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_1wh3369e51().s[86]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_1wh3369e51().b[21][0]++;
          cov_1wh3369e51().s[87]++;
          throw new UserError(`Failed to delete user: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1wh3369e51().b[21][1]++;
        }
        cov_1wh3369e51().s[88]++;
        throw new UserError('Failed to delete user with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXdoMzM2OWU1MSIsImFjdHVhbENvdmVyYWdlIiwieiIsIlVzZXJFcnJvciIsIlVzZXJJZFNjaGVtYSIsInMiLCJvYmplY3QiLCJ1c2VySWQiLCJzdHJpbmciLCJtaW4iLCJMaXN0VXNlcnNTY2hlbWEiLCJsaW1pdCIsIm51bWJlciIsIm1heCIsIm9wdGlvbmFsIiwiY3Vyc29yIiwiQ3JlYXRlVXNlclNjaGVtYSIsImVtYWlsIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJwYXNzd29yZCIsInJvbGUiLCJlbnVtIiwiZGVmYXVsdCIsIlVwZGF0ZVVzZXJTY2hlbWEiLCJkaXNhYmxlZCIsImJvb2xlYW4iLCJjcmVhdGVVc2VyVG9vbHMiLCJnZXRDbGllbnQiLCJzZXJ2ZXIiLCJmIiwiYWRkVG9vbCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInBhcmFtZXRlcnMiLCJhbm5vdGF0aW9ucyIsInRpdGxlIiwicmVhZE9ubHlIaW50IiwiZGVzdHJ1Y3RpdmVIaW50IiwiaWRlbXBvdGVudEhpbnQiLCJvcGVuV29ybGRIaW50IiwiZXhlY3V0ZSIsImFyZ3MiLCJjbGllbnQiLCJiIiwib3B0aW9ucyIsInJlc3BvbnNlIiwiZ2V0VXNlcnMiLCJkYXRhIiwibGVuZ3RoIiwicmVzdWx0IiwiZm9yRWFjaCIsInVzZXIiLCJpbmRleCIsImlkIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImxhc3RTZWVuQXQiLCJuZXh0Q3Vyc29yIiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiLCJnZXRVc2VyIiwidG9Mb2NhbGVTdHJpbmciLCJ1cGRhdGVkQXQiLCJ1c2VyRGF0YSIsImNyZWF0ZVVzZXIiLCJ1cGRhdGVEYXRhIiwidXBkYXRlVXNlciIsImRlbGV0ZVVzZXIiXSwic291cmNlcyI6WyIvVXNlcnMvamVyZW15cGFya2VyL0Rlc2t0b3AvQ2xhdWRlIENvZGluZyBQcm9qZWN0cy9uOG4tbWNwLXNlcnZlci9zcmMvdG9vbHMvdXNlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5pbXBvcnQgeyBVc2VyRXJyb3IgfSBmcm9tICdmYXN0bWNwJztcbmltcG9ydCB7IE44bkNsaWVudCB9IGZyb20gJy4uL2NsaWVudC9uOG5DbGllbnQuanMnO1xuaW1wb3J0IHsgTjhuVXNlciwgQ3JlYXRlVXNlclJlcXVlc3QsIFVwZGF0ZVVzZXJSZXF1ZXN0LCBQYWdpbmF0aW9uT3B0aW9ucyB9IGZyb20gJy4uL3R5cGVzL244bi5qcyc7XG5cbi8vIFpvZCBzY2hlbWFzIGZvciB2YWxpZGF0aW9uXG5jb25zdCBVc2VySWRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHVzZXJJZDogei5zdHJpbmcoKS5taW4oMSwgJ1VzZXIgSUQgaXMgcmVxdWlyZWQnKSxcbn0pO1xuXG5jb25zdCBMaXN0VXNlcnNTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGxpbWl0OiB6Lm51bWJlcigpLm1pbigxKS5tYXgoMTAwKS5vcHRpb25hbCgpLFxuICBjdXJzb3I6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbn0pO1xuXG5jb25zdCBDcmVhdGVVc2VyU2NoZW1hID0gei5vYmplY3Qoe1xuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgnVmFsaWQgZW1haWwgYWRkcmVzcyBpcyByZXF1aXJlZCcpLFxuICBmaXJzdE5hbWU6IHouc3RyaW5nKCkubWluKDEsICdGaXJzdCBuYW1lIGlzIHJlcXVpcmVkJyksXG4gIGxhc3ROYW1lOiB6LnN0cmluZygpLm1pbigxLCAnTGFzdCBuYW1lIGlzIHJlcXVpcmVkJyksXG4gIHBhc3N3b3JkOiB6LnN0cmluZygpLm1pbig4LCAnUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMnKSxcbiAgcm9sZTogei5lbnVtKFsnYWRtaW4nLCAnbWVtYmVyJywgJ293bmVyJ10pLm9wdGlvbmFsKCkuZGVmYXVsdCgnbWVtYmVyJyksXG59KTtcblxuY29uc3QgVXBkYXRlVXNlclNjaGVtYSA9IHoub2JqZWN0KHtcbiAgdXNlcklkOiB6LnN0cmluZygpLm1pbigxLCAnVXNlciBJRCBpcyByZXF1aXJlZCcpLFxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgpLm9wdGlvbmFsKCksXG4gIGZpcnN0TmFtZTogei5zdHJpbmcoKS5taW4oMSkub3B0aW9uYWwoKSxcbiAgbGFzdE5hbWU6IHouc3RyaW5nKCkubWluKDEpLm9wdGlvbmFsKCksXG4gIHJvbGU6IHouZW51bShbJ2FkbWluJywgJ21lbWJlcicsICdvd25lciddKS5vcHRpb25hbCgpLFxuICBkaXNhYmxlZDogei5ib29sZWFuKCkub3B0aW9uYWwoKSxcbn0pO1xuXG4vLyBUb29sIHJlZ2lzdHJhdGlvbiBmdW5jdGlvblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVzZXJUb29scyhnZXRDbGllbnQ6ICgpID0+IE44bkNsaWVudCB8IG51bGwsIHNlcnZlcjogYW55KSB7XG4gIC8vIExpc3QgdXNlcnMgdG9vbFxuICBzZXJ2ZXIuYWRkVG9vbCh7XG4gICAgbmFtZTogJ2xpc3QtdXNlcnMnLFxuICAgIGRlc2NyaXB0aW9uOiAnTGlzdCBhbGwgdXNlcnMgaW4gdGhlIG44biBpbnN0YW5jZSB3aXRoIHBhZ2luYXRpb24gc3VwcG9ydCcsXG4gICAgcGFyYW1ldGVyczogTGlzdFVzZXJzU2NoZW1hLFxuICAgIGFubm90YXRpb25zOiB7XG4gICAgICB0aXRsZTogJ0xpc3QgbjhuIFVzZXJzJyxcbiAgICAgIHJlYWRPbmx5SGludDogdHJ1ZSxcbiAgICAgIGRlc3RydWN0aXZlSGludDogZmFsc2UsXG4gICAgICBpZGVtcG90ZW50SGludDogdHJ1ZSxcbiAgICAgIG9wZW5Xb3JsZEhpbnQ6IHRydWUsXG4gICAgfSxcbiAgICBleGVjdXRlOiBhc3luYyAoYXJnczogei5pbmZlcjx0eXBlb2YgTGlzdFVzZXJzU2NoZW1hPikgPT4ge1xuICAgICAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gICAgICBpZiAoIWNsaWVudCkge1xuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCduOG4gY2xpZW50IG5vdCBpbml0aWFsaXplZC4gUGxlYXNlIHJ1biBpbml0LW44biBmaXJzdC4nKTtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3Qgb3B0aW9uczogUGFnaW5hdGlvbk9wdGlvbnMgPSB7fTtcbiAgICAgICAgaWYgKGFyZ3MubGltaXQpIG9wdGlvbnMubGltaXQgPSBhcmdzLmxpbWl0O1xuICAgICAgICBpZiAoYXJncy5jdXJzb3IpIG9wdGlvbnMuY3Vyc29yID0gYXJncy5jdXJzb3I7XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnQuZ2V0VXNlcnMob3B0aW9ucyk7XG5cbiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuICdObyB1c2VycyBmb3VuZCBpbiB0aGUgbjhuIGluc3RhbmNlLic7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcmVzdWx0ID0gYEZvdW5kICR7cmVzcG9uc2UuZGF0YS5sZW5ndGh9IHVzZXIocyk6XFxuXFxuYDtcblxuICAgICAgICByZXNwb25zZS5kYXRhLmZvckVhY2goKHVzZXI6IE44blVzZXIsIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICByZXN1bHQgKz0gYCR7aW5kZXggKyAxfS4gKioke3VzZXIuZmlyc3ROYW1lfSAke3VzZXIubGFzdE5hbWV9KipcXG5gO1xuICAgICAgICAgIHJlc3VsdCArPSBgICAgLSBJRDogJHt1c2VyLmlkfVxcbmA7XG4gICAgICAgICAgcmVzdWx0ICs9IGAgICAtIEVtYWlsOiAke3VzZXIuZW1haWx9XFxuYDtcbiAgICAgICAgICByZXN1bHQgKz0gYCAgIC0gUm9sZTogJHt1c2VyLnJvbGV9XFxuYDtcbiAgICAgICAgICByZXN1bHQgKz0gYCAgIC0gU3RhdHVzOiAke3VzZXIuZGlzYWJsZWQgPyAn8J+UtCBEaXNhYmxlZCcgOiAn8J+foiBBY3RpdmUnfVxcbmA7XG4gICAgICAgICAgaWYgKHVzZXIuY3JlYXRlZEF0KSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gYCAgIC0gQ3JlYXRlZDogJHtuZXcgRGF0ZSh1c2VyLmNyZWF0ZWRBdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9XFxuYDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHVzZXIubGFzdFNlZW5BdCkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IGAgICAtIExhc3QgU2VlbjogJHtuZXcgRGF0ZSh1c2VyLmxhc3RTZWVuQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygpfVxcbmA7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlc3VsdCArPSAnXFxuJztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHJlc3BvbnNlLm5leHRDdXJzb3IpIHtcbiAgICAgICAgICByZXN1bHQgKz0gYFxcbvCfk4QgVXNlIGN1cnNvciBcIiR7cmVzcG9uc2UubmV4dEN1cnNvcn1cIiB0byBnZXQgdGhlIG5leHQgcGFnZS5gO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcihgRmFpbGVkIHRvIGxpc3QgdXNlcnM6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCdGYWlsZWQgdG8gbGlzdCB1c2VycyB3aXRoIHVua25vd24gZXJyb3InKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcblxuICAvLyBHZXQgdXNlciB0b29sXG4gIHNlcnZlci5hZGRUb29sKHtcbiAgICBuYW1lOiAnZ2V0LXVzZXInLFxuICAgIGRlc2NyaXB0aW9uOiAnR2V0IGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgdXNlciBieSBJRCcsXG4gICAgcGFyYW1ldGVyczogVXNlcklkU2NoZW1hLFxuICAgIGFubm90YXRpb25zOiB7XG4gICAgICB0aXRsZTogJ0dldCBVc2VyIERldGFpbHMnLFxuICAgICAgcmVhZE9ubHlIaW50OiB0cnVlLFxuICAgICAgZGVzdHJ1Y3RpdmVIaW50OiBmYWxzZSxcbiAgICAgIGlkZW1wb3RlbnRIaW50OiB0cnVlLFxuICAgICAgb3BlbldvcmxkSGludDogdHJ1ZSxcbiAgICB9LFxuICAgIGV4ZWN1dGU6IGFzeW5jIChhcmdzOiB6LmluZmVyPHR5cGVvZiBVc2VySWRTY2hlbWE+KSA9PiB7XG4gICAgICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgICAgIGlmICghY2xpZW50KSB7XG4gICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoJ244biBjbGllbnQgbm90IGluaXRpYWxpemVkLiBQbGVhc2UgcnVuIGluaXQtbjhuIGZpcnN0LicpO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgY2xpZW50LmdldFVzZXIoYXJncy51c2VySWQpO1xuXG4gICAgICAgIGxldCByZXN1bHQgPSBgIyBVc2VyOiAke3VzZXIuZmlyc3ROYW1lfSAke3VzZXIubGFzdE5hbWV9XFxuXFxuYDtcbiAgICAgICAgcmVzdWx0ICs9IGAqKklEOioqICR7dXNlci5pZH1cXG5gO1xuICAgICAgICByZXN1bHQgKz0gYCoqRW1haWw6KiogJHt1c2VyLmVtYWlsfVxcbmA7XG4gICAgICAgIHJlc3VsdCArPSBgKipSb2xlOioqICR7dXNlci5yb2xlfVxcbmA7XG4gICAgICAgIHJlc3VsdCArPSBgKipTdGF0dXM6KiogJHt1c2VyLmRpc2FibGVkID8gJ/CflLQgRGlzYWJsZWQnIDogJ/Cfn6IgQWN0aXZlJ31cXG5gO1xuXG4gICAgICAgIGlmICh1c2VyLmNyZWF0ZWRBdCkge1xuICAgICAgICAgIHJlc3VsdCArPSBgKipDcmVhdGVkOioqICR7bmV3IERhdGUodXNlci5jcmVhdGVkQXQpLnRvTG9jYWxlU3RyaW5nKCl9XFxuYDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1c2VyLnVwZGF0ZWRBdCkge1xuICAgICAgICAgIHJlc3VsdCArPSBgKipVcGRhdGVkOioqICR7bmV3IERhdGUodXNlci51cGRhdGVkQXQpLnRvTG9jYWxlU3RyaW5nKCl9XFxuYDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1c2VyLmxhc3RTZWVuQXQpIHtcbiAgICAgICAgICByZXN1bHQgKz0gYCoqTGFzdCBTZWVuOioqICR7bmV3IERhdGUodXNlci5sYXN0U2VlbkF0KS50b0xvY2FsZVN0cmluZygpfVxcbmA7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKGBGYWlsZWQgdG8gZ2V0IHVzZXI6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCdGYWlsZWQgdG8gZ2V0IHVzZXIgd2l0aCB1bmtub3duIGVycm9yJyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gQ3JlYXRlIHVzZXIgdG9vbFxuICBzZXJ2ZXIuYWRkVG9vbCh7XG4gICAgbmFtZTogJ2NyZWF0ZS11c2VyJyxcbiAgICBkZXNjcmlwdGlvbjogJ0NyZWF0ZSBhIG5ldyB1c2VyIGluIG44biB3aXRoIGVtYWlsLCBuYW1lLCBwYXNzd29yZCwgYW5kIHJvbGUnLFxuICAgIHBhcmFtZXRlcnM6IENyZWF0ZVVzZXJTY2hlbWEsXG4gICAgYW5ub3RhdGlvbnM6IHtcbiAgICAgIHRpdGxlOiAnQ3JlYXRlIE5ldyBVc2VyJyxcbiAgICAgIHJlYWRPbmx5SGludDogZmFsc2UsXG4gICAgICBkZXN0cnVjdGl2ZUhpbnQ6IGZhbHNlLFxuICAgICAgaWRlbXBvdGVudEhpbnQ6IGZhbHNlLFxuICAgICAgb3BlbldvcmxkSGludDogdHJ1ZSxcbiAgICB9LFxuICAgIGV4ZWN1dGU6IGFzeW5jIChhcmdzOiB6LmluZmVyPHR5cGVvZiBDcmVhdGVVc2VyU2NoZW1hPikgPT4ge1xuICAgICAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gICAgICBpZiAoIWNsaWVudCkge1xuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCduOG4gY2xpZW50IG5vdCBpbml0aWFsaXplZC4gUGxlYXNlIHJ1biBpbml0LW44biBmaXJzdC4nKTtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlckRhdGE6IENyZWF0ZVVzZXJSZXF1ZXN0ID0ge1xuICAgICAgICAgIGVtYWlsOiBhcmdzLmVtYWlsLFxuICAgICAgICAgIGZpcnN0TmFtZTogYXJncy5maXJzdE5hbWUsXG4gICAgICAgICAgbGFzdE5hbWU6IGFyZ3MubGFzdE5hbWUsXG4gICAgICAgICAgcGFzc3dvcmQ6IGFyZ3MucGFzc3dvcmQsXG4gICAgICAgICAgcm9sZTogYXJncy5yb2xlLFxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBjbGllbnQuY3JlYXRlVXNlcih1c2VyRGF0YSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICBg4pyFIFN1Y2Nlc3NmdWxseSBjcmVhdGVkIHVzZXIgXCIke3VzZXIuZmlyc3ROYW1lfSAke3VzZXIubGFzdE5hbWV9XCIgd2l0aCBJRDogJHt1c2VyLmlkfVxcbmAgK1xuICAgICAgICAgIGBFbWFpbDogJHt1c2VyLmVtYWlsfVxcbmAgK1xuICAgICAgICAgIGBSb2xlOiAke3VzZXIucm9sZX1gXG4gICAgICAgICk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoYEZhaWxlZCB0byBjcmVhdGUgdXNlcjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgdXNlciB3aXRoIHVua25vd24gZXJyb3InKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcblxuICAvLyBVcGRhdGUgdXNlciB0b29sXG4gIHNlcnZlci5hZGRUb29sKHtcbiAgICBuYW1lOiAndXBkYXRlLXVzZXInLFxuICAgIGRlc2NyaXB0aW9uOiBcIlVwZGF0ZSBhIHVzZXIncyBpbmZvcm1hdGlvbiBpbmNsdWRpbmcgZW1haWwsIG5hbWUsIHJvbGUsIG9yIHN0YXR1c1wiLFxuICAgIHBhcmFtZXRlcnM6IFVwZGF0ZVVzZXJTY2hlbWEsXG4gICAgYW5ub3RhdGlvbnM6IHtcbiAgICAgIHRpdGxlOiAnVXBkYXRlIFVzZXInLFxuICAgICAgcmVhZE9ubHlIaW50OiBmYWxzZSxcbiAgICAgIGRlc3RydWN0aXZlSGludDogZmFsc2UsXG4gICAgICBpZGVtcG90ZW50SGludDogdHJ1ZSxcbiAgICAgIG9wZW5Xb3JsZEhpbnQ6IHRydWUsXG4gICAgfSxcbiAgICBleGVjdXRlOiBhc3luYyAoYXJnczogei5pbmZlcjx0eXBlb2YgVXBkYXRlVXNlclNjaGVtYT4pID0+IHtcbiAgICAgIGNvbnN0IGNsaWVudCA9IGdldENsaWVudCgpO1xuICAgICAgaWYgKCFjbGllbnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcignbjhuIGNsaWVudCBub3QgaW5pdGlhbGl6ZWQuIFBsZWFzZSBydW4gaW5pdC1uOG4gZmlyc3QuJyk7XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHsgdXNlcklkLCAuLi51cGRhdGVEYXRhIH0gPSBhcmdzO1xuICAgICAgICBjb25zdCB1c2VyRGF0YTogVXBkYXRlVXNlclJlcXVlc3QgPSB1cGRhdGVEYXRhO1xuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBjbGllbnQudXBkYXRlVXNlcih1c2VySWQsIHVzZXJEYXRhKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGDinIUgU3VjY2Vzc2Z1bGx5IHVwZGF0ZWQgdXNlciBcIiR7dXNlci5maXJzdE5hbWV9ICR7dXNlci5sYXN0TmFtZX1cIiAoSUQ6ICR7dXNlci5pZH0pXFxuYCArXG4gICAgICAgICAgYEVtYWlsOiAke3VzZXIuZW1haWx9XFxuYCArXG4gICAgICAgICAgYFJvbGU6ICR7dXNlci5yb2xlfVxcbmAgK1xuICAgICAgICAgIGBTdGF0dXM6ICR7dXNlci5kaXNhYmxlZCA/ICfwn5S0IERpc2FibGVkJyA6ICfwn5+iIEFjdGl2ZSd9YFxuICAgICAgICApO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKGBGYWlsZWQgdG8gdXBkYXRlIHVzZXI6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIHVzZXIgd2l0aCB1bmtub3duIGVycm9yJyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gRGVsZXRlIHVzZXIgdG9vbFxuICBzZXJ2ZXIuYWRkVG9vbCh7XG4gICAgbmFtZTogJ2RlbGV0ZS11c2VyJyxcbiAgICBkZXNjcmlwdGlvbjogJ0RlbGV0ZSBhIHVzZXIgZnJvbSBuOG4gcGVybWFuZW50bHkuIFdBUk5JTkc6IFRoaXMgYWN0aW9uIGNhbm5vdCBiZSB1bmRvbmUnLFxuICAgIHBhcmFtZXRlcnM6IFVzZXJJZFNjaGVtYSxcbiAgICBhbm5vdGF0aW9uczoge1xuICAgICAgdGl0bGU6ICdEZWxldGUgVXNlcicsXG4gICAgICByZWFkT25seUhpbnQ6IGZhbHNlLFxuICAgICAgZGVzdHJ1Y3RpdmVIaW50OiB0cnVlLFxuICAgICAgaWRlbXBvdGVudEhpbnQ6IHRydWUsXG4gICAgICBvcGVuV29ybGRIaW50OiB0cnVlLFxuICAgIH0sXG4gICAgZXhlY3V0ZTogYXN5bmMgKGFyZ3M6IHouaW5mZXI8dHlwZW9mIFVzZXJJZFNjaGVtYT4pID0+IHtcbiAgICAgIGNvbnN0IGNsaWVudCA9IGdldENsaWVudCgpO1xuICAgICAgaWYgKCFjbGllbnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcignbjhuIGNsaWVudCBub3QgaW5pdGlhbGl6ZWQuIFBsZWFzZSBydW4gaW5pdC1uOG4gZmlyc3QuJyk7XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGNsaWVudC5kZWxldGVVc2VyKGFyZ3MudXNlcklkKTtcbiAgICAgICAgcmV0dXJuIGDinIUgU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgdXNlciB3aXRoIElEOiAke2FyZ3MudXNlcklkfWA7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoYEZhaWxlZCB0byBkZWxldGUgdXNlcjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoJ0ZhaWxlZCB0byBkZWxldGUgdXNlciB3aXRoIHVua25vd24gZXJyb3InKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CVTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBcEJWLFNBQVNFLENBQUMsUUFBUSxLQUFLO0FBQ3ZCLFNBQVNDLFNBQVMsUUFBUSxTQUFTO0FBSW5DO0FBQ0EsTUFBTUMsWUFBWTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBSyxDQUFBLE9BQUdILENBQUMsQ0FBQ0ks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