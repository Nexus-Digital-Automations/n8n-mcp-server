{"version":3,"names":["cov_1wh3369e51","actualCoverage","z","UserError","UserIdSchema","s","object","userId","string","min","ListUsersSchema","limit","number","max","optional","cursor","CreateUserSchema","email","firstName","lastName","password","role","enum","default","UpdateUserSchema","disabled","boolean","createUserTools","getClient","server","f","addTool","name","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","client","b","options","response","getUsers","data","length","result","forEach","user","index","id","createdAt","Date","toLocaleDateString","lastSeenAt","nextCursor","error","Error","message","getUser","toLocaleString","updatedAt","userData","createUser","updateData","updateUser","deleteUser"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/users.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nUser, CreateUserRequest, UpdateUserRequest, PaginationOptions } from '../types/n8n.js';\n\n// Zod schemas for validation\nconst UserIdSchema = z.object({\n  userId: z.string().min(1, 'User ID is required'),\n});\n\nconst ListUsersSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateUserSchema = z.object({\n  email: z.string().email('Valid email address is required'),\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  role: z.enum(['admin', 'member', 'owner']).optional().default('member'),\n});\n\nconst UpdateUserSchema = z.object({\n  userId: z.string().min(1, 'User ID is required'),\n  email: z.string().email().optional(),\n  firstName: z.string().min(1).optional(),\n  lastName: z.string().min(1).optional(),\n  role: z.enum(['admin', 'member', 'owner']).optional(),\n  disabled: z.boolean().optional(),\n});\n\n// Tool registration function\nexport function createUserTools(getClient: () => N8nClient | null, server: any) {\n  // List users tool\n  server.addTool({\n    name: 'list-users',\n    description: 'List all users in the n8n instance with pagination support',\n    parameters: ListUsersSchema,\n    annotations: {\n      title: 'List n8n Users',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListUsersSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getUsers(options);\n\n        if (response.data.length === 0) {\n          return 'No users found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} user(s):\\n\\n`;\n\n        response.data.forEach((user: N8nUser, index: number) => {\n          result += `${index + 1}. **${user.firstName} ${user.lastName}**\\n`;\n          result += `   - ID: ${user.id}\\n`;\n          result += `   - Email: ${user.email}\\n`;\n          result += `   - Role: ${user.role}\\n`;\n          result += `   - Status: ${user.disabled ? 'ðŸ”´ Disabled' : 'ðŸŸ¢ Active'}\\n`;\n          if (user.createdAt) {\n            result += `   - Created: ${new Date(user.createdAt).toLocaleDateString()}\\n`;\n          }\n          if (user.lastSeenAt) {\n            result += `   - Last Seen: ${new Date(user.lastSeenAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\nðŸ“„ Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to list users: ${error.message}`);\n        }\n        throw new UserError('Failed to list users with unknown error');\n      }\n    },\n  });\n\n  // Get user tool\n  server.addTool({\n    name: 'get-user',\n    description: 'Get detailed information about a specific user by ID',\n    parameters: UserIdSchema,\n    annotations: {\n      title: 'Get User Details',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UserIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const user = await client.getUser(args.userId);\n\n        let result = `# User: ${user.firstName} ${user.lastName}\\n\\n`;\n        result += `**ID:** ${user.id}\\n`;\n        result += `**Email:** ${user.email}\\n`;\n        result += `**Role:** ${user.role}\\n`;\n        result += `**Status:** ${user.disabled ? 'ðŸ”´ Disabled' : 'ðŸŸ¢ Active'}\\n`;\n\n        if (user.createdAt) {\n          result += `**Created:** ${new Date(user.createdAt).toLocaleString()}\\n`;\n        }\n\n        if (user.updatedAt) {\n          result += `**Updated:** ${new Date(user.updatedAt).toLocaleString()}\\n`;\n        }\n\n        if (user.lastSeenAt) {\n          result += `**Last Seen:** ${new Date(user.lastSeenAt).toLocaleString()}\\n`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get user: ${error.message}`);\n        }\n        throw new UserError('Failed to get user with unknown error');\n      }\n    },\n  });\n\n  // Create user tool\n  server.addTool({\n    name: 'create-user',\n    description: 'Create a new user in n8n with email, name, password, and role',\n    parameters: CreateUserSchema,\n    annotations: {\n      title: 'Create New User',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateUserSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const userData: CreateUserRequest = {\n          email: args.email,\n          firstName: args.firstName,\n          lastName: args.lastName,\n          password: args.password,\n          role: args.role,\n        };\n\n        const user = await client.createUser(userData);\n\n        return (\n          `âœ… Successfully created user \"${user.firstName} ${user.lastName}\" with ID: ${user.id}\\n` +\n          `Email: ${user.email}\\n` +\n          `Role: ${user.role}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to create user: ${error.message}`);\n        }\n        throw new UserError('Failed to create user with unknown error');\n      }\n    },\n  });\n\n  // Update user tool\n  server.addTool({\n    name: 'update-user',\n    description: \"Update a user's information including email, name, role, or status\",\n    parameters: UpdateUserSchema,\n    annotations: {\n      title: 'Update User',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateUserSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { userId, ...updateData } = args;\n        const userData: UpdateUserRequest = updateData;\n\n        const user = await client.updateUser(userId, userData);\n\n        return (\n          `âœ… Successfully updated user \"${user.firstName} ${user.lastName}\" (ID: ${user.id})\\n` +\n          `Email: ${user.email}\\n` +\n          `Role: ${user.role}\\n` +\n          `Status: ${user.disabled ? 'ðŸ”´ Disabled' : 'ðŸŸ¢ Active'}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to update user: ${error.message}`);\n        }\n        throw new UserError('Failed to update user with unknown error');\n      }\n    },\n  });\n\n  // Delete user tool\n  server.addTool({\n    name: 'delete-user',\n    description: 'Delete a user from n8n permanently. WARNING: This action cannot be undone',\n    parameters: UserIdSchema,\n    annotations: {\n      title: 'Delete User',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UserIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteUser(args.userId);\n        return `âœ… Successfully deleted user with ID: ${args.userId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to delete user: ${error.message}`);\n        }\n        throw new UserError('Failed to delete user with unknown error');\n      }\n    },\n  });\n}\n"],"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","ignoreList":[]}