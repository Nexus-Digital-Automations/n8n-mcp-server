c8f59712961cebfc1dff546c129ae55a
"use strict";

/* istanbul ignore next */
function cov_2rr464tyiy() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/templates.ts";
  var hash = "fbb20f97d0127d1f4dd880f5a64e27715eadde26";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/templates.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "5": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "6": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "7": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "8": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 70,
          column: 2
        }
      },
      "9": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 222,
          column: 1
        }
      },
      "10": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "11": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 338,
          column: 7
        }
      },
      "12": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "13": {
        start: {
          line: 270,
          column: 35
        },
        end: {
          line: 270,
          column: 37
        }
      },
      "14": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 276,
          column: 19
        }
      },
      "15": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 275,
          column: 21
        }
      },
      "16": {
        start: {
          line: 274,
          column: 24
        },
        end: {
          line: 274,
          column: 101
        }
      },
      "17": {
        start: {
          line: 274,
          column: 72
        },
        end: {
          line: 274,
          column: 97
        }
      },
      "18": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 280,
          column: 17
        }
      },
      "19": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 108
        }
      },
      "20": {
        start: {
          line: 279,
          column: 67
        },
        end: {
          line: 279,
          column: 106
        }
      },
      "21": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 288,
          column: 17
        }
      },
      "22": {
        start: {
          line: 283,
          column: 34
        },
        end: {
          line: 283,
          column: 58
        }
      },
      "23": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 287,
          column: 72
        }
      },
      "24": {
        start: {
          line: 284,
          column: 67
        },
        end: {
          line: 287,
          column: 70
        }
      },
      "25": {
        start: {
          line: 286,
          column: 52
        },
        end: {
          line: 286,
          column: 85
        }
      },
      "26": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 292,
          column: 17
        }
      },
      "27": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 133
        }
      },
      "28": {
        start: {
          line: 291,
          column: 67
        },
        end: {
          line: 291,
          column: 131
        }
      },
      "29": {
        start: {
          line: 291,
          column: 89
        },
        end: {
          line: 291,
          column: 130
        }
      },
      "30": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 65
        }
      },
      "31": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "32": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 301,
          column: 88
        }
      },
      "33": {
        start: {
          line: 303,
          column: 29
        },
        end: {
          line: 303,
          column: 69
        }
      },
      "34": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 98
        }
      },
      "35": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 81
        }
      },
      "36": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 61
        }
      },
      "37": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 67
        }
      },
      "38": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 327,
          column: 19
        }
      },
      "39": {
        start: {
          line: 309,
          column: 43
        },
        end: {
          line: 313,
          column: 34
        }
      },
      "40": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 86
        }
      },
      "41": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 122
        }
      },
      "42": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 128
        }
      },
      "43": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 75
        }
      },
      "44": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 68
        }
      },
      "45": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 81
        }
      },
      "46": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 78
        }
      },
      "47": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 72
        }
      },
      "48": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 48
        }
      },
      "49": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 325,
          column: 23
        }
      },
      "50": {
        start: {
          line: 324,
          column: 24
        },
        end: {
          line: 324,
          column: 51
        }
      },
      "51": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 108
        }
      },
      "52": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 47
        }
      },
      "53": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 329,
          column: 105
        }
      },
      "54": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 94
        }
      },
      "55": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 96
        }
      },
      "56": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 30
        }
      },
      "57": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 94
        }
      },
      "58": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 529,
          column: 7
        }
      },
      "59": {
        start: {
          line: 352,
          column: 27
        },
        end: {
          line: 352,
          column: 38
        }
      },
      "60": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 355,
          column: 13
        }
      },
      "61": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 104
        }
      },
      "62": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 527,
          column: 13
        }
      },
      "63": {
        start: {
          line: 357,
          column: 33
        },
        end: {
          line: 357,
          column: 74
        }
      },
      "64": {
        start: {
          line: 359,
          column: 33
        },
        end: {
          line: 394,
          column: 17
        }
      },
      "65": {
        start: {
          line: 396,
          column: 40
        },
        end: {
          line: 396,
          column: 49
        }
      },
      "66": {
        start: {
          line: 397,
          column: 41
        },
        end: {
          line: 397,
          column: 50
        }
      },
      "67": {
        start: {
          line: 398,
          column: 40
        },
        end: {
          line: 398,
          column: 42
        }
      },
      "68": {
        start: {
          line: 399,
          column: 41
        },
        end: {
          line: 399,
          column: 43
        }
      },
      "69": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 455,
          column: 19
        }
      },
      "70": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 404,
          column: 21
        }
      },
      "71": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 403,
          column: 105
        }
      },
      "72": {
        start: {
          line: 403,
          column: 74
        },
        end: {
          line: 403,
          column: 103
        }
      },
      "73": {
        start: {
          line: 406,
          column: 37
        },
        end: {
          line: 406,
          column: 60
        }
      },
      "74": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "75": {
        start: {
          line: 408,
          column: 24
        },
        end: {
          line: 408,
          column: 66
        }
      },
      "76": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "77": {
        start: {
          line: 411,
          column: 24
        },
        end: {
          line: 411,
          column: 54
        }
      },
      "78": {
        start: {
          line: 413,
          column: 25
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "79": {
        start: {
          line: 414,
          column: 24
        },
        end: {
          line: 414,
          column: 62
        }
      },
      "80": {
        start: {
          line: 416,
          column: 25
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "81": {
        start: {
          line: 417,
          column: 24
        },
        end: {
          line: 417,
          column: 57
        }
      },
      "82": {
        start: {
          line: 419,
          column: 25
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "83": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 60
        }
      },
      "84": {
        start: {
          line: 425,
          column: 20
        },
        end: {
          line: 454,
          column: 21
        }
      },
      "85": {
        start: {
          line: 426,
          column: 24
        },
        end: {
          line: 453,
          column: 27
        }
      },
      "86": {
        start: {
          line: 427,
          column: 28
        },
        end: {
          line: 452,
          column: 29
        }
      },
      "87": {
        start: {
          line: 429,
          column: 32
        },
        end: {
          line: 451,
          column: 33
        }
      },
      "88": {
        start: {
          line: 431,
          column: 36
        },
        end: {
          line: 431,
          column: 102
        }
      },
      "89": {
        start: {
          line: 432,
          column: 36
        },
        end: {
          line: 432,
          column: 97
        }
      },
      "90": {
        start: {
          line: 434,
          column: 37
        },
        end: {
          line: 451,
          column: 33
        }
      },
      "91": {
        start: {
          line: 436,
          column: 36
        },
        end: {
          line: 436,
          column: 109
        }
      },
      "92": {
        start: {
          line: 437,
          column: 36
        },
        end: {
          line: 437,
          column: 95
        }
      },
      "93": {
        start: {
          line: 439,
          column: 37
        },
        end: {
          line: 451,
          column: 33
        }
      },
      "94": {
        start: {
          line: 441,
          column: 36
        },
        end: {
          line: 441,
          column: 96
        }
      },
      "95": {
        start: {
          line: 442,
          column: 36
        },
        end: {
          line: 442,
          column: 102
        }
      },
      "96": {
        start: {
          line: 444,
          column: 37
        },
        end: {
          line: 451,
          column: 33
        }
      },
      "97": {
        start: {
          line: 449,
          column: 36
        },
        end: {
          line: 449,
          column: 103
        }
      },
      "98": {
        start: {
          line: 450,
          column: 36
        },
        end: {
          line: 450,
          column: 102
        }
      },
      "99": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 80
        }
      },
      "100": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 86
        }
      },
      "101": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 61
        }
      },
      "102": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 63
        }
      },
      "103": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 467,
          column: 17
        }
      },
      "104": {
        start: {
          line: 463,
          column: 20
        },
        end: {
          line: 466,
          column: 24
        }
      },
      "105": {
        start: {
          line: 463,
          column: 83
        },
        end: {
          line: 466,
          column: 21
        }
      },
      "106": {
        start: {
          line: 469,
          column: 35
        },
        end: {
          line: 469,
          column: 82
        }
      },
      "107": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 84
        }
      },
      "108": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 91
        }
      },
      "109": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 67
        }
      },
      "110": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 75
        }
      },
      "111": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 474,
          column: 95
        }
      },
      "112": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 59
        }
      },
      "113": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 476,
          column: 76
        }
      },
      "114": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 79
        }
      },
      "115": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 88
        }
      },
      "116": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 485,
          column: 17
        }
      },
      "117": {
        start: {
          line: 480,
          column: 20
        },
        end: {
          line: 480,
          column: 67
        }
      },
      "118": {
        start: {
          line: 481,
          column: 20
        },
        end: {
          line: 483,
          column: 23
        }
      },
      "119": {
        start: {
          line: 482,
          column: 24
        },
        end: {
          line: 482,
          column: 54
        }
      },
      "120": {
        start: {
          line: 484,
          column: 20
        },
        end: {
          line: 484,
          column: 41
        }
      },
      "121": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 492,
          column: 17
        }
      },
      "122": {
        start: {
          line: 487,
          column: 20
        },
        end: {
          line: 487,
          column: 64
        }
      },
      "123": {
        start: {
          line: 488,
          column: 20
        },
        end: {
          line: 490,
          column: 23
        }
      },
      "124": {
        start: {
          line: 489,
          column: 24
        },
        end: {
          line: 489,
          column: 57
        }
      },
      "125": {
        start: {
          line: 491,
          column: 20
        },
        end: {
          line: 491,
          column: 41
        }
      },
      "126": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 500,
          column: 17
        }
      },
      "127": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 494,
          column: 70
        }
      },
      "128": {
        start: {
          line: 495,
          column: 20
        },
        end: {
          line: 495,
          column: 125
        }
      },
      "129": {
        start: {
          line: 496,
          column: 20
        },
        end: {
          line: 498,
          column: 23
        }
      },
      "130": {
        start: {
          line: 497,
          column: 24
        },
        end: {
          line: 497,
          column: 55
        }
      },
      "131": {
        start: {
          line: 499,
          column: 20
        },
        end: {
          line: 499,
          column: 41
        }
      },
      "132": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 60
        }
      },
      "133": {
        start: {
          line: 502,
          column: 16
        },
        end: {
          line: 510,
          column: 17
        }
      },
      "134": {
        start: {
          line: 503,
          column: 20
        },
        end: {
          line: 503,
          column: 95
        }
      },
      "135": {
        start: {
          line: 504,
          column: 20
        },
        end: {
          line: 506,
          column: 23
        }
      },
      "136": {
        start: {
          line: 505,
          column: 24
        },
        end: {
          line: 505,
          column: 94
        }
      },
      "137": {
        start: {
          line: 509,
          column: 20
        },
        end: {
          line: 509,
          column: 124
        }
      },
      "138": {
        start: {
          line: 511,
          column: 16
        },
        end: {
          line: 511,
          column: 37
        }
      },
      "139": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 512,
          column: 56
        }
      },
      "140": {
        start: {
          line: 513,
          column: 16
        },
        end: {
          line: 513,
          column: 95
        }
      },
      "141": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 61
        }
      },
      "142": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 78
        }
      },
      "143": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 95
        }
      },
      "144": {
        start: {
          line: 517,
          column: 16
        },
        end: {
          line: 517,
          column: 103
        }
      },
      "145": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 95
        }
      },
      "146": {
        start: {
          line: 519,
          column: 16
        },
        end: {
          line: 519,
          column: 86
        }
      },
      "147": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 63
        }
      },
      "148": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 521,
          column: 94
        }
      },
      "149": {
        start: {
          line: 522,
          column: 16
        },
        end: {
          line: 522,
          column: 113
        }
      },
      "150": {
        start: {
          line: 523,
          column: 16
        },
        end: {
          line: 523,
          column: 36
        }
      },
      "151": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 526,
          column: 102
        }
      },
      "152": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 702,
          column: 7
        }
      },
      "153": {
        start: {
          line: 543,
          column: 27
        },
        end: {
          line: 543,
          column: 38
        }
      },
      "154": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 546,
          column: 13
        }
      },
      "155": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 545,
          column: 104
        }
      },
      "156": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 700,
          column: 13
        }
      },
      "157": {
        start: {
          line: 548,
          column: 37
        },
        end: {
          line: 548,
          column: 54
        }
      },
      "158": {
        start: {
          line: 550,
          column: 33
        },
        end: {
          line: 550,
          column: 45
        }
      },
      "159": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 553,
          column: 17
        }
      },
      "160": {
        start: {
          line: 552,
          column: 20
        },
        end: {
          line: 552,
          column: 100
        }
      },
      "161": {
        start: {
          line: 555,
          column: 37
        },
        end: {
          line: 555,
          column: 82
        }
      },
      "162": {
        start: {
          line: 557,
          column: 16
        },
        end: {
          line: 569,
          column: 17
        }
      },
      "163": {
        start: {
          line: 558,
          column: 20
        },
        end: {
          line: 568,
          column: 23
        }
      },
      "164": {
        start: {
          line: 559,
          column: 24
        },
        end: {
          line: 566,
          column: 25
        }
      },
      "165": {
        start: {
          line: 560,
          column: 28
        },
        end: {
          line: 565,
          column: 31
        }
      },
      "166": {
        start: {
          line: 561,
          column: 51
        },
        end: {
          line: 561,
          column: 77
        }
      },
      "167": {
        start: {
          line: 562,
          column: 32
        },
        end: {
          line: 564,
          column: 33
        }
      },
      "168": {
        start: {
          line: 563,
          column: 36
        },
        end: {
          line: 563,
          column: 93
        }
      },
      "169": {
        start: {
          line: 567,
          column: 24
        },
        end: {
          line: 567,
          column: 36
        }
      },
      "170": {
        start: {
          line: 571,
          column: 16
        },
        end: {
          line: 585,
          column: 17
        }
      },
      "171": {
        start: {
          line: 572,
          column: 20
        },
        end: {
          line: 584,
          column: 23
        }
      },
      "172": {
        start: {
          line: 573,
          column: 24
        },
        end: {
          line: 582,
          column: 25
        }
      },
      "173": {
        start: {
          line: 574,
          column: 28
        },
        end: {
          line: 581,
          column: 31
        }
      },
      "174": {
        start: {
          line: 575,
          column: 32
        },
        end: {
          line: 580,
          column: 33
        }
      },
      "175": {
        start: {
          line: 576,
          column: 36
        },
        end: {
          line: 579,
          column: 38
        }
      },
      "176": {
        start: {
          line: 583,
          column: 24
        },
        end: {
          line: 583,
          column: 36
        }
      },
      "177": {
        start: {
          line: 587,
          column: 34
        },
        end: {
          line: 587,
          column: 43
        }
      },
      "178": {
        start: {
          line: 588,
          column: 16
        },
        end: {
          line: 596,
          column: 19
        }
      },
      "179": {
        start: {
          line: 589,
          column: 34
        },
        end: {
          line: 589,
          column: 97
        }
      },
      "180": {
        start: {
          line: 590,
          column: 20
        },
        end: {
          line: 590,
          column: 50
        }
      },
      "181": {
        start: {
          line: 591,
          column: 20
        },
        end: {
          line: 595,
          column: 22
        }
      },
      "182": {
        start: {
          line: 598,
          column: 39
        },
        end: {
          line: 598,
          column: 41
        }
      },
      "183": {
        start: {
          line: 599,
          column: 16
        },
        end: {
          line: 613,
          column: 19
        }
      },
      "184": {
        start: {
          line: 600,
          column: 38
        },
        end: {
          line: 600,
          column: 62
        }
      },
      "185": {
        start: {
          line: 601,
          column: 20
        },
        end: {
          line: 612,
          column: 21
        }
      },
      "186": {
        start: {
          line: 602,
          column: 51
        },
        end: {
          line: 602,
          column: 53
        }
      },
      "187": {
        start: {
          line: 603,
          column: 24
        },
        end: {
          line: 610,
          column: 27
        }
      },
      "188": {
        start: {
          line: 604,
          column: 28
        },
        end: {
          line: 609,
          column: 29
        }
      },
      "189": {
        start: {
          line: 605,
          column: 32
        },
        end: {
          line: 608,
          column: 36
        }
      },
      "190": {
        start: {
          line: 605,
          column: 90
        },
        end: {
          line: 608,
          column: 33
        }
      },
      "191": {
        start: {
          line: 611,
          column: 24
        },
        end: {
          line: 611,
          column: 71
        }
      },
      "192": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 58
        }
      },
      "193": {
        start: {
          line: 616,
          column: 46
        },
        end: {
          line: 622,
          column: 17
        }
      },
      "194": {
        start: {
          line: 623,
          column: 36
        },
        end: {
          line: 623,
          column: 86
        }
      },
      "195": {
        start: {
          line: 624,
          column: 29
        },
        end: {
          line: 624,
          column: 67
        }
      },
      "196": {
        start: {
          line: 625,
          column: 16
        },
        end: {
          line: 625,
          column: 76
        }
      },
      "197": {
        start: {
          line: 626,
          column: 16
        },
        end: {
          line: 626,
          column: 65
        }
      },
      "198": {
        start: {
          line: 627,
          column: 16
        },
        end: {
          line: 627,
          column: 94
        }
      },
      "199": {
        start: {
          line: 628,
          column: 16
        },
        end: {
          line: 628,
          column: 79
        }
      },
      "200": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 629,
          column: 80
        }
      },
      "201": {
        start: {
          line: 631,
          column: 16
        },
        end: {
          line: 640,
          column: 17
        }
      },
      "202": {
        start: {
          line: 632,
          column: 20
        },
        end: {
          line: 632,
          column: 61
        }
      },
      "203": {
        start: {
          line: 633,
          column: 20
        },
        end: {
          line: 633,
          column: 76
        }
      },
      "204": {
        start: {
          line: 634,
          column: 20
        },
        end: {
          line: 634,
          column: 88
        }
      },
      "205": {
        start: {
          line: 635,
          column: 20
        },
        end: {
          line: 635,
          column: 92
        }
      },
      "206": {
        start: {
          line: 636,
          column: 20
        },
        end: {
          line: 638,
          column: 21
        }
      },
      "207": {
        start: {
          line: 637,
          column: 24
        },
        end: {
          line: 637,
          column: 85
        }
      },
      "208": {
        start: {
          line: 639,
          column: 20
        },
        end: {
          line: 639,
          column: 35
        }
      },
      "209": {
        start: {
          line: 642,
          column: 16
        },
        end: {
          line: 648,
          column: 17
        }
      },
      "210": {
        start: {
          line: 643,
          column: 20
        },
        end: {
          line: 643,
          column: 67
        }
      },
      "211": {
        start: {
          line: 644,
          column: 20
        },
        end: {
          line: 646,
          column: 23
        }
      },
      "212": {
        start: {
          line: 645,
          column: 24
        },
        end: {
          line: 645,
          column: 63
        }
      },
      "213": {
        start: {
          line: 647,
          column: 20
        },
        end: {
          line: 647,
          column: 35
        }
      },
      "214": {
        start: {
          line: 650,
          column: 16
        },
        end: {
          line: 656,
          column: 17
        }
      },
      "215": {
        start: {
          line: 651,
          column: 20
        },
        end: {
          line: 651,
          column: 68
        }
      },
      "216": {
        start: {
          line: 652,
          column: 20
        },
        end: {
          line: 654,
          column: 23
        }
      },
      "217": {
        start: {
          line: 653,
          column: 24
        },
        end: {
          line: 653,
          column: 67
        }
      },
      "218": {
        start: {
          line: 655,
          column: 20
        },
        end: {
          line: 655,
          column: 35
        }
      },
      "219": {
        start: {
          line: 658,
          column: 42
        },
        end: {
          line: 658,
          column: 54
        }
      },
      "220": {
        start: {
          line: 659,
          column: 16
        },
        end: {
          line: 683,
          column: 17
        }
      },
      "221": {
        start: {
          line: 660,
          column: 32
        },
        end: {
          line: 660,
          column: 62
        }
      },
      "222": {
        start: {
          line: 661,
          column: 20
        },
        end: {
          line: 668,
          column: 21
        }
      },
      "223": {
        start: {
          line: 662,
          column: 24
        },
        end: {
          line: 662,
          column: 65
        }
      },
      "224": {
        start: {
          line: 663,
          column: 24
        },
        end: {
          line: 663,
          column: 79
        }
      },
      "225": {
        start: {
          line: 664,
          column: 24
        },
        end: {
          line: 666,
          column: 27
        }
      },
      "226": {
        start: {
          line: 665,
          column: 28
        },
        end: {
          line: 665,
          column: 52
        }
      },
      "227": {
        start: {
          line: 667,
          column: 24
        },
        end: {
          line: 667,
          column: 39
        }
      },
      "228": {
        start: {
          line: 669,
          column: 20
        },
        end: {
          line: 675,
          column: 21
        }
      },
      "229": {
        start: {
          line: 670,
          column: 24
        },
        end: {
          line: 670,
          column: 74
        }
      },
      "230": {
        start: {
          line: 671,
          column: 24
        },
        end: {
          line: 673,
          column: 27
        }
      },
      "231": {
        start: {
          line: 672,
          column: 28
        },
        end: {
          line: 672,
          column: 55
        }
      },
      "232": {
        start: {
          line: 674,
          column: 24
        },
        end: {
          line: 674,
          column: 39
        }
      },
      "233": {
        start: {
          line: 676,
          column: 20
        },
        end: {
          line: 682,
          column: 21
        }
      },
      "234": {
        start: {
          line: 677,
          column: 24
        },
        end: {
          line: 677,
          column: 58
        }
      },
      "235": {
        start: {
          line: 678,
          column: 24
        },
        end: {
          line: 680,
          column: 27
        }
      },
      "236": {
        start: {
          line: 679,
          column: 28
        },
        end: {
          line: 679,
          column: 54
        }
      },
      "237": {
        start: {
          line: 681,
          column: 24
        },
        end: {
          line: 681,
          column: 39
        }
      },
      "238": {
        start: {
          line: 684,
          column: 16
        },
        end: {
          line: 684,
          column: 47
        }
      },
      "239": {
        start: {
          line: 685,
          column: 16
        },
        end: {
          line: 685,
          column: 101
        }
      },
      "240": {
        start: {
          line: 686,
          column: 16
        },
        end: {
          line: 686,
          column: 95
        }
      },
      "241": {
        start: {
          line: 687,
          column: 16
        },
        end: {
          line: 687,
          column: 97
        }
      },
      "242": {
        start: {
          line: 688,
          column: 16
        },
        end: {
          line: 690,
          column: 17
        }
      },
      "243": {
        start: {
          line: 689,
          column: 20
        },
        end: {
          line: 689,
          column: 97
        }
      },
      "244": {
        start: {
          line: 691,
          column: 16
        },
        end: {
          line: 691,
          column: 100
        }
      },
      "245": {
        start: {
          line: 692,
          column: 16
        },
        end: {
          line: 692,
          column: 52
        }
      },
      "246": {
        start: {
          line: 693,
          column: 16
        },
        end: {
          line: 693,
          column: 91
        }
      },
      "247": {
        start: {
          line: 694,
          column: 16
        },
        end: {
          line: 694,
          column: 94
        }
      },
      "248": {
        start: {
          line: 695,
          column: 16
        },
        end: {
          line: 695,
          column: 103
        }
      },
      "249": {
        start: {
          line: 696,
          column: 16
        },
        end: {
          line: 696,
          column: 30
        }
      },
      "250": {
        start: {
          line: 699,
          column: 16
        },
        end: {
          line: 699,
          column: 102
        }
      },
      "251": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 884,
          column: 7
        }
      },
      "252": {
        start: {
          line: 716,
          column: 27
        },
        end: {
          line: 716,
          column: 38
        }
      },
      "253": {
        start: {
          line: 717,
          column: 12
        },
        end: {
          line: 719,
          column: 13
        }
      },
      "254": {
        start: {
          line: 718,
          column: 16
        },
        end: {
          line: 718,
          column: 104
        }
      },
      "255": {
        start: {
          line: 720,
          column: 12
        },
        end: {
          line: 882,
          column: 13
        }
      },
      "256": {
        start: {
          line: 721,
          column: 32
        },
        end: {
          line: 721,
          column: 34
        }
      },
      "257": {
        start: {
          line: 722,
          column: 16
        },
        end: {
          line: 729,
          column: 17
        }
      },
      "258": {
        start: {
          line: 723,
          column: 37
        },
        end: {
          line: 723,
          column: 78
        }
      },
      "259": {
        start: {
          line: 724,
          column: 20
        },
        end: {
          line: 724,
          column: 43
        }
      },
      "260": {
        start: {
          line: 727,
          column: 37
        },
        end: {
          line: 727,
          column: 77
        }
      },
      "261": {
        start: {
          line: 728,
          column: 20
        },
        end: {
          line: 728,
          column: 46
        }
      },
      "262": {
        start: {
          line: 730,
          column: 31
        },
        end: {
          line: 730,
          column: 64
        }
      },
      "263": {
        start: {
          line: 731,
          column: 16
        },
        end: {
          line: 731,
          column: 82
        }
      },
      "264": {
        start: {
          line: 732,
          column: 16
        },
        end: {
          line: 732,
          column: 76
        }
      },
      "265": {
        start: {
          line: 733,
          column: 16
        },
        end: {
          line: 733,
          column: 72
        }
      },
      "266": {
        start: {
          line: 734,
          column: 39
        },
        end: {
          line: 734,
          column: 41
        }
      },
      "267": {
        start: {
          line: 735,
          column: 16
        },
        end: {
          line: 805,
          column: 17
        }
      },
      "268": {
        start: {
          line: 736,
          column: 20
        },
        end: {
          line: 737,
          column: 33
        }
      },
      "269": {
        start: {
          line: 737,
          column: 24
        },
        end: {
          line: 737,
          column: 33
        }
      },
      "270": {
        start: {
          line: 738,
          column: 39
        },
        end: {
          line: 738,
          column: 90
        }
      },
      "271": {
        start: {
          line: 738,
          column: 66
        },
        end: {
          line: 738,
          column: 89
        }
      },
      "272": {
        start: {
          line: 739,
          column: 44
        },
        end: {
          line: 739,
          column: 112
        }
      },
      "273": {
        start: {
          line: 741,
          column: 20
        },
        end: {
          line: 752,
          column: 21
        }
      },
      "274": {
        start: {
          line: 742,
          column: 49
        },
        end: {
          line: 742,
          column: 84
        }
      },
      "275": {
        start: {
          line: 743,
          column: 24
        },
        end: {
          line: 751,
          column: 25
        }
      },
      "276": {
        start: {
          line: 744,
          column: 28
        },
        end: {
          line: 745,
          column: 67
        }
      },
      "277": {
        start: {
          line: 745,
          column: 32
        },
        end: {
          line: 745,
          column: 67
        }
      },
      "278": {
        start: {
          line: 746,
          column: 28
        },
        end: {
          line: 750,
          column: 31
        }
      },
      "279": {
        start: {
          line: 754,
          column: 20
        },
        end: {
          line: 765,
          column: 21
        }
      },
      "280": {
        start: {
          line: 755,
          column: 42
        },
        end: {
          line: 755,
          column: 84
        }
      },
      "281": {
        start: {
          line: 756,
          column: 24
        },
        end: {
          line: 764,
          column: 25
        }
      },
      "282": {
        start: {
          line: 757,
          column: 28
        },
        end: {
          line: 758,
          column: 75
        }
      },
      "283": {
        start: {
          line: 758,
          column: 32
        },
        end: {
          line: 758,
          column: 75
        }
      },
      "284": {
        start: {
          line: 759,
          column: 28
        },
        end: {
          line: 763,
          column: 31
        }
      },
      "285": {
        start: {
          line: 767,
          column: 20
        },
        end: {
          line: 778,
          column: 21
        }
      },
      "286": {
        start: {
          line: 768,
          column: 43
        },
        end: {
          line: 768,
          column: 80
        }
      },
      "287": {
        start: {
          line: 769,
          column: 24
        },
        end: {
          line: 777,
          column: 25
        }
      },
      "288": {
        start: {
          line: 770,
          column: 28
        },
        end: {
          line: 771,
          column: 70
        }
      },
      "289": {
        start: {
          line: 771,
          column: 32
        },
        end: {
          line: 771,
          column: 70
        }
      },
      "290": {
        start: {
          line: 772,
          column: 28
        },
        end: {
          line: 776,
          column: 31
        }
      },
      "291": {
        start: {
          line: 780,
          column: 20
        },
        end: {
          line: 791,
          column: 21
        }
      },
      "292": {
        start: {
          line: 781,
          column: 50
        },
        end: {
          line: 781,
          column: 86
        }
      },
      "293": {
        start: {
          line: 782,
          column: 24
        },
        end: {
          line: 790,
          column: 25
        }
      },
      "294": {
        start: {
          line: 783,
          column: 28
        },
        end: {
          line: 784,
          column: 68
        }
      },
      "295": {
        start: {
          line: 784,
          column: 32
        },
        end: {
          line: 784,
          column: 68
        }
      },
      "296": {
        start: {
          line: 785,
          column: 28
        },
        end: {
          line: 789,
          column: 31
        }
      },
      "297": {
        start: {
          line: 793,
          column: 20
        },
        end: {
          line: 804,
          column: 21
        }
      },
      "298": {
        start: {
          line: 794,
          column: 40
        },
        end: {
          line: 794,
          column: 76
        }
      },
      "299": {
        start: {
          line: 795,
          column: 24
        },
        end: {
          line: 803,
          column: 25
        }
      },
      "300": {
        start: {
          line: 796,
          column: 28
        },
        end: {
          line: 797,
          column: 69
        }
      },
      "301": {
        start: {
          line: 797,
          column: 32
        },
        end: {
          line: 797,
          column: 69
        }
      },
      "302": {
        start: {
          line: 798,
          column: 28
        },
        end: {
          line: 802,
          column: 31
        }
      },
      "303": {
        start: {
          line: 807,
          column: 16
        },
        end: {
          line: 815,
          column: 17
        }
      },
      "304": {
        start: {
          line: 808,
          column: 20
        },
        end: {
          line: 808,
          column: 96
        }
      },
      "305": {
        start: {
          line: 809,
          column: 20
        },
        end: {
          line: 809,
          column: 57
        }
      },
      "306": {
        start: {
          line: 810,
          column: 20
        },
        end: {
          line: 810,
          column: 74
        }
      },
      "307": {
        start: {
          line: 811,
          column: 20
        },
        end: {
          line: 811,
          column: 70
        }
      },
      "308": {
        start: {
          line: 812,
          column: 20
        },
        end: {
          line: 812,
          column: 78
        }
      },
      "309": {
        start: {
          line: 813,
          column: 20
        },
        end: {
          line: 813,
          column: 100
        }
      },
      "310": {
        start: {
          line: 814,
          column: 20
        },
        end: {
          line: 814,
          column: 36
        }
      },
      "311": {
        start: {
          line: 816,
          column: 16
        },
        end: {
          line: 839,
          column: 19
        }
      },
      "312": {
        start: {
          line: 817,
          column: 20
        },
        end: {
          line: 817,
          column: 62
        }
      },
      "313": {
        start: {
          line: 817,
          column: 43
        },
        end: {
          line: 817,
          column: 60
        }
      },
      "314": {
        start: {
          line: 818,
          column: 40
        },
        end: {
          line: 818,
          column: 70
        }
      },
      "315": {
        start: {
          line: 819,
          column: 20
        },
        end: {
          line: 819,
          column: 130
        }
      },
      "316": {
        start: {
          line: 820,
          column: 20
        },
        end: {
          line: 823,
          column: 21
        }
      },
      "317": {
        start: {
          line: 821,
          column: 24
        },
        end: {
          line: 821,
          column: 84
        }
      },
      "318": {
        start: {
          line: 822,
          column: 24
        },
        end: {
          line: 822,
          column: 93
        }
      },
      "319": {
        start: {
          line: 824,
          column: 20
        },
        end: {
          line: 824,
          column: 90
        }
      },
      "320": {
        start: {
          line: 825,
          column: 20
        },
        end: {
          line: 838,
          column: 23
        }
      },
      "321": {
        start: {
          line: 826,
          column: 43
        },
        end: {
          line: 832,
          column: 48
        }
      },
      "322": {
        start: {
          line: 833,
          column: 24
        },
        end: {
          line: 833,
          column: 118
        }
      },
      "323": {
        start: {
          line: 834,
          column: 24
        },
        end: {
          line: 836,
          column: 27
        }
      },
      "324": {
        start: {
          line: 835,
          column: 28
        },
        end: {
          line: 835,
          column: 59
        }
      },
      "325": {
        start: {
          line: 837,
          column: 24
        },
        end: {
          line: 837,
          column: 41
        }
      },
      "326": {
        start: {
          line: 841,
          column: 16
        },
        end: {
          line: 873,
          column: 17
        }
      },
      "327": {
        start: {
          line: 842,
          column: 20
        },
        end: {
          line: 842,
          column: 74
        }
      },
      "328": {
        start: {
          line: 843,
          column: 44
        },
        end: {
          line: 843,
          column: 46
        }
      },
      "329": {
        start: {
          line: 845,
          column: 58
        },
        end: {
          line: 845,
          column: 171
        }
      },
      "330": {
        start: {
          line: 845,
          column: 87
        },
        end: {
          line: 845,
          column: 170
        }
      },
      "331": {
        start: {
          line: 845,
          column: 136
        },
        end: {
          line: 845,
          column: 169
        }
      },
      "332": {
        start: {
          line: 846,
          column: 20
        },
        end: {
          line: 848,
          column: 21
        }
      },
      "333": {
        start: {
          line: 847,
          column: 24
        },
        end: {
          line: 847,
          column: 176
        }
      },
      "334": {
        start: {
          line: 850,
          column: 49
        },
        end: {
          line: 850,
          column: 84
        }
      },
      "335": {
        start: {
          line: 851,
          column: 49
        },
        end: {
          line: 851,
          column: 103
        }
      },
      "336": {
        start: {
          line: 851,
          column: 86
        },
        end: {
          line: 851,
          column: 102
        }
      },
      "337": {
        start: {
          line: 852,
          column: 20
        },
        end: {
          line: 854,
          column: 21
        }
      },
      "338": {
        start: {
          line: 853,
          column: 24
        },
        end: {
          line: 853,
          column: 209
        }
      },
      "339": {
        start: {
          line: 856,
          column: 48
        },
        end: {
          line: 856,
          column: 96
        }
      },
      "340": {
        start: {
          line: 856,
          column: 68
        },
        end: {
          line: 856,
          column: 95
        }
      },
      "341": {
        start: {
          line: 857,
          column: 52
        },
        end: {
          line: 857,
          column: 94
        }
      },
      "342": {
        start: {
          line: 858,
          column: 20
        },
        end: {
          line: 860,
          column: 21
        }
      },
      "343": {
        start: {
          line: 859,
          column: 24
        },
        end: {
          line: 859,
          column: 174
        }
      },
      "344": {
        start: {
          line: 861,
          column: 20
        },
        end: {
          line: 863,
          column: 21
        }
      },
      "345": {
        start: {
          line: 862,
          column: 24
        },
        end: {
          line: 862,
          column: 142
        }
      },
      "346": {
        start: {
          line: 864,
          column: 20
        },
        end: {
          line: 866,
          column: 23
        }
      },
      "347": {
        start: {
          line: 865,
          column: 24
        },
        end: {
          line: 865,
          column: 61
        }
      },
      "348": {
        start: {
          line: 867,
          column: 20
        },
        end: {
          line: 867,
          column: 37
        }
      },
      "349": {
        start: {
          line: 869,
          column: 20
        },
        end: {
          line: 869,
          column: 65
        }
      },
      "350": {
        start: {
          line: 870,
          column: 20
        },
        end: {
          line: 872,
          column: 23
        }
      },
      "351": {
        start: {
          line: 871,
          column: 24
        },
        end: {
          line: 871,
          column: 87
        }
      },
      "352": {
        start: {
          line: 874,
          column: 16
        },
        end: {
          line: 874,
          column: 54
        }
      },
      "353": {
        start: {
          line: 875,
          column: 16
        },
        end: {
          line: 875,
          column: 106
        }
      },
      "354": {
        start: {
          line: 876,
          column: 16
        },
        end: {
          line: 876,
          column: 98
        }
      },
      "355": {
        start: {
          line: 877,
          column: 16
        },
        end: {
          line: 877,
          column: 97
        }
      },
      "356": {
        start: {
          line: 878,
          column: 16
        },
        end: {
          line: 878,
          column: 32
        }
      },
      "357": {
        start: {
          line: 881,
          column: 16
        },
        end: {
          line: 881,
          column: 103
        }
      },
      "358": {
        start: {
          line: 886,
          column: 4
        },
        end: {
          line: 1063,
          column: 7
        }
      },
      "359": {
        start: {
          line: 898,
          column: 12
        },
        end: {
          line: 1061,
          column: 13
        }
      },
      "360": {
        start: {
          line: 899,
          column: 36
        },
        end: {
          line: 899,
          column: 77
        }
      },
      "361": {
        start: {
          line: 900,
          column: 16
        },
        end: {
          line: 900,
          column: 83
        }
      },
      "362": {
        start: {
          line: 901,
          column: 16
        },
        end: {
          line: 901,
          column: 76
        }
      },
      "363": {
        start: {
          line: 903,
          column: 16
        },
        end: {
          line: 923,
          column: 17
        }
      },
      "364": {
        start: {
          line: 904,
          column: 20
        },
        end: {
          line: 904,
          column: 84
        }
      },
      "365": {
        start: {
          line: 905,
          column: 20
        },
        end: {
          line: 905,
          column: 70
        }
      },
      "366": {
        start: {
          line: 906,
          column: 20
        },
        end: {
          line: 906,
          column: 114
        }
      },
      "367": {
        start: {
          line: 907,
          column: 20
        },
        end: {
          line: 907,
          column: 107
        }
      },
      "368": {
        start: {
          line: 908,
          column: 20
        },
        end: {
          line: 908,
          column: 100
        }
      },
      "369": {
        start: {
          line: 909,
          column: 20
        },
        end: {
          line: 909,
          column: 109
        }
      },
      "370": {
        start: {
          line: 910,
          column: 20
        },
        end: {
          line: 910,
          column: 106
        }
      },
      "371": {
        start: {
          line: 911,
          column: 20
        },
        end: {
          line: 911,
          column: 67
        }
      },
      "372": {
        start: {
          line: 912,
          column: 20
        },
        end: {
          line: 912,
          column: 102
        }
      },
      "373": {
        start: {
          line: 913,
          column: 20
        },
        end: {
          line: 913,
          column: 113
        }
      },
      "374": {
        start: {
          line: 914,
          column: 20
        },
        end: {
          line: 914,
          column: 114
        }
      },
      "375": {
        start: {
          line: 915,
          column: 20
        },
        end: {
          line: 915,
          column: 114
        }
      },
      "376": {
        start: {
          line: 916,
          column: 20
        },
        end: {
          line: 922,
          column: 21
        }
      },
      "377": {
        start: {
          line: 917,
          column: 24
        },
        end: {
          line: 917,
          column: 75
        }
      },
      "378": {
        start: {
          line: 918,
          column: 24
        },
        end: {
          line: 918,
          column: 52
        }
      },
      "379": {
        start: {
          line: 919,
          column: 24
        },
        end: {
          line: 919,
          column: 80
        }
      },
      "380": {
        start: {
          line: 920,
          column: 24
        },
        end: {
          line: 920,
          column: 123
        }
      },
      "381": {
        start: {
          line: 921,
          column: 24
        },
        end: {
          line: 921,
          column: 54
        }
      },
      "382": {
        start: {
          line: 925,
          column: 16
        },
        end: {
          line: 958,
          column: 17
        }
      },
      "383": {
        start: {
          line: 926,
          column: 20
        },
        end: {
          line: 926,
          column: 75
        }
      },
      "384": {
        start: {
          line: 927,
          column: 20
        },
        end: {
          line: 927,
          column: 74
        }
      },
      "385": {
        start: {
          line: 928,
          column: 20
        },
        end: {
          line: 928,
          column: 103
        }
      },
      "386": {
        start: {
          line: 929,
          column: 20
        },
        end: {
          line: 929,
          column: 103
        }
      },
      "387": {
        start: {
          line: 930,
          column: 20
        },
        end: {
          line: 930,
          column: 103
        }
      },
      "388": {
        start: {
          line: 931,
          column: 20
        },
        end: {
          line: 931,
          column: 104
        }
      },
      "389": {
        start: {
          line: 932,
          column: 20
        },
        end: {
          line: 932,
          column: 89
        }
      },
      "390": {
        start: {
          line: 933,
          column: 20
        },
        end: {
          line: 933,
          column: 64
        }
      },
      "391": {
        start: {
          line: 934,
          column: 20
        },
        end: {
          line: 934,
          column: 99
        }
      },
      "392": {
        start: {
          line: 935,
          column: 20
        },
        end: {
          line: 935,
          column: 107
        }
      },
      "393": {
        start: {
          line: 936,
          column: 20
        },
        end: {
          line: 936,
          column: 109
        }
      },
      "394": {
        start: {
          line: 937,
          column: 20
        },
        end: {
          line: 937,
          column: 102
        }
      },
      "395": {
        start: {
          line: 938,
          column: 20
        },
        end: {
          line: 938,
          column: 71
        }
      },
      "396": {
        start: {
          line: 939,
          column: 20
        },
        end: {
          line: 939,
          column: 96
        }
      },
      "397": {
        start: {
          line: 940,
          column: 20
        },
        end: {
          line: 940,
          column: 99
        }
      },
      "398": {
        start: {
          line: 941,
          column: 20
        },
        end: {
          line: 941,
          column: 110
        }
      },
      "399": {
        start: {
          line: 942,
          column: 20
        },
        end: {
          line: 942,
          column: 110
        }
      },
      "400": {
        start: {
          line: 943,
          column: 20
        },
        end: {
          line: 957,
          column: 21
        }
      },
      "401": {
        start: {
          line: 944,
          column: 24
        },
        end: {
          line: 944,
          column: 85
        }
      },
      "402": {
        start: {
          line: 945,
          column: 24
        },
        end: {
          line: 945,
          column: 56
        }
      },
      "403": {
        start: {
          line: 946,
          column: 24
        },
        end: {
          line: 946,
          column: 47
        }
      },
      "404": {
        start: {
          line: 947,
          column: 24
        },
        end: {
          line: 947,
          column: 65
        }
      },
      "405": {
        start: {
          line: 948,
          column: 24
        },
        end: {
          line: 948,
          column: 61
        }
      },
      "406": {
        start: {
          line: 949,
          column: 24
        },
        end: {
          line: 949,
          column: 74
        }
      },
      "407": {
        start: {
          line: 950,
          column: 24
        },
        end: {
          line: 950,
          column: 67
        }
      },
      "408": {
        start: {
          line: 951,
          column: 24
        },
        end: {
          line: 951,
          column: 50
        }
      },
      "409": {
        start: {
          line: 952,
          column: 24
        },
        end: {
          line: 952,
          column: 61
        }
      },
      "410": {
        start: {
          line: 953,
          column: 24
        },
        end: {
          line: 953,
          column: 71
        }
      },
      "411": {
        start: {
          line: 954,
          column: 24
        },
        end: {
          line: 954,
          column: 49
        }
      },
      "412": {
        start: {
          line: 955,
          column: 24
        },
        end: {
          line: 955,
          column: 47
        }
      },
      "413": {
        start: {
          line: 956,
          column: 24
        },
        end: {
          line: 956,
          column: 54
        }
      },
      "414": {
        start: {
          line: 960,
          column: 16
        },
        end: {
          line: 987,
          column: 17
        }
      },
      "415": {
        start: {
          line: 961,
          column: 20
        },
        end: {
          line: 961,
          column: 73
        }
      },
      "416": {
        start: {
          line: 962,
          column: 20
        },
        end: {
          line: 962,
          column: 70
        }
      },
      "417": {
        start: {
          line: 963,
          column: 20
        },
        end: {
          line: 963,
          column: 106
        }
      },
      "418": {
        start: {
          line: 964,
          column: 20
        },
        end: {
          line: 964,
          column: 111
        }
      },
      "419": {
        start: {
          line: 965,
          column: 20
        },
        end: {
          line: 965,
          column: 105
        }
      },
      "420": {
        start: {
          line: 966,
          column: 20
        },
        end: {
          line: 966,
          column: 126
        }
      },
      "421": {
        start: {
          line: 967,
          column: 20
        },
        end: {
          line: 967,
          column: 62
        }
      },
      "422": {
        start: {
          line: 968,
          column: 20
        },
        end: {
          line: 968,
          column: 110
        }
      },
      "423": {
        start: {
          line: 969,
          column: 20
        },
        end: {
          line: 969,
          column: 96
        }
      },
      "424": {
        start: {
          line: 970,
          column: 20
        },
        end: {
          line: 970,
          column: 111
        }
      },
      "425": {
        start: {
          line: 971,
          column: 20
        },
        end: {
          line: 971,
          column: 98
        }
      },
      "426": {
        start: {
          line: 972,
          column: 20
        },
        end: {
          line: 972,
          column: 65
        }
      },
      "427": {
        start: {
          line: 973,
          column: 20
        },
        end: {
          line: 973,
          column: 104
        }
      },
      "428": {
        start: {
          line: 974,
          column: 20
        },
        end: {
          line: 974,
          column: 97
        }
      },
      "429": {
        start: {
          line: 975,
          column: 20
        },
        end: {
          line: 975,
          column: 102
        }
      },
      "430": {
        start: {
          line: 976,
          column: 20
        },
        end: {
          line: 976,
          column: 95
        }
      },
      "431": {
        start: {
          line: 977,
          column: 20
        },
        end: {
          line: 986,
          column: 21
        }
      },
      "432": {
        start: {
          line: 978,
          column: 24
        },
        end: {
          line: 978,
          column: 77
        }
      },
      "433": {
        start: {
          line: 979,
          column: 24
        },
        end: {
          line: 979,
          column: 62
        }
      },
      "434": {
        start: {
          line: 980,
          column: 24
        },
        end: {
          line: 980,
          column: 80
        }
      },
      "435": {
        start: {
          line: 981,
          column: 24
        },
        end: {
          line: 981,
          column: 86
        }
      },
      "436": {
        start: {
          line: 982,
          column: 24
        },
        end: {
          line: 982,
          column: 109
        }
      },
      "437": {
        start: {
          line: 983,
          column: 24
        },
        end: {
          line: 983,
          column: 88
        }
      },
      "438": {
        start: {
          line: 984,
          column: 24
        },
        end: {
          line: 984,
          column: 47
        }
      },
      "439": {
        start: {
          line: 985,
          column: 24
        },
        end: {
          line: 985,
          column: 54
        }
      },
      "440": {
        start: {
          line: 989,
          column: 16
        },
        end: {
          line: 1021,
          column: 17
        }
      },
      "441": {
        start: {
          line: 990,
          column: 20
        },
        end: {
          line: 990,
          column: 80
        }
      },
      "442": {
        start: {
          line: 991,
          column: 20
        },
        end: {
          line: 991,
          column: 62
        }
      },
      "443": {
        start: {
          line: 992,
          column: 20
        },
        end: {
          line: 992,
          column: 107
        }
      },
      "444": {
        start: {
          line: 993,
          column: 20
        },
        end: {
          line: 993,
          column: 110
        }
      },
      "445": {
        start: {
          line: 994,
          column: 20
        },
        end: {
          line: 994,
          column: 100
        }
      },
      "446": {
        start: {
          line: 995,
          column: 20
        },
        end: {
          line: 995,
          column: 102
        }
      },
      "447": {
        start: {
          line: 996,
          column: 20
        },
        end: {
          line: 996,
          column: 64
        }
      },
      "448": {
        start: {
          line: 997,
          column: 20
        },
        end: {
          line: 997,
          column: 89
        }
      },
      "449": {
        start: {
          line: 998,
          column: 20
        },
        end: {
          line: 998,
          column: 93
        }
      },
      "450": {
        start: {
          line: 999,
          column: 20
        },
        end: {
          line: 999,
          column: 117
        }
      },
      "451": {
        start: {
          line: 1000,
          column: 20
        },
        end: {
          line: 1000,
          column: 101
        }
      },
      "452": {
        start: {
          line: 1001,
          column: 20
        },
        end: {
          line: 1001,
          column: 75
        }
      },
      "453": {
        start: {
          line: 1002,
          column: 20
        },
        end: {
          line: 1002,
          column: 104
        }
      },
      "454": {
        start: {
          line: 1003,
          column: 20
        },
        end: {
          line: 1003,
          column: 108
        }
      },
      "455": {
        start: {
          line: 1004,
          column: 20
        },
        end: {
          line: 1004,
          column: 97
        }
      },
      "456": {
        start: {
          line: 1005,
          column: 20
        },
        end: {
          line: 1005,
          column: 95
        }
      },
      "457": {
        start: {
          line: 1006,
          column: 20
        },
        end: {
          line: 1006,
          column: 65
        }
      },
      "458": {
        start: {
          line: 1007,
          column: 20
        },
        end: {
          line: 1007,
          column: 100
        }
      },
      "459": {
        start: {
          line: 1008,
          column: 20
        },
        end: {
          line: 1008,
          column: 96
        }
      },
      "460": {
        start: {
          line: 1009,
          column: 20
        },
        end: {
          line: 1009,
          column: 103
        }
      },
      "461": {
        start: {
          line: 1010,
          column: 20
        },
        end: {
          line: 1010,
          column: 94
        }
      },
      "462": {
        start: {
          line: 1011,
          column: 20
        },
        end: {
          line: 1020,
          column: 21
        }
      },
      "463": {
        start: {
          line: 1012,
          column: 24
        },
        end: {
          line: 1012,
          column: 90
        }
      },
      "464": {
        start: {
          line: 1013,
          column: 24
        },
        end: {
          line: 1013,
          column: 52
        }
      },
      "465": {
        start: {
          line: 1014,
          column: 24
        },
        end: {
          line: 1014,
          column: 103
        }
      },
      "466": {
        start: {
          line: 1015,
          column: 24
        },
        end: {
          line: 1015,
          column: 88
        }
      },
      "467": {
        start: {
          line: 1016,
          column: 24
        },
        end: {
          line: 1016,
          column: 96
        }
      },
      "468": {
        start: {
          line: 1017,
          column: 24
        },
        end: {
          line: 1017,
          column: 94
        }
      },
      "469": {
        start: {
          line: 1018,
          column: 24
        },
        end: {
          line: 1018,
          column: 82
        }
      },
      "470": {
        start: {
          line: 1019,
          column: 24
        },
        end: {
          line: 1019,
          column: 54
        }
      },
      "471": {
        start: {
          line: 1023,
          column: 16
        },
        end: {
          line: 1023,
          column: 74
        }
      },
      "472": {
        start: {
          line: 1024,
          column: 16
        },
        end: {
          line: 1024,
          column: 68
        }
      },
      "473": {
        start: {
          line: 1025,
          column: 16
        },
        end: {
          line: 1025,
          column: 90
        }
      },
      "474": {
        start: {
          line: 1026,
          column: 16
        },
        end: {
          line: 1026,
          column: 85
        }
      },
      "475": {
        start: {
          line: 1027,
          column: 16
        },
        end: {
          line: 1027,
          column: 95
        }
      },
      "476": {
        start: {
          line: 1028,
          column: 16
        },
        end: {
          line: 1028,
          column: 90
        }
      },
      "477": {
        start: {
          line: 1029,
          column: 16
        },
        end: {
          line: 1029,
          column: 70
        }
      },
      "478": {
        start: {
          line: 1030,
          column: 16
        },
        end: {
          line: 1030,
          column: 120
        }
      },
      "479": {
        start: {
          line: 1031,
          column: 16
        },
        end: {
          line: 1031,
          column: 100
        }
      },
      "480": {
        start: {
          line: 1032,
          column: 16
        },
        end: {
          line: 1032,
          column: 110
        }
      },
      "481": {
        start: {
          line: 1033,
          column: 16
        },
        end: {
          line: 1033,
          column: 91
        }
      },
      "482": {
        start: {
          line: 1034,
          column: 16
        },
        end: {
          line: 1034,
          column: 67
        }
      },
      "483": {
        start: {
          line: 1035,
          column: 16
        },
        end: {
          line: 1035,
          column: 101
        }
      },
      "484": {
        start: {
          line: 1036,
          column: 16
        },
        end: {
          line: 1036,
          column: 105
        }
      },
      "485": {
        start: {
          line: 1037,
          column: 16
        },
        end: {
          line: 1037,
          column: 106
        }
      },
      "486": {
        start: {
          line: 1038,
          column: 16
        },
        end: {
          line: 1038,
          column: 115
        }
      },
      "487": {
        start: {
          line: 1040,
          column: 16
        },
        end: {
          line: 1040,
          column: 70
        }
      },
      "488": {
        start: {
          line: 1041,
          column: 16
        },
        end: {
          line: 1041,
          column: 66
        }
      },
      "489": {
        start: {
          line: 1042,
          column: 16
        },
        end: {
          line: 1042,
          column: 98
        }
      },
      "490": {
        start: {
          line: 1043,
          column: 16
        },
        end: {
          line: 1043,
          column: 94
        }
      },
      "491": {
        start: {
          line: 1044,
          column: 16
        },
        end: {
          line: 1044,
          column: 94
        }
      },
      "492": {
        start: {
          line: 1045,
          column: 16
        },
        end: {
          line: 1045,
          column: 86
        }
      },
      "493": {
        start: {
          line: 1046,
          column: 16
        },
        end: {
          line: 1046,
          column: 90
        }
      },
      "494": {
        start: {
          line: 1047,
          column: 16
        },
        end: {
          line: 1047,
          column: 93
        }
      },
      "495": {
        start: {
          line: 1048,
          column: 16
        },
        end: {
          line: 1048,
          column: 78
        }
      },
      "496": {
        start: {
          line: 1049,
          column: 16
        },
        end: {
          line: 1049,
          column: 79
        }
      },
      "497": {
        start: {
          line: 1050,
          column: 16
        },
        end: {
          line: 1050,
          column: 78
        }
      },
      "498": {
        start: {
          line: 1051,
          column: 16
        },
        end: {
          line: 1051,
          column: 71
        }
      },
      "499": {
        start: {
          line: 1052,
          column: 16
        },
        end: {
          line: 1052,
          column: 64
        }
      },
      "500": {
        start: {
          line: 1053,
          column: 16
        },
        end: {
          line: 1053,
          column: 104
        }
      },
      "501": {
        start: {
          line: 1054,
          column: 16
        },
        end: {
          line: 1054,
          column: 102
        }
      },
      "502": {
        start: {
          line: 1055,
          column: 16
        },
        end: {
          line: 1055,
          column: 101
        }
      },
      "503": {
        start: {
          line: 1056,
          column: 16
        },
        end: {
          line: 1056,
          column: 93
        }
      },
      "504": {
        start: {
          line: 1057,
          column: 16
        },
        end: {
          line: 1057,
          column: 37
        }
      },
      "505": {
        start: {
          line: 1060,
          column: 16
        },
        end: {
          line: 1060,
          column: 96
        }
      },
      "506": {
        start: {
          line: 1067,
          column: 18
        },
        end: {
          line: 1067,
          column: 38
        }
      },
      "507": {
        start: {
          line: 1068,
          column: 23
        },
        end: {
          line: 1068,
          column: 65
        }
      },
      "508": {
        start: {
          line: 1068,
          column: 41
        },
        end: {
          line: 1068,
          column: 64
        }
      },
      "509": {
        start: {
          line: 1069,
          column: 20
        },
        end: {
          line: 1069,
          column: 22
        }
      },
      "510": {
        start: {
          line: 1070,
          column: 16
        },
        end: {
          line: 1070,
          column: 17
        }
      },
      "511": {
        start: {
          line: 1072,
          column: 21
        },
        end: {
          line: 1072,
          column: 128
        }
      },
      "512": {
        start: {
          line: 1072,
          column: 47
        },
        end: {
          line: 1072,
          column: 120
        }
      },
      "513": {
        start: {
          line: 1073,
          column: 4
        },
        end: {
          line: 1076,
          column: 5
        }
      },
      "514": {
        start: {
          line: 1074,
          column: 8
        },
        end: {
          line: 1074,
          column: 20
        }
      },
      "515": {
        start: {
          line: 1075,
          column: 8
        },
        end: {
          line: 1075,
          column: 69
        }
      },
      "516": {
        start: {
          line: 1078,
          column: 27
        },
        end: {
          line: 1078,
          column: 135
        }
      },
      "517": {
        start: {
          line: 1078,
          column: 53
        },
        end: {
          line: 1078,
          column: 127
        }
      },
      "518": {
        start: {
          line: 1079,
          column: 4
        },
        end: {
          line: 1082,
          column: 5
        }
      },
      "519": {
        start: {
          line: 1080,
          column: 8
        },
        end: {
          line: 1080,
          column: 20
        }
      },
      "520": {
        start: {
          line: 1081,
          column: 8
        },
        end: {
          line: 1081,
          column: 76
        }
      },
      "521": {
        start: {
          line: 1084,
          column: 23
        },
        end: {
          line: 1084,
          column: 134
        }
      },
      "522": {
        start: {
          line: 1084,
          column: 44
        },
        end: {
          line: 1084,
          column: 126
        }
      },
      "523": {
        start: {
          line: 1085,
          column: 4
        },
        end: {
          line: 1088,
          column: 5
        }
      },
      "524": {
        start: {
          line: 1086,
          column: 8
        },
        end: {
          line: 1086,
          column: 20
        }
      },
      "525": {
        start: {
          line: 1087,
          column: 8
        },
        end: {
          line: 1087,
          column: 78
        }
      },
      "526": {
        start: {
          line: 1090,
          column: 22
        },
        end: {
          line: 1090,
          column: 111
        }
      },
      "527": {
        start: {
          line: 1090,
          column: 43
        },
        end: {
          line: 1090,
          column: 103
        }
      },
      "528": {
        start: {
          line: 1091,
          column: 4
        },
        end: {
          line: 1094,
          column: 5
        }
      },
      "529": {
        start: {
          line: 1092,
          column: 8
        },
        end: {
          line: 1092,
          column: 20
        }
      },
      "530": {
        start: {
          line: 1093,
          column: 8
        },
        end: {
          line: 1093,
          column: 75
        }
      },
      "531": {
        start: {
          line: 1095,
          column: 4
        },
        end: {
          line: 1095,
          column: 30
        }
      },
      "532": {
        start: {
          line: 1098,
          column: 18
        },
        end: {
          line: 1098,
          column: 38
        }
      },
      "533": {
        start: {
          line: 1099,
          column: 23
        },
        end: {
          line: 1099,
          column: 65
        }
      },
      "534": {
        start: {
          line: 1099,
          column: 41
        },
        end: {
          line: 1099,
          column: 64
        }
      },
      "535": {
        start: {
          line: 1100,
          column: 20
        },
        end: {
          line: 1100,
          column: 22
        }
      },
      "536": {
        start: {
          line: 1101,
          column: 16
        },
        end: {
          line: 1101,
          column: 17
        }
      },
      "537": {
        start: {
          line: 1103,
          column: 22
        },
        end: {
          line: 1103,
          column: 128
        }
      },
      "538": {
        start: {
          line: 1103,
          column: 48
        },
        end: {
          line: 1103,
          column: 120
        }
      },
      "539": {
        start: {
          line: 1104,
          column: 4
        },
        end: {
          line: 1107,
          column: 5
        }
      },
      "540": {
        start: {
          line: 1105,
          column: 8
        },
        end: {
          line: 1105,
          column: 20
        }
      },
      "541": {
        start: {
          line: 1106,
          column: 8
        },
        end: {
          line: 1106,
          column: 72
        }
      },
      "542": {
        start: {
          line: 1109,
          column: 28
        },
        end: {
          line: 1109,
          column: 135
        }
      },
      "543": {
        start: {
          line: 1109,
          column: 54
        },
        end: {
          line: 1109,
          column: 127
        }
      },
      "544": {
        start: {
          line: 1110,
          column: 4
        },
        end: {
          line: 1113,
          column: 5
        }
      },
      "545": {
        start: {
          line: 1111,
          column: 8
        },
        end: {
          line: 1111,
          column: 20
        }
      },
      "546": {
        start: {
          line: 1112,
          column: 8
        },
        end: {
          line: 1112,
          column: 78
        }
      },
      "547": {
        start: {
          line: 1115,
          column: 22
        },
        end: {
          line: 1115,
          column: 106
        }
      },
      "548": {
        start: {
          line: 1115,
          column: 48
        },
        end: {
          line: 1115,
          column: 98
        }
      },
      "549": {
        start: {
          line: 1116,
          column: 4
        },
        end: {
          line: 1119,
          column: 5
        }
      },
      "550": {
        start: {
          line: 1117,
          column: 8
        },
        end: {
          line: 1117,
          column: 20
        }
      },
      "551": {
        start: {
          line: 1118,
          column: 8
        },
        end: {
          line: 1118,
          column: 79
        }
      },
      "552": {
        start: {
          line: 1120,
          column: 4
        },
        end: {
          line: 1120,
          column: 30
        }
      },
      "553": {
        start: {
          line: 1123,
          column: 18
        },
        end: {
          line: 1123,
          column: 38
        }
      },
      "554": {
        start: {
          line: 1124,
          column: 20
        },
        end: {
          line: 1124,
          column: 22
        }
      },
      "555": {
        start: {
          line: 1125,
          column: 16
        },
        end: {
          line: 1125,
          column: 17
        }
      },
      "556": {
        start: {
          line: 1127,
          column: 26
        },
        end: {
          line: 1128,
          column: 100
        }
      },
      "557": {
        start: {
          line: 1127,
          column: 47
        },
        end: {
          line: 1128,
          column: 92
        }
      },
      "558": {
        start: {
          line: 1129,
          column: 4
        },
        end: {
          line: 1132,
          column: 5
        }
      },
      "559": {
        start: {
          line: 1130,
          column: 8
        },
        end: {
          line: 1130,
          column: 20
        }
      },
      "560": {
        start: {
          line: 1131,
          column: 8
        },
        end: {
          line: 1131,
          column: 82
        }
      },
      "561": {
        start: {
          line: 1134,
          column: 22
        },
        end: {
          line: 1134,
          column: 84
        }
      },
      "562": {
        start: {
          line: 1134,
          column: 43
        },
        end: {
          line: 1134,
          column: 83
        }
      },
      "563": {
        start: {
          line: 1135,
          column: 26
        },
        end: {
          line: 1135,
          column: 125
        }
      },
      "564": {
        start: {
          line: 1135,
          column: 51
        },
        end: {
          line: 1135,
          column: 117
        }
      },
      "565": {
        start: {
          line: 1136,
          column: 4
        },
        end: {
          line: 1139,
          column: 5
        }
      },
      "566": {
        start: {
          line: 1137,
          column: 8
        },
        end: {
          line: 1137,
          column: 20
        }
      },
      "567": {
        start: {
          line: 1138,
          column: 8
        },
        end: {
          line: 1138,
          column: 78
        }
      },
      "568": {
        start: {
          line: 1141,
          column: 30
        },
        end: {
          line: 1144,
          column: 13
        }
      },
      "569": {
        start: {
          line: 1142,
          column: 21
        },
        end: {
          line: 1142,
          column: 44
        }
      },
      "570": {
        start: {
          line: 1143,
          column: 8
        },
        end: {
          line: 1143,
          column: 92
        }
      },
      "571": {
        start: {
          line: 1145,
          column: 4
        },
        end: {
          line: 1148,
          column: 5
        }
      },
      "572": {
        start: {
          line: 1146,
          column: 8
        },
        end: {
          line: 1146,
          column: 20
        }
      },
      "573": {
        start: {
          line: 1147,
          column: 8
        },
        end: {
          line: 1147,
          column: 85
        }
      },
      "574": {
        start: {
          line: 1149,
          column: 4
        },
        end: {
          line: 1149,
          column: 30
        }
      },
      "575": {
        start: {
          line: 1152,
          column: 18
        },
        end: {
          line: 1152,
          column: 38
        }
      },
      "576": {
        start: {
          line: 1153,
          column: 23
        },
        end: {
          line: 1153,
          column: 65
        }
      },
      "577": {
        start: {
          line: 1153,
          column: 41
        },
        end: {
          line: 1153,
          column: 64
        }
      },
      "578": {
        start: {
          line: 1154,
          column: 20
        },
        end: {
          line: 1154,
          column: 22
        }
      },
      "579": {
        start: {
          line: 1155,
          column: 16
        },
        end: {
          line: 1155,
          column: 17
        }
      },
      "580": {
        start: {
          line: 1157,
          column: 30
        },
        end: {
          line: 1161,
          column: 40
        }
      },
      "581": {
        start: {
          line: 1157,
          column: 56
        },
        end: {
          line: 1161,
          column: 32
        }
      },
      "582": {
        start: {
          line: 1162,
          column: 4
        },
        end: {
          line: 1165,
          column: 5
        }
      },
      "583": {
        start: {
          line: 1163,
          column: 8
        },
        end: {
          line: 1163,
          column: 20
        }
      },
      "584": {
        start: {
          line: 1164,
          column: 8
        },
        end: {
          line: 1164,
          column: 80
        }
      },
      "585": {
        start: {
          line: 1167,
          column: 29
        },
        end: {
          line: 1167,
          column: 109
        }
      },
      "586": {
        start: {
          line: 1167,
          column: 55
        },
        end: {
          line: 1167,
          column: 101
        }
      },
      "587": {
        start: {
          line: 1168,
          column: 4
        },
        end: {
          line: 1171,
          column: 5
        }
      },
      "588": {
        start: {
          line: 1169,
          column: 8
        },
        end: {
          line: 1169,
          column: 20
        }
      },
      "589": {
        start: {
          line: 1170,
          column: 8
        },
        end: {
          line: 1170,
          column: 97
        }
      },
      "590": {
        start: {
          line: 1173,
          column: 24
        },
        end: {
          line: 1173,
          column: 103
        }
      },
      "591": {
        start: {
          line: 1173,
          column: 50
        },
        end: {
          line: 1173,
          column: 95
        }
      },
      "592": {
        start: {
          line: 1174,
          column: 4
        },
        end: {
          line: 1177,
          column: 5
        }
      },
      "593": {
        start: {
          line: 1175,
          column: 8
        },
        end: {
          line: 1175,
          column: 20
        }
      },
      "594": {
        start: {
          line: 1176,
          column: 8
        },
        end: {
          line: 1176,
          column: 83
        }
      },
      "595": {
        start: {
          line: 1178,
          column: 4
        },
        end: {
          line: 1178,
          column: 30
        }
      },
      "596": {
        start: {
          line: 1181,
          column: 18
        },
        end: {
          line: 1181,
          column: 38
        }
      },
      "597": {
        start: {
          line: 1182,
          column: 23
        },
        end: {
          line: 1182,
          column: 65
        }
      },
      "598": {
        start: {
          line: 1182,
          column: 41
        },
        end: {
          line: 1182,
          column: 64
        }
      },
      "599": {
        start: {
          line: 1183,
          column: 20
        },
        end: {
          line: 1183,
          column: 22
        }
      },
      "600": {
        start: {
          line: 1184,
          column: 16
        },
        end: {
          line: 1184,
          column: 17
        }
      },
      "601": {
        start: {
          line: 1186,
          column: 20
        },
        end: {
          line: 1191,
          column: 38
        }
      },
      "602": {
        start: {
          line: 1186,
          column: 46
        },
        end: {
          line: 1191,
          column: 30
        }
      },
      "603": {
        start: {
          line: 1192,
          column: 4
        },
        end: {
          line: 1195,
          column: 5
        }
      },
      "604": {
        start: {
          line: 1193,
          column: 8
        },
        end: {
          line: 1193,
          column: 20
        }
      },
      "605": {
        start: {
          line: 1194,
          column: 8
        },
        end: {
          line: 1194,
          column: 68
        }
      },
      "606": {
        start: {
          line: 1197,
          column: 22
        },
        end: {
          line: 1197,
          column: 127
        }
      },
      "607": {
        start: {
          line: 1197,
          column: 48
        },
        end: {
          line: 1197,
          column: 119
        }
      },
      "608": {
        start: {
          line: 1198,
          column: 4
        },
        end: {
          line: 1201,
          column: 5
        }
      },
      "609": {
        start: {
          line: 1199,
          column: 8
        },
        end: {
          line: 1199,
          column: 20
        }
      },
      "610": {
        start: {
          line: 1200,
          column: 8
        },
        end: {
          line: 1200,
          column: 79
        }
      },
      "611": {
        start: {
          line: 1203,
          column: 25
        },
        end: {
          line: 1203,
          column: 137
        }
      },
      "612": {
        start: {
          line: 1203,
          column: 46
        },
        end: {
          line: 1203,
          column: 129
        }
      },
      "613": {
        start: {
          line: 1204,
          column: 4
        },
        end: {
          line: 1207,
          column: 5
        }
      },
      "614": {
        start: {
          line: 1205,
          column: 8
        },
        end: {
          line: 1205,
          column: 20
        }
      },
      "615": {
        start: {
          line: 1206,
          column: 8
        },
        end: {
          line: 1206,
          column: 74
        }
      },
      "616": {
        start: {
          line: 1208,
          column: 4
        },
        end: {
          line: 1208,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "createTemplateTools",
        decl: {
          start: {
            line: 255,
            column: 9
          },
          end: {
            line: 255,
            column: 28
          }
        },
        loc: {
          start: {
            line: 255,
            column: 48
          },
          end: {
            line: 1064,
            column: 1
          }
        },
        line: 255
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 268,
            column: 17
          },
          end: {
            line: 268,
            column: 18
          }
        },
        loc: {
          start: {
            line: 268,
            column: 33
          },
          end: {
            line: 337,
            column: 9
          }
        },
        line: 268
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 272,
            column: 57
          },
          end: {
            line: 272,
            column: 58
          }
        },
        loc: {
          start: {
            line: 272,
            column: 84
          },
          end: {
            line: 276,
            column: 17
          }
        },
        line: 272
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 274,
            column: 59
          },
          end: {
            line: 274,
            column: 60
          }
        },
        loc: {
          start: {
            line: 274,
            column: 72
          },
          end: {
            line: 274,
            column: 97
          }
        },
        line: 274
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 279,
            column: 55
          },
          end: {
            line: 279,
            column: 56
          }
        },
        loc: {
          start: {
            line: 279,
            column: 67
          },
          end: {
            line: 279,
            column: 106
          }
        },
        line: 279
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 284,
            column: 55
          },
          end: {
            line: 284,
            column: 56
          }
        },
        loc: {
          start: {
            line: 284,
            column: 67
          },
          end: {
            line: 287,
            column: 70
          }
        },
        line: 284
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 286,
            column: 43
          },
          end: {
            line: 286,
            column: 44
          }
        },
        loc: {
          start: {
            line: 286,
            column: 52
          },
          end: {
            line: 286,
            column: 85
          }
        },
        line: 286
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 291,
            column: 55
          },
          end: {
            line: 291,
            column: 56
          }
        },
        loc: {
          start: {
            line: 291,
            column: 67
          },
          end: {
            line: 291,
            column: 131
          }
        },
        line: 291
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 291,
            column: 82
          },
          end: {
            line: 291,
            column: 83
          }
        },
        loc: {
          start: {
            line: 291,
            column: 89
          },
          end: {
            line: 291,
            column: 130
          }
        },
        line: 291
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 308,
            column: 37
          },
          end: {
            line: 308,
            column: 38
          }
        },
        loc: {
          start: {
            line: 308,
            column: 58
          },
          end: {
            line: 327,
            column: 17
          }
        },
        line: 308
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 323,
            column: 46
          },
          end: {
            line: 323,
            column: 47
          }
        },
        loc: {
          start: {
            line: 323,
            column: 59
          },
          end: {
            line: 325,
            column: 21
          }
        },
        line: 323
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 351,
            column: 17
          },
          end: {
            line: 351,
            column: 18
          }
        },
        loc: {
          start: {
            line: 351,
            column: 33
          },
          end: {
            line: 528,
            column: 9
          }
        },
        line: 351
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 400,
            column: 47
          },
          end: {
            line: 400,
            column: 48
          }
        },
        loc: {
          start: {
            line: 400,
            column: 68
          },
          end: {
            line: 455,
            column: 17
          }
        },
        line: 400
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 403,
            column: 62
          },
          end: {
            line: 403,
            column: 63
          }
        },
        loc: {
          start: {
            line: 403,
            column: 74
          },
          end: {
            line: 403,
            column: 103
          }
        },
        line: 403
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 426,
            column: 64
          },
          end: {
            line: 426,
            column: 65
          }
        },
        loc: {
          start: {
            line: 426,
            column: 82
          },
          end: {
            line: 453,
            column: 25
          }
        },
        line: 426
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 463,
            column: 74
          },
          end: {
            line: 463,
            column: 75
          }
        },
        loc: {
          start: {
            line: 463,
            column: 83
          },
          end: {
            line: 466,
            column: 21
          }
        },
        line: 463
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 481,
            column: 62
          },
          end: {
            line: 481,
            column: 63
          }
        },
        loc: {
          start: {
            line: 481,
            column: 70
          },
          end: {
            line: 483,
            column: 21
          }
        },
        line: 481
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 488,
            column: 67
          },
          end: {
            line: 488,
            column: 68
          }
        },
        loc: {
          start: {
            line: 488,
            column: 78
          },
          end: {
            line: 490,
            column: 21
          }
        },
        line: 488
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 496,
            column: 44
          },
          end: {
            line: 496,
            column: 45
          }
        },
        loc: {
          start: {
            line: 496,
            column: 53
          },
          end: {
            line: 498,
            column: 21
          }
        },
        line: 496
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 504,
            column: 61
          },
          end: {
            line: 504,
            column: 62
          }
        },
        loc: {
          start: {
            line: 504,
            column: 87
          },
          end: {
            line: 506,
            column: 21
          }
        },
        line: 504
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 542,
            column: 17
          },
          end: {
            line: 542,
            column: 18
          }
        },
        loc: {
          start: {
            line: 542,
            column: 33
          },
          end: {
            line: 701,
            column: 9
          }
        },
        line: 542
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 558,
            column: 64
          },
          end: {
            line: 558,
            column: 65
          }
        },
        loc: {
          start: {
            line: 558,
            column: 85
          },
          end: {
            line: 568,
            column: 21
          }
        },
        line: 558
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 560,
            column: 68
          },
          end: {
            line: 560,
            column: 69
          }
        },
        loc: {
          start: {
            line: 560,
            column: 86
          },
          end: {
            line: 565,
            column: 29
          }
        },
        line: 560
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 572,
            column: 64
          },
          end: {
            line: 572,
            column: 65
          }
        },
        loc: {
          start: {
            line: 572,
            column: 74
          },
          end: {
            line: 584,
            column: 21
          }
        },
        line: 572
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 574,
            column: 69
          },
          end: {
            line: 574,
            column: 70
          }
        },
        loc: {
          start: {
            line: 574,
            column: 95
          },
          end: {
            line: 581,
            column: 29
          }
        },
        line: 574
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 588,
            column: 60
          },
          end: {
            line: 588,
            column: 61
          }
        },
        loc: {
          start: {
            line: 588,
            column: 70
          },
          end: {
            line: 596,
            column: 17
          }
        },
        line: 588
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 599,
            column: 65
          },
          end: {
            line: 599,
            column: 66
          }
        },
        loc: {
          start: {
            line: 599,
            column: 95
          },
          end: {
            line: 613,
            column: 17
          }
        },
        line: 599
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 603,
            column: 60
          },
          end: {
            line: 603,
            column: 61
          }
        },
        loc: {
          start: {
            line: 603,
            column: 87
          },
          end: {
            line: 610,
            column: 25
          }
        },
        line: 603
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 605,
            column: 77
          },
          end: {
            line: 605,
            column: 78
          }
        },
        loc: {
          start: {
            line: 605,
            column: 90
          },
          end: {
            line: 608,
            column: 33
          }
        },
        line: 605
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 644,
            column: 66
          },
          end: {
            line: 644,
            column: 67
          }
        },
        loc: {
          start: {
            line: 644,
            column: 86
          },
          end: {
            line: 646,
            column: 21
          }
        },
        line: 644
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 652,
            column: 68
          },
          end: {
            line: 652,
            column: 69
          }
        },
        loc: {
          start: {
            line: 652,
            column: 92
          },
          end: {
            line: 654,
            column: 21
          }
        },
        line: 652
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 664,
            column: 48
          },
          end: {
            line: 664,
            column: 49
          }
        },
        loc: {
          start: {
            line: 664,
            column: 58
          },
          end: {
            line: 666,
            column: 25
          }
        },
        line: 664
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 671,
            column: 53
          },
          end: {
            line: 671,
            column: 54
          }
        },
        loc: {
          start: {
            line: 671,
            column: 66
          },
          end: {
            line: 673,
            column: 25
          }
        },
        line: 671
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 678,
            column: 50
          },
          end: {
            line: 678,
            column: 51
          }
        },
        loc: {
          start: {
            line: 678,
            column: 62
          },
          end: {
            line: 680,
            column: 25
          }
        },
        line: 678
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 715,
            column: 17
          },
          end: {
            line: 715,
            column: 18
          }
        },
        loc: {
          start: {
            line: 715,
            column: 33
          },
          end: {
            line: 883,
            column: 9
          }
        },
        line: 715
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 738,
            column: 58
          },
          end: {
            line: 738,
            column: 59
          }
        },
        loc: {
          start: {
            line: 738,
            column: 66
          },
          end: {
            line: 738,
            column: 89
          }
        },
        line: 738
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 816,
            column: 55
          },
          end: {
            line: 816,
            column: 56
          }
        },
        loc: {
          start: {
            line: 816,
            column: 83
          },
          end: {
            line: 839,
            column: 17
          }
        },
        line: 816
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 817,
            column: 33
          },
          end: {
            line: 817,
            column: 34
          }
        },
        loc: {
          start: {
            line: 817,
            column: 43
          },
          end: {
            line: 817,
            column: 60
          }
        },
        line: 817
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 825,
            column: 36
          },
          end: {
            line: 825,
            column: 37
          }
        },
        loc: {
          start: {
            line: 825,
            column: 54
          },
          end: {
            line: 838,
            column: 21
          }
        },
        line: 825
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 834,
            column: 46
          },
          end: {
            line: 834,
            column: 47
          }
        },
        loc: {
          start: {
            line: 834,
            column: 56
          },
          end: {
            line: 836,
            column: 25
          }
        },
        line: 834
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 845,
            column: 75
          },
          end: {
            line: 845,
            column: 76
          }
        },
        loc: {
          start: {
            line: 845,
            column: 87
          },
          end: {
            line: 845,
            column: 170
          }
        },
        line: 845
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 845,
            column: 127
          },
          end: {
            line: 845,
            column: 128
          }
        },
        loc: {
          start: {
            line: 845,
            column: 136
          },
          end: {
            line: 845,
            column: 169
          }
        },
        line: 845
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 851,
            column: 77
          },
          end: {
            line: 851,
            column: 78
          }
        },
        loc: {
          start: {
            line: 851,
            column: 86
          },
          end: {
            line: 851,
            column: 102
          }
        },
        line: 851
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 856,
            column: 63
          },
          end: {
            line: 856,
            column: 64
          }
        },
        loc: {
          start: {
            line: 856,
            column: 68
          },
          end: {
            line: 856,
            column: 95
          }
        },
        line: 856
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 864,
            column: 44
          },
          end: {
            line: 864,
            column: 45
          }
        },
        loc: {
          start: {
            line: 864,
            column: 60
          },
          end: {
            line: 866,
            column: 21
          }
        },
        line: 864
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 870,
            column: 62
          },
          end: {
            line: 870,
            column: 63
          }
        },
        loc: {
          start: {
            line: 870,
            column: 82
          },
          end: {
            line: 872,
            column: 21
          }
        },
        line: 870
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 897,
            column: 17
          },
          end: {
            line: 897,
            column: 18
          }
        },
        loc: {
          start: {
            line: 897,
            column: 33
          },
          end: {
            line: 1062,
            column: 9
          }
        },
        line: 897
      },
      "47": {
        name: "analyzeIntegrationPattern",
        decl: {
          start: {
            line: 1066,
            column: 9
          },
          end: {
            line: 1066,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1066,
            column: 45
          },
          end: {
            line: 1096,
            column: 1
          }
        },
        line: 1066
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1068,
            column: 33
          },
          end: {
            line: 1068,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1068,
            column: 41
          },
          end: {
            line: 1068,
            column: 64
          }
        },
        line: 1068
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1072,
            column: 39
          },
          end: {
            line: 1072,
            column: 40
          }
        },
        loc: {
          start: {
            line: 1072,
            column: 47
          },
          end: {
            line: 1072,
            column: 120
          }
        },
        line: 1072
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 1078,
            column: 45
          },
          end: {
            line: 1078,
            column: 46
          }
        },
        loc: {
          start: {
            line: 1078,
            column: 53
          },
          end: {
            line: 1078,
            column: 127
          }
        },
        line: 1078
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1084,
            column: 36
          },
          end: {
            line: 1084,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1084,
            column: 44
          },
          end: {
            line: 1084,
            column: 126
          }
        },
        line: 1084
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1090,
            column: 35
          },
          end: {
            line: 1090,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1090,
            column: 43
          },
          end: {
            line: 1090,
            column: 103
          }
        },
        line: 1090
      },
      "53": {
        name: "analyzeDataTransformationPattern",
        decl: {
          start: {
            line: 1097,
            column: 9
          },
          end: {
            line: 1097,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1097,
            column: 52
          },
          end: {
            line: 1121,
            column: 1
          }
        },
        line: 1097
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 1099,
            column: 33
          },
          end: {
            line: 1099,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1099,
            column: 41
          },
          end: {
            line: 1099,
            column: 64
          }
        },
        line: 1099
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 1103,
            column: 40
          },
          end: {
            line: 1103,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1103,
            column: 48
          },
          end: {
            line: 1103,
            column: 120
          }
        },
        line: 1103
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 1109,
            column: 46
          },
          end: {
            line: 1109,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1109,
            column: 54
          },
          end: {
            line: 1109,
            column: 127
          }
        },
        line: 1109
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 1115,
            column: 40
          },
          end: {
            line: 1115,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1115,
            column: 48
          },
          end: {
            line: 1115,
            column: 98
          }
        },
        line: 1115
      },
      "58": {
        name: "analyzeErrorHandlingPattern",
        decl: {
          start: {
            line: 1122,
            column: 9
          },
          end: {
            line: 1122,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1122,
            column: 47
          },
          end: {
            line: 1150,
            column: 1
          }
        },
        line: 1122
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 1127,
            column: 39
          },
          end: {
            line: 1127,
            column: 40
          }
        },
        loc: {
          start: {
            line: 1127,
            column: 47
          },
          end: {
            line: 1128,
            column: 92
          }
        },
        line: 1127
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 1134,
            column: 35
          },
          end: {
            line: 1134,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1134,
            column: 43
          },
          end: {
            line: 1134,
            column: 83
          }
        },
        line: 1134
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 1135,
            column: 43
          },
          end: {
            line: 1135,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1135,
            column: 51
          },
          end: {
            line: 1135,
            column: 117
          }
        },
        line: 1135
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 1141,
            column: 43
          },
          end: {
            line: 1141,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1141,
            column: 51
          },
          end: {
            line: 1144,
            column: 5
          }
        },
        line: 1141
      },
      "63": {
        name: "analyzeNotificationPattern",
        decl: {
          start: {
            line: 1151,
            column: 9
          },
          end: {
            line: 1151,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1151,
            column: 46
          },
          end: {
            line: 1179,
            column: 1
          }
        },
        line: 1151
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 1153,
            column: 33
          },
          end: {
            line: 1153,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1153,
            column: 41
          },
          end: {
            line: 1153,
            column: 64
          }
        },
        line: 1153
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 1157,
            column: 48
          },
          end: {
            line: 1157,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1157,
            column: 56
          },
          end: {
            line: 1161,
            column: 32
          }
        },
        line: 1157
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 1167,
            column: 47
          },
          end: {
            line: 1167,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1167,
            column: 55
          },
          end: {
            line: 1167,
            column: 101
          }
        },
        line: 1167
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 1173,
            column: 42
          },
          end: {
            line: 1173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1173,
            column: 50
          },
          end: {
            line: 1173,
            column: 95
          }
        },
        line: 1173
      },
      "68": {
        name: "analyzeAIProcessingPattern",
        decl: {
          start: {
            line: 1180,
            column: 9
          },
          end: {
            line: 1180,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1180,
            column: 46
          },
          end: {
            line: 1209,
            column: 1
          }
        },
        line: 1180
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 1182,
            column: 33
          },
          end: {
            line: 1182,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1182,
            column: 41
          },
          end: {
            line: 1182,
            column: 64
          }
        },
        line: 1182
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 1186,
            column: 38
          },
          end: {
            line: 1186,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1186,
            column: 46
          },
          end: {
            line: 1191,
            column: 30
          }
        },
        line: 1186
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 1197,
            column: 40
          },
          end: {
            line: 1197,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1197,
            column: 48
          },
          end: {
            line: 1197,
            column: 119
          }
        },
        line: 1197
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 1203,
            column: 38
          },
          end: {
            line: 1203,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1203,
            column: 46
          },
          end: {
            line: 1203,
            column: 129
          }
        },
        line: 1203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 275,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 275,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "1": {
        loc: {
          start: {
            line: 273,
            column: 24
          },
          end: {
            line: 273,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 24
          },
          end: {
            line: 273,
            column: 47
          }
        }, {
          start: {
            line: 273,
            column: 51
          },
          end: {
            line: 273,
            column: 77
          }
        }],
        line: 273
      },
      "2": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "3": {
        loc: {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "4": {
        loc: {
          start: {
            line: 284,
            column: 67
          },
          end: {
            line: 287,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 67
          },
          end: {
            line: 284,
            column: 110
          }
        }, {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 285,
            column: 74
          }
        }, {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 286,
            column: 86
          }
        }, {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 287,
            column: 70
          }
        }],
        line: 284
      },
      "5": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 292,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 292,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "6": {
        loc: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 29
          }
        }, {
          start: {
            line: 290,
            column: 33
          },
          end: {
            line: 290,
            column: 53
          }
        }],
        line: 290
      },
      "7": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "8": {
        loc: {
          start: {
            line: 299,
            column: 36
          },
          end: {
            line: 299,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 36
          },
          end: {
            line: 299,
            column: 46
          }
        }, {
          start: {
            line: 299,
            column: 50
          },
          end: {
            line: 299,
            column: 56
          }
        }],
        line: 299
      },
      "9": {
        loc: {
          start: {
            line: 300,
            column: 35
          },
          end: {
            line: 300,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 35
          },
          end: {
            line: 300,
            column: 56
          }
        }, {
          start: {
            line: 300,
            column: 60
          },
          end: {
            line: 300,
            column: 66
          }
        }],
        line: 300
      },
      "10": {
        loc: {
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 305,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 305,
            column: 57
          }
        }, {
          start: {
            line: 305,
            column: 61
          },
          end: {
            line: 305,
            column: 76
          }
        }],
        line: 305
      },
      "11": {
        loc: {
          start: {
            line: 309,
            column: 43
          },
          end: {
            line: 313,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 310,
            column: 26
          },
          end: {
            line: 310,
            column: 30
          }
        }, {
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 313,
            column: 34
          }
        }],
        line: 309
      },
      "12": {
        loc: {
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 313,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 30
          },
          end: {
            line: 312,
            column: 34
          }
        }, {
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 34
          }
        }],
        line: 311
      },
      "13": {
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "14": {
        loc: {
          start: {
            line: 362,
            column: 33
          },
          end: {
            line: 362,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 33
          },
          end: {
            line: 362,
            column: 49
          }
        }, {
          start: {
            line: 362,
            column: 53
          },
          end: {
            line: 362,
            column: 103
          }
        }],
        line: 362
      },
      "15": {
        loc: {
          start: {
            line: 364,
            column: 26
          },
          end: {
            line: 364,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 26
          },
          end: {
            line: 364,
            column: 35
          }
        }, {
          start: {
            line: 364,
            column: 39
          },
          end: {
            line: 364,
            column: 41
          }
        }],
        line: 364
      },
      "16": {
        loc: {
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 369,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 26
          },
          end: {
            line: 366,
            column: 36
          }
        }, {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 369,
            column: 38
          }
        }],
        line: 365
      },
      "17": {
        loc: {
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 365,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 365,
            column: 46
          }
        }, {
          start: {
            line: 365,
            column: 50
          },
          end: {
            line: 365,
            column: 76
          }
        }],
        line: 365
      },
      "18": {
        loc: {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 369,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 30
          },
          end: {
            line: 368,
            column: 44
          }
        }, {
          start: {
            line: 369,
            column: 30
          },
          end: {
            line: 369,
            column: 38
          }
        }],
        line: 367
      },
      "19": {
        loc: {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 40
          }
        }, {
          start: {
            line: 367,
            column: 44
          },
          end: {
            line: 367,
            column: 69
          }
        }],
        line: 367
      },
      "20": {
        loc: {
          start: {
            line: 370,
            column: 31
          },
          end: {
            line: 370,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 31
          },
          end: {
            line: 370,
            column: 53
          }
        }, {
          start: {
            line: 370,
            column: 57
          },
          end: {
            line: 370,
            column: 58
          }
        }],
        line: 370
      },
      "21": {
        loc: {
          start: {
            line: 371,
            column: 40
          },
          end: {
            line: 375,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 26
          },
          end: {
            line: 372,
            column: 39
          }
        }, {
          start: {
            line: 373,
            column: 26
          },
          end: {
            line: 375,
            column: 45
          }
        }],
        line: 371
      },
      "22": {
        loc: {
          start: {
            line: 371,
            column: 40
          },
          end: {
            line: 371,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 40
          },
          end: {
            line: 371,
            column: 54
          }
        }, {
          start: {
            line: 371,
            column: 58
          },
          end: {
            line: 371,
            column: 84
          }
        }],
        line: 371
      },
      "23": {
        loc: {
          start: {
            line: 373,
            column: 26
          },
          end: {
            line: 375,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 30
          },
          end: {
            line: 374,
            column: 45
          }
        }, {
          start: {
            line: 375,
            column: 30
          },
          end: {
            line: 375,
            column: 45
          }
        }],
        line: 373
      },
      "24": {
        loc: {
          start: {
            line: 373,
            column: 26
          },
          end: {
            line: 373,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 26
          },
          end: {
            line: 373,
            column: 40
          }
        }, {
          start: {
            line: 373,
            column: 44
          },
          end: {
            line: 373,
            column: 69
          }
        }],
        line: 373
      },
      "25": {
        loc: {
          start: {
            line: 383,
            column: 31
          },
          end: {
            line: 383,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 31
          },
          end: {
            line: 383,
            column: 45
          }
        }, {
          start: {
            line: 383,
            column: 49
          },
          end: {
            line: 383,
            column: 51
          }
        }],
        line: 383
      },
      "26": {
        loc: {
          start: {
            line: 384,
            column: 37
          },
          end: {
            line: 384,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 37
          },
          end: {
            line: 384,
            column: 57
          }
        }, {
          start: {
            line: 384,
            column: 61
          },
          end: {
            line: 384,
            column: 63
          }
        }],
        line: 384
      },
      "27": {
        loc: {
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 385,
            column: 51
          }
        }, {
          start: {
            line: 385,
            column: 55
          },
          end: {
            line: 385,
            column: 57
          }
        }],
        line: 385
      },
      "28": {
        loc: {
          start: {
            line: 400,
            column: 17
          },
          end: {
            line: 400,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 17
          },
          end: {
            line: 400,
            column: 31
          }
        }, {
          start: {
            line: 400,
            column: 35
          },
          end: {
            line: 400,
            column: 37
          }
        }],
        line: 400
      },
      "29": {
        loc: {
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 404,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 404,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "30": {
        loc: {
          start: {
            line: 407,
            column: 20
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 20
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: 410,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }],
        line: 407
      },
      "31": {
        loc: {
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 49
          }
        }, {
          start: {
            line: 407,
            column: 53
          },
          end: {
            line: 407,
            column: 81
          }
        }],
        line: 407
      },
      "32": {
        loc: {
          start: {
            line: 410,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: 413,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }],
        line: 410
      },
      "33": {
        loc: {
          start: {
            line: 413,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: 416,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }],
        line: 413
      },
      "34": {
        loc: {
          start: {
            line: 413,
            column: 29
          },
          end: {
            line: 413,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 29
          },
          end: {
            line: 413,
            column: 55
          }
        }, {
          start: {
            line: 413,
            column: 59
          },
          end: {
            line: 413,
            column: 85
          }
        }],
        line: 413
      },
      "35": {
        loc: {
          start: {
            line: 416,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: 419,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }],
        line: 416
      },
      "36": {
        loc: {
          start: {
            line: 416,
            column: 29
          },
          end: {
            line: 416,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 29
          },
          end: {
            line: 416,
            column: 55
          }
        }, {
          start: {
            line: 416,
            column: 59
          },
          end: {
            line: 416,
            column: 88
          }
        }],
        line: 416
      },
      "37": {
        loc: {
          start: {
            line: 419,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 25
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "38": {
        loc: {
          start: {
            line: 419,
            column: 29
          },
          end: {
            line: 421,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 419,
            column: 29
          },
          end: {
            line: 419,
            column: 52
          }
        }, {
          start: {
            line: 420,
            column: 24
          },
          end: {
            line: 420,
            column: 51
          }
        }, {
          start: {
            line: 421,
            column: 24
          },
          end: {
            line: 421,
            column: 54
          }
        }],
        line: 419
      },
      "39": {
        loc: {
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 454,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 454,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "40": {
        loc: {
          start: {
            line: 425,
            column: 24
          },
          end: {
            line: 425,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 24
          },
          end: {
            line: 425,
            column: 53
          }
        }, {
          start: {
            line: 425,
            column: 57
          },
          end: {
            line: 425,
            column: 72
          }
        }],
        line: 425
      },
      "41": {
        loc: {
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 452,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 452,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "42": {
        loc: {
          start: {
            line: 429,
            column: 32
          },
          end: {
            line: 451,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 32
          },
          end: {
            line: 451,
            column: 33
          }
        }, {
          start: {
            line: 434,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }],
        line: 429
      },
      "43": {
        loc: {
          start: {
            line: 429,
            column: 36
          },
          end: {
            line: 429,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 36
          },
          end: {
            line: 429,
            column: 55
          }
        }, {
          start: {
            line: 429,
            column: 59
          },
          end: {
            line: 429,
            column: 78
          }
        }],
        line: 429
      },
      "44": {
        loc: {
          start: {
            line: 434,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }, {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }],
        line: 434
      },
      "45": {
        loc: {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }, {
          start: {
            line: 444,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }],
        line: 439
      },
      "46": {
        loc: {
          start: {
            line: 444,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 37
          },
          end: {
            line: 451,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "47": {
        loc: {
          start: {
            line: 444,
            column: 41
          },
          end: {
            line: 447,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 41
          },
          end: {
            line: 444,
            column: 74
          }
        }, {
          start: {
            line: 445,
            column: 36
          },
          end: {
            line: 445,
            column: 71
          }
        }, {
          start: {
            line: 446,
            column: 36
          },
          end: {
            line: 446,
            column: 72
          }
        }, {
          start: {
            line: 447,
            column: 36
          },
          end: {
            line: 447,
            column: 74
          }
        }],
        line: 444
      },
      "48": {
        loc: {
          start: {
            line: 462,
            column: 16
          },
          end: {
            line: 467,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 16
          },
          end: {
            line: 467,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "49": {
        loc: {
          start: {
            line: 478,
            column: 47
          },
          end: {
            line: 478,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 47
          },
          end: {
            line: 478,
            column: 71
          }
        }, {
          start: {
            line: 478,
            column: 75
          },
          end: {
            line: 478,
            column: 81
          }
        }],
        line: 478
      },
      "50": {
        loc: {
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 485,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 485,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "51": {
        loc: {
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 492,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 492,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "52": {
        loc: {
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 500,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 500,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "53": {
        loc: {
          start: {
            line: 502,
            column: 16
          },
          end: {
            line: 510,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 16
          },
          end: {
            line: 510,
            column: 17
          }
        }, {
          start: {
            line: 508,
            column: 21
          },
          end: {
            line: 510,
            column: 17
          }
        }],
        line: 502
      },
      "54": {
        loc: {
          start: {
            line: 544,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "55": {
        loc: {
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "56": {
        loc: {
          start: {
            line: 551,
            column: 20
          },
          end: {
            line: 551,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 551,
            column: 20
          },
          end: {
            line: 551,
            column: 38
          }
        }, {
          start: {
            line: 551,
            column: 42
          },
          end: {
            line: 551,
            column: 66
          }
        }],
        line: 551
      },
      "57": {
        loc: {
          start: {
            line: 557,
            column: 16
          },
          end: {
            line: 569,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 16
          },
          end: {
            line: 569,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "58": {
        loc: {
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 557,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 557,
            column: 41
          }
        }, {
          start: {
            line: 557,
            column: 45
          },
          end: {
            line: 557,
            column: 90
          }
        }],
        line: 557
      },
      "59": {
        loc: {
          start: {
            line: 559,
            column: 24
          },
          end: {
            line: 566,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 559,
            column: 24
          },
          end: {
            line: 566,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 559
      },
      "60": {
        loc: {
          start: {
            line: 562,
            column: 32
          },
          end: {
            line: 564,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 32
          },
          end: {
            line: 564,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "61": {
        loc: {
          start: {
            line: 571,
            column: 16
          },
          end: {
            line: 585,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 16
          },
          end: {
            line: 585,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 571
      },
      "62": {
        loc: {
          start: {
            line: 571,
            column: 20
          },
          end: {
            line: 571,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 571,
            column: 20
          },
          end: {
            line: 571,
            column: 43
          }
        }, {
          start: {
            line: 571,
            column: 47
          },
          end: {
            line: 571,
            column: 94
          }
        }],
        line: 571
      },
      "63": {
        loc: {
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 582,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 582,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "64": {
        loc: {
          start: {
            line: 575,
            column: 32
          },
          end: {
            line: 580,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 32
          },
          end: {
            line: 580,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 575
      },
      "65": {
        loc: {
          start: {
            line: 594,
            column: 34
          },
          end: {
            line: 594,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 34
          },
          end: {
            line: 594,
            column: 47
          }
        }, {
          start: {
            line: 594,
            column: 51
          },
          end: {
            line: 594,
            column: 61
          }
        }],
        line: 594
      },
      "66": {
        loc: {
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 612,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 612,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "67": {
        loc: {
          start: {
            line: 604,
            column: 28
          },
          end: {
            line: 609,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 604,
            column: 28
          },
          end: {
            line: 609,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 604
      },
      "68": {
        loc: {
          start: {
            line: 607,
            column: 42
          },
          end: {
            line: 607,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 607,
            column: 42
          },
          end: {
            line: 607,
            column: 68
          }
        }, {
          start: {
            line: 607,
            column: 72
          },
          end: {
            line: 607,
            column: 83
          }
        }],
        line: 607
      },
      "69": {
        loc: {
          start: {
            line: 621,
            column: 30
          },
          end: {
            line: 621,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 621,
            column: 30
          },
          end: {
            line: 621,
            column: 51
          }
        }, {
          start: {
            line: 621,
            column: 55
          },
          end: {
            line: 621,
            column: 57
          }
        }],
        line: 621
      },
      "70": {
        loc: {
          start: {
            line: 627,
            column: 41
          },
          end: {
            line: 627,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 627,
            column: 62
          },
          end: {
            line: 627,
            column: 73
          }
        }, {
          start: {
            line: 627,
            column: 76
          },
          end: {
            line: 627,
            column: 89
          }
        }],
        line: 627
      },
      "71": {
        loc: {
          start: {
            line: 631,
            column: 16
          },
          end: {
            line: 640,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 16
          },
          end: {
            line: 640,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "72": {
        loc: {
          start: {
            line: 634,
            column: 49
          },
          end: {
            line: 634,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 634,
            column: 49
          },
          end: {
            line: 634,
            column: 70
          }
        }, {
          start: {
            line: 634,
            column: 74
          },
          end: {
            line: 634,
            column: 83
          }
        }],
        line: 634
      },
      "73": {
        loc: {
          start: {
            line: 635,
            column: 51
          },
          end: {
            line: 635,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 635,
            column: 51
          },
          end: {
            line: 635,
            column: 74
          }
        }, {
          start: {
            line: 635,
            column: 78
          },
          end: {
            line: 635,
            column: 87
          }
        }],
        line: 635
      },
      "74": {
        loc: {
          start: {
            line: 636,
            column: 20
          },
          end: {
            line: 638,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 20
          },
          end: {
            line: 638,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 636
      },
      "75": {
        loc: {
          start: {
            line: 642,
            column: 16
          },
          end: {
            line: 648,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 642,
            column: 16
          },
          end: {
            line: 648,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 642
      },
      "76": {
        loc: {
          start: {
            line: 642,
            column: 20
          },
          end: {
            line: 642,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 642,
            column: 20
          },
          end: {
            line: 642,
            column: 41
          }
        }, {
          start: {
            line: 642,
            column: 45
          },
          end: {
            line: 642,
            column: 90
          }
        }],
        line: 642
      },
      "77": {
        loc: {
          start: {
            line: 650,
            column: 16
          },
          end: {
            line: 656,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 16
          },
          end: {
            line: 656,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "78": {
        loc: {
          start: {
            line: 650,
            column: 20
          },
          end: {
            line: 650,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 650,
            column: 20
          },
          end: {
            line: 650,
            column: 43
          }
        }, {
          start: {
            line: 650,
            column: 47
          },
          end: {
            line: 650,
            column: 94
          }
        }],
        line: 650
      },
      "79": {
        loc: {
          start: {
            line: 659,
            column: 16
          },
          end: {
            line: 683,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 659,
            column: 16
          },
          end: {
            line: 683,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 659
      },
      "80": {
        loc: {
          start: {
            line: 661,
            column: 20
          },
          end: {
            line: 668,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 661,
            column: 20
          },
          end: {
            line: 668,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 661
      },
      "81": {
        loc: {
          start: {
            line: 661,
            column: 24
          },
          end: {
            line: 661,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 661,
            column: 24
          },
          end: {
            line: 661,
            column: 39
          }
        }, {
          start: {
            line: 661,
            column: 43
          },
          end: {
            line: 661,
            column: 69
          }
        }],
        line: 661
      },
      "82": {
        loc: {
          start: {
            line: 669,
            column: 20
          },
          end: {
            line: 675,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 669,
            column: 20
          },
          end: {
            line: 675,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 669
      },
      "83": {
        loc: {
          start: {
            line: 669,
            column: 24
          },
          end: {
            line: 669,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 669,
            column: 24
          },
          end: {
            line: 669,
            column: 44
          }
        }, {
          start: {
            line: 669,
            column: 48
          },
          end: {
            line: 669,
            column: 79
          }
        }],
        line: 669
      },
      "84": {
        loc: {
          start: {
            line: 676,
            column: 20
          },
          end: {
            line: 682,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 20
          },
          end: {
            line: 682,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "85": {
        loc: {
          start: {
            line: 676,
            column: 24
          },
          end: {
            line: 676,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 676,
            column: 24
          },
          end: {
            line: 676,
            column: 41
          }
        }, {
          start: {
            line: 676,
            column: 45
          },
          end: {
            line: 676,
            column: 73
          }
        }],
        line: 676
      },
      "86": {
        loc: {
          start: {
            line: 688,
            column: 16
          },
          end: {
            line: 690,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 688,
            column: 16
          },
          end: {
            line: 690,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 688
      },
      "87": {
        loc: {
          start: {
            line: 717,
            column: 12
          },
          end: {
            line: 719,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 717,
            column: 12
          },
          end: {
            line: 719,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 717
      },
      "88": {
        loc: {
          start: {
            line: 722,
            column: 16
          },
          end: {
            line: 729,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 722,
            column: 16
          },
          end: {
            line: 729,
            column: 17
          }
        }, {
          start: {
            line: 726,
            column: 21
          },
          end: {
            line: 729,
            column: 17
          }
        }],
        line: 722
      },
      "89": {
        loc: {
          start: {
            line: 736,
            column: 20
          },
          end: {
            line: 737,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 736,
            column: 20
          },
          end: {
            line: 737,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 736
      },
      "90": {
        loc: {
          start: {
            line: 736,
            column: 24
          },
          end: {
            line: 736,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 736,
            column: 24
          },
          end: {
            line: 736,
            column: 39
          }
        }, {
          start: {
            line: 736,
            column: 43
          },
          end: {
            line: 736,
            column: 70
          }
        }],
        line: 736
      },
      "91": {
        loc: {
          start: {
            line: 739,
            column: 44
          },
          end: {
            line: 739,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 739,
            column: 44
          },
          end: {
            line: 739,
            column: 64
          }
        }, {
          start: {
            line: 739,
            column: 68
          },
          end: {
            line: 739,
            column: 112
          }
        }],
        line: 739
      },
      "92": {
        loc: {
          start: {
            line: 741,
            column: 20
          },
          end: {
            line: 752,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 741,
            column: 20
          },
          end: {
            line: 752,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 741
      },
      "93": {
        loc: {
          start: {
            line: 741,
            column: 24
          },
          end: {
            line: 741,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 741,
            column: 24
          },
          end: {
            line: 741,
            column: 58
          }
        }, {
          start: {
            line: 741,
            column: 62
          },
          end: {
            line: 741,
            column: 88
          }
        }],
        line: 741
      },
      "94": {
        loc: {
          start: {
            line: 743,
            column: 24
          },
          end: {
            line: 751,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 743,
            column: 24
          },
          end: {
            line: 751,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 743
      },
      "95": {
        loc: {
          start: {
            line: 744,
            column: 28
          },
          end: {
            line: 745,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 744,
            column: 28
          },
          end: {
            line: 745,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 744
      },
      "96": {
        loc: {
          start: {
            line: 754,
            column: 20
          },
          end: {
            line: 765,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 754,
            column: 20
          },
          end: {
            line: 765,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 754
      },
      "97": {
        loc: {
          start: {
            line: 754,
            column: 24
          },
          end: {
            line: 754,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 754,
            column: 24
          },
          end: {
            line: 754,
            column: 66
          }
        }, {
          start: {
            line: 754,
            column: 70
          },
          end: {
            line: 754,
            column: 96
          }
        }],
        line: 754
      },
      "98": {
        loc: {
          start: {
            line: 756,
            column: 24
          },
          end: {
            line: 764,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 756,
            column: 24
          },
          end: {
            line: 764,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 756
      },
      "99": {
        loc: {
          start: {
            line: 757,
            column: 28
          },
          end: {
            line: 758,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 757,
            column: 28
          },
          end: {
            line: 758,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 757
      },
      "100": {
        loc: {
          start: {
            line: 767,
            column: 20
          },
          end: {
            line: 778,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 767,
            column: 20
          },
          end: {
            line: 778,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 767
      },
      "101": {
        loc: {
          start: {
            line: 767,
            column: 24
          },
          end: {
            line: 767,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 767,
            column: 24
          },
          end: {
            line: 767,
            column: 61
          }
        }, {
          start: {
            line: 767,
            column: 65
          },
          end: {
            line: 767,
            column: 91
          }
        }],
        line: 767
      },
      "102": {
        loc: {
          start: {
            line: 769,
            column: 24
          },
          end: {
            line: 777,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 769,
            column: 24
          },
          end: {
            line: 777,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 769
      },
      "103": {
        loc: {
          start: {
            line: 770,
            column: 28
          },
          end: {
            line: 771,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 770,
            column: 28
          },
          end: {
            line: 771,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 770
      },
      "104": {
        loc: {
          start: {
            line: 780,
            column: 20
          },
          end: {
            line: 791,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 780,
            column: 20
          },
          end: {
            line: 791,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 780
      },
      "105": {
        loc: {
          start: {
            line: 780,
            column: 24
          },
          end: {
            line: 780,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 780,
            column: 24
          },
          end: {
            line: 780,
            column: 59
          }
        }, {
          start: {
            line: 780,
            column: 63
          },
          end: {
            line: 780,
            column: 89
          }
        }],
        line: 780
      },
      "106": {
        loc: {
          start: {
            line: 782,
            column: 24
          },
          end: {
            line: 790,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 782,
            column: 24
          },
          end: {
            line: 790,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 782
      },
      "107": {
        loc: {
          start: {
            line: 783,
            column: 28
          },
          end: {
            line: 784,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 783,
            column: 28
          },
          end: {
            line: 784,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 783
      },
      "108": {
        loc: {
          start: {
            line: 793,
            column: 20
          },
          end: {
            line: 804,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 20
          },
          end: {
            line: 804,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "109": {
        loc: {
          start: {
            line: 793,
            column: 24
          },
          end: {
            line: 793,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 793,
            column: 24
          },
          end: {
            line: 793,
            column: 60
          }
        }, {
          start: {
            line: 793,
            column: 64
          },
          end: {
            line: 793,
            column: 90
          }
        }],
        line: 793
      },
      "110": {
        loc: {
          start: {
            line: 795,
            column: 24
          },
          end: {
            line: 803,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 795,
            column: 24
          },
          end: {
            line: 803,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 795
      },
      "111": {
        loc: {
          start: {
            line: 796,
            column: 28
          },
          end: {
            line: 797,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 796,
            column: 28
          },
          end: {
            line: 797,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 796
      },
      "112": {
        loc: {
          start: {
            line: 807,
            column: 16
          },
          end: {
            line: 815,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 807,
            column: 16
          },
          end: {
            line: 815,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 807
      },
      "113": {
        loc: {
          start: {
            line: 819,
            column: 38
          },
          end: {
            line: 819,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 819,
            column: 38
          },
          end: {
            line: 819,
            column: 55
          }
        }, {
          start: {
            line: 819,
            column: 59
          },
          end: {
            line: 819,
            column: 117
          }
        }],
        line: 819
      },
      "114": {
        loc: {
          start: {
            line: 820,
            column: 20
          },
          end: {
            line: 823,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 820,
            column: 20
          },
          end: {
            line: 823,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 820
      },
      "115": {
        loc: {
          start: {
            line: 826,
            column: 43
          },
          end: {
            line: 832,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 827,
            column: 30
          },
          end: {
            line: 827,
            column: 44
          }
        }, {
          start: {
            line: 828,
            column: 30
          },
          end: {
            line: 832,
            column: 48
          }
        }],
        line: 826
      },
      "116": {
        loc: {
          start: {
            line: 828,
            column: 30
          },
          end: {
            line: 832,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 829,
            column: 34
          },
          end: {
            line: 829,
            column: 43
          }
        }, {
          start: {
            line: 830,
            column: 34
          },
          end: {
            line: 832,
            column: 48
          }
        }],
        line: 828
      },
      "117": {
        loc: {
          start: {
            line: 830,
            column: 34
          },
          end: {
            line: 832,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 831,
            column: 38
          },
          end: {
            line: 831,
            column: 50
          }
        }, {
          start: {
            line: 832,
            column: 38
          },
          end: {
            line: 832,
            column: 48
          }
        }],
        line: 830
      },
      "118": {
        loc: {
          start: {
            line: 841,
            column: 16
          },
          end: {
            line: 873,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 841,
            column: 16
          },
          end: {
            line: 873,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 841
      },
      "119": {
        loc: {
          start: {
            line: 846,
            column: 20
          },
          end: {
            line: 848,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 846,
            column: 20
          },
          end: {
            line: 848,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 846
      },
      "120": {
        loc: {
          start: {
            line: 850,
            column: 49
          },
          end: {
            line: 850,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 850,
            column: 49
          },
          end: {
            line: 850,
            column: 78
          }
        }, {
          start: {
            line: 850,
            column: 82
          },
          end: {
            line: 850,
            column: 84
          }
        }],
        line: 850
      },
      "121": {
        loc: {
          start: {
            line: 852,
            column: 20
          },
          end: {
            line: 854,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 852,
            column: 20
          },
          end: {
            line: 854,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 852
      },
      "122": {
        loc: {
          start: {
            line: 856,
            column: 69
          },
          end: {
            line: 856,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 856,
            column: 69
          },
          end: {
            line: 856,
            column: 84
          }
        }, {
          start: {
            line: 856,
            column: 88
          },
          end: {
            line: 856,
            column: 89
          }
        }],
        line: 856
      },
      "123": {
        loc: {
          start: {
            line: 858,
            column: 20
          },
          end: {
            line: 860,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 858,
            column: 20
          },
          end: {
            line: 860,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 858
      },
      "124": {
        loc: {
          start: {
            line: 858,
            column: 24
          },
          end: {
            line: 858,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 858,
            column: 24
          },
          end: {
            line: 858,
            column: 43
          }
        }, {
          start: {
            line: 858,
            column: 47
          },
          end: {
            line: 858,
            column: 71
          }
        }],
        line: 858
      },
      "125": {
        loc: {
          start: {
            line: 861,
            column: 20
          },
          end: {
            line: 863,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 861,
            column: 20
          },
          end: {
            line: 863,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 861
      },
      "126": {
        loc: {
          start: {
            line: 903,
            column: 16
          },
          end: {
            line: 923,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 903,
            column: 16
          },
          end: {
            line: 923,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 903
      },
      "127": {
        loc: {
          start: {
            line: 903,
            column: 20
          },
          end: {
            line: 903,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 903,
            column: 20
          },
          end: {
            line: 903,
            column: 49
          }
        }, {
          start: {
            line: 903,
            column: 53
          },
          end: {
            line: 903,
            column: 76
          }
        }],
        line: 903
      },
      "128": {
        loc: {
          start: {
            line: 916,
            column: 20
          },
          end: {
            line: 922,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 916,
            column: 20
          },
          end: {
            line: 922,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 916
      },
      "129": {
        loc: {
          start: {
            line: 925,
            column: 16
          },
          end: {
            line: 958,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 925,
            column: 16
          },
          end: {
            line: 958,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 925
      },
      "130": {
        loc: {
          start: {
            line: 925,
            column: 20
          },
          end: {
            line: 925,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 925,
            column: 20
          },
          end: {
            line: 925,
            column: 51
          }
        }, {
          start: {
            line: 925,
            column: 55
          },
          end: {
            line: 925,
            column: 78
          }
        }],
        line: 925
      },
      "131": {
        loc: {
          start: {
            line: 943,
            column: 20
          },
          end: {
            line: 957,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 943,
            column: 20
          },
          end: {
            line: 957,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 943
      },
      "132": {
        loc: {
          start: {
            line: 960,
            column: 16
          },
          end: {
            line: 987,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 960,
            column: 16
          },
          end: {
            line: 987,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 960
      },
      "133": {
        loc: {
          start: {
            line: 960,
            column: 20
          },
          end: {
            line: 960,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 960,
            column: 20
          },
          end: {
            line: 960,
            column: 48
          }
        }, {
          start: {
            line: 960,
            column: 52
          },
          end: {
            line: 960,
            column: 75
          }
        }],
        line: 960
      },
      "134": {
        loc: {
          start: {
            line: 977,
            column: 20
          },
          end: {
            line: 986,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 977,
            column: 20
          },
          end: {
            line: 986,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 977
      },
      "135": {
        loc: {
          start: {
            line: 989,
            column: 16
          },
          end: {
            line: 1021,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 989,
            column: 16
          },
          end: {
            line: 1021,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 989
      },
      "136": {
        loc: {
          start: {
            line: 989,
            column: 20
          },
          end: {
            line: 989,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 989,
            column: 20
          },
          end: {
            line: 989,
            column: 55
          }
        }, {
          start: {
            line: 989,
            column: 59
          },
          end: {
            line: 989,
            column: 82
          }
        }],
        line: 989
      },
      "137": {
        loc: {
          start: {
            line: 1011,
            column: 20
          },
          end: {
            line: 1020,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1011,
            column: 20
          },
          end: {
            line: 1020,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1011
      },
      "138": {
        loc: {
          start: {
            line: 1067,
            column: 18
          },
          end: {
            line: 1067,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1067,
            column: 18
          },
          end: {
            line: 1067,
            column: 32
          }
        }, {
          start: {
            line: 1067,
            column: 36
          },
          end: {
            line: 1067,
            column: 38
          }
        }],
        line: 1067
      },
      "139": {
        loc: {
          start: {
            line: 1072,
            column: 47
          },
          end: {
            line: 1072,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1072,
            column: 47
          },
          end: {
            line: 1072,
            column: 68
          }
        }, {
          start: {
            line: 1072,
            column: 72
          },
          end: {
            line: 1072,
            column: 96
          }
        }, {
          start: {
            line: 1072,
            column: 100
          },
          end: {
            line: 1072,
            column: 120
          }
        }],
        line: 1072
      },
      "140": {
        loc: {
          start: {
            line: 1073,
            column: 4
          },
          end: {
            line: 1076,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1073,
            column: 4
          },
          end: {
            line: 1076,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1073
      },
      "141": {
        loc: {
          start: {
            line: 1078,
            column: 53
          },
          end: {
            line: 1078,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1078,
            column: 53
          },
          end: {
            line: 1078,
            column: 73
          }
        }, {
          start: {
            line: 1078,
            column: 77
          },
          end: {
            line: 1078,
            column: 98
          }
        }, {
          start: {
            line: 1078,
            column: 102
          },
          end: {
            line: 1078,
            column: 127
          }
        }],
        line: 1078
      },
      "142": {
        loc: {
          start: {
            line: 1079,
            column: 4
          },
          end: {
            line: 1082,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1079,
            column: 4
          },
          end: {
            line: 1082,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1079
      },
      "143": {
        loc: {
          start: {
            line: 1084,
            column: 44
          },
          end: {
            line: 1084,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1084,
            column: 44
          },
          end: {
            line: 1084,
            column: 59
          }
        }, {
          start: {
            line: 1084,
            column: 63
          },
          end: {
            line: 1084,
            column: 126
          }
        }],
        line: 1084
      },
      "144": {
        loc: {
          start: {
            line: 1085,
            column: 4
          },
          end: {
            line: 1088,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1085,
            column: 4
          },
          end: {
            line: 1088,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1085
      },
      "145": {
        loc: {
          start: {
            line: 1090,
            column: 43
          },
          end: {
            line: 1090,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1090,
            column: 43
          },
          end: {
            line: 1090,
            column: 59
          }
        }, {
          start: {
            line: 1090,
            column: 63
          },
          end: {
            line: 1090,
            column: 103
          }
        }],
        line: 1090
      },
      "146": {
        loc: {
          start: {
            line: 1091,
            column: 4
          },
          end: {
            line: 1094,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1091,
            column: 4
          },
          end: {
            line: 1094,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1091
      },
      "147": {
        loc: {
          start: {
            line: 1098,
            column: 18
          },
          end: {
            line: 1098,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1098,
            column: 18
          },
          end: {
            line: 1098,
            column: 32
          }
        }, {
          start: {
            line: 1098,
            column: 36
          },
          end: {
            line: 1098,
            column: 38
          }
        }],
        line: 1098
      },
      "148": {
        loc: {
          start: {
            line: 1103,
            column: 48
          },
          end: {
            line: 1103,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1103,
            column: 48
          },
          end: {
            line: 1103,
            column: 68
          }
        }, {
          start: {
            line: 1103,
            column: 72
          },
          end: {
            line: 1103,
            column: 94
          }
        }, {
          start: {
            line: 1103,
            column: 98
          },
          end: {
            line: 1103,
            column: 120
          }
        }],
        line: 1103
      },
      "149": {
        loc: {
          start: {
            line: 1104,
            column: 4
          },
          end: {
            line: 1107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1104,
            column: 4
          },
          end: {
            line: 1107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1104
      },
      "150": {
        loc: {
          start: {
            line: 1109,
            column: 54
          },
          end: {
            line: 1109,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1109,
            column: 54
          },
          end: {
            line: 1109,
            column: 73
          }
        }, {
          start: {
            line: 1109,
            column: 77
          },
          end: {
            line: 1109,
            column: 100
          }
        }, {
          start: {
            line: 1109,
            column: 104
          },
          end: {
            line: 1109,
            column: 127
          }
        }],
        line: 1109
      },
      "151": {
        loc: {
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1110
      },
      "152": {
        loc: {
          start: {
            line: 1115,
            column: 48
          },
          end: {
            line: 1115,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1115,
            column: 48
          },
          end: {
            line: 1115,
            column: 69
          }
        }, {
          start: {
            line: 1115,
            column: 73
          },
          end: {
            line: 1115,
            column: 98
          }
        }],
        line: 1115
      },
      "153": {
        loc: {
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1116
      },
      "154": {
        loc: {
          start: {
            line: 1123,
            column: 18
          },
          end: {
            line: 1123,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1123,
            column: 18
          },
          end: {
            line: 1123,
            column: 32
          }
        }, {
          start: {
            line: 1123,
            column: 36
          },
          end: {
            line: 1123,
            column: 38
          }
        }],
        line: 1123
      },
      "155": {
        loc: {
          start: {
            line: 1127,
            column: 47
          },
          end: {
            line: 1128,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1127,
            column: 47
          },
          end: {
            line: 1127,
            column: 88
          }
        }, {
          start: {
            line: 1128,
            column: 9
          },
          end: {
            line: 1128,
            column: 24
          }
        }, {
          start: {
            line: 1128,
            column: 28
          },
          end: {
            line: 1128,
            column: 91
          }
        }],
        line: 1127
      },
      "156": {
        loc: {
          start: {
            line: 1129,
            column: 4
          },
          end: {
            line: 1132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1129,
            column: 4
          },
          end: {
            line: 1132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1129
      },
      "157": {
        loc: {
          start: {
            line: 1135,
            column: 51
          },
          end: {
            line: 1135,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1135,
            column: 51
          },
          end: {
            line: 1135,
            column: 66
          }
        }, {
          start: {
            line: 1135,
            column: 70
          },
          end: {
            line: 1135,
            column: 117
          }
        }],
        line: 1135
      },
      "158": {
        loc: {
          start: {
            line: 1136,
            column: 4
          },
          end: {
            line: 1139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1136,
            column: 4
          },
          end: {
            line: 1139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1136
      },
      "159": {
        loc: {
          start: {
            line: 1143,
            column: 15
          },
          end: {
            line: 1143,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1143,
            column: 15
          },
          end: {
            line: 1143,
            column: 37
          }
        }, {
          start: {
            line: 1143,
            column: 41
          },
          end: {
            line: 1143,
            column: 63
          }
        }, {
          start: {
            line: 1143,
            column: 67
          },
          end: {
            line: 1143,
            column: 91
          }
        }],
        line: 1143
      },
      "160": {
        loc: {
          start: {
            line: 1145,
            column: 4
          },
          end: {
            line: 1148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1145,
            column: 4
          },
          end: {
            line: 1148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1145
      },
      "161": {
        loc: {
          start: {
            line: 1152,
            column: 18
          },
          end: {
            line: 1152,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1152,
            column: 18
          },
          end: {
            line: 1152,
            column: 32
          }
        }, {
          start: {
            line: 1152,
            column: 36
          },
          end: {
            line: 1152,
            column: 38
          }
        }],
        line: 1152
      },
      "162": {
        loc: {
          start: {
            line: 1157,
            column: 56
          },
          end: {
            line: 1161,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1157,
            column: 56
          },
          end: {
            line: 1157,
            column: 78
          }
        }, {
          start: {
            line: 1158,
            column: 8
          },
          end: {
            line: 1158,
            column: 30
          }
        }, {
          start: {
            line: 1159,
            column: 8
          },
          end: {
            line: 1159,
            column: 28
          }
        }, {
          start: {
            line: 1160,
            column: 8
          },
          end: {
            line: 1160,
            column: 32
          }
        }, {
          start: {
            line: 1161,
            column: 8
          },
          end: {
            line: 1161,
            column: 32
          }
        }],
        line: 1157
      },
      "163": {
        loc: {
          start: {
            line: 1162,
            column: 4
          },
          end: {
            line: 1165,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1162,
            column: 4
          },
          end: {
            line: 1165,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1162
      },
      "164": {
        loc: {
          start: {
            line: 1167,
            column: 55
          },
          end: {
            line: 1167,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1167,
            column: 55
          },
          end: {
            line: 1167,
            column: 74
          }
        }, {
          start: {
            line: 1167,
            column: 78
          },
          end: {
            line: 1167,
            column: 101
          }
        }],
        line: 1167
      },
      "165": {
        loc: {
          start: {
            line: 1168,
            column: 4
          },
          end: {
            line: 1171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1168,
            column: 4
          },
          end: {
            line: 1171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1168
      },
      "166": {
        loc: {
          start: {
            line: 1168,
            column: 8
          },
          end: {
            line: 1168,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1168,
            column: 8
          },
          end: {
            line: 1168,
            column: 28
          }
        }, {
          start: {
            line: 1168,
            column: 32
          },
          end: {
            line: 1168,
            column: 53
          }
        }],
        line: 1168
      },
      "167": {
        loc: {
          start: {
            line: 1173,
            column: 50
          },
          end: {
            line: 1173,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1173,
            column: 50
          },
          end: {
            line: 1173,
            column: 70
          }
        }, {
          start: {
            line: 1173,
            column: 74
          },
          end: {
            line: 1173,
            column: 95
          }
        }],
        line: 1173
      },
      "168": {
        loc: {
          start: {
            line: 1174,
            column: 4
          },
          end: {
            line: 1177,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1174,
            column: 4
          },
          end: {
            line: 1177,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1174
      },
      "169": {
        loc: {
          start: {
            line: 1174,
            column: 8
          },
          end: {
            line: 1174,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1174,
            column: 8
          },
          end: {
            line: 1174,
            column: 23
          }
        }, {
          start: {
            line: 1174,
            column: 27
          },
          end: {
            line: 1174,
            column: 48
          }
        }],
        line: 1174
      },
      "170": {
        loc: {
          start: {
            line: 1181,
            column: 18
          },
          end: {
            line: 1181,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1181,
            column: 18
          },
          end: {
            line: 1181,
            column: 32
          }
        }, {
          start: {
            line: 1181,
            column: 36
          },
          end: {
            line: 1181,
            column: 38
          }
        }],
        line: 1181
      },
      "171": {
        loc: {
          start: {
            line: 1186,
            column: 46
          },
          end: {
            line: 1191,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1186,
            column: 46
          },
          end: {
            line: 1186,
            column: 65
          }
        }, {
          start: {
            line: 1187,
            column: 8
          },
          end: {
            line: 1187,
            column: 31
          }
        }, {
          start: {
            line: 1188,
            column: 8
          },
          end: {
            line: 1188,
            column: 34
          }
        }, {
          start: {
            line: 1189,
            column: 8
          },
          end: {
            line: 1189,
            column: 31
          }
        }, {
          start: {
            line: 1190,
            column: 8
          },
          end: {
            line: 1190,
            column: 28
          }
        }, {
          start: {
            line: 1191,
            column: 8
          },
          end: {
            line: 1191,
            column: 30
          }
        }],
        line: 1186
      },
      "172": {
        loc: {
          start: {
            line: 1192,
            column: 4
          },
          end: {
            line: 1195,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1192,
            column: 4
          },
          end: {
            line: 1195,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1192
      },
      "173": {
        loc: {
          start: {
            line: 1197,
            column: 48
          },
          end: {
            line: 1197,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1197,
            column: 48
          },
          end: {
            line: 1197,
            column: 68
          }
        }, {
          start: {
            line: 1197,
            column: 72
          },
          end: {
            line: 1197,
            column: 93
          }
        }, {
          start: {
            line: 1197,
            column: 97
          },
          end: {
            line: 1197,
            column: 119
          }
        }],
        line: 1197
      },
      "174": {
        loc: {
          start: {
            line: 1198,
            column: 4
          },
          end: {
            line: 1201,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1198,
            column: 4
          },
          end: {
            line: 1201,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1198
      },
      "175": {
        loc: {
          start: {
            line: 1198,
            column: 8
          },
          end: {
            line: 1198,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1198,
            column: 8
          },
          end: {
            line: 1198,
            column: 21
          }
        }, {
          start: {
            line: 1198,
            column: 25
          },
          end: {
            line: 1198,
            column: 36
          }
        }],
        line: 1198
      },
      "176": {
        loc: {
          start: {
            line: 1203,
            column: 46
          },
          end: {
            line: 1203,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1203,
            column: 46
          },
          end: {
            line: 1203,
            column: 87
          }
        }, {
          start: {
            line: 1203,
            column: 91
          },
          end: {
            line: 1203,
            column: 129
          }
        }],
        line: 1203
      },
      "177": {
        loc: {
          start: {
            line: 1204,
            column: 4
          },
          end: {
            line: 1207,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1204,
            column: 4
          },
          end: {
            line: 1207,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1204
      },
      "178": {
        loc: {
          start: {
            line: 1204,
            column: 8
          },
          end: {
            line: 1204,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1204,
            column: 8
          },
          end: {
            line: 1204,
            column: 24
          }
        }, {
          start: {
            line: 1204,
            column: 28
          },
          end: {
            line: 1204,
            column: 39
          }
        }],
        line: 1204
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0,
      "568": 0,
      "569": 0,
      "570": 0,
      "571": 0,
      "572": 0,
      "573": 0,
      "574": 0,
      "575": 0,
      "576": 0,
      "577": 0,
      "578": 0,
      "579": 0,
      "580": 0,
      "581": 0,
      "582": 0,
      "583": 0,
      "584": 0,
      "585": 0,
      "586": 0,
      "587": 0,
      "588": 0,
      "589": 0,
      "590": 0,
      "591": 0,
      "592": 0,
      "593": 0,
      "594": 0,
      "595": 0,
      "596": 0,
      "597": 0,
      "598": 0,
      "599": 0,
      "600": 0,
      "601": 0,
      "602": 0,
      "603": 0,
      "604": 0,
      "605": 0,
      "606": 0,
      "607": 0,
      "608": 0,
      "609": 0,
      "610": 0,
      "611": 0,
      "612": 0,
      "613": 0,
      "614": 0,
      "615": 0,
      "616": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0],
      "137": [0, 0],
      "138": [0, 0],
      "139": [0, 0, 0],
      "140": [0, 0],
      "141": [0, 0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0],
      "145": [0, 0],
      "146": [0, 0],
      "147": [0, 0],
      "148": [0, 0, 0],
      "149": [0, 0],
      "150": [0, 0, 0],
      "151": [0, 0],
      "152": [0, 0],
      "153": [0, 0],
      "154": [0, 0],
      "155": [0, 0, 0],
      "156": [0, 0],
      "157": [0, 0],
      "158": [0, 0],
      "159": [0, 0, 0],
      "160": [0, 0],
      "161": [0, 0],
      "162": [0, 0, 0, 0, 0],
      "163": [0, 0],
      "164": [0, 0],
      "165": [0, 0],
      "166": [0, 0],
      "167": [0, 0],
      "168": [0, 0],
      "169": [0, 0],
      "170": [0, 0],
      "171": [0, 0, 0, 0, 0, 0],
      "172": [0, 0],
      "173": [0, 0, 0],
      "174": [0, 0],
      "175": [0, 0],
      "176": [0, 0],
      "177": [0, 0],
      "178": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/templates.ts",
      mappings: ";;AA0QA,kDAw6BC;AAlrCD,6BAAwB;AACxB,qCAAoC;AAIpC,kDAAkD;AAClD,MAAM,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,QAAQ,EAAE,OAAC;SACR,IAAI,CAAC;QACJ,YAAY;QACZ,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,aAAa;QACb,YAAY;QACZ,KAAK;KACN,CAAC;SACD,QAAQ,EAAE;SACV,OAAO,CAAC,KAAK,CAAC;IACjB,UAAU,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IAC3F,IAAI,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;CACxD,CAAC,CAAC;AAEH,MAAM,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,yBAAyB,CAAC;IACxD,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;IAC5D,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClC,QAAQ,EAAE,OAAC,CAAC,IAAI,CAAC;QACf,YAAY;QACZ,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,aAAa;QACb,YAAY;KACb,CAAC;IACF,IAAI,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACpC,kBAAkB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACzD,wBAAwB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;CAC/D,CAAC,CAAC;AAEH,MAAM,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,YAAY,EAAE,OAAC,CAAC,MAAM,CAAC,OAAC,CAAC,GAAG,EAAE,CAAC;IAC/B,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;IAC5D,gBAAgB,EAAE,OAAC,CAAC,MAAM,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACjD,kBAAkB,EAAE,OAAC,CAAC,MAAM,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACnD,QAAQ,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CAChD,CAAC,CAAC;AAEH,MAAM,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IACrC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,WAAW,EAAE,OAAC;SACX,IAAI,CAAC;QACJ,aAAa;QACb,qBAAqB;QACrB,gBAAgB;QAChB,cAAc;QACd,eAAe;QACf,KAAK;KACN,CAAC;SACD,QAAQ,EAAE;SACV,OAAO,CAAC,KAAK,CAAC;IACjB,sBAAsB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;CAC7D,CAAC,CAAC;AAEH,MAAM,mBAAmB,GAAG,OAAC,CAAC,MAAM,CAAC;IACnC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,QAAQ,EAAE,OAAC;SACR,IAAI,CAAC,CAAC,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;SACxE,QAAQ,EAAE;SACV,OAAO,CAAC,KAAK,CAAC;IACjB,eAAe,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;CACtD,CAAC,CAAC;AAEH,iGAAiG;AACjG,MAAM,gBAAgB,GAAG;IACvB,UAAU,EAAE;QACV;YACE,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,iCAAiC;YACvC,WAAW,EAAE,gFAAgF;YAC7F,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC;YAC/C,SAAS,EAAE,CAAC;YACZ,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE,CAAC,eAAe,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,SAAS,CAAC;YACtF,OAAO,EAAE,6BAA6B;SACvC;QACD;YACE,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,6BAA6B;YACnC,WAAW,EAAE,gFAAgF;YAC7F,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,QAAQ;YACpB,IAAI,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,SAAS,CAAC;YAC/C,SAAS,EAAE,CAAC;YACZ,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,wBAAwB;gBACxB,oBAAoB;gBACpB,gBAAgB;gBAChB,oBAAoB;aACrB;YACD,OAAO,EAAE,yBAAyB;SACnC;KACF;IACD,iBAAiB,EAAE;QACjB;YACE,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,kCAAkC;YACxC,WAAW,EAAE,6DAA6D;YAC1E,QAAQ,EAAE,iBAAiB;YAC3B,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,KAAK,EAAE,qBAAqB,EAAE,YAAY,EAAE,KAAK,CAAC;YACzD,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,aAAa;gBACb,iBAAiB;gBACjB,gBAAgB;gBAChB,gBAAgB;gBAChB,mBAAmB;aACpB;YACD,OAAO,EAAE,+BAA+B;SACzC;QACD;YACE,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,4BAA4B;YAClC,WAAW,EAAE,gEAAgE;YAC7E,QAAQ,EAAE,iBAAiB;YAC3B,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,kBAAkB,CAAC;YACjE,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,0BAA0B;gBAC1B,sBAAsB;gBACtB,cAAc;gBACd,0BAA0B;aAC3B;YACD,OAAO,EAAE,kCAAkC;SAC5C;KACF;IACD,WAAW,EAAE;QACX;YACE,EAAE,EAAE,OAAO;YACX,IAAI,EAAE,kCAAkC;YACxC,WAAW,EAAE,mEAAmE;YAChF,QAAQ,EAAE,aAAa;YACvB,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe,CAAC;YACnD,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE,CAAC,oBAAoB,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,CAAC;YACxF,OAAO,EAAE,+BAA+B;SACzC;QACD;YACE,EAAE,EAAE,OAAO;YACX,IAAI,EAAE,6BAA6B;YACnC,WAAW,EAAE,iEAAiE;YAC9E,QAAQ,EAAE,aAAa;YACvB,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC;YAC1D,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,kBAAkB;gBAClB,sBAAsB;gBACtB,oBAAoB;gBACpB,wBAAwB;aACzB;YACD,OAAO,EAAE,uBAAuB;SACjC;KACF;IACD,YAAY,EAAE;QACZ;YACE,EAAE,EAAE,SAAS;YACb,IAAI,EAAE,oBAAoB;YAC1B,WAAW,EAAE,6EAA6E;YAC1F,QAAQ,EAAE,cAAc;YACxB,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC;YAC9D,SAAS,EAAE,CAAC;YACZ,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE,CAAC,eAAe,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,qBAAqB,CAAC;YAC3F,OAAO,EAAE,gCAAgC;SAC1C;KACF;IACD,aAAa,EAAE;QACb;YACE,EAAE,EAAE,MAAM;YACV,IAAI,EAAE,sCAAsC;YAC5C,WAAW,EAAE,gFAAgF;YAC7F,QAAQ,EAAE,aAAa;YACvB,UAAU,EAAE,UAAU;YACtB,IAAI,EAAE,CAAC,IAAI,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,YAAY,CAAC;YACnE,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,sBAAsB;gBACtB,qBAAqB;gBACrB,iBAAiB;gBACjB,oBAAoB;aACrB;YACD,OAAO,EAAE,oCAAoC;SAC9C;QACD;YACE,EAAE,EAAE,MAAM;YACV,IAAI,EAAE,gCAAgC;YACtC,WAAW,EAAE,gEAAgE;YAC7E,QAAQ,EAAE,aAAa;YACvB,UAAU,EAAE,cAAc;YAC1B,IAAI,EAAE,CAAC,IAAI,EAAE,oBAAoB,EAAE,cAAc,EAAE,YAAY,CAAC;YAChE,SAAS,EAAE,EAAE;YACb,kBAAkB,EAAE,YAAY;YAChC,QAAQ,EAAE;gBACR,uBAAuB;gBACvB,oBAAoB;gBACpB,qBAAqB;gBACrB,mBAAmB;aACpB;YACD,OAAO,EAAE,8BAA8B;SACxC;KACF;CACF,CAAC;AAEF,2BAA2B;AAC3B,MAAM,iBAAiB,GAAG;IACxB,gBAAgB,EAAE;QAChB,IAAI,EAAE,8BAA8B;QACpC,WAAW,EAAE,oEAAoE;QACjF,OAAO,EAAE,iFAAiF;QAC1F,KAAK,EAAE,CAAC,eAAe,EAAE,aAAa,EAAE,iBAAiB,EAAE,oBAAoB,CAAC;QAChF,cAAc,EACZ,8FAA8F;KACjG;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,6DAA6D;QAC1E,OAAO,EAAE,mFAAmF;QAC5F,KAAK,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe,CAAC;QAC9F,cAAc,EACZ,wFAAwF;KAC3F;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,mDAAmD;QAChE,OAAO,EAAE,4EAA4E;QACrF,KAAK,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE,wBAAwB,EAAE,eAAe,CAAC;QAC/E,cAAc,EACZ,4FAA4F;KAC/F;IACD,qBAAqB,EAAE;QACrB,IAAI,EAAE,mCAAmC;QACzC,WAAW,EAAE,oEAAoE;QACjF,OAAO,EACL,wFAAwF;QAC1F,KAAK,EAAE,CAAC,wBAAwB,EAAE,6BAA6B,EAAE,wBAAwB,CAAC;QAC1F,cAAc,EACZ,gFAAgF;KACnF;CACF,CAAC;AAEF,uEAAuE;AACvE,SAAgB,mBAAmB,CAAC,SAAiC,EAAE,MAAW;IAChF,4BAA4B;IAC5B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,2BAA2B;QACjC,WAAW,EACT,yFAAyF;QAC3F,UAAU,EAAE,oBAAoB;QAChC,WAAW,EAAE;YACX,KAAK,EAAE,2BAA2B;YAClC,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAA0C,EAAE,EAAE;YAC5D,IAAI,CAAC;gBACH,IAAI,YAAY,GAAU,EAAE,CAAC;gBAE7B,wCAAwC;gBACxC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,EAAE;oBACjE,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;wBAC1D,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC/E,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,uBAAuB;gBACvB,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE,CAAC;oBAC9B,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1F,CAAC;gBAED,yBAAyB;gBACzB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;oBACvC,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,QAAQ,CAAC,EAAE,CACT,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;wBAC3C,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;wBAClD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACtE,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CACjD,CAAC;gBACJ,CAAC;gBAED,iBAAiB;gBACjB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAC5C,IAAI,CAAC,IAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAClE,CAAC;gBACJ,CAAC;gBAED,gBAAgB;gBAChB,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEjD,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAC9B,OAAO,CACL,8CAA8C;wBAC9C,eAAe,IAAI,CAAC,QAAQ,IAAI;wBAChC,iBAAiB,IAAI,CAAC,UAAU,IAAI;wBACpC,YAAY,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI;wBACpC,WAAW,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,MAAM;wBAChD,8DAA8D,CAC/D,CAAC;gBACJ,CAAC;gBAED,IAAI,MAAM,GAAG,wCAAwC,CAAC;gBACtD,MAAM,IAAI,WAAW,YAAY,CAAC,MAAM,yCAAyC,CAAC;gBAClF,MAAM,IAAI,qBAAqB,IAAI,CAAC,KAAK,IAAI,eAAe,IAAI,CAAC;gBACjE,MAAM,IAAI,iBAAiB,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAC7C,MAAM,IAAI,mBAAmB,IAAI,CAAC,UAAU,MAAM,CAAC;gBAEnD,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;oBACvC,MAAM,cAAc,GAClB,QAAQ,CAAC,UAAU,KAAK,QAAQ;wBAC9B,CAAC,CAAC,IAAI;wBACN,CAAC,CAAC,QAAQ,CAAC,UAAU,KAAK,cAAc;4BACtC,CAAC,CAAC,IAAI;4BACN,CAAC,CAAC,IAAI,CAAC;oBAEb,MAAM,IAAI,MAAM,KAAK,GAAG,CAAC,KAAK,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,CAAC;oBAClE,MAAM,IAAI,iBAAiB,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;oBACtG,MAAM,IAAI,mBAAmB,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC5G,MAAM,IAAI,oBAAoB,QAAQ,CAAC,WAAW,IAAI,CAAC;oBACvD,MAAM,IAAI,iBAAiB,QAAQ,CAAC,OAAO,IAAI,CAAC;oBAChD,MAAM,IAAI,mBAAmB,QAAQ,CAAC,kBAAkB,IAAI,CAAC;oBAC7D,MAAM,IAAI,mBAAmB,QAAQ,CAAC,SAAS,UAAU,CAAC;oBAC1D,MAAM,IAAI,aAAa,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBAEpD,MAAM,IAAI,iBAAiB,CAAC;oBAC5B,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;wBAC5C,MAAM,IAAI,KAAK,OAAO,IAAI,CAAC;oBAC7B,CAAC,CAAC,CAAC;oBAEH,MAAM,IAAI,sBAAsB,QAAQ,CAAC,EAAE,4CAA4C,CAAC;gBAC1F,CAAC,CAAC,CAAC;gBAEH,MAAM,IAAI,oBAAoB,CAAC;gBAC/B,MAAM,IAAI,8EAA8E,CAAC;gBACzF,MAAM,IAAI,mEAAmE,CAAC;gBAC9E,MAAM,IAAI,qEAAqE,CAAC;gBAEhF,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,MAAM,IAAI,mBAAS,CAAC,+BAA+B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YACtE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,8BAA8B;IAC9B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,0BAA0B;QAChC,WAAW,EACT,yGAAyG;QAC3G,UAAU,EAAE,oBAAoB;QAChC,WAAW,EAAE;YACX,KAAK,EAAE,0BAA0B;YACjC,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAA0C,EAAE,EAAE;YAC5D,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,mBAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAE3D,4BAA4B;gBAC5B,MAAM,QAAQ,GAAG;oBACf,EAAE,EAAE,UAAU,IAAI,CAAC,GAAG,EAAE,EAAE;oBAC1B,IAAI,EAAE,IAAI,CAAC,YAAY;oBACvB,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,mCAAmC,QAAQ,CAAC,IAAI,EAAE;oBACnF,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;oBACrB,UAAU,EACR,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;wBAC1C,CAAC,CAAC,UAAU;wBACZ,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;4BAC3C,CAAC,CAAC,cAAc;4BAChB,CAAC,CAAC,QAAQ;oBAChB,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC;oBACtC,kBAAkB,EAChB,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;wBAC1C,CAAC,CAAC,aAAa;wBACf,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;4BAC3C,CAAC,CAAC,eAAe;4BACjB,CAAC,CAAC,eAAe;oBACvB,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACpC,gBAAgB,EAAE;wBAChB,EAAE,EAAE,QAAQ,CAAC,EAAE;wBACf,IAAI,EAAE,QAAQ,CAAC,IAAI;wBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;qBACxB;oBACD,QAAQ,EAAE;wBACR,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,EAAE;wBAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW,IAAI,EAAE;wBACvC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,IAAI,EAAE;qBAClC;oBACD,gBAAgB,EAAE,EAA4B;oBAC9C,mBAAmB,EAAE,EAAc;oBACnC,YAAY,EAAE;wBACZ,WAAW,EAAE,EAAc;wBAC3B,gBAAgB,EAAE,EAAc;wBAChC,aAAa,EAAE,EAAc;qBAC9B;iBACF,CAAC;gBAEF,uDAAuD;gBACvD,MAAM,eAAe,GAAG,IAAI,GAAG,EAAU,CAAC;gBAC1C,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAU,CAAC;gBAC3C,MAAM,eAAe,GAAa,EAAE,CAAC;gBACrC,MAAM,gBAAgB,GAA2B,EAAE,CAAC;gBAEpD,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE;oBACjD,oBAAoB;oBACpB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnF,CAAC;oBAED,6BAA6B;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACzC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;wBAC9D,gBAAgB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBAC5C,CAAC;yBAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;wBACtC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAChC,CAAC;yBAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;wBACpE,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBACxC,CAAC;yBAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;wBACvE,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACnC,CAAC;yBAAM,IACL,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACvB,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAC3B,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC9B,CAAC;wBACD,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBACtC,CAAC;oBAED,yBAAyB;oBACzB,IAAI,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;wBACrD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;4BACvD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;gCAC9B,gDAAgD;gCAChD,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;oCAC/C,QAAQ;oCACR,gBAAgB,CAAC,QAAQ,SAAS,IAAI,GAAG,EAAE,CAAC,GAAG,kBAAkB,CAAC;oCAClE,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC;gCAC/D,CAAC;qCAAM,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC;oCACvC,MAAM;oCACN,gBAAgB,CAAC,QAAQ,SAAS,IAAI,GAAG,EAAE,CAAC,GAAG,yBAAyB,CAAC;oCACzE,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC;gCAC7D,CAAC;qCAAM,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC;oCACtC,yCAAyC;oCACzC,gBAAgB,CAAC,QAAQ,SAAS,IAAI,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC;oCAC5D,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,OAAO,GAAG,eAAe,CAAC,CAAC;gCACpE,CAAC;qCAAM,IACL,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;oCACjC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC;oCACnC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;oCACpC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,EACtC,CAAC;oCACD,4BAA4B;oCAC5B,gBAAgB,CAAC,QAAQ,SAAS,IAAI,GAAG,EAAE,CAAC,GAAG,mBAAmB,CAAC;oCACnE,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,OAAO,GAAG,eAAe,CAAC,CAAC;gCACpE,CAAC;4BACH,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,wCAAwC;gBACxC,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAChE,QAAQ,CAAC,YAAY,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACtE,QAAQ,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;gBAC7C,QAAQ,CAAC,mBAAmB,GAAG,eAAe,CAAC;gBAE/C,8DAA8D;gBAC9D,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC7B,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAC7D,GAAG,IAAI;wBACP,WAAW,EAAE,EAAE;qBAChB,CAAC,CAAC,CAAC;gBACN,CAAC;gBAED,2BAA2B;gBAC3B,IAAI,YAAY,GAAG,uBAAuB,IAAI,CAAC,YAAY,OAAO,CAAC;gBACnE,YAAY,IAAI,oBAAoB,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;gBACpE,YAAY,IAAI,wBAAwB,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE,KAAK,CAAC;gBAC3E,YAAY,IAAI,iBAAiB,IAAI,CAAC,QAAQ,IAAI,CAAC;gBACnD,YAAY,IAAI,mBAAmB,QAAQ,CAAC,UAAU,IAAI,CAAC;gBAC3D,YAAY,IAAI,6BAA6B,QAAQ,CAAC,kBAAkB,MAAM,CAAC;gBAE/E,YAAY,IAAI,0BAA0B,CAAC;gBAC3C,YAAY,IAAI,qBAAqB,QAAQ,CAAC,SAAS,IAAI,CAAC;gBAC5D,YAAY,IAAI,sBAAsB,QAAQ,CAAC,WAAW,IAAI,CAAC;gBAC/D,YAAY,IAAI,eAAe,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,MAAM,CAAC;gBAExE,IAAI,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACjD,YAAY,IAAI,8BAA8B,CAAC;oBAC/C,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBAC/C,YAAY,IAAI,KAAK,IAAI,IAAI,CAAC;oBAChC,CAAC,CAAC,CAAC;oBACH,YAAY,IAAI,IAAI,CAAC;gBACvB,CAAC;gBAED,IAAI,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtD,YAAY,IAAI,2BAA2B,CAAC;oBAC5C,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACvD,YAAY,IAAI,KAAK,OAAO,IAAI,CAAC;oBACnC,CAAC,CAAC,CAAC;oBACH,YAAY,IAAI,IAAI,CAAC;gBACvB,CAAC;gBAED,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC/B,YAAY,IAAI,iCAAiC,CAAC;oBAClD,YAAY,IAAI,wFAAwF,CAAC;oBACzG,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC9B,YAAY,IAAI,KAAK,KAAK,IAAI,CAAC;oBACjC,CAAC,CAAC,CAAC;oBACH,YAAY,IAAI,IAAI,CAAC;gBACvB,CAAC;gBAED,YAAY,IAAI,2BAA2B,CAAC;gBAC5C,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC7C,YAAY,IAAI,0DAA0D,CAAC;oBAC3E,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,EAAE;wBAChE,YAAY,IAAI,OAAO,KAAK,yBAAyB,WAAW,KAAK,CAAC;oBACxE,CAAC,CAAC,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACN,YAAY,IAAI,uFAAuF,CAAC;gBAC1G,CAAC;gBACD,YAAY,IAAI,IAAI,CAAC;gBAErB,YAAY,IAAI,uBAAuB,CAAC;gBACxC,YAAY,IAAI,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,cAAc,CAAC;gBAE/E,YAAY,IAAI,4BAA4B,CAAC;gBAC7C,YAAY,IAAI,6CAA6C,CAAC;gBAC9D,YAAY,IAAI,8DAA8D,CAAC;gBAC/E,YAAY,IAAI,sEAAsE,CAAC;gBACvF,YAAY,IAAI,8DAA8D,CAAC;gBAC/E,YAAY,IAAI,qDAAqD,CAAC;gBAEtE,YAAY,IAAI,8BAA8B,CAAC;gBAC/C,YAAY,IAAI,4CAA4C,QAAQ,CAAC,EAAE,MAAM,CAAC;gBAC9E,YAAY,IAAI,gFAAgF,CAAC;gBAEjG,OAAO,YAAY,CAAC;YACtB,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,MAAM,IAAI,mBAAS,CAAC,uCAAuC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,2BAA2B;IAC3B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,0BAA0B;QAChC,WAAW,EACT,0GAA0G;QAC5G,UAAU,EAAE,oBAAoB;QAChC,WAAW,EAAE;YACX,KAAK,EAAE,0BAA0B;YACjC,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAA0C,EAAE,EAAE;YAC5D,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,mBAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBAEvC,8BAA8B;gBAC9B,MAAM,QAAQ,GAAG,YAAmB,CAAC;gBACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACnD,MAAM,IAAI,mBAAS,CAAC,gDAAgD,CAAC,CAAC;gBACxE,CAAC;gBAED,kDAAkD;gBAClD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAEnE,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC3E,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,SAAiB,EAAE,EAAE;wBAC3E,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;4BACpB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;gCACvD,MAAM,UAAU,GAAG,QAAQ,SAAS,IAAI,GAAG,EAAE,CAAC;gCAC9C,IAAI,IAAI,CAAC,gBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC;oCACvC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAiB,CAAC,UAAU,CAAC,CAAC;gCAC5D,CAAC;4BACH,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,gCAAgC;gBAChC,IAAI,IAAI,CAAC,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC/E,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;wBACxD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;4BACrB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE;gCAChE,IAAI,IAAI,CAAC,kBAAmB,CAAC,QAAQ,CAAC,EAAE,CAAC;oCACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG;wCAC3B,EAAE,EAAE,IAAI,CAAC,kBAAmB,CAAC,QAAQ,CAAC;wCACtC,IAAI,EAAE,IAAI,CAAC,kBAAmB,CAAC,QAAQ,CAAC;qCACzC,CAAC;gCACJ,CAAC;4BACH,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,2BAA2B;gBAC3B,MAAM,SAAS,GAAG,IAAI,GAAG,EAAkB,CAAC;gBAC5C,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;oBACxD,MAAM,KAAK,GAAG,QAAQ,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;oBAC9E,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;oBAC9B,OAAO;wBACL,GAAG,IAAI;wBACP,EAAE,EAAE,KAAK;wBACT,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;qBACtC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,uCAAuC;gBACvC,MAAM,cAAc,GAAwB,EAAE,CAAC;gBAC/C,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,EAAE;oBAC5E,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBAC3C,IAAI,SAAS,EAAE,CAAC;wBACd,MAAM,kBAAkB,GAAwB,EAAE,CAAC;wBACnD,MAAM,CAAC,OAAO,CAAC,WAAkC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,EAAE;4BACnF,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;gCAC3B,kBAAkB,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,CAAC;oCAC7D,GAAG,MAAM;oCACT,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI;iCAChD,CAAC,CAAC,CAAC;4BACN,CAAC;wBACH,CAAC,CAAC,CAAC;wBACH,cAAc,CAAC,SAAS,CAAC,GAAG,kBAAkB,CAAC;oBACjD,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,YAAY,CAAC,WAAW,GAAG,cAAc,CAAC;gBAE1C,sBAAsB;gBACtB,MAAM,qBAAqB,GAAG;oBAC5B,IAAI,EAAE,IAAI,CAAC,YAAY;oBACvB,KAAK,EAAE,YAAY,CAAC,KAAK;oBACzB,WAAW,EAAE,YAAY,CAAC,WAAW;oBACrC,MAAM,EAAE,IAAI,CAAC,QAAQ;oBACrB,QAAQ,EAAE,YAAY,CAAC,QAAQ,IAAI,EAAE;iBACtC,CAAC;gBAEF,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;gBAEvE,IAAI,MAAM,GAAG,sCAAsC,CAAC;gBACpD,MAAM,IAAI,6BAA6B,WAAW,CAAC,IAAI,IAAI,CAAC;gBAC5D,MAAM,IAAI,oBAAoB,WAAW,CAAC,EAAE,IAAI,CAAC;gBACjD,MAAM,IAAI,eAAe,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC;gBAC9E,MAAM,IAAI,uBAAuB,YAAY,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;gBAC/D,MAAM,IAAI,oBAAoB,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,MAAM,CAAC;gBAEhE,yCAAyC;gBACzC,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;oBACtB,MAAM,IAAI,8BAA8B,CAAC;oBACzC,MAAM,IAAI,wBAAwB,YAAY,CAAC,IAAI,IAAI,CAAC;oBACxD,MAAM,IAAI,mBAAmB,YAAY,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC;oBACpE,MAAM,IAAI,qBAAqB,YAAY,CAAC,UAAU,IAAI,SAAS,IAAI,CAAC;oBACxE,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC;wBAC7B,MAAM,IAAI,sBAAsB,YAAY,CAAC,WAAW,IAAI,CAAC;oBAC/D,CAAC;oBACD,MAAM,IAAI,IAAI,CAAC;gBACjB,CAAC;gBAED,wBAAwB;gBACxB,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC3E,MAAM,IAAI,oCAAoC,CAAC;oBAC/C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE;wBAC/D,MAAM,IAAI,OAAO,KAAK,OAAO,KAAK,IAAI,CAAC;oBACzC,CAAC,CAAC,CAAC;oBACH,MAAM,IAAI,IAAI,CAAC;gBACjB,CAAC;gBAED,2BAA2B;gBAC3B,IAAI,IAAI,CAAC,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC/E,MAAM,IAAI,qCAAqC,CAAC;oBAChD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE;wBACrE,MAAM,IAAI,OAAO,QAAQ,OAAO,MAAM,IAAI,CAAC;oBAC7C,CAAC,CAAC,CAAC;oBACH,MAAM,IAAI,IAAI,CAAC;gBACjB,CAAC;gBAED,iCAAiC;gBACjC,MAAM,iBAAiB,GAAG,YAAmB,CAAC;gBAC9C,IAAI,iBAAiB,CAAC,YAAY,EAAE,CAAC;oBACnC,MAAM,GAAG,GAAG,iBAAiB,CAAC,YAAY,CAAC;oBAE3C,IAAI,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAClD,MAAM,IAAI,8BAA8B,CAAC;wBACzC,MAAM,IAAI,4CAA4C,CAAC;wBACvD,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,EAAE;4BACvC,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC;wBAC1B,CAAC,CAAC,CAAC;wBACH,MAAM,IAAI,IAAI,CAAC;oBACjB,CAAC;oBAED,IAAI,GAAG,CAAC,gBAAgB,IAAI,GAAG,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC5D,MAAM,IAAI,uCAAuC,CAAC;wBAClD,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;4BAC/C,MAAM,IAAI,KAAK,OAAO,IAAI,CAAC;wBAC7B,CAAC,CAAC,CAAC;wBACH,MAAM,IAAI,IAAI,CAAC;oBACjB,CAAC;oBAED,IAAI,GAAG,CAAC,aAAa,IAAI,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACtD,MAAM,IAAI,uBAAuB,CAAC;wBAClC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;4BAC3C,MAAM,IAAI,KAAK,MAAM,IAAI,CAAC;wBAC5B,CAAC,CAAC,CAAC;wBACH,MAAM,IAAI,IAAI,CAAC;oBACjB,CAAC;gBACH,CAAC;gBAED,MAAM,IAAI,oBAAoB,CAAC;gBAC/B,MAAM,IAAI,0EAA0E,CAAC;gBACrF,MAAM,IAAI,oEAAoE,CAAC;gBAC/E,MAAM,IAAI,sEAAsE,CAAC;gBACjF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACnB,MAAM,IAAI,kEAAkE,CAAC;gBAC/E,CAAC;gBACD,MAAM,IAAI,yEAAyE,CAAC;gBAEpF,MAAM,IAAI,yBAAyB,CAAC;gBACpC,MAAM,IAAI,oBAAoB,WAAW,CAAC,EAAE,8BAA8B,CAAC;gBAC3E,MAAM,IAAI,qBAAqB,WAAW,CAAC,EAAE,gCAAgC,CAAC;gBAC9E,MAAM,IAAI,mCAAmC,WAAW,CAAC,EAAE,2BAA2B,CAAC;gBAEvF,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,MAAM,IAAI,mBAAS,CAAC,uCAAuC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,4BAA4B;IAC5B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,2BAA2B;QACjC,WAAW,EACT,uHAAuH;QACzH,UAAU,EAAE,qBAAqB;QACjC,WAAW,EAAE;YACX,KAAK,EAAE,2BAA2B;YAClC,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB;QACD,OAAO,EAAE,KAAK,EAAE,IAA2C,EAAE,EAAE;YAC7D,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,mBAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,IAAI,SAAS,GAAkB,EAAE,CAAC;gBAElC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC3D,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACzB,CAAC;qBAAM,CAAC;oBACN,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC1D,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC5B,CAAC;gBAED,IAAI,QAAQ,GAAG,iCAAiC,CAAC;gBACjD,QAAQ,IAAI,sBAAsB,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;gBAClE,QAAQ,IAAI,2BAA2B,SAAS,CAAC,MAAM,IAAI,CAAC;gBAC5D,QAAQ,IAAI,qBAAqB,IAAI,CAAC,WAAW,MAAM,CAAC;gBAExD,MAAM,cAAc,GAGhB,EAAE,CAAC;gBAEP,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;oBACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;wBAAE,SAAS;oBAE7D,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;oBACvE,MAAM,eAAe,GACnB,QAAQ,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;oBAEvE,+BAA+B;oBAC/B,IAAI,IAAI,CAAC,WAAW,KAAK,aAAa,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;wBACrE,MAAM,gBAAgB,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;wBAC7D,IAAI,gBAAgB,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;4BAC/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;gCAAE,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;4BACvE,cAAc,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;gCACjC,QAAQ;gCACR,KAAK,EAAE,gBAAgB,CAAC,KAAK;gCAC7B,OAAO,EAAE,gBAAgB,CAAC,OAAO;6BAClC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;oBAED,uCAAuC;oBACvC,IAAI,IAAI,CAAC,WAAW,KAAK,qBAAqB,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;wBAC7E,MAAM,SAAS,GAAG,gCAAgC,CAAC,QAAQ,CAAC,CAAC;wBAC7D,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;4BACxB,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC;gCACxC,cAAc,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC;4BAC7C,cAAc,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC;gCACzC,QAAQ;gCACR,KAAK,EAAE,SAAS,CAAC,KAAK;gCACtB,OAAO,EAAE,SAAS,CAAC,OAAO;6BAC3B,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;oBAED,kCAAkC;oBAClC,IAAI,IAAI,CAAC,WAAW,KAAK,gBAAgB,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;wBACxE,MAAM,UAAU,GAAG,2BAA2B,CAAC,QAAQ,CAAC,CAAC;wBACzD,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;4BACzB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;gCAAE,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;4BAC7E,cAAc,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;gCACpC,QAAQ;gCACR,KAAK,EAAE,UAAU,CAAC,KAAK;gCACvB,OAAO,EAAE,UAAU,CAAC,OAAO;6BAC5B,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;oBAED,gCAAgC;oBAChC,IAAI,IAAI,CAAC,WAAW,KAAK,cAAc,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;wBACtE,MAAM,iBAAiB,GAAG,0BAA0B,CAAC,QAAQ,CAAC,CAAC;wBAC/D,IAAI,iBAAiB,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;4BAChC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;gCAAE,cAAc,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;4BACzE,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;gCAClC,QAAQ;gCACR,KAAK,EAAE,iBAAiB,CAAC,KAAK;gCAC9B,OAAO,EAAE,iBAAiB,CAAC,OAAO;6BACnC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;oBAED,iCAAiC;oBACjC,IAAI,IAAI,CAAC,WAAW,KAAK,eAAe,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;wBACvE,MAAM,OAAO,GAAG,0BAA0B,CAAC,QAAQ,CAAC,CAAC;wBACrD,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;4BACtB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;gCAAE,cAAc,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;4BAC3E,cAAc,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;gCACnC,QAAQ;gCACR,KAAK,EAAE,OAAO,CAAC,KAAK;gCACpB,OAAO,EAAE,OAAO,CAAC,OAAO;6BACzB,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,mCAAmC;gBACnC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAC7C,QAAQ,IAAI,+DAA+D,CAAC;oBAC5E,QAAQ,IAAI,wBAAwB,CAAC;oBACrC,QAAQ,IAAI,yCAAyC,CAAC;oBACtD,QAAQ,IAAI,qCAAqC,CAAC;oBAClD,QAAQ,IAAI,6CAA6C,CAAC;oBAC1D,QAAQ,IAAI,mEAAmE,CAAC;oBAChF,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,EAAE;oBAChE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC1C,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAA6C,CAAC,CAAC;oBAErF,QAAQ,IAAI,MAAM,WAAW,EAAE,IAAI,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC9G,IAAI,WAAW,EAAE,CAAC;wBAChB,QAAQ,IAAI,oBAAoB,WAAW,CAAC,WAAW,IAAI,CAAC;wBAC5D,QAAQ,IAAI,+BAA+B,WAAW,CAAC,OAAO,MAAM,CAAC;oBACvE,CAAC;oBAED,QAAQ,IAAI,qCAAqC,OAAO,CAAC,MAAM,MAAM,CAAC;oBACtE,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;wBAC/B,MAAM,UAAU,GACd,KAAK,CAAC,KAAK,IAAI,EAAE;4BACf,CAAC,CAAC,cAAc;4BAChB,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;gCACjB,CAAC,CAAC,SAAS;gCACX,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;oCACjB,CAAC,CAAC,YAAY;oCACd,CAAC,CAAC,UAAU,CAAC;wBAErB,QAAQ,IAAI,GAAG,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,QAAQ,UAAU,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;wBAC9F,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC7B,QAAQ,IAAI,QAAQ,MAAM,IAAI,CAAC;wBACjC,CAAC,CAAC,CAAC;wBACH,QAAQ,IAAI,IAAI,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAChC,QAAQ,IAAI,yCAAyC,CAAC;oBAEtD,MAAM,eAAe,GAAG,EAAE,CAAC;oBAE3B,mCAAmC;oBACnC,MAAM,6BAA6B,GAAG,SAAS,CAAC,MAAM,CACpD,QAAQ,CAAC,EAAE,CACT,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CACtF,CAAC;oBAEF,IAAI,6BAA6B,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC7C,eAAe,CAAC,IAAI,CAClB,uBAAuB,6BAA6B,CAAC,MAAM,sEAAsE,CAClI,CAAC;oBACJ,CAAC;oBAED,qCAAqC;oBACrC,MAAM,oBAAoB,GAAG,cAAc,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;oBACjE,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;oBAEpF,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACpC,eAAe,CAAC,IAAI,CAClB,6BAA6B,oBAAoB,CAAC,MAAM,0GAA0G,CACnK,CAAC;oBACJ,CAAC;oBAED,sCAAsC;oBACtC,MAAM,mBAAmB,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC7E,MAAM,uBAAuB,GAAG,cAAc,CAAC,cAAc,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;oBAE3E,IAAI,mBAAmB,IAAI,CAAC,uBAAuB,EAAE,CAAC;wBACpD,eAAe,CAAC,IAAI,CAClB,+HAA+H,CAChI,CAAC;oBACJ,CAAC;oBAED,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;wBACjC,eAAe,CAAC,IAAI,CAClB,+FAA+F,CAChG,CAAC;oBACJ,CAAC;oBAED,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;wBACrC,QAAQ,IAAI,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;oBACvC,CAAC,CAAC,CAAC;oBACH,QAAQ,IAAI,IAAI,CAAC;oBAEjB,iBAAiB;oBACjB,QAAQ,IAAI,gCAAgC,CAAC;oBAC7C,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE;wBAC3D,QAAQ,IAAI,KAAK,OAAO,CAAC,IAAI,OAAO,OAAO,CAAC,cAAc,IAAI,CAAC;oBACjE,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,QAAQ,IAAI,yBAAyB,CAAC;gBACtC,QAAQ,IAAI,6EAA6E,CAAC;gBAC1F,QAAQ,IAAI,qEAAqE,CAAC;gBAClF,QAAQ,IAAI,oEAAoE,CAAC;gBAEjF,OAAO,QAAQ,CAAC;YAClB,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,MAAM,IAAI,mBAAS,CAAC,wCAAwC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC/E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,qBAAqB;IACrB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EACT,gHAAgH;QAClH,UAAU,EAAE,mBAAmB;QAC/B,WAAW,EAAE;YACX,KAAK,EAAE,oBAAoB;YAC3B,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAAyC,EAAE,EAAE;YAC3D,IAAI,CAAC;gBACH,IAAI,aAAa,GAAG,yCAAyC,CAAC;gBAC9D,aAAa,IAAI,kBAAkB,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;gBACnE,aAAa,IAAI,uBAAuB,IAAI,CAAC,QAAQ,MAAM,CAAC;gBAE5D,2BAA2B;gBAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;oBAC7D,aAAa,IAAI,8CAA8C,CAAC;oBAEhE,aAAa,IAAI,gCAAgC,CAAC;oBAClD,aAAa,IAAI,4EAA4E,CAAC;oBAC9F,aAAa,IAAI,qEAAqE,CAAC;oBACvF,aAAa,IAAI,8DAA8D,CAAC;oBAChF,aAAa,IAAI,uEAAuE,CAAC;oBACzF,aAAa,IAAI,oEAAoE,CAAC;oBAEtF,aAAa,IAAI,6BAA6B,CAAC;oBAC/C,aAAa,IAAI,gEAAgE,CAAC;oBAClF,aAAa,IAAI,2EAA2E,CAAC;oBAC7F,aAAa,IAAI,4EAA4E,CAAC;oBAC9F,aAAa,IAAI,4EAA4E,CAAC;oBAE9F,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,aAAa,IAAI,iCAAiC,CAAC;wBACnD,aAAa,IAAI,UAAU,CAAC;wBAC5B,aAAa,IAAI,sCAAsC,CAAC;wBACxD,aAAa,IAAI,iFAAiF,CAAC;wBACnG,aAAa,IAAI,YAAY,CAAC;oBAChC,CAAC;gBACH,CAAC;gBAED,6BAA6B;gBAC7B,IAAI,IAAI,CAAC,QAAQ,KAAK,aAAa,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;oBAC/D,aAAa,IAAI,qCAAqC,CAAC;oBAEvD,aAAa,IAAI,oCAAoC,CAAC;oBACtD,aAAa,IAAI,iEAAiE,CAAC;oBACnF,aAAa,IAAI,iEAAiE,CAAC;oBACnF,aAAa,IAAI,iEAAiE,CAAC;oBACnF,aAAa,IAAI,kEAAkE,CAAC;oBACpF,aAAa,IAAI,mDAAmD,CAAC;oBAErE,aAAa,IAAI,0BAA0B,CAAC;oBAC5C,aAAa,IAAI,6DAA6D,CAAC;oBAC/E,aAAa,IAAI,qEAAqE,CAAC;oBACvF,aAAa,IAAI,uEAAuE,CAAC;oBACzF,aAAa,IAAI,gEAAgE,CAAC;oBAElF,aAAa,IAAI,iCAAiC,CAAC;oBACnD,aAAa,IAAI,0DAA0D,CAAC;oBAC5E,aAAa,IAAI,6DAA6D,CAAC;oBAC/E,aAAa,IAAI,wEAAwE,CAAC;oBAC1F,aAAa,IAAI,wEAAwE,CAAC;oBAE1F,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,aAAa,IAAI,2CAA2C,CAAC;wBAC7D,aAAa,IAAI,cAAc,CAAC;wBAChC,aAAa,IAAI,KAAK,CAAC;wBACvB,aAAa,IAAI,uBAAuB,CAAC;wBACzC,aAAa,IAAI,mBAAmB,CAAC;wBACrC,aAAa,IAAI,gCAAgC,CAAC;wBAClD,aAAa,IAAI,yBAAyB,CAAC;wBAC3C,aAAa,IAAI,QAAQ,CAAC;wBAC1B,aAAa,IAAI,mBAAmB,CAAC;wBACrC,aAAa,IAAI,6BAA6B,CAAC;wBAC/C,aAAa,IAAI,OAAO,CAAC;wBACzB,aAAa,IAAI,KAAK,CAAC;wBACvB,aAAa,IAAI,YAAY,CAAC;oBAChC,CAAC;gBACH,CAAC;gBAED,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;oBAC5D,aAAa,IAAI,mCAAmC,CAAC;oBAErD,aAAa,IAAI,gCAAgC,CAAC;oBAClD,aAAa,IAAI,oEAAoE,CAAC;oBACtF,aAAa,IAAI,yEAAyE,CAAC;oBAC3F,aAAa,IAAI,mEAAmE,CAAC;oBACrF,aAAa,IAAI,wFAAwF,CAAC;oBAE1G,aAAa,IAAI,wBAAwB,CAAC;oBAC1C,aAAa,IAAI,wEAAwE,CAAC;oBAC1F,aAAa,IAAI,0DAA0D,CAAC;oBAC5E,aAAa,IAAI,yEAAyE,CAAC;oBAC3F,aAAa,IAAI,4DAA4D,CAAC;oBAE9E,aAAa,IAAI,2BAA2B,CAAC;oBAC7C,aAAa,IAAI,kEAAkE,CAAC;oBACpF,aAAa,IAAI,2DAA2D,CAAC;oBAC7E,aAAa,IAAI,gEAAgE,CAAC;oBAClF,aAAa,IAAI,yDAAyD,CAAC;oBAE3E,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,aAAa,IAAI,mCAAmC,CAAC;wBACrD,aAAa,IAAI,oBAAoB,CAAC;wBACtC,aAAa,IAAI,sCAAsC,CAAC;wBACxD,aAAa,IAAI,4CAA4C,CAAC;wBAC9D,aAAa,IAAI,mEAAmE,CAAC;wBACrF,aAAa,IAAI,8CAA8C,CAAC;wBAChE,aAAa,IAAI,KAAK,CAAC;wBACvB,aAAa,IAAI,YAAY,CAAC;oBAChC,CAAC;gBACH,CAAC;gBAED,iCAAiC;gBACjC,IAAI,IAAI,CAAC,QAAQ,KAAK,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;oBACnE,aAAa,IAAI,0CAA0C,CAAC;oBAE5D,aAAa,IAAI,wBAAwB,CAAC;oBAC1C,aAAa,IAAI,qEAAqE,CAAC;oBACvF,aAAa,IAAI,wEAAwE,CAAC;oBAC1F,aAAa,IAAI,8DAA8D,CAAC;oBAChF,aAAa,IAAI,gEAAgE,CAAC;oBAElF,aAAa,IAAI,0BAA0B,CAAC;oBAC5C,aAAa,IAAI,mDAAmD,CAAC;oBACrE,aAAa,IAAI,uDAAuD,CAAC;oBACzE,aAAa,IAAI,+EAA+E,CAAC;oBACjG,aAAa,IAAI,+DAA+D,CAAC;oBAEjF,aAAa,IAAI,qCAAqC,CAAC;oBACvD,aAAa,IAAI,kEAAkE,CAAC;oBACpF,aAAa,IAAI,sEAAsE,CAAC;oBACxF,aAAa,IAAI,2DAA2D,CAAC;oBAC7E,aAAa,IAAI,yDAAyD,CAAC;oBAE3E,aAAa,IAAI,2BAA2B,CAAC;oBAC7C,aAAa,IAAI,8DAA8D,CAAC;oBAChF,aAAa,IAAI,0DAA0D,CAAC;oBAC5E,aAAa,IAAI,iEAAiE,CAAC;oBACnF,aAAa,IAAI,wDAAwD,CAAC;oBAE1E,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,aAAa,IAAI,gDAAgD,CAAC;wBAClE,aAAa,IAAI,UAAU,CAAC;wBAC5B,aAAa,IAAI,6DAA6D,CAAC;wBAC/E,aAAa,IAAI,8CAA8C,CAAC;wBAChE,aAAa,IAAI,sDAAsD,CAAC;wBACxE,aAAa,IAAI,oDAAoD,CAAC;wBACtE,aAAa,IAAI,wCAAwC,CAAC;wBAC1D,aAAa,IAAI,YAAY,CAAC;oBAChC,CAAC;gBACH,CAAC;gBAED,gCAAgC;gBAChC,aAAa,IAAI,wCAAwC,CAAC;gBAC1D,aAAa,IAAI,kCAAkC,CAAC;gBACpD,aAAa,IAAI,wDAAwD,CAAC;gBAC1E,aAAa,IAAI,mDAAmD,CAAC;gBACrE,aAAa,IAAI,6DAA6D,CAAC;gBAC/E,aAAa,IAAI,wDAAwD,CAAC;gBAE1E,aAAa,IAAI,oCAAoC,CAAC;gBACtD,aAAa,IAAI,sFAAsF,CAAC;gBACxG,aAAa,IAAI,kEAAkE,CAAC;gBACpF,aAAa,IAAI,4EAA4E,CAAC;gBAC9F,aAAa,IAAI,yDAAyD,CAAC;gBAE3E,aAAa,IAAI,iCAAiC,CAAC;gBACnD,aAAa,IAAI,mEAAmE,CAAC;gBACrF,aAAa,IAAI,uEAAuE,CAAC;gBACzF,aAAa,IAAI,wEAAwE,CAAC;gBAC1F,aAAa,IAAI,iFAAiF,CAAC;gBAEnG,4BAA4B;gBAC5B,aAAa,IAAI,oCAAoC,CAAC;gBACtD,aAAa,IAAI,gCAAgC,CAAC;gBAClD,aAAa,IAAI,gEAAgE,CAAC;gBAClF,aAAa,IAAI,4DAA4D,CAAC;gBAC9E,aAAa,IAAI,4DAA4D,CAAC;gBAC9E,aAAa,IAAI,oDAAoD,CAAC;gBACtE,aAAa,IAAI,wDAAwD,CAAC;gBAC1E,aAAa,IAAI,2DAA2D,CAAC;gBAC7E,aAAa,IAAI,4CAA4C,CAAC;gBAC9D,aAAa,IAAI,6CAA6C,CAAC;gBAC/D,aAAa,IAAI,4CAA4C,CAAC;gBAC9D,aAAa,IAAI,qCAAqC,CAAC;gBAEvD,aAAa,IAAI,8BAA8B,CAAC;gBAChD,aAAa,IAAI,sEAAsE,CAAC;gBACxF,aAAa,IAAI,oEAAoE,CAAC;gBACtF,aAAa,IAAI,mEAAmE,CAAC;gBACrF,aAAa,IAAI,2DAA2D,CAAC;gBAE7E,OAAO,aAAa,CAAC;YACvB,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,MAAM,IAAI,mBAAS,CAAC,iCAAiC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YACxE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC;AAED,wCAAwC;AACxC,SAAS,yBAAyB,CAAC,QAAqB;IACtD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,2BAA2B;IAC3B,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAChC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAClF,CAAC,MAAM,CAAC;IAET,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;QACjB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,QAAQ,mCAAmC,CAAC,CAAC;IAC/D,CAAC;IAED,gCAAgC;IAChC,MAAM,cAAc,GAAG,UAAU,CAAC,MAAM,CACtC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CACnF,CAAC,MAAM,CAAC;IAET,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC;QACvB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,cAAc,oCAAoC,CAAC,CAAC;IACtE,CAAC;IAED,2BAA2B;IAC3B,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAC7B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAC3F,CAAC,MAAM,CAAC;IAET,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;QACnB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,mCAAmC,UAAU,UAAU,CAAC,CAAC;IACxE,CAAC;IAED,2BAA2B;IAC3B,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAC5B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,CACrE,CAAC,MAAM,CAAC;IAET,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;QAClB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,iCAAiC,SAAS,UAAU,CAAC,CAAC;IACrE,CAAC;IAED,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC5B,CAAC;AAED,SAAS,gCAAgC,CAAC,QAAqB;IAI7D,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,kCAAkC;IAClC,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CACjC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CACjF,CAAC,MAAM,CAAC;IAET,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;QAClB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,qCAAqC,CAAC,CAAC;IAClE,CAAC;IAED,uBAAuB;IACvB,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CACvC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAClF,CAAC,MAAM,CAAC;IAET,IAAI,eAAe,GAAG,CAAC,EAAE,CAAC;QACxB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,qCAAqC,CAAC,CAAC;IACxE,CAAC;IAED,wCAAwC;IACxC,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CACjC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAC3D,CAAC,MAAM,CAAC;IAET,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;QAClB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,4CAA4C,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC5B,CAAC;AAED,SAAS,2BAA2B,CAAC,QAAqB;IACxD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,gCAAgC;IAChC,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAChC,IAAI,CAAC,EAAE,CACL,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC;QACzC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CACvF,CAAC,MAAM,CAAC;IAET,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;QACtB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,aAAa,2CAA2C,CAAC,CAAC;IAC5E,CAAC;IAED,6CAA6C;IAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACjF,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CACpC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAC3E,CAAC,MAAM,CAAC;IAET,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;QACtB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,aAAa,uCAAuC,CAAC,CAAC;IACxE,CAAC;IAED,8CAA8C;IAC9C,MAAM,iBAAiB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC,MAAM,CAAC;IAEV,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAC1B,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,iBAAiB,0CAA0C,CAAC,CAAC;IAC/E,CAAC;IAED,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC5B,CAAC;AAED,SAAS,0BAA0B,CAAC,QAAqB;IACvD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,+BAA+B;IAC/B,MAAM,iBAAiB,GAAG,UAAU,CAAC,MAAM,CACzC,IAAI,CAAC,EAAE,CACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC3B,CAAC,MAAM,CAAC;IAET,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAC1B,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,iBAAiB,qCAAqC,CAAC,CAAC;IAC1E,CAAC;IAED,2CAA2C;IAC3C,MAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM,CACxC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACvD,CAAC,MAAM,CAAC;IAET,IAAI,gBAAgB,GAAG,CAAC,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAClD,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,uCAAuC,gBAAgB,mBAAmB,CAAC,CAAC;IAC3F,CAAC;IAED,+BAA+B;IAC/B,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CACnC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CACtD,CAAC,MAAM,CAAC;IAET,IAAI,WAAW,GAAG,CAAC,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAC7C,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,uCAAuC,WAAW,UAAU,CAAC,CAAC;IAC7E,CAAC;IAED,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC5B,CAAC;AAED,SAAS,0BAA0B,CAAC,QAAqB;IACvD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;IACnC,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,qBAAqB;IACrB,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAC/B,IAAI,CAAC,EAAE,CACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CACzB,CAAC,MAAM,CAAC;IAET,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;QAChB,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,mCAAmC,CAAC,CAAC;IAC9D,CAAC;IAED,6BAA6B;IAC7B,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CACjC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAChF,CAAC,MAAM,CAAC;IAET,IAAI,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;QACjC,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,qCAAqC,SAAS,UAAU,CAAC,CAAC;IACzE,CAAC;IAED,iCAAiC;IACjC,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC5F,CAAC,MAAM,CAAC;IAET,IAAI,YAAY,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;QACpC,KAAK,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,6BAA6B,YAAY,UAAU,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAC5B,CAAC",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/templates.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { N8nWorkflow } from '../types/n8n.js';\n\n// Zod schemas for template and pattern management\nconst TemplateSearchSchema = z.object({\n  query: z.string().optional(),\n  category: z\n    .enum([\n      'automation',\n      'data-processing',\n      'integration',\n      'notification',\n      'ai-workflow',\n      'e-commerce',\n      'all',\n    ])\n    .optional()\n    .default('all'),\n  complexity: z.enum(['simple', 'intermediate', 'advanced', 'all']).optional().default('all'),\n  tags: z.array(z.string()).optional(),\n  limit: z.number().min(1).max(50).optional().default(20),\n});\n\nconst TemplateExportSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  templateName: z.string().min(1, 'Template name is required'),\n  description: z.string().optional(),\n  category: z.enum([\n    'automation',\n    'data-processing',\n    'integration',\n    'notification',\n    'ai-workflow',\n    'e-commerce',\n  ]),\n  tags: z.array(z.string()).optional(),\n  includeCredentials: z.boolean().optional().default(false),\n  makeSensitiveDataGeneric: z.boolean().optional().default(true),\n});\n\nconst TemplateImportSchema = z.object({\n  templateData: z.record(z.any()),\n  workflowName: z.string().min(1, 'Workflow name is required'),\n  parameterMapping: z.record(z.string()).optional(),\n  replaceCredentials: z.record(z.string()).optional(),\n  activate: z.boolean().optional().default(false),\n});\n\nconst PatternAnalysisSchema = z.object({\n  workflowId: z.string().optional(),\n  patternType: z\n    .enum([\n      'integration',\n      'data-transformation',\n      'error-handling',\n      'notification',\n      'ai-processing',\n      'all',\n    ])\n    .optional()\n    .default('all'),\n  includeRecommendations: z.boolean().optional().default(true),\n});\n\nconst BestPracticesSchema = z.object({\n  workflowId: z.string().optional(),\n  category: z\n    .enum(['structure', 'performance', 'security', 'maintainability', 'all'])\n    .optional()\n    .default('all'),\n  includeExamples: z.boolean().optional().default(true),\n});\n\n// Curated template library (in production, this would connect to n8n's template API or database)\nconst TEMPLATE_LIBRARY = {\n  automation: [\n    {\n      id: 'auto-1',\n      name: 'Automated Email Response System',\n      description: 'Automatically respond to emails based on content analysis and predefined rules',\n      category: 'automation',\n      complexity: 'intermediate',\n      tags: ['email', 'automation', 'ai', 'response'],\n      nodeCount: 8,\n      estimatedSetupTime: '30 minutes',\n      features: ['Email parsing', 'AI content analysis', 'Conditional responses', 'Logging'],\n      useCase: 'Customer support automation',\n    },\n    {\n      id: 'auto-2',\n      name: 'Social Media Post Scheduler',\n      description: 'Schedule and automatically post content across multiple social media platforms',\n      category: 'automation',\n      complexity: 'simple',\n      tags: ['social-media', 'scheduling', 'content'],\n      nodeCount: 6,\n      estimatedSetupTime: '20 minutes',\n      features: [\n        'Multi-platform posting',\n        'Content scheduling',\n        'Image handling',\n        'Analytics tracking',\n      ],\n      useCase: 'Social media management',\n    },\n  ],\n  'data-processing': [\n    {\n      id: 'data-1',\n      name: 'CSV Data Transformation Pipeline',\n      description: 'Transform, validate, and enrich CSV data with external APIs',\n      category: 'data-processing',\n      complexity: 'intermediate',\n      tags: ['csv', 'data-transformation', 'validation', 'api'],\n      nodeCount: 12,\n      estimatedSetupTime: '45 minutes',\n      features: [\n        'CSV parsing',\n        'Data validation',\n        'API enrichment',\n        'Error handling',\n        'Output formatting',\n      ],\n      useCase: 'Data migration and processing',\n    },\n    {\n      id: 'data-2',\n      name: 'Real-time Data Aggregation',\n      description: 'Aggregate data from multiple sources in real-time with caching',\n      category: 'data-processing',\n      complexity: 'advanced',\n      tags: ['real-time', 'aggregation', 'caching', 'multiple-sources'],\n      nodeCount: 15,\n      estimatedSetupTime: '60 minutes',\n      features: [\n        'Multi-source integration',\n        'Real-time processing',\n        'Data caching',\n        'Performance optimization',\n      ],\n      useCase: 'Business intelligence dashboards',\n    },\n  ],\n  integration: [\n    {\n      id: 'int-1',\n      name: 'CRM to Marketing Automation Sync',\n      description: 'Sync customer data between CRM and marketing automation platforms',\n      category: 'integration',\n      complexity: 'intermediate',\n      tags: ['crm', 'marketing', 'sync', 'customer-data'],\n      nodeCount: 10,\n      estimatedSetupTime: '40 minutes',\n      features: ['Bidirectional sync', 'Data mapping', 'Conflict resolution', 'Audit logging'],\n      useCase: 'Sales and marketing alignment',\n    },\n    {\n      id: 'int-2',\n      name: 'E-commerce Order Processing',\n      description: 'Process e-commerce orders across multiple systems and platforms',\n      category: 'integration',\n      complexity: 'advanced',\n      tags: ['e-commerce', 'orders', 'inventory', 'fulfillment'],\n      nodeCount: 18,\n      estimatedSetupTime: '90 minutes',\n      features: [\n        'Order validation',\n        'Inventory management',\n        'Payment processing',\n        'Fulfillment automation',\n      ],\n      useCase: 'E-commerce operations',\n    },\n  ],\n  notification: [\n    {\n      id: 'notif-1',\n      name: 'Smart Alert System',\n      description: 'Intelligent alert system with escalation and multiple notification channels',\n      category: 'notification',\n      complexity: 'intermediate',\n      tags: ['alerts', 'escalation', 'multi-channel', 'intelligent'],\n      nodeCount: 9,\n      estimatedSetupTime: '35 minutes',\n      features: ['Smart routing', 'Escalation rules', 'Multiple channels', 'Alert deduplication'],\n      useCase: 'System monitoring and alerting',\n    },\n  ],\n  'ai-workflow': [\n    {\n      id: 'ai-1',\n      name: 'Document Analysis and Classification',\n      description: 'AI-powered document analysis with automatic classification and data extraction',\n      category: 'ai-workflow',\n      complexity: 'advanced',\n      tags: ['ai', 'document-processing', 'classification', 'extraction'],\n      nodeCount: 14,\n      estimatedSetupTime: '75 minutes',\n      features: [\n        'AI document analysis',\n        'Auto-classification',\n        'Data extraction',\n        'Confidence scoring',\n      ],\n      useCase: 'Document management and processing',\n    },\n    {\n      id: 'ai-2',\n      name: 'Intelligent Content Generation',\n      description: 'Generate and optimize content using AI with quality validation',\n      category: 'ai-workflow',\n      complexity: 'intermediate',\n      tags: ['ai', 'content-generation', 'optimization', 'validation'],\n      nodeCount: 11,\n      estimatedSetupTime: '50 minutes',\n      features: [\n        'AI content generation',\n        'Quality validation',\n        'Multi-format output',\n        'Brand consistency',\n      ],\n      useCase: 'Content marketing automation',\n    },\n  ],\n};\n\n// Common workflow patterns\nconst WORKFLOW_PATTERNS = {\n  'error-handling': {\n    name: 'Comprehensive Error Handling',\n    description: 'Best practices for implementing robust error handling in workflows',\n    pattern: 'Try-Catch blocks with retry logic, fallback mechanisms, and error notifications',\n    nodes: ['Error Trigger', 'Retry Logic', 'Fallback Action', 'Error Notification'],\n    implementation:\n      'Use error trigger nodes after critical operations, implement exponential backoff for retries',\n  },\n  'data-validation': {\n    name: 'Data Validation Pipeline',\n    description: 'Systematic approach to validating and sanitizing input data',\n    pattern: 'Input validation \u2192 Data sanitization \u2192 Business rule validation \u2192 Error reporting',\n    nodes: ['Validation Node', 'Set Node (cleaning)', 'IF Node (business rules)', 'Error Handler'],\n    implementation:\n      'Validate data types, check business rules, sanitize inputs, handle validation failures',\n  },\n  'api-integration': {\n    name: 'Reliable API Integration',\n    description: 'Best practices for integrating with external APIs',\n    pattern: 'Rate limiting \u2192 Authentication \u2192 Request \u2192 Retry logic \u2192 Response handling',\n    nodes: ['Wait Node', 'HTTP Request', 'IF Node (status check)', 'Error Handler'],\n    implementation:\n      'Implement rate limiting, proper authentication, status code handling, and retry mechanisms',\n  },\n  'notification-system': {\n    name: 'Multi-Channel Notification System',\n    description: 'Flexible notification system with multiple channels and priorities',\n    pattern:\n      'Priority assessment \u2192 Channel selection \u2192 Message formatting \u2192 Delivery \u2192 Confirmation',\n    nodes: ['Switch Node (priority)', 'Multiple notification nodes', 'Webhook (confirmation)'],\n    implementation:\n      'Route notifications based on priority, use multiple channels, confirm delivery',\n  },\n};\n\n// Tool registration function for template and pattern management tools\nexport function createTemplateTools(getClient: () => N8nClient | null, server: any) {\n  // Search workflow templates\n  server.addTool({\n    name: 'search-workflow-templates',\n    description:\n      'Search and browse curated workflow templates by category, complexity, and functionality',\n    parameters: TemplateSearchSchema,\n    annotations: {\n      title: 'Search Workflow Templates',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: false,\n    },\n    execute: async (args: z.infer<typeof TemplateSearchSchema>) => {\n      try {\n        let allTemplates: any[] = [];\n\n        // Collect templates from all categories\n        Object.entries(TEMPLATE_LIBRARY).forEach(([category, templates]) => {\n          if (args.category === 'all' || args.category === category) {\n            allTemplates.push(...templates.map(template => ({ ...template, category })));\n          }\n        });\n\n        // Filter by complexity\n        if (args.complexity !== 'all') {\n          allTemplates = allTemplates.filter(template => template.complexity === args.complexity);\n        }\n\n        // Filter by search query\n        if (args.query) {\n          const query = args.query.toLowerCase();\n          allTemplates = allTemplates.filter(\n            template =>\n              template.name.toLowerCase().includes(query) ||\n              template.description.toLowerCase().includes(query) ||\n              template.tags.some((tag: string) => tag.toLowerCase().includes(query)) ||\n              template.useCase.toLowerCase().includes(query)\n          );\n        }\n\n        // Filter by tags\n        if (args.tags && args.tags.length > 0) {\n          allTemplates = allTemplates.filter(template =>\n            args.tags!.some(tag => template.tags.includes(tag.toLowerCase()))\n          );\n        }\n\n        // Limit results\n        allTemplates = allTemplates.slice(0, args.limit);\n\n        if (allTemplates.length === 0) {\n          return (\n            `No templates found matching your criteria:\\n` +\n            `- Category: ${args.category}\\n` +\n            `- Complexity: ${args.complexity}\\n` +\n            `- Query: ${args.query || 'None'}\\n` +\n            `- Tags: ${args.tags?.join(', ') || 'None'}\\n\\n` +\n            `Try broadening your search criteria or browse all templates.`\n          );\n        }\n\n        let result = `# Workflow Template Search Results\\n\\n`;\n        result += `**Found ${allTemplates.length} template(s) matching your criteria**\\n`;\n        result += `**Search Query**: ${args.query || 'All templates'}\\n`;\n        result += `**Category**: ${args.category}\\n`;\n        result += `**Complexity**: ${args.complexity}\\n\\n`;\n\n        allTemplates.forEach((template, index) => {\n          const complexityIcon =\n            template.complexity === 'simple'\n              ? '\uD83D\uDFE2'\n              : template.complexity === 'intermediate'\n                ? '\uD83D\uDFE1'\n                : '\uD83D\uDD34';\n\n          result += `## ${index + 1}. ${template.name} ${complexityIcon}\\n`;\n          result += `**Category**: ${template.category.charAt(0).toUpperCase() + template.category.slice(1)}\\n`;\n          result += `**Complexity**: ${template.complexity.charAt(0).toUpperCase() + template.complexity.slice(1)}\\n`;\n          result += `**Description**: ${template.description}\\n`;\n          result += `**Use Case**: ${template.useCase}\\n`;\n          result += `**Setup Time**: ${template.estimatedSetupTime}\\n`;\n          result += `**Node Count**: ${template.nodeCount} nodes\\n`;\n          result += `**Tags**: ${template.tags.join(', ')}\\n`;\n\n          result += `**Features**:\\n`;\n          template.features.forEach((feature: string) => {\n            result += `- ${feature}\\n`;\n          });\n\n          result += `**Template ID**: \\`${template.id}\\` (use with import-workflow-template)\\n\\n`;\n        });\n\n        result += `## \uD83D\uDD27 Next Steps\\n`;\n        result += `- Use \\`import-workflow-template\\` with a template ID to import a template\\n`;\n        result += `- Use \\`export-workflow-template\\` to create your own templates\\n`;\n        result += `- Use \\`analyze-workflow-patterns\\` to understand common patterns\\n`;\n\n        return result;\n      } catch (error: any) {\n        throw new UserError(`Failed to search templates: ${error.message}`);\n      }\n    },\n  });\n\n  // Export workflow as template\n  server.addTool({\n    name: 'export-workflow-template',\n    description:\n      'Export an existing workflow as a reusable template with parameter mapping and sensitive data protection',\n    parameters: TemplateExportSchema,\n    annotations: {\n      title: 'Export Workflow Template',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TemplateExportSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const workflow = await client.getWorkflow(args.workflowId);\n\n        // Create template structure\n        const template = {\n          id: `custom-${Date.now()}`,\n          name: args.templateName,\n          description: args.description || `Template created from workflow: ${workflow.name}`,\n          category: args.category,\n          tags: args.tags || [],\n          complexity:\n            workflow.nodes && workflow.nodes.length > 15\n              ? 'advanced'\n              : workflow.nodes && workflow.nodes.length > 8\n                ? 'intermediate'\n                : 'simple',\n          nodeCount: workflow.nodes?.length || 0,\n          estimatedSetupTime:\n            workflow.nodes && workflow.nodes.length > 15\n              ? '60+ minutes'\n              : workflow.nodes && workflow.nodes.length > 8\n                ? '30-45 minutes'\n                : '15-30 minutes',\n          exportDate: new Date().toISOString(),\n          originalWorkflow: {\n            id: workflow.id,\n            name: workflow.name,\n            active: workflow.active,\n          },\n          template: {\n            nodes: workflow.nodes || [],\n            connections: workflow.connections || {},\n            settings: workflow.settings || {},\n          },\n          parameterMapping: {} as Record<string, string>,\n          sensitiveDataFields: [] as string[],\n          requirements: {\n            credentials: [] as string[],\n            externalServices: [] as string[],\n            prerequisites: [] as string[],\n          },\n        };\n\n        // Analyze workflow for sensitive data and requirements\n        const credentialTypes = new Set<string>();\n        const externalServices = new Set<string>();\n        const sensitiveFields: string[] = [];\n        const parameterMapping: Record<string, string> = {};\n\n        (workflow.nodes || []).forEach((node, nodeIndex) => {\n          // Track credentials\n          if (node.credentials) {\n            Object.keys(node.credentials).forEach(credType => credentialTypes.add(credType));\n          }\n\n          // Identify external services\n          const nodeType = node.type.toLowerCase();\n          if (nodeType.includes('http') || nodeType.includes('webhook')) {\n            externalServices.add('HTTP/Webhook APIs');\n          } else if (nodeType.includes('slack')) {\n            externalServices.add('Slack');\n          } else if (nodeType.includes('gmail') || nodeType.includes('email')) {\n            externalServices.add('Email Service');\n          } else if (nodeType.includes('mysql') || nodeType.includes('postgres')) {\n            externalServices.add('Database');\n          } else if (\n            nodeType.includes('ai') ||\n            nodeType.includes('openai') ||\n            nodeType.includes('anthropic')\n          ) {\n            externalServices.add('AI Services');\n          }\n\n          // Process sensitive data\n          if (args.makeSensitiveDataGeneric && node.parameters) {\n            Object.entries(node.parameters).forEach(([key, value]) => {\n              if (typeof value === 'string') {\n                // Check for potentially sensitive data patterns\n                if (value.includes('@') && value.includes('.')) {\n                  // Email\n                  parameterMapping[`node_${nodeIndex}_${key}`] = 'user@example.com';\n                  sensitiveFields.push(`Node \"${node.name}\" - ${key} (email)`);\n                } else if (value.match(/^https?:\\/\\//)) {\n                  // URL\n                  parameterMapping[`node_${nodeIndex}_${key}`] = 'https://example.com/api';\n                  sensitiveFields.push(`Node \"${node.name}\" - ${key} (URL)`);\n                } else if (value.match(/\\b\\d{10,}\\b/)) {\n                  // Long number (could be phone, ID, etc.)\n                  parameterMapping[`node_${nodeIndex}_${key}`] = '1234567890';\n                  sensitiveFields.push(`Node \"${node.name}\" - ${key} (numeric ID)`);\n                } else if (\n                  key.toLowerCase().includes('key') ||\n                  key.toLowerCase().includes('token') ||\n                  key.toLowerCase().includes('secret') ||\n                  key.toLowerCase().includes('password')\n                ) {\n                  // API keys, tokens, secrets\n                  parameterMapping[`node_${nodeIndex}_${key}`] = 'YOUR_API_KEY_HERE';\n                  sensitiveFields.push(`Node \"${node.name}\" - ${key} (credential)`);\n                }\n              }\n            });\n          }\n        });\n\n        // Update template with analysis results\n        template.requirements.credentials = Array.from(credentialTypes);\n        template.requirements.externalServices = Array.from(externalServices);\n        template.parameterMapping = parameterMapping;\n        template.sensitiveDataFields = sensitiveFields;\n\n        // Remove credentials from template if not explicitly included\n        if (!args.includeCredentials) {\n          template.template.nodes = template.template.nodes.map(node => ({\n            ...node,\n            credentials: {},\n          }));\n        }\n\n        // Generate template export\n        let exportResult = `# Template Export: \"${args.templateName}\"\\n\\n`;\n        exportResult += `**Export Date**: ${new Date().toLocaleString()}\\n`;\n        exportResult += `**Source Workflow**: ${workflow.name} (${workflow.id})\\n`;\n        exportResult += `**Category**: ${args.category}\\n`;\n        exportResult += `**Complexity**: ${template.complexity}\\n`;\n        exportResult += `**Estimated Setup Time**: ${template.estimatedSetupTime}\\n\\n`;\n\n        exportResult += `## \uD83D\uDCCB Template Details\\n`;\n        exportResult += `- **Node Count**: ${template.nodeCount}\\n`;\n        exportResult += `- **Description**: ${template.description}\\n`;\n        exportResult += `- **Tags**: ${template.tags.join(', ') || 'None'}\\n\\n`;\n\n        if (template.requirements.credentials.length > 0) {\n          exportResult += `## \uD83D\uDD10 Required Credentials\\n`;\n          template.requirements.credentials.forEach(cred => {\n            exportResult += `- ${cred}\\n`;\n          });\n          exportResult += '\\n';\n        }\n\n        if (template.requirements.externalServices.length > 0) {\n          exportResult += `## \uD83C\uDF10 External Services\\n`;\n          template.requirements.externalServices.forEach(service => {\n            exportResult += `- ${service}\\n`;\n          });\n          exportResult += '\\n';\n        }\n\n        if (sensitiveFields.length > 0) {\n          exportResult += `## \u26A0\uFE0F Sensitive Data Replaced\\n`;\n          exportResult += `The following fields contained sensitive data and were replaced with generic values:\\n`;\n          sensitiveFields.forEach(field => {\n            exportResult += `- ${field}\\n`;\n          });\n          exportResult += '\\n';\n        }\n\n        exportResult += `## \uD83D\uDD27 Parameter Mapping\\n`;\n        if (Object.keys(parameterMapping).length > 0) {\n          exportResult += `When importing this template, update these parameters:\\n`;\n          Object.entries(parameterMapping).forEach(([field, placeholder]) => {\n            exportResult += `- **${field}**: Currently set to \"${placeholder}\"\\n`;\n          });\n        } else {\n          exportResult += `No sensitive parameters detected - template should work with minimal configuration.\\n`;\n        }\n        exportResult += '\\n';\n\n        exportResult += `## \uD83D\uDCE6 Template Data\\n`;\n        exportResult += `\\`\\`\\`json\\n${JSON.stringify(template, null, 2)}\\n\\`\\`\\`\\n\\n`;\n\n        exportResult += `## \uD83D\uDE80 Usage Instructions\\n`;\n        exportResult += `1. Save the template JSON above to a file\\n`;\n        exportResult += `2. Use \\`import-workflow-template\\` with the template data\\n`;\n        exportResult += `3. Configure required credentials and external service connections\\n`;\n        exportResult += `4. Update any parameter mappings with your specific values\\n`;\n        exportResult += `5. Test the imported workflow before activating\\n\\n`;\n\n        exportResult += `## \uD83D\uDCE4 Quick Import Command\\n`;\n        exportResult += `Use this template ID for quick import: \\`${template.id}\\`\\n`;\n        exportResult += `Note: Custom templates are stored locally and may not persist across sessions.`;\n\n        return exportResult;\n      } catch (error: any) {\n        throw new UserError(`Failed to export workflow template: ${error.message}`);\n      }\n    },\n  });\n\n  // Import workflow template\n  server.addTool({\n    name: 'import-workflow-template',\n    description:\n      'Import a workflow template and create a new workflow with parameter mapping and credential configuration',\n    parameters: TemplateImportSchema,\n    annotations: {\n      title: 'Import Workflow Template',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof TemplateImportSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const templateData = args.templateData;\n\n        // Validate template structure\n        const template = templateData as any;\n        if (!template.template || !template.template.nodes) {\n          throw new UserError('Invalid template data: missing nodes structure');\n        }\n\n        // Clone template data to avoid modifying original\n        const workflowData = JSON.parse(JSON.stringify(template.template));\n\n        // Apply parameter mapping\n        if (args.parameterMapping && Object.keys(args.parameterMapping).length > 0) {\n          workflowData.nodes = workflowData.nodes.map((node: any, nodeIndex: number) => {\n            if (node.parameters) {\n              Object.entries(node.parameters).forEach(([key, value]) => {\n                const mappingKey = `node_${nodeIndex}_${key}`;\n                if (args.parameterMapping![mappingKey]) {\n                  node.parameters[key] = args.parameterMapping![mappingKey];\n                }\n              });\n            }\n            return node;\n          });\n        }\n\n        // Apply credential replacements\n        if (args.replaceCredentials && Object.keys(args.replaceCredentials).length > 0) {\n          workflowData.nodes = workflowData.nodes.map((node: any) => {\n            if (node.credentials) {\n              Object.entries(node.credentials).forEach(([credType, credData]) => {\n                if (args.replaceCredentials![credType]) {\n                  node.credentials[credType] = {\n                    id: args.replaceCredentials![credType],\n                    name: args.replaceCredentials![credType],\n                  };\n                }\n              });\n            }\n            return node;\n          });\n        }\n\n        // Generate unique node IDs\n        const nodeIdMap = new Map<string, string>();\n        workflowData.nodes = workflowData.nodes.map((node: any) => {\n          const newId = `node_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n          nodeIdMap.set(node.id, newId);\n          return {\n            ...node,\n            id: newId,\n            position: node.position || [100, 100],\n          };\n        });\n\n        // Update connections with new node IDs\n        const newConnections: Record<string, any> = {};\n        Object.entries(workflowData.connections).forEach(([oldNodeId, connections]) => {\n          const newNodeId = nodeIdMap.get(oldNodeId);\n          if (newNodeId) {\n            const updatedConnections: Record<string, any> = {};\n            Object.entries(connections as Record<string, any>).forEach(([outputName, outputs]) => {\n              if (Array.isArray(outputs)) {\n                updatedConnections[outputName] = outputs.map((output: any) => ({\n                  ...output,\n                  node: nodeIdMap.get(output.node) || output.node,\n                }));\n              }\n            });\n            newConnections[newNodeId] = updatedConnections;\n          }\n        });\n\n        workflowData.connections = newConnections;\n\n        // Create the workflow\n        const createWorkflowRequest = {\n          name: args.workflowName,\n          nodes: workflowData.nodes,\n          connections: workflowData.connections,\n          active: args.activate,\n          settings: workflowData.settings || {},\n        };\n\n        const newWorkflow = await client.createWorkflow(createWorkflowRequest);\n\n        let result = `# Template Import Successful! \uD83C\uDF89\\n\\n`;\n        result += `**New Workflow Created**: ${newWorkflow.name}\\n`;\n        result += `**Workflow ID**: ${newWorkflow.id}\\n`;\n        result += `**Status**: ${newWorkflow.active ? '\uD83D\uDFE2 Active' : '\uD83D\uDD34 Inactive'}\\n`;\n        result += `**Nodes Imported**: ${workflowData.nodes.length}\\n`;\n        result += `**Import Date**: ${new Date().toLocaleString()}\\n\\n`;\n\n        // Show template information if available\n        if (templateData.name) {\n          result += `## \uD83D\uDCCB Template Information\\n`;\n          result += `- **Template Name**: ${templateData.name}\\n`;\n          result += `- **Category**: ${templateData.category || 'Unknown'}\\n`;\n          result += `- **Complexity**: ${templateData.complexity || 'Unknown'}\\n`;\n          if (templateData.description) {\n            result += `- **Description**: ${templateData.description}\\n`;\n          }\n          result += '\\n';\n        }\n\n        // Show applied mappings\n        if (args.parameterMapping && Object.keys(args.parameterMapping).length > 0) {\n          result += `## \uD83D\uDD27 Applied Parameter Mappings\\n`;\n          Object.entries(args.parameterMapping).forEach(([field, value]) => {\n            result += `- **${field}**: ${value}\\n`;\n          });\n          result += '\\n';\n        }\n\n        // Show credential mappings\n        if (args.replaceCredentials && Object.keys(args.replaceCredentials).length > 0) {\n          result += `## \uD83D\uDD10 Applied Credential Mappings\\n`;\n          Object.entries(args.replaceCredentials).forEach(([credType, credId]) => {\n            result += `- **${credType}**: ${credId}\\n`;\n          });\n          result += '\\n';\n        }\n\n        // Show requirements if available\n        const typedTemplateData = templateData as any;\n        if (typedTemplateData.requirements) {\n          const req = typedTemplateData.requirements;\n\n          if (req.credentials && req.credentials.length > 0) {\n            result += `## \u26A0\uFE0F Required Credentials\\n`;\n            result += `Ensure these credentials are configured:\\n`;\n            req.credentials.forEach((cred: string) => {\n              result += `- ${cred}\\n`;\n            });\n            result += '\\n';\n          }\n\n          if (req.externalServices && req.externalServices.length > 0) {\n            result += `## \uD83C\uDF10 External Service Dependencies\\n`;\n            req.externalServices.forEach((service: string) => {\n              result += `- ${service}\\n`;\n            });\n            result += '\\n';\n          }\n\n          if (req.prerequisites && req.prerequisites.length > 0) {\n            result += `## \uD83D\uDCCB Prerequisites\\n`;\n            req.prerequisites.forEach((prereq: string) => {\n              result += `- ${prereq}\\n`;\n            });\n            result += '\\n';\n          }\n        }\n\n        result += `## \uD83D\uDE80 Next Steps\\n`;\n        result += `1. **Review Configuration**: Check all node parameters and connections\\n`;\n        result += `2. **Configure Credentials**: Set up any required authentication\\n`;\n        result += `3. **Test Workflow**: Run a test execution to verify functionality\\n`;\n        if (!args.activate) {\n          result += `4. **Activate Workflow**: Use \\`activate-workflow\\` when ready\\n`;\n        }\n        result += `5. **Monitor Performance**: Use monitoring tools to track execution\\n\\n`;\n\n        result += `## \uD83D\uDD27 Useful Commands\\n`;\n        result += `- \\`get-workflow ${newWorkflow.id}\\` - View workflow details\\n`;\n        result += `- \\`test-workflow ${newWorkflow.id}\\` - Test workflow execution\\n`;\n        result += `- \\`analyze-workflow-complexity ${newWorkflow.id}\\` - Analyze complexity\\n`;\n\n        return result;\n      } catch (error: any) {\n        throw new UserError(`Failed to import workflow template: ${error.message}`);\n      }\n    },\n  });\n\n  // Analyze workflow patterns\n  server.addTool({\n    name: 'analyze-workflow-patterns',\n    description:\n      'Analyze workflows to identify common patterns, best practices, and suggest improvements based on established patterns',\n    parameters: PatternAnalysisSchema,\n    annotations: {\n      title: 'Analyze Workflow Patterns',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof PatternAnalysisSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        let workflows: N8nWorkflow[] = [];\n\n        if (args.workflowId) {\n          const workflow = await client.getWorkflow(args.workflowId);\n          workflows = [workflow];\n        } else {\n          const response = await client.getWorkflows({ limit: 20 });\n          workflows = response.data;\n        }\n\n        let analysis = `# Workflow Pattern Analysis\\n\\n`;\n        analysis += `**Analysis Date**: ${new Date().toLocaleString()}\\n`;\n        analysis += `**Workflows Analyzed**: ${workflows.length}\\n`;\n        analysis += `**Pattern Type**: ${args.patternType}\\n\\n`;\n\n        const patternMatches: Record<\n          string,\n          Array<{ workflow: N8nWorkflow; score: number; details: string[] }>\n        > = {};\n\n        for (const workflow of workflows) {\n          if (!workflow.nodes || workflow.nodes.length === 0) continue;\n\n          const _nodeTypes = workflow.nodes.map(node => node.type.toLowerCase());\n          const _hasConnections =\n            workflow.connections && Object.keys(workflow.connections).length > 0;\n\n          // Analyze integration patterns\n          if (args.patternType === 'integration' || args.patternType === 'all') {\n            const integrationScore = analyzeIntegrationPattern(workflow);\n            if (integrationScore.score > 0) {\n              if (!patternMatches['integration']) patternMatches['integration'] = [];\n              patternMatches['integration'].push({\n                workflow,\n                score: integrationScore.score,\n                details: integrationScore.details,\n              });\n            }\n          }\n\n          // Analyze data transformation patterns\n          if (args.patternType === 'data-transformation' || args.patternType === 'all') {\n            const dataScore = analyzeDataTransformationPattern(workflow);\n            if (dataScore.score > 0) {\n              if (!patternMatches['data-transformation'])\n                patternMatches['data-transformation'] = [];\n              patternMatches['data-transformation'].push({\n                workflow,\n                score: dataScore.score,\n                details: dataScore.details,\n              });\n            }\n          }\n\n          // Analyze error handling patterns\n          if (args.patternType === 'error-handling' || args.patternType === 'all') {\n            const errorScore = analyzeErrorHandlingPattern(workflow);\n            if (errorScore.score > 0) {\n              if (!patternMatches['error-handling']) patternMatches['error-handling'] = [];\n              patternMatches['error-handling'].push({\n                workflow,\n                score: errorScore.score,\n                details: errorScore.details,\n              });\n            }\n          }\n\n          // Analyze notification patterns\n          if (args.patternType === 'notification' || args.patternType === 'all') {\n            const notificationScore = analyzeNotificationPattern(workflow);\n            if (notificationScore.score > 0) {\n              if (!patternMatches['notification']) patternMatches['notification'] = [];\n              patternMatches['notification'].push({\n                workflow,\n                score: notificationScore.score,\n                details: notificationScore.details,\n              });\n            }\n          }\n\n          // Analyze AI processing patterns\n          if (args.patternType === 'ai-processing' || args.patternType === 'all') {\n            const aiScore = analyzeAIProcessingPattern(workflow);\n            if (aiScore.score > 0) {\n              if (!patternMatches['ai-processing']) patternMatches['ai-processing'] = [];\n              patternMatches['ai-processing'].push({\n                workflow,\n                score: aiScore.score,\n                details: aiScore.details,\n              });\n            }\n          }\n        }\n\n        // Generate pattern analysis report\n        if (Object.keys(patternMatches).length === 0) {\n          analysis += `No significant patterns detected in the analyzed workflows.\\n`;\n          analysis += `This could indicate:\\n`;\n          analysis += `- Workflows are using custom patterns\\n`;\n          analysis += `- Limited workflow data available\\n`;\n          analysis += `- Patterns don't match common templates\\n\\n`;\n          analysis += `Consider analyzing individual workflows or using template search.`;\n          return analysis;\n        }\n\n        Object.entries(patternMatches).forEach(([patternType, matches]) => {\n          matches.sort((a, b) => b.score - a.score);\n          const patternInfo = WORKFLOW_PATTERNS[patternType as keyof typeof WORKFLOW_PATTERNS];\n\n          analysis += `## ${patternInfo?.name || patternType.charAt(0).toUpperCase() + patternType.slice(1)} Pattern\\n`;\n          if (patternInfo) {\n            analysis += `**Description**: ${patternInfo.description}\\n`;\n            analysis += `**Typical Implementation**: ${patternInfo.pattern}\\n\\n`;\n          }\n\n          analysis += `**Workflows Using This Pattern** (${matches.length}):\\n`;\n          matches.forEach((match, index) => {\n            const scoreLevel =\n              match.score >= 80\n                ? '\uD83D\uDFE2 Excellent'\n                : match.score >= 60\n                  ? '\uD83D\uDFE1 Good'\n                  : match.score >= 40\n                    ? '\uD83D\uDFE0 Partial'\n                    : '\uD83D\uDD34 Basic';\n\n            analysis += `${index + 1}. **${match.workflow.name}** - ${scoreLevel} (${match.score}/100)\\n`;\n            match.details.forEach(detail => {\n              analysis += `   - ${detail}\\n`;\n            });\n            analysis += '\\n';\n          });\n        });\n\n        // Pattern recommendations\n        if (args.includeRecommendations) {\n          analysis += `## \uD83D\uDCA1 Pattern-Based Recommendations\\n\\n`;\n\n          const recommendations = [];\n\n          // Check for missing error handling\n          const workflowsWithoutErrorHandling = workflows.filter(\n            workflow =>\n              !patternMatches['error-handling']?.some(match => match.workflow.id === workflow.id)\n          );\n\n          if (workflowsWithoutErrorHandling.length > 0) {\n            recommendations.push(\n              `**Error Handling**: ${workflowsWithoutErrorHandling.length} workflow(s) could benefit from implementing error handling patterns`\n            );\n          }\n\n          // Check for integration improvements\n          const integrationWorkflows = patternMatches['integration'] || [];\n          const lowScoreIntegrations = integrationWorkflows.filter(match => match.score < 60);\n\n          if (lowScoreIntegrations.length > 0) {\n            recommendations.push(\n              `**Integration Patterns**: ${lowScoreIntegrations.length} workflow(s) have partial integration patterns - consider implementing complete API integration patterns`\n            );\n          }\n\n          // Check for notification improvements\n          const hasComplexWorkflows = workflows.some(w => (w.nodes?.length || 0) > 10);\n          const hasNotificationPatterns = patternMatches['notification']?.length > 0;\n\n          if (hasComplexWorkflows && !hasNotificationPatterns) {\n            recommendations.push(\n              `**Notification Patterns**: Complex workflows detected without notification patterns - consider adding monitoring and alerting`\n            );\n          }\n\n          if (recommendations.length === 0) {\n            recommendations.push(\n              'Workflows demonstrate good pattern usage - continue monitoring for optimization opportunities'\n            );\n          }\n\n          recommendations.forEach((rec, index) => {\n            analysis += `${index + 1}. ${rec}\\n`;\n          });\n          analysis += '\\n';\n\n          // Best practices\n          analysis += `## \uD83C\uDFC6 Pattern Best Practices\\n`;\n          Object.entries(WORKFLOW_PATTERNS).forEach(([key, pattern]) => {\n            analysis += `**${pattern.name}**: ${pattern.implementation}\\n`;\n          });\n        }\n\n        analysis += `\\n## \uD83D\uDD27 Related Tools\\n`;\n        analysis += `- Use \\`search-workflow-templates\\` to find templates with these patterns\\n`;\n        analysis += `- Use \\`get-best-practices\\` for detailed implementation guidance\\n`;\n        analysis += `- Use \\`get-optimization-suggestions\\` for specific improvements\\n`;\n\n        return analysis;\n      } catch (error: any) {\n        throw new UserError(`Failed to analyze workflow patterns: ${error.message}`);\n      }\n    },\n  });\n\n  // Get best practices\n  server.addTool({\n    name: 'get-best-practices',\n    description:\n      'Get comprehensive best practices and implementation guidelines for workflow development, organized by category',\n    parameters: BestPracticesSchema,\n    annotations: {\n      title: 'Get Best Practices',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: false,\n    },\n    execute: async (args: z.infer<typeof BestPracticesSchema>) => {\n      try {\n        let bestPractices = `# n8n Workflow Best Practices Guide\\n\\n`;\n        bestPractices += `**Generated**: ${new Date().toLocaleString()}\\n`;\n        bestPractices += `**Category Focus**: ${args.category}\\n\\n`;\n\n        // Structure best practices\n        if (args.category === 'structure' || args.category === 'all') {\n          bestPractices += `## \uD83C\uDFD7\uFE0F Workflow Structure Best Practices\\n\\n`;\n\n          bestPractices += `### 1. Workflow Organization\\n`;\n          bestPractices += `- **Single Responsibility**: Each workflow should have one clear purpose\\n`;\n          bestPractices += `- **Logical Flow**: Organize nodes in a clear, left-to-right flow\\n`;\n          bestPractices += `- **Node Naming**: Use descriptive, business-focused names\\n`;\n          bestPractices += `- **Documentation**: Add notes to complex nodes and decision points\\n`;\n          bestPractices += `- **Size Limits**: Keep workflows under 30 nodes when possible\\n\\n`;\n\n          bestPractices += `### 2. Node Configuration\\n`;\n          bestPractices += `- **Parameter Validation**: Always validate input parameters\\n`;\n          bestPractices += `- **Default Values**: Provide sensible defaults for optional parameters\\n`;\n          bestPractices += `- **Environment Variables**: Use environment variables for configuration\\n`;\n          bestPractices += `- **Resource Optimization**: Configure appropriate timeouts and limits\\n\\n`;\n\n          if (args.includeExamples) {\n            bestPractices += `### Example: Good Node Naming\\n`;\n            bestPractices += `\\`\\`\\`\\n`;\n            bestPractices += `\u274C Bad: \"HTTP Request\", \"Set\", \"IF\"\\n`;\n            bestPractices += `\u2705 Good: \"Fetch Customer Data\", \"Format Order Details\", \"Check Payment Status\"\\n`;\n            bestPractices += `\\`\\`\\`\\n\\n`;\n          }\n        }\n\n        // Performance best practices\n        if (args.category === 'performance' || args.category === 'all') {\n          bestPractices += `## \u26A1 Performance Best Practices\\n\\n`;\n\n          bestPractices += `### 1. HTTP Request Optimization\\n`;\n          bestPractices += `- **Connection Pooling**: Enable keep-alive for HTTP requests\\n`;\n          bestPractices += `- **Request Batching**: Batch multiple requests when possible\\n`;\n          bestPractices += `- **Timeout Configuration**: Set appropriate request timeouts\\n`;\n          bestPractices += `- **Rate Limiting**: Implement rate limiting for external APIs\\n`;\n          bestPractices += `- **Caching**: Cache frequently accessed data\\n\\n`;\n\n          bestPractices += `### 2. Data Processing\\n`;\n          bestPractices += `- **Stream Processing**: Use streaming for large datasets\\n`;\n          bestPractices += `- **Memory Management**: Avoid loading large datasets into memory\\n`;\n          bestPractices += `- **Parallel Processing**: Use parallel execution where appropriate\\n`;\n          bestPractices += `- **Data Validation**: Validate data early in the workflow\\n\\n`;\n\n          bestPractices += `### 3. Code Node Optimization\\n`;\n          bestPractices += `- **Library Usage**: Minimize external library imports\\n`;\n          bestPractices += `- **Loop Optimization**: Avoid nested loops in code nodes\\n`;\n          bestPractices += `- **Error Handling**: Implement proper error handling in custom code\\n`;\n          bestPractices += `- **Performance Monitoring**: Add timing and logging to code nodes\\n\\n`;\n\n          if (args.includeExamples) {\n            bestPractices += `### Example: HTTP Request Configuration\\n`;\n            bestPractices += `\\`\\`\\`json\\n`;\n            bestPractices += `{\\n`;\n            bestPractices += `  \"timeout\": 30000,\\n`;\n            bestPractices += `  \"redirect\": {\\n`;\n            bestPractices += `    \"followRedirects\": true,\\n`;\n            bestPractices += `    \"maxRedirects\": 3\\n`;\n            bestPractices += `  },\\n`;\n            bestPractices += `  \"response\": {\\n`;\n            bestPractices += `    \"fullResponse\": false\\n`;\n            bestPractices += `  }\\n`;\n            bestPractices += `}\\n`;\n            bestPractices += `\\`\\`\\`\\n\\n`;\n          }\n        }\n\n        // Security best practices\n        if (args.category === 'security' || args.category === 'all') {\n          bestPractices += `## \uD83D\uDD12 Security Best Practices\\n\\n`;\n\n          bestPractices += `### 1. Credential Management\\n`;\n          bestPractices += `- **No Hardcoded Secrets**: Never hardcode API keys or passwords\\n`;\n          bestPractices += `- **Credential Scope**: Use least-privilege principle for credentials\\n`;\n          bestPractices += `- **Credential Rotation**: Regularly rotate API keys and tokens\\n`;\n          bestPractices += `- **Environment Separation**: Use different credentials for different environments\\n\\n`;\n\n          bestPractices += `### 2. Data Security\\n`;\n          bestPractices += `- **Data Encryption**: Encrypt sensitive data in transit and at rest\\n`;\n          bestPractices += `- **Input Sanitization**: Sanitize all external inputs\\n`;\n          bestPractices += `- **Output Filtering**: Filter sensitive data from logs and responses\\n`;\n          bestPractices += `- **Access Control**: Implement proper access controls\\n\\n`;\n\n          bestPractices += `### 3. Network Security\\n`;\n          bestPractices += `- **HTTPS Only**: Always use HTTPS for external communications\\n`;\n          bestPractices += `- **Certificate Validation**: Validate SSL certificates\\n`;\n          bestPractices += `- **IP Whitelisting**: Restrict access to known IP addresses\\n`;\n          bestPractices += `- **Webhook Security**: Validate webhook signatures\\n\\n`;\n\n          if (args.includeExamples) {\n            bestPractices += `### Example: Secure API Request\\n`;\n            bestPractices += `\\`\\`\\`javascript\\n`;\n            bestPractices += `// In Code Node - Input Validation\\n`;\n            bestPractices += `const email = $input.first().json.email;\\n`;\n            bestPractices += `if (!email || !email.match(/^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/)) {\\n`;\n            bestPractices += `  throw new Error('Invalid email format');\\n`;\n            bestPractices += `}\\n`;\n            bestPractices += `\\`\\`\\`\\n\\n`;\n          }\n        }\n\n        // Maintainability best practices\n        if (args.category === 'maintainability' || args.category === 'all') {\n          bestPractices += `## \uD83D\uDD27 Maintainability Best Practices\\n\\n`;\n\n          bestPractices += `### 1. Documentation\\n`;\n          bestPractices += `- **Workflow Description**: Clear description of workflow purpose\\n`;\n          bestPractices += `- **Node Documentation**: Document complex logic and decision points\\n`;\n          bestPractices += `- **Change Log**: Maintain a record of significant changes\\n`;\n          bestPractices += `- **Dependencies**: Document external service dependencies\\n\\n`;\n\n          bestPractices += `### 2. Version Control\\n`;\n          bestPractices += `- **Backup Strategy**: Regular workflow backups\\n`;\n          bestPractices += `- **Change Tracking**: Track workflow modifications\\n`;\n          bestPractices += `- **Environment Management**: Separate development and production workflows\\n`;\n          bestPractices += `- **Rollback Plan**: Maintain ability to rollback changes\\n\\n`;\n\n          bestPractices += `### 3. Monitoring & Observability\\n`;\n          bestPractices += `- **Error Monitoring**: Implement comprehensive error tracking\\n`;\n          bestPractices += `- **Performance Metrics**: Track execution times and success rates\\n`;\n          bestPractices += `- **Health Checks**: Regular workflow health validation\\n`;\n          bestPractices += `- **Alerting**: Set up alerts for critical failures\\n\\n`;\n\n          bestPractices += `### 4. Testing Strategy\\n`;\n          bestPractices += `- **Test Data**: Use realistic but non-sensitive test data\\n`;\n          bestPractices += `- **Edge Cases**: Test error conditions and edge cases\\n`;\n          bestPractices += `- **Integration Testing**: Test with actual external services\\n`;\n          bestPractices += `- **Regression Testing**: Test after modifications\\n\\n`;\n\n          if (args.includeExamples) {\n            bestPractices += `### Example: Workflow Documentation Template\\n`;\n            bestPractices += `\\`\\`\\`\\n`;\n            bestPractices += `Purpose: Process customer orders from e-commerce platform\\n`;\n            bestPractices += `Trigger: Webhook from Shopify on new order\\n`;\n            bestPractices += `Dependencies: Shopify API, Email service, Database\\n`;\n            bestPractices += `Error Handling: Slack notifications for failures\\n`;\n            bestPractices += `Last Updated: 2024-01-15 by John Doe\\n`;\n            bestPractices += `\\`\\`\\`\\n\\n`;\n          }\n        }\n\n        // Common anti-patterns to avoid\n        bestPractices += `## \u274C Common Anti-Patterns to Avoid\\n\\n`;\n        bestPractices += `### 1. Structure Anti-Patterns\\n`;\n        bestPractices += `- **Monolithic Workflows**: Workflows with 50+ nodes\\n`;\n        bestPractices += `- **Deep Nesting**: Excessive IF/Switch nesting\\n`;\n        bestPractices += `- **Unclear Dependencies**: Complex node interconnections\\n`;\n        bestPractices += `- **Poor Naming**: Generic or technical node names\\n\\n`;\n\n        bestPractices += `### 2. Performance Anti-Patterns\\n`;\n        bestPractices += `- **Sequential HTTP Calls**: Making sequential API calls when parallel is possible\\n`;\n        bestPractices += `- **Memory Leaks**: Not clearing large variables in code nodes\\n`;\n        bestPractices += `- **Inefficient Loops**: Processing items one-by-one instead of batching\\n`;\n        bestPractices += `- **No Caching**: Repeatedly fetching the same data\\n\\n`;\n\n        bestPractices += `### 3. Security Anti-Patterns\\n`;\n        bestPractices += `- **Hardcoded Credentials**: API keys in workflow configuration\\n`;\n        bestPractices += `- **Logging Sensitive Data**: Including passwords or tokens in logs\\n`;\n        bestPractices += `- **Unvalidated Input**: Processing external data without validation\\n`;\n        bestPractices += `- **Overprivileged Access**: Using admin credentials for routine operations\\n\\n`;\n\n        // Quick reference checklist\n        bestPractices += `## \u2705 Quick Reference Checklist\\n\\n`;\n        bestPractices += `### Pre-Deployment Checklist\\n`;\n        bestPractices += `- [ ] Workflow has clear, descriptive name and documentation\\n`;\n        bestPractices += `- [ ] All nodes have descriptive, business-focused names\\n`;\n        bestPractices += `- [ ] Error handling implemented for critical operations\\n`;\n        bestPractices += `- [ ] No hardcoded credentials or sensitive data\\n`;\n        bestPractices += `- [ ] Input validation implemented for external data\\n`;\n        bestPractices += `- [ ] Appropriate timeouts configured for HTTP requests\\n`;\n        bestPractices += `- [ ] Monitoring and alerting configured\\n`;\n        bestPractices += `- [ ] Workflow tested with realistic data\\n`;\n        bestPractices += `- [ ] Performance requirements validated\\n`;\n        bestPractices += `- [ ] Security review completed\\n\\n`;\n\n        bestPractices += `## \uD83D\uDD27 Implementation Tools\\n`;\n        bestPractices += `- Use \\`analyze-workflow-complexity\\` to assess workflow structure\\n`;\n        bestPractices += `- Use \\`get-optimization-suggestions\\` for specific improvements\\n`;\n        bestPractices += `- Use \\`check-workflow-health\\` for comprehensive health checks\\n`;\n        bestPractices += `- Use \\`search-workflow-templates\\` for proven patterns\\n`;\n\n        return bestPractices;\n      } catch (error: any) {\n        throw new UserError(`Failed to get best practices: ${error.message}`);\n      }\n    },\n  });\n}\n\n// Helper functions for pattern analysis\nfunction analyzeIntegrationPattern(workflow: N8nWorkflow): { score: number; details: string[] } {\n  const nodes = workflow.nodes || [];\n  const _nodeTypes = nodes.map(node => node.type.toLowerCase());\n  const details: string[] = [];\n  let score = 0;\n\n  // Check for HTTP/API nodes\n  const apiNodes = _nodeTypes.filter(\n    type => type.includes('http') || type.includes('webhook') || type.includes('api')\n  ).length;\n\n  if (apiNodes > 0) {\n    score += 30;\n    details.push(`${apiNodes} API integration node(s) detected`);\n  }\n\n  // Check for data transformation\n  const transformNodes = _nodeTypes.filter(\n    type => type.includes('set') || type.includes('code') || type.includes('function')\n  ).length;\n\n  if (transformNodes > 0) {\n    score += 20;\n    details.push(`${transformNodes} data transformation node(s) found`);\n  }\n\n  // Check for error handling\n  const errorNodes = nodes.filter(\n    node => node.parameters && JSON.stringify(node.parameters).toLowerCase().includes('error')\n  ).length;\n\n  if (errorNodes > 0) {\n    score += 25;\n    details.push(`Error handling implemented with ${errorNodes} node(s)`);\n  }\n\n  // Check for authentication\n  const authNodes = nodes.filter(\n    node => node.credentials && Object.keys(node.credentials).length > 0\n  ).length;\n\n  if (authNodes > 0) {\n    score += 25;\n    details.push(`Authentication configured for ${authNodes} node(s)`);\n  }\n\n  return { score, details };\n}\n\nfunction analyzeDataTransformationPattern(workflow: N8nWorkflow): {\n  score: number;\n  details: string[];\n} {\n  const nodes = workflow.nodes || [];\n  const _nodeTypes = nodes.map(node => node.type.toLowerCase());\n  const details: string[] = [];\n  let score = 0;\n\n  // Check for data processing nodes\n  const dataNodes = _nodeTypes.filter(\n    type => type.includes('set') || type.includes('merge') || type.includes('split')\n  ).length;\n\n  if (dataNodes > 0) {\n    score += 40;\n    details.push(`${dataNodes} data processing node(s) identified`);\n  }\n\n  // Check for validation\n  const validationNodes = _nodeTypes.filter(\n    type => type.includes('if') || type.includes('switch') || type.includes('filter')\n  ).length;\n\n  if (validationNodes > 0) {\n    score += 30;\n    details.push(`${validationNodes} validation/filtering node(s) found`);\n  }\n\n  // Check for custom transformation logic\n  const codeNodes = _nodeTypes.filter(\n    type => type.includes('code') || type.includes('function')\n  ).length;\n\n  if (codeNodes > 0) {\n    score += 30;\n    details.push(`${codeNodes} custom transformation node(s) implemented`);\n  }\n\n  return { score, details };\n}\n\nfunction analyzeErrorHandlingPattern(workflow: N8nWorkflow): { score: number; details: string[] } {\n  const nodes = workflow.nodes || [];\n  const details: string[] = [];\n  let score = 0;\n\n  // Check for error trigger nodes\n  const errorTriggers = nodes.filter(\n    node =>\n      node.type.toLowerCase().includes('error') ||\n      (node.parameters && JSON.stringify(node.parameters).toLowerCase().includes('error'))\n  ).length;\n\n  if (errorTriggers > 0) {\n    score += 40;\n    details.push(`${errorTriggers} error trigger/handler node(s) configured`);\n  }\n\n  // Check for try-catch patterns in code nodes\n  const codeNodes = nodes.filter(node => node.type.toLowerCase().includes('code'));\n  const tryCatchNodes = codeNodes.filter(\n    node => node.parameters && JSON.stringify(node.parameters).includes('try')\n  ).length;\n\n  if (tryCatchNodes > 0) {\n    score += 30;\n    details.push(`${tryCatchNodes} code node(s) with try-catch patterns`);\n  }\n\n  // Check for notification nodes (error alerts)\n  const notificationNodes = nodes.filter(node => {\n    const type = node.type.toLowerCase();\n    return type.includes('slack') || type.includes('email') || type.includes('webhook');\n  }).length;\n\n  if (notificationNodes > 0) {\n    score += 30;\n    details.push(`${notificationNodes} notification node(s) for error alerting`);\n  }\n\n  return { score, details };\n}\n\nfunction analyzeNotificationPattern(workflow: N8nWorkflow): { score: number; details: string[] } {\n  const nodes = workflow.nodes || [];\n  const _nodeTypes = nodes.map(node => node.type.toLowerCase());\n  const details: string[] = [];\n  let score = 0;\n\n  // Check for notification nodes\n  const notificationNodes = _nodeTypes.filter(\n    type =>\n      type.includes('slack') ||\n      type.includes('email') ||\n      type.includes('sms') ||\n      type.includes('webhook') ||\n      type.includes('discord')\n  ).length;\n\n  if (notificationNodes > 0) {\n    score += 50;\n    details.push(`${notificationNodes} notification channel(s) configured`);\n  }\n\n  // Check for conditional notification logic\n  const conditionalNodes = _nodeTypes.filter(\n    type => type.includes('if') || type.includes('switch')\n  ).length;\n\n  if (conditionalNodes > 0 && notificationNodes > 0) {\n    score += 25;\n    details.push(`Conditional notification logic with ${conditionalNodes} decision node(s)`);\n  }\n\n  // Check for message formatting\n  const formatNodes = _nodeTypes.filter(\n    type => type.includes('set') || type.includes('code')\n  ).length;\n\n  if (formatNodes > 0 && notificationNodes > 0) {\n    score += 25;\n    details.push(`Message formatting implemented with ${formatNodes} node(s)`);\n  }\n\n  return { score, details };\n}\n\nfunction analyzeAIProcessingPattern(workflow: N8nWorkflow): { score: number; details: string[] } {\n  const nodes = workflow.nodes || [];\n  const _nodeTypes = nodes.map(node => node.type.toLowerCase());\n  const details: string[] = [];\n  let score = 0;\n\n  // Check for AI nodes\n  const aiNodes = _nodeTypes.filter(\n    type =>\n      type.includes('ai') ||\n      type.includes('openai') ||\n      type.includes('anthropic') ||\n      type.includes('claude') ||\n      type.includes('gpt') ||\n      type.includes('llama')\n  ).length;\n\n  if (aiNodes > 0) {\n    score += 50;\n    details.push(`${aiNodes} AI processing node(s) identified`);\n  }\n\n  // Check for data preparation\n  const prepNodes = _nodeTypes.filter(\n    type => type.includes('set') || type.includes('code') || type.includes('split')\n  ).length;\n\n  if (prepNodes > 0 && aiNodes > 0) {\n    score += 25;\n    details.push(`Data preparation implemented with ${prepNodes} node(s)`);\n  }\n\n  // Check for AI result processing\n  const processNodes = nodes.filter(\n    node => node.type.toLowerCase().includes('merge') || node.type.toLowerCase().includes('if')\n  ).length;\n\n  if (processNodes > 0 && aiNodes > 0) {\n    score += 25;\n    details.push(`AI result processing with ${processNodes} node(s)`);\n  }\n\n  return { score, details };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbb20f97d0127d1f4dd880f5a64e27715eadde26"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rr464tyiy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rr464tyiy();
cov_2rr464tyiy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2rr464tyiy().s[1]++;
exports.createTemplateTools = createTemplateTools;
const zod_1 =
/* istanbul ignore next */
(cov_2rr464tyiy().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_2rr464tyiy().s[3]++, require("fastmcp"));
// Zod schemas for template and pattern management
const TemplateSearchSchema =
/* istanbul ignore next */
(cov_2rr464tyiy().s[4]++, zod_1.z.object({
  query: zod_1.z.string().optional(),
  category: zod_1.z.enum(['automation', 'data-processing', 'integration', 'notification', 'ai-workflow', 'e-commerce', 'all']).optional().default('all'),
  complexity: zod_1.z.enum(['simple', 'intermediate', 'advanced', 'all']).optional().default('all'),
  tags: zod_1.z.array(zod_1.z.string()).optional(),
  limit: zod_1.z.number().min(1).max(50).optional().default(20)
}));
const TemplateExportSchema =
/* istanbul ignore next */
(cov_2rr464tyiy().s[5]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  templateName: zod_1.z.string().min(1, 'Template name is required'),
  description: zod_1.z.string().optional(),
  category: zod_1.z.enum(['automation', 'data-processing', 'integration', 'notification', 'ai-workflow', 'e-commerce']),
  tags: zod_1.z.array(zod_1.z.string()).optional(),
  includeCredentials: zod_1.z.boolean().optional().default(false),
  makeSensitiveDataGeneric: zod_1.z.boolean().optional().default(true)
}));
const TemplateImportSchema =
/* istanbul ignore next */
(cov_2rr464tyiy().s[6]++, zod_1.z.object({
  templateData: zod_1.z.record(zod_1.z.any()),
  workflowName: zod_1.z.string().min(1, 'Workflow name is required'),
  parameterMapping: zod_1.z.record(zod_1.z.string()).optional(),
  replaceCredentials: zod_1.z.record(zod_1.z.string()).optional(),
  activate: zod_1.z.boolean().optional().default(false)
}));
const PatternAnalysisSchema =
/* istanbul ignore next */
(cov_2rr464tyiy().s[7]++, zod_1.z.object({
  workflowId: zod_1.z.string().optional(),
  patternType: zod_1.z.enum(['integration', 'data-transformation', 'error-handling', 'notification', 'ai-processing', 'all']).optional().default('all'),
  includeRecommendations: zod_1.z.boolean().optional().default(true)
}));
const BestPracticesSchema =
/* istanbul ignore next */
(cov_2rr464tyiy().s[8]++, zod_1.z.object({
  workflowId: zod_1.z.string().optional(),
  category: zod_1.z.enum(['structure', 'performance', 'security', 'maintainability', 'all']).optional().default('all'),
  includeExamples: zod_1.z.boolean().optional().default(true)
}));
// Curated template library (in production, this would connect to n8n's template API or database)
const TEMPLATE_LIBRARY =
/* istanbul ignore next */
(cov_2rr464tyiy().s[9]++, {
  automation: [{
    id: 'auto-1',
    name: 'Automated Email Response System',
    description: 'Automatically respond to emails based on content analysis and predefined rules',
    category: 'automation',
    complexity: 'intermediate',
    tags: ['email', 'automation', 'ai', 'response'],
    nodeCount: 8,
    estimatedSetupTime: '30 minutes',
    features: ['Email parsing', 'AI content analysis', 'Conditional responses', 'Logging'],
    useCase: 'Customer support automation'
  }, {
    id: 'auto-2',
    name: 'Social Media Post Scheduler',
    description: 'Schedule and automatically post content across multiple social media platforms',
    category: 'automation',
    complexity: 'simple',
    tags: ['social-media', 'scheduling', 'content'],
    nodeCount: 6,
    estimatedSetupTime: '20 minutes',
    features: ['Multi-platform posting', 'Content scheduling', 'Image handling', 'Analytics tracking'],
    useCase: 'Social media management'
  }],
  'data-processing': [{
    id: 'data-1',
    name: 'CSV Data Transformation Pipeline',
    description: 'Transform, validate, and enrich CSV data with external APIs',
    category: 'data-processing',
    complexity: 'intermediate',
    tags: ['csv', 'data-transformation', 'validation', 'api'],
    nodeCount: 12,
    estimatedSetupTime: '45 minutes',
    features: ['CSV parsing', 'Data validation', 'API enrichment', 'Error handling', 'Output formatting'],
    useCase: 'Data migration and processing'
  }, {
    id: 'data-2',
    name: 'Real-time Data Aggregation',
    description: 'Aggregate data from multiple sources in real-time with caching',
    category: 'data-processing',
    complexity: 'advanced',
    tags: ['real-time', 'aggregation', 'caching', 'multiple-sources'],
    nodeCount: 15,
    estimatedSetupTime: '60 minutes',
    features: ['Multi-source integration', 'Real-time processing', 'Data caching', 'Performance optimization'],
    useCase: 'Business intelligence dashboards'
  }],
  integration: [{
    id: 'int-1',
    name: 'CRM to Marketing Automation Sync',
    description: 'Sync customer data between CRM and marketing automation platforms',
    category: 'integration',
    complexity: 'intermediate',
    tags: ['crm', 'marketing', 'sync', 'customer-data'],
    nodeCount: 10,
    estimatedSetupTime: '40 minutes',
    features: ['Bidirectional sync', 'Data mapping', 'Conflict resolution', 'Audit logging'],
    useCase: 'Sales and marketing alignment'
  }, {
    id: 'int-2',
    name: 'E-commerce Order Processing',
    description: 'Process e-commerce orders across multiple systems and platforms',
    category: 'integration',
    complexity: 'advanced',
    tags: ['e-commerce', 'orders', 'inventory', 'fulfillment'],
    nodeCount: 18,
    estimatedSetupTime: '90 minutes',
    features: ['Order validation', 'Inventory management', 'Payment processing', 'Fulfillment automation'],
    useCase: 'E-commerce operations'
  }],
  notification: [{
    id: 'notif-1',
    name: 'Smart Alert System',
    description: 'Intelligent alert system with escalation and multiple notification channels',
    category: 'notification',
    complexity: 'intermediate',
    tags: ['alerts', 'escalation', 'multi-channel', 'intelligent'],
    nodeCount: 9,
    estimatedSetupTime: '35 minutes',
    features: ['Smart routing', 'Escalation rules', 'Multiple channels', 'Alert deduplication'],
    useCase: 'System monitoring and alerting'
  }],
  'ai-workflow': [{
    id: 'ai-1',
    name: 'Document Analysis and Classification',
    description: 'AI-powered document analysis with automatic classification and data extraction',
    category: 'ai-workflow',
    complexity: 'advanced',
    tags: ['ai', 'document-processing', 'classification', 'extraction'],
    nodeCount: 14,
    estimatedSetupTime: '75 minutes',
    features: ['AI document analysis', 'Auto-classification', 'Data extraction', 'Confidence scoring'],
    useCase: 'Document management and processing'
  }, {
    id: 'ai-2',
    name: 'Intelligent Content Generation',
    description: 'Generate and optimize content using AI with quality validation',
    category: 'ai-workflow',
    complexity: 'intermediate',
    tags: ['ai', 'content-generation', 'optimization', 'validation'],
    nodeCount: 11,
    estimatedSetupTime: '50 minutes',
    features: ['AI content generation', 'Quality validation', 'Multi-format output', 'Brand consistency'],
    useCase: 'Content marketing automation'
  }]
});
// Common workflow patterns
const WORKFLOW_PATTERNS =
/* istanbul ignore next */
(cov_2rr464tyiy().s[10]++, {
  'error-handling': {
    name: 'Comprehensive Error Handling',
    description: 'Best practices for implementing robust error handling in workflows',
    pattern: 'Try-Catch blocks with retry logic, fallback mechanisms, and error notifications',
    nodes: ['Error Trigger', 'Retry Logic', 'Fallback Action', 'Error Notification'],
    implementation: 'Use error trigger nodes after critical operations, implement exponential backoff for retries'
  },
  'data-validation': {
    name: 'Data Validation Pipeline',
    description: 'Systematic approach to validating and sanitizing input data',
    pattern: 'Input validation → Data sanitization → Business rule validation → Error reporting',
    nodes: ['Validation Node', 'Set Node (cleaning)', 'IF Node (business rules)', 'Error Handler'],
    implementation: 'Validate data types, check business rules, sanitize inputs, handle validation failures'
  },
  'api-integration': {
    name: 'Reliable API Integration',
    description: 'Best practices for integrating with external APIs',
    pattern: 'Rate limiting → Authentication → Request → Retry logic → Response handling',
    nodes: ['Wait Node', 'HTTP Request', 'IF Node (status check)', 'Error Handler'],
    implementation: 'Implement rate limiting, proper authentication, status code handling, and retry mechanisms'
  },
  'notification-system': {
    name: 'Multi-Channel Notification System',
    description: 'Flexible notification system with multiple channels and priorities',
    pattern: 'Priority assessment → Channel selection → Message formatting → Delivery → Confirmation',
    nodes: ['Switch Node (priority)', 'Multiple notification nodes', 'Webhook (confirmation)'],
    implementation: 'Route notifications based on priority, use multiple channels, confirm delivery'
  }
});
// Tool registration function for template and pattern management tools
function createTemplateTools(getClient, server) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[0]++;
  cov_2rr464tyiy().s[11]++;
  // Search workflow templates
  server.addTool({
    name: 'search-workflow-templates',
    description: 'Search and browse curated workflow templates by category, complexity, and functionality',
    parameters: TemplateSearchSchema,
    annotations: {
      title: 'Search Workflow Templates',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_2rr464tyiy().f[1]++;
      cov_2rr464tyiy().s[12]++;
      try {
        let allTemplates =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[13]++, []);
        // Collect templates from all categories
        /* istanbul ignore next */
        cov_2rr464tyiy().s[14]++;
        Object.entries(TEMPLATE_LIBRARY).forEach(([category, templates]) => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[2]++;
          cov_2rr464tyiy().s[15]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[1][0]++, args.category === 'all') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[1][1]++, args.category === category)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[0][0]++;
            cov_2rr464tyiy().s[16]++;
            allTemplates.push(...templates.map(template => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[3]++;
              cov_2rr464tyiy().s[17]++;
              return {
                ...template,
                category
              };
            }));
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[0][1]++;
          }
        });
        // Filter by complexity
        /* istanbul ignore next */
        cov_2rr464tyiy().s[18]++;
        if (args.complexity !== 'all') {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[2][0]++;
          cov_2rr464tyiy().s[19]++;
          allTemplates = allTemplates.filter(template => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[4]++;
            cov_2rr464tyiy().s[20]++;
            return template.complexity === args.complexity;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[2][1]++;
        }
        // Filter by search query
        cov_2rr464tyiy().s[21]++;
        if (args.query) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[3][0]++;
          const query =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[22]++, args.query.toLowerCase());
          /* istanbul ignore next */
          cov_2rr464tyiy().s[23]++;
          allTemplates = allTemplates.filter(template => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[5]++;
            cov_2rr464tyiy().s[24]++;
            return /* istanbul ignore next */(cov_2rr464tyiy().b[4][0]++, template.name.toLowerCase().includes(query)) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[4][1]++, template.description.toLowerCase().includes(query)) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[4][2]++, template.tags.some(tag => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[6]++;
              cov_2rr464tyiy().s[25]++;
              return tag.toLowerCase().includes(query);
            })) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[4][3]++, template.useCase.toLowerCase().includes(query));
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[3][1]++;
        }
        // Filter by tags
        cov_2rr464tyiy().s[26]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[6][0]++, args.tags) &&
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[6][1]++, args.tags.length > 0)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[5][0]++;
          cov_2rr464tyiy().s[27]++;
          allTemplates = allTemplates.filter(template => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[7]++;
            cov_2rr464tyiy().s[28]++;
            return args.tags.some(tag => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[8]++;
              cov_2rr464tyiy().s[29]++;
              return template.tags.includes(tag.toLowerCase());
            });
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[5][1]++;
        }
        // Limit results
        cov_2rr464tyiy().s[30]++;
        allTemplates = allTemplates.slice(0, args.limit);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[31]++;
        if (allTemplates.length === 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[7][0]++;
          cov_2rr464tyiy().s[32]++;
          return `No templates found matching your criteria:\n` + `- Category: ${args.category}\n` + `- Complexity: ${args.complexity}\n` + `- Query: ${
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[8][0]++, args.query) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[8][1]++, 'None')}\n` + `- Tags: ${
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[9][0]++, args.tags?.join(', ')) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[9][1]++, 'None')}\n\n` + `Try broadening your search criteria or browse all templates.`;
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[7][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[33]++, `# Workflow Template Search Results\n\n`);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[34]++;
        result += `**Found ${allTemplates.length} template(s) matching your criteria**\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[35]++;
        result += `**Search Query**: ${
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[10][0]++, args.query) ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[10][1]++, 'All templates')}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[36]++;
        result += `**Category**: ${args.category}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[37]++;
        result += `**Complexity**: ${args.complexity}\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[38]++;
        allTemplates.forEach((template, index) => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[9]++;
          const complexityIcon =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[39]++, template.complexity === 'simple' ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[11][0]++, '🟢') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[11][1]++, template.complexity === 'intermediate' ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[12][0]++, '🟡') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[12][1]++, '🔴')));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[40]++;
          result += `## ${index + 1}. ${template.name} ${complexityIcon}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[41]++;
          result += `**Category**: ${template.category.charAt(0).toUpperCase() + template.category.slice(1)}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[42]++;
          result += `**Complexity**: ${template.complexity.charAt(0).toUpperCase() + template.complexity.slice(1)}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[43]++;
          result += `**Description**: ${template.description}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[44]++;
          result += `**Use Case**: ${template.useCase}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[45]++;
          result += `**Setup Time**: ${template.estimatedSetupTime}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[46]++;
          result += `**Node Count**: ${template.nodeCount} nodes\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[47]++;
          result += `**Tags**: ${template.tags.join(', ')}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[48]++;
          result += `**Features**:\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[49]++;
          template.features.forEach(feature => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[10]++;
            cov_2rr464tyiy().s[50]++;
            result += `- ${feature}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[51]++;
          result += `**Template ID**: \`${template.id}\` (use with import-workflow-template)\n\n`;
        });
        /* istanbul ignore next */
        cov_2rr464tyiy().s[52]++;
        result += `## 🔧 Next Steps\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[53]++;
        result += `- Use \`import-workflow-template\` with a template ID to import a template\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[54]++;
        result += `- Use \`export-workflow-template\` to create your own templates\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[55]++;
        result += `- Use \`analyze-workflow-patterns\` to understand common patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[56]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_2rr464tyiy().s[57]++;
        throw new fastmcp_1.UserError(`Failed to search templates: ${error.message}`);
      }
    }
  });
  // Export workflow as template
  /* istanbul ignore next */
  cov_2rr464tyiy().s[58]++;
  server.addTool({
    name: 'export-workflow-template',
    description: 'Export an existing workflow as a reusable template with parameter mapping and sensitive data protection',
    parameters: TemplateExportSchema,
    annotations: {
      title: 'Export Workflow Template',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_2rr464tyiy().f[11]++;
      const client =
      /* istanbul ignore next */
      (cov_2rr464tyiy().s[59]++, getClient());
      /* istanbul ignore next */
      cov_2rr464tyiy().s[60]++;
      if (!client) {
        /* istanbul ignore next */
        cov_2rr464tyiy().b[13][0]++;
        cov_2rr464tyiy().s[61]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_2rr464tyiy().b[13][1]++;
      }
      cov_2rr464tyiy().s[62]++;
      try {
        const workflow =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[63]++, await client.getWorkflow(args.workflowId));
        // Create template structure
        const template =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[64]++, {
          id: `custom-${Date.now()}`,
          name: args.templateName,
          description:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[14][0]++, args.description) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[14][1]++, `Template created from workflow: ${workflow.name}`),
          category: args.category,
          tags:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[15][0]++, args.tags) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[15][1]++, []),
          complexity:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[17][0]++, workflow.nodes) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[17][1]++, workflow.nodes.length > 15) ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[16][0]++, 'advanced') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[16][1]++,
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[19][0]++, workflow.nodes) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[19][1]++, workflow.nodes.length > 8) ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[18][0]++, 'intermediate') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[18][1]++, 'simple')),
          nodeCount:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[20][0]++, workflow.nodes?.length) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[20][1]++, 0),
          estimatedSetupTime:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[22][0]++, workflow.nodes) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[22][1]++, workflow.nodes.length > 15) ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[21][0]++, '60+ minutes') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[21][1]++,
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[24][0]++, workflow.nodes) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[24][1]++, workflow.nodes.length > 8) ?
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[23][0]++, '30-45 minutes') :
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[23][1]++, '15-30 minutes')),
          exportDate: new Date().toISOString(),
          originalWorkflow: {
            id: workflow.id,
            name: workflow.name,
            active: workflow.active
          },
          template: {
            nodes:
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[25][0]++, workflow.nodes) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[25][1]++, []),
            connections:
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[26][0]++, workflow.connections) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[26][1]++, {}),
            settings:
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[27][0]++, workflow.settings) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[27][1]++, {})
          },
          parameterMapping: {},
          sensitiveDataFields: [],
          requirements: {
            credentials: [],
            externalServices: [],
            prerequisites: []
          }
        });
        // Analyze workflow for sensitive data and requirements
        const credentialTypes =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[65]++, new Set());
        const externalServices =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[66]++, new Set());
        const sensitiveFields =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[67]++, []);
        const parameterMapping =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[68]++, {});
        /* istanbul ignore next */
        cov_2rr464tyiy().s[69]++;
        (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[28][0]++, workflow.nodes) ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[28][1]++, [])).forEach((node, nodeIndex) => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[12]++;
          cov_2rr464tyiy().s[70]++;
          // Track credentials
          if (node.credentials) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[29][0]++;
            cov_2rr464tyiy().s[71]++;
            Object.keys(node.credentials).forEach(credType => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[13]++;
              cov_2rr464tyiy().s[72]++;
              return credentialTypes.add(credType);
            });
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[29][1]++;
          }
          // Identify external services
          const nodeType =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[73]++, node.type.toLowerCase());
          /* istanbul ignore next */
          cov_2rr464tyiy().s[74]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[31][0]++, nodeType.includes('http')) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[31][1]++, nodeType.includes('webhook'))) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[30][0]++;
            cov_2rr464tyiy().s[75]++;
            externalServices.add('HTTP/Webhook APIs');
          } else {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[30][1]++;
            cov_2rr464tyiy().s[76]++;
            if (nodeType.includes('slack')) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[32][0]++;
              cov_2rr464tyiy().s[77]++;
              externalServices.add('Slack');
            } else {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[32][1]++;
              cov_2rr464tyiy().s[78]++;
              if (
              /* istanbul ignore next */
              (cov_2rr464tyiy().b[34][0]++, nodeType.includes('gmail')) ||
              /* istanbul ignore next */
              (cov_2rr464tyiy().b[34][1]++, nodeType.includes('email'))) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[33][0]++;
                cov_2rr464tyiy().s[79]++;
                externalServices.add('Email Service');
              } else {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[33][1]++;
                cov_2rr464tyiy().s[80]++;
                if (
                /* istanbul ignore next */
                (cov_2rr464tyiy().b[36][0]++, nodeType.includes('mysql')) ||
                /* istanbul ignore next */
                (cov_2rr464tyiy().b[36][1]++, nodeType.includes('postgres'))) {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[35][0]++;
                  cov_2rr464tyiy().s[81]++;
                  externalServices.add('Database');
                } else {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[35][1]++;
                  cov_2rr464tyiy().s[82]++;
                  if (
                  /* istanbul ignore next */
                  (cov_2rr464tyiy().b[38][0]++, nodeType.includes('ai')) ||
                  /* istanbul ignore next */
                  (cov_2rr464tyiy().b[38][1]++, nodeType.includes('openai')) ||
                  /* istanbul ignore next */
                  (cov_2rr464tyiy().b[38][2]++, nodeType.includes('anthropic'))) {
                    /* istanbul ignore next */
                    cov_2rr464tyiy().b[37][0]++;
                    cov_2rr464tyiy().s[83]++;
                    externalServices.add('AI Services');
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2rr464tyiy().b[37][1]++;
                  }
                }
              }
            }
          }
          // Process sensitive data
          /* istanbul ignore next */
          cov_2rr464tyiy().s[84]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[40][0]++, args.makeSensitiveDataGeneric) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[40][1]++, node.parameters)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[39][0]++;
            cov_2rr464tyiy().s[85]++;
            Object.entries(node.parameters).forEach(([key, value]) => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[14]++;
              cov_2rr464tyiy().s[86]++;
              if (typeof value === 'string') {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[41][0]++;
                cov_2rr464tyiy().s[87]++;
                // Check for potentially sensitive data patterns
                if (
                /* istanbul ignore next */
                (cov_2rr464tyiy().b[43][0]++, value.includes('@')) &&
                /* istanbul ignore next */
                (cov_2rr464tyiy().b[43][1]++, value.includes('.'))) {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[42][0]++;
                  cov_2rr464tyiy().s[88]++;
                  // Email
                  parameterMapping[`node_${nodeIndex}_${key}`] = 'user@example.com';
                  /* istanbul ignore next */
                  cov_2rr464tyiy().s[89]++;
                  sensitiveFields.push(`Node "${node.name}" - ${key} (email)`);
                } else {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[42][1]++;
                  cov_2rr464tyiy().s[90]++;
                  if (value.match(/^https?:\/\//)) {
                    /* istanbul ignore next */
                    cov_2rr464tyiy().b[44][0]++;
                    cov_2rr464tyiy().s[91]++;
                    // URL
                    parameterMapping[`node_${nodeIndex}_${key}`] = 'https://example.com/api';
                    /* istanbul ignore next */
                    cov_2rr464tyiy().s[92]++;
                    sensitiveFields.push(`Node "${node.name}" - ${key} (URL)`);
                  } else {
                    /* istanbul ignore next */
                    cov_2rr464tyiy().b[44][1]++;
                    cov_2rr464tyiy().s[93]++;
                    if (value.match(/\b\d{10,}\b/)) {
                      /* istanbul ignore next */
                      cov_2rr464tyiy().b[45][0]++;
                      cov_2rr464tyiy().s[94]++;
                      // Long number (could be phone, ID, etc.)
                      parameterMapping[`node_${nodeIndex}_${key}`] = '1234567890';
                      /* istanbul ignore next */
                      cov_2rr464tyiy().s[95]++;
                      sensitiveFields.push(`Node "${node.name}" - ${key} (numeric ID)`);
                    } else {
                      /* istanbul ignore next */
                      cov_2rr464tyiy().b[45][1]++;
                      cov_2rr464tyiy().s[96]++;
                      if (
                      /* istanbul ignore next */
                      (cov_2rr464tyiy().b[47][0]++, key.toLowerCase().includes('key')) ||
                      /* istanbul ignore next */
                      (cov_2rr464tyiy().b[47][1]++, key.toLowerCase().includes('token')) ||
                      /* istanbul ignore next */
                      (cov_2rr464tyiy().b[47][2]++, key.toLowerCase().includes('secret')) ||
                      /* istanbul ignore next */
                      (cov_2rr464tyiy().b[47][3]++, key.toLowerCase().includes('password'))) {
                        /* istanbul ignore next */
                        cov_2rr464tyiy().b[46][0]++;
                        cov_2rr464tyiy().s[97]++;
                        // API keys, tokens, secrets
                        parameterMapping[`node_${nodeIndex}_${key}`] = 'YOUR_API_KEY_HERE';
                        /* istanbul ignore next */
                        cov_2rr464tyiy().s[98]++;
                        sensitiveFields.push(`Node "${node.name}" - ${key} (credential)`);
                      } else
                      /* istanbul ignore next */
                      {
                        cov_2rr464tyiy().b[46][1]++;
                      }
                    }
                  }
                }
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[41][1]++;
              }
            });
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[39][1]++;
          }
        });
        // Update template with analysis results
        /* istanbul ignore next */
        cov_2rr464tyiy().s[99]++;
        template.requirements.credentials = Array.from(credentialTypes);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[100]++;
        template.requirements.externalServices = Array.from(externalServices);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[101]++;
        template.parameterMapping = parameterMapping;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[102]++;
        template.sensitiveDataFields = sensitiveFields;
        // Remove credentials from template if not explicitly included
        /* istanbul ignore next */
        cov_2rr464tyiy().s[103]++;
        if (!args.includeCredentials) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[48][0]++;
          cov_2rr464tyiy().s[104]++;
          template.template.nodes = template.template.nodes.map(node => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[15]++;
            cov_2rr464tyiy().s[105]++;
            return {
              ...node,
              credentials: {}
            };
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[48][1]++;
        }
        // Generate template export
        let exportResult =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[106]++, `# Template Export: "${args.templateName}"\n\n`);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[107]++;
        exportResult += `**Export Date**: ${new Date().toLocaleString()}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[108]++;
        exportResult += `**Source Workflow**: ${workflow.name} (${workflow.id})\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[109]++;
        exportResult += `**Category**: ${args.category}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[110]++;
        exportResult += `**Complexity**: ${template.complexity}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[111]++;
        exportResult += `**Estimated Setup Time**: ${template.estimatedSetupTime}\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[112]++;
        exportResult += `## 📋 Template Details\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[113]++;
        exportResult += `- **Node Count**: ${template.nodeCount}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[114]++;
        exportResult += `- **Description**: ${template.description}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[115]++;
        exportResult += `- **Tags**: ${
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[49][0]++, template.tags.join(', ')) ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[49][1]++, 'None')}\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[116]++;
        if (template.requirements.credentials.length > 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[50][0]++;
          cov_2rr464tyiy().s[117]++;
          exportResult += `## 🔐 Required Credentials\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[118]++;
          template.requirements.credentials.forEach(cred => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[16]++;
            cov_2rr464tyiy().s[119]++;
            exportResult += `- ${cred}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[120]++;
          exportResult += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[50][1]++;
        }
        cov_2rr464tyiy().s[121]++;
        if (template.requirements.externalServices.length > 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[51][0]++;
          cov_2rr464tyiy().s[122]++;
          exportResult += `## 🌐 External Services\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[123]++;
          template.requirements.externalServices.forEach(service => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[17]++;
            cov_2rr464tyiy().s[124]++;
            exportResult += `- ${service}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[125]++;
          exportResult += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[51][1]++;
        }
        cov_2rr464tyiy().s[126]++;
        if (sensitiveFields.length > 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[52][0]++;
          cov_2rr464tyiy().s[127]++;
          exportResult += `## ⚠️ Sensitive Data Replaced\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[128]++;
          exportResult += `The following fields contained sensitive data and were replaced with generic values:\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[129]++;
          sensitiveFields.forEach(field => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[18]++;
            cov_2rr464tyiy().s[130]++;
            exportResult += `- ${field}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[131]++;
          exportResult += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[52][1]++;
        }
        cov_2rr464tyiy().s[132]++;
        exportResult += `## 🔧 Parameter Mapping\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[133]++;
        if (Object.keys(parameterMapping).length > 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[53][0]++;
          cov_2rr464tyiy().s[134]++;
          exportResult += `When importing this template, update these parameters:\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[135]++;
          Object.entries(parameterMapping).forEach(([field, placeholder]) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[19]++;
            cov_2rr464tyiy().s[136]++;
            exportResult += `- **${field}**: Currently set to "${placeholder}"\n`;
          });
        } else {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[53][1]++;
          cov_2rr464tyiy().s[137]++;
          exportResult += `No sensitive parameters detected - template should work with minimal configuration.\n`;
        }
        /* istanbul ignore next */
        cov_2rr464tyiy().s[138]++;
        exportResult += '\n';
        /* istanbul ignore next */
        cov_2rr464tyiy().s[139]++;
        exportResult += `## 📦 Template Data\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[140]++;
        exportResult += `\`\`\`json\n${JSON.stringify(template, null, 2)}\n\`\`\`\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[141]++;
        exportResult += `## 🚀 Usage Instructions\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[142]++;
        exportResult += `1. Save the template JSON above to a file\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[143]++;
        exportResult += `2. Use \`import-workflow-template\` with the template data\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[144]++;
        exportResult += `3. Configure required credentials and external service connections\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[145]++;
        exportResult += `4. Update any parameter mappings with your specific values\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[146]++;
        exportResult += `5. Test the imported workflow before activating\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[147]++;
        exportResult += `## 📤 Quick Import Command\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[148]++;
        exportResult += `Use this template ID for quick import: \`${template.id}\`\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[149]++;
        exportResult += `Note: Custom templates are stored locally and may not persist across sessions.`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[150]++;
        return exportResult;
      } catch (error) {
        /* istanbul ignore next */
        cov_2rr464tyiy().s[151]++;
        throw new fastmcp_1.UserError(`Failed to export workflow template: ${error.message}`);
      }
    }
  });
  // Import workflow template
  /* istanbul ignore next */
  cov_2rr464tyiy().s[152]++;
  server.addTool({
    name: 'import-workflow-template',
    description: 'Import a workflow template and create a new workflow with parameter mapping and credential configuration',
    parameters: TemplateImportSchema,
    annotations: {
      title: 'Import Workflow Template',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_2rr464tyiy().f[20]++;
      const client =
      /* istanbul ignore next */
      (cov_2rr464tyiy().s[153]++, getClient());
      /* istanbul ignore next */
      cov_2rr464tyiy().s[154]++;
      if (!client) {
        /* istanbul ignore next */
        cov_2rr464tyiy().b[54][0]++;
        cov_2rr464tyiy().s[155]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_2rr464tyiy().b[54][1]++;
      }
      cov_2rr464tyiy().s[156]++;
      try {
        const templateData =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[157]++, args.templateData);
        // Validate template structure
        const template =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[158]++, templateData);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[159]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[56][0]++, !template.template) ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[56][1]++, !template.template.nodes)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[55][0]++;
          cov_2rr464tyiy().s[160]++;
          throw new fastmcp_1.UserError('Invalid template data: missing nodes structure');
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[55][1]++;
        }
        // Clone template data to avoid modifying original
        const workflowData =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[161]++, JSON.parse(JSON.stringify(template.template)));
        // Apply parameter mapping
        /* istanbul ignore next */
        cov_2rr464tyiy().s[162]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[58][0]++, args.parameterMapping) &&
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[58][1]++, Object.keys(args.parameterMapping).length > 0)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[57][0]++;
          cov_2rr464tyiy().s[163]++;
          workflowData.nodes = workflowData.nodes.map((node, nodeIndex) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[21]++;
            cov_2rr464tyiy().s[164]++;
            if (node.parameters) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[59][0]++;
              cov_2rr464tyiy().s[165]++;
              Object.entries(node.parameters).forEach(([key, value]) => {
                /* istanbul ignore next */
                cov_2rr464tyiy().f[22]++;
                const mappingKey =
                /* istanbul ignore next */
                (cov_2rr464tyiy().s[166]++, `node_${nodeIndex}_${key}`);
                /* istanbul ignore next */
                cov_2rr464tyiy().s[167]++;
                if (args.parameterMapping[mappingKey]) {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[60][0]++;
                  cov_2rr464tyiy().s[168]++;
                  node.parameters[key] = args.parameterMapping[mappingKey];
                } else
                /* istanbul ignore next */
                {
                  cov_2rr464tyiy().b[60][1]++;
                }
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[59][1]++;
            }
            cov_2rr464tyiy().s[169]++;
            return node;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[57][1]++;
        }
        // Apply credential replacements
        cov_2rr464tyiy().s[170]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[62][0]++, args.replaceCredentials) &&
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[62][1]++, Object.keys(args.replaceCredentials).length > 0)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[61][0]++;
          cov_2rr464tyiy().s[171]++;
          workflowData.nodes = workflowData.nodes.map(node => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[23]++;
            cov_2rr464tyiy().s[172]++;
            if (node.credentials) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[63][0]++;
              cov_2rr464tyiy().s[173]++;
              Object.entries(node.credentials).forEach(([credType, credData]) => {
                /* istanbul ignore next */
                cov_2rr464tyiy().f[24]++;
                cov_2rr464tyiy().s[174]++;
                if (args.replaceCredentials[credType]) {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().b[64][0]++;
                  cov_2rr464tyiy().s[175]++;
                  node.credentials[credType] = {
                    id: args.replaceCredentials[credType],
                    name: args.replaceCredentials[credType]
                  };
                } else
                /* istanbul ignore next */
                {
                  cov_2rr464tyiy().b[64][1]++;
                }
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[63][1]++;
            }
            cov_2rr464tyiy().s[176]++;
            return node;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[61][1]++;
        }
        // Generate unique node IDs
        const nodeIdMap =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[177]++, new Map());
        /* istanbul ignore next */
        cov_2rr464tyiy().s[178]++;
        workflowData.nodes = workflowData.nodes.map(node => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[25]++;
          const newId =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[179]++, `node_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
          /* istanbul ignore next */
          cov_2rr464tyiy().s[180]++;
          nodeIdMap.set(node.id, newId);
          /* istanbul ignore next */
          cov_2rr464tyiy().s[181]++;
          return {
            ...node,
            id: newId,
            position:
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[65][0]++, node.position) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[65][1]++, [100, 100])
          };
        });
        // Update connections with new node IDs
        const newConnections =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[182]++, {});
        /* istanbul ignore next */
        cov_2rr464tyiy().s[183]++;
        Object.entries(workflowData.connections).forEach(([oldNodeId, connections]) => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[26]++;
          const newNodeId =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[184]++, nodeIdMap.get(oldNodeId));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[185]++;
          if (newNodeId) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[66][0]++;
            const updatedConnections =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[186]++, {});
            /* istanbul ignore next */
            cov_2rr464tyiy().s[187]++;
            Object.entries(connections).forEach(([outputName, outputs]) => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[27]++;
              cov_2rr464tyiy().s[188]++;
              if (Array.isArray(outputs)) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[67][0]++;
                cov_2rr464tyiy().s[189]++;
                updatedConnections[outputName] = outputs.map(output => {
                  /* istanbul ignore next */
                  cov_2rr464tyiy().f[28]++;
                  cov_2rr464tyiy().s[190]++;
                  return {
                    ...output,
                    node:
                    /* istanbul ignore next */
                    (cov_2rr464tyiy().b[68][0]++, nodeIdMap.get(output.node)) ||
                    /* istanbul ignore next */
                    (cov_2rr464tyiy().b[68][1]++, output.node)
                  };
                });
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[67][1]++;
              }
            });
            /* istanbul ignore next */
            cov_2rr464tyiy().s[191]++;
            newConnections[newNodeId] = updatedConnections;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[66][1]++;
          }
        });
        /* istanbul ignore next */
        cov_2rr464tyiy().s[192]++;
        workflowData.connections = newConnections;
        // Create the workflow
        const createWorkflowRequest =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[193]++, {
          name: args.workflowName,
          nodes: workflowData.nodes,
          connections: workflowData.connections,
          active: args.activate,
          settings:
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[69][0]++, workflowData.settings) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[69][1]++, {})
        });
        const newWorkflow =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[194]++, await client.createWorkflow(createWorkflowRequest));
        let result =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[195]++, `# Template Import Successful! 🎉\n\n`);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[196]++;
        result += `**New Workflow Created**: ${newWorkflow.name}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[197]++;
        result += `**Workflow ID**: ${newWorkflow.id}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[198]++;
        result += `**Status**: ${newWorkflow.active ?
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[70][0]++, '🟢 Active') :
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[70][1]++, '🔴 Inactive')}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[199]++;
        result += `**Nodes Imported**: ${workflowData.nodes.length}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[200]++;
        result += `**Import Date**: ${new Date().toLocaleString()}\n\n`;
        // Show template information if available
        /* istanbul ignore next */
        cov_2rr464tyiy().s[201]++;
        if (templateData.name) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[71][0]++;
          cov_2rr464tyiy().s[202]++;
          result += `## 📋 Template Information\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[203]++;
          result += `- **Template Name**: ${templateData.name}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[204]++;
          result += `- **Category**: ${
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[72][0]++, templateData.category) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[72][1]++, 'Unknown')}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[205]++;
          result += `- **Complexity**: ${
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[73][0]++, templateData.complexity) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[73][1]++, 'Unknown')}\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[206]++;
          if (templateData.description) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[74][0]++;
            cov_2rr464tyiy().s[207]++;
            result += `- **Description**: ${templateData.description}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[74][1]++;
          }
          cov_2rr464tyiy().s[208]++;
          result += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[71][1]++;
        }
        // Show applied mappings
        cov_2rr464tyiy().s[209]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[76][0]++, args.parameterMapping) &&
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[76][1]++, Object.keys(args.parameterMapping).length > 0)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[75][0]++;
          cov_2rr464tyiy().s[210]++;
          result += `## 🔧 Applied Parameter Mappings\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[211]++;
          Object.entries(args.parameterMapping).forEach(([field, value]) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[29]++;
            cov_2rr464tyiy().s[212]++;
            result += `- **${field}**: ${value}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[213]++;
          result += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[75][1]++;
        }
        // Show credential mappings
        cov_2rr464tyiy().s[214]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[78][0]++, args.replaceCredentials) &&
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[78][1]++, Object.keys(args.replaceCredentials).length > 0)) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[77][0]++;
          cov_2rr464tyiy().s[215]++;
          result += `## 🔐 Applied Credential Mappings\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[216]++;
          Object.entries(args.replaceCredentials).forEach(([credType, credId]) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[30]++;
            cov_2rr464tyiy().s[217]++;
            result += `- **${credType}**: ${credId}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[218]++;
          result += '\n';
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[77][1]++;
        }
        // Show requirements if available
        const typedTemplateData =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[219]++, templateData);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[220]++;
        if (typedTemplateData.requirements) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[79][0]++;
          const req =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[221]++, typedTemplateData.requirements);
          /* istanbul ignore next */
          cov_2rr464tyiy().s[222]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[81][0]++, req.credentials) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[81][1]++, req.credentials.length > 0)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[80][0]++;
            cov_2rr464tyiy().s[223]++;
            result += `## ⚠️ Required Credentials\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[224]++;
            result += `Ensure these credentials are configured:\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[225]++;
            req.credentials.forEach(cred => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[31]++;
              cov_2rr464tyiy().s[226]++;
              result += `- ${cred}\n`;
            });
            /* istanbul ignore next */
            cov_2rr464tyiy().s[227]++;
            result += '\n';
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[80][1]++;
          }
          cov_2rr464tyiy().s[228]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[83][0]++, req.externalServices) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[83][1]++, req.externalServices.length > 0)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[82][0]++;
            cov_2rr464tyiy().s[229]++;
            result += `## 🌐 External Service Dependencies\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[230]++;
            req.externalServices.forEach(service => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[32]++;
              cov_2rr464tyiy().s[231]++;
              result += `- ${service}\n`;
            });
            /* istanbul ignore next */
            cov_2rr464tyiy().s[232]++;
            result += '\n';
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[82][1]++;
          }
          cov_2rr464tyiy().s[233]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[85][0]++, req.prerequisites) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[85][1]++, req.prerequisites.length > 0)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[84][0]++;
            cov_2rr464tyiy().s[234]++;
            result += `## 📋 Prerequisites\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[235]++;
            req.prerequisites.forEach(prereq => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[33]++;
              cov_2rr464tyiy().s[236]++;
              result += `- ${prereq}\n`;
            });
            /* istanbul ignore next */
            cov_2rr464tyiy().s[237]++;
            result += '\n';
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[84][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[79][1]++;
        }
        cov_2rr464tyiy().s[238]++;
        result += `## 🚀 Next Steps\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[239]++;
        result += `1. **Review Configuration**: Check all node parameters and connections\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[240]++;
        result += `2. **Configure Credentials**: Set up any required authentication\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[241]++;
        result += `3. **Test Workflow**: Run a test execution to verify functionality\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[242]++;
        if (!args.activate) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[86][0]++;
          cov_2rr464tyiy().s[243]++;
          result += `4. **Activate Workflow**: Use \`activate-workflow\` when ready\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[86][1]++;
        }
        cov_2rr464tyiy().s[244]++;
        result += `5. **Monitor Performance**: Use monitoring tools to track execution\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[245]++;
        result += `## 🔧 Useful Commands\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[246]++;
        result += `- \`get-workflow ${newWorkflow.id}\` - View workflow details\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[247]++;
        result += `- \`test-workflow ${newWorkflow.id}\` - Test workflow execution\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[248]++;
        result += `- \`analyze-workflow-complexity ${newWorkflow.id}\` - Analyze complexity\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[249]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_2rr464tyiy().s[250]++;
        throw new fastmcp_1.UserError(`Failed to import workflow template: ${error.message}`);
      }
    }
  });
  // Analyze workflow patterns
  /* istanbul ignore next */
  cov_2rr464tyiy().s[251]++;
  server.addTool({
    name: 'analyze-workflow-patterns',
    description: 'Analyze workflows to identify common patterns, best practices, and suggest improvements based on established patterns',
    parameters: PatternAnalysisSchema,
    annotations: {
      title: 'Analyze Workflow Patterns',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_2rr464tyiy().f[34]++;
      const client =
      /* istanbul ignore next */
      (cov_2rr464tyiy().s[252]++, getClient());
      /* istanbul ignore next */
      cov_2rr464tyiy().s[253]++;
      if (!client) {
        /* istanbul ignore next */
        cov_2rr464tyiy().b[87][0]++;
        cov_2rr464tyiy().s[254]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_2rr464tyiy().b[87][1]++;
      }
      cov_2rr464tyiy().s[255]++;
      try {
        let workflows =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[256]++, []);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[257]++;
        if (args.workflowId) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[88][0]++;
          const workflow =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[258]++, await client.getWorkflow(args.workflowId));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[259]++;
          workflows = [workflow];
        } else {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[88][1]++;
          const response =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[260]++, await client.getWorkflows({
            limit: 20
          }));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[261]++;
          workflows = response.data;
        }
        let analysis =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[262]++, `# Workflow Pattern Analysis\n\n`);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[263]++;
        analysis += `**Analysis Date**: ${new Date().toLocaleString()}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[264]++;
        analysis += `**Workflows Analyzed**: ${workflows.length}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[265]++;
        analysis += `**Pattern Type**: ${args.patternType}\n\n`;
        const patternMatches =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[266]++, {});
        /* istanbul ignore next */
        cov_2rr464tyiy().s[267]++;
        for (const workflow of workflows) {
          /* istanbul ignore next */
          cov_2rr464tyiy().s[268]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[90][0]++, !workflow.nodes) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[90][1]++, workflow.nodes.length === 0)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[89][0]++;
            cov_2rr464tyiy().s[269]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[89][1]++;
          }
          const _nodeTypes =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[270]++, workflow.nodes.map(node => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[35]++;
            cov_2rr464tyiy().s[271]++;
            return node.type.toLowerCase();
          }));
          const _hasConnections =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[272]++,
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[91][0]++, workflow.connections) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[91][1]++, Object.keys(workflow.connections).length > 0));
          // Analyze integration patterns
          /* istanbul ignore next */
          cov_2rr464tyiy().s[273]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[93][0]++, args.patternType === 'integration') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[93][1]++, args.patternType === 'all')) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[92][0]++;
            const integrationScore =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[274]++, analyzeIntegrationPattern(workflow));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[275]++;
            if (integrationScore.score > 0) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[94][0]++;
              cov_2rr464tyiy().s[276]++;
              if (!patternMatches['integration']) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[95][0]++;
                cov_2rr464tyiy().s[277]++;
                patternMatches['integration'] = [];
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[95][1]++;
              }
              cov_2rr464tyiy().s[278]++;
              patternMatches['integration'].push({
                workflow,
                score: integrationScore.score,
                details: integrationScore.details
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[94][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[92][1]++;
          }
          // Analyze data transformation patterns
          cov_2rr464tyiy().s[279]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[97][0]++, args.patternType === 'data-transformation') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[97][1]++, args.patternType === 'all')) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[96][0]++;
            const dataScore =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[280]++, analyzeDataTransformationPattern(workflow));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[281]++;
            if (dataScore.score > 0) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[98][0]++;
              cov_2rr464tyiy().s[282]++;
              if (!patternMatches['data-transformation']) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[99][0]++;
                cov_2rr464tyiy().s[283]++;
                patternMatches['data-transformation'] = [];
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[99][1]++;
              }
              cov_2rr464tyiy().s[284]++;
              patternMatches['data-transformation'].push({
                workflow,
                score: dataScore.score,
                details: dataScore.details
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[98][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[96][1]++;
          }
          // Analyze error handling patterns
          cov_2rr464tyiy().s[285]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[101][0]++, args.patternType === 'error-handling') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[101][1]++, args.patternType === 'all')) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[100][0]++;
            const errorScore =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[286]++, analyzeErrorHandlingPattern(workflow));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[287]++;
            if (errorScore.score > 0) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[102][0]++;
              cov_2rr464tyiy().s[288]++;
              if (!patternMatches['error-handling']) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[103][0]++;
                cov_2rr464tyiy().s[289]++;
                patternMatches['error-handling'] = [];
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[103][1]++;
              }
              cov_2rr464tyiy().s[290]++;
              patternMatches['error-handling'].push({
                workflow,
                score: errorScore.score,
                details: errorScore.details
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[102][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[100][1]++;
          }
          // Analyze notification patterns
          cov_2rr464tyiy().s[291]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[105][0]++, args.patternType === 'notification') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[105][1]++, args.patternType === 'all')) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[104][0]++;
            const notificationScore =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[292]++, analyzeNotificationPattern(workflow));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[293]++;
            if (notificationScore.score > 0) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[106][0]++;
              cov_2rr464tyiy().s[294]++;
              if (!patternMatches['notification']) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[107][0]++;
                cov_2rr464tyiy().s[295]++;
                patternMatches['notification'] = [];
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[107][1]++;
              }
              cov_2rr464tyiy().s[296]++;
              patternMatches['notification'].push({
                workflow,
                score: notificationScore.score,
                details: notificationScore.details
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[106][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[104][1]++;
          }
          // Analyze AI processing patterns
          cov_2rr464tyiy().s[297]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[109][0]++, args.patternType === 'ai-processing') ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[109][1]++, args.patternType === 'all')) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[108][0]++;
            const aiScore =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[298]++, analyzeAIProcessingPattern(workflow));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[299]++;
            if (aiScore.score > 0) {
              /* istanbul ignore next */
              cov_2rr464tyiy().b[110][0]++;
              cov_2rr464tyiy().s[300]++;
              if (!patternMatches['ai-processing']) {
                /* istanbul ignore next */
                cov_2rr464tyiy().b[111][0]++;
                cov_2rr464tyiy().s[301]++;
                patternMatches['ai-processing'] = [];
              } else
              /* istanbul ignore next */
              {
                cov_2rr464tyiy().b[111][1]++;
              }
              cov_2rr464tyiy().s[302]++;
              patternMatches['ai-processing'].push({
                workflow,
                score: aiScore.score,
                details: aiScore.details
              });
            } else
            /* istanbul ignore next */
            {
              cov_2rr464tyiy().b[110][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[108][1]++;
          }
        }
        // Generate pattern analysis report
        /* istanbul ignore next */
        cov_2rr464tyiy().s[303]++;
        if (Object.keys(patternMatches).length === 0) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[112][0]++;
          cov_2rr464tyiy().s[304]++;
          analysis += `No significant patterns detected in the analyzed workflows.\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[305]++;
          analysis += `This could indicate:\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[306]++;
          analysis += `- Workflows are using custom patterns\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[307]++;
          analysis += `- Limited workflow data available\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[308]++;
          analysis += `- Patterns don't match common templates\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[309]++;
          analysis += `Consider analyzing individual workflows or using template search.`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[310]++;
          return analysis;
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[112][1]++;
        }
        cov_2rr464tyiy().s[311]++;
        Object.entries(patternMatches).forEach(([patternType, matches]) => {
          /* istanbul ignore next */
          cov_2rr464tyiy().f[36]++;
          cov_2rr464tyiy().s[312]++;
          matches.sort((a, b) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[37]++;
            cov_2rr464tyiy().s[313]++;
            return b.score - a.score;
          });
          const patternInfo =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[314]++, WORKFLOW_PATTERNS[patternType]);
          /* istanbul ignore next */
          cov_2rr464tyiy().s[315]++;
          analysis += `## ${
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[113][0]++, patternInfo?.name) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[113][1]++, patternType.charAt(0).toUpperCase() + patternType.slice(1))} Pattern\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[316]++;
          if (patternInfo) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[114][0]++;
            cov_2rr464tyiy().s[317]++;
            analysis += `**Description**: ${patternInfo.description}\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[318]++;
            analysis += `**Typical Implementation**: ${patternInfo.pattern}\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[114][1]++;
          }
          cov_2rr464tyiy().s[319]++;
          analysis += `**Workflows Using This Pattern** (${matches.length}):\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[320]++;
          matches.forEach((match, index) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[38]++;
            const scoreLevel =
            /* istanbul ignore next */
            (cov_2rr464tyiy().s[321]++, match.score >= 80 ?
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[115][0]++, '🟢 Excellent') :
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[115][1]++, match.score >= 60 ?
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[116][0]++, '🟡 Good') :
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[116][1]++, match.score >= 40 ?
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[117][0]++, '🟠 Partial') :
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[117][1]++, '🔴 Basic'))));
            /* istanbul ignore next */
            cov_2rr464tyiy().s[322]++;
            analysis += `${index + 1}. **${match.workflow.name}** - ${scoreLevel} (${match.score}/100)\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[323]++;
            match.details.forEach(detail => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[39]++;
              cov_2rr464tyiy().s[324]++;
              analysis += `   - ${detail}\n`;
            });
            /* istanbul ignore next */
            cov_2rr464tyiy().s[325]++;
            analysis += '\n';
          });
        });
        // Pattern recommendations
        /* istanbul ignore next */
        cov_2rr464tyiy().s[326]++;
        if (args.includeRecommendations) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[118][0]++;
          cov_2rr464tyiy().s[327]++;
          analysis += `## 💡 Pattern-Based Recommendations\n\n`;
          const recommendations =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[328]++, []);
          // Check for missing error handling
          const workflowsWithoutErrorHandling =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[329]++, workflows.filter(workflow => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[40]++;
            cov_2rr464tyiy().s[330]++;
            return !patternMatches['error-handling']?.some(match => {
              /* istanbul ignore next */
              cov_2rr464tyiy().f[41]++;
              cov_2rr464tyiy().s[331]++;
              return match.workflow.id === workflow.id;
            });
          }));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[332]++;
          if (workflowsWithoutErrorHandling.length > 0) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[119][0]++;
            cov_2rr464tyiy().s[333]++;
            recommendations.push(`**Error Handling**: ${workflowsWithoutErrorHandling.length} workflow(s) could benefit from implementing error handling patterns`);
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[119][1]++;
          }
          // Check for integration improvements
          const integrationWorkflows =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[334]++,
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[120][0]++, patternMatches['integration']) ||
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[120][1]++, []));
          const lowScoreIntegrations =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[335]++, integrationWorkflows.filter(match => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[42]++;
            cov_2rr464tyiy().s[336]++;
            return match.score < 60;
          }));
          /* istanbul ignore next */
          cov_2rr464tyiy().s[337]++;
          if (lowScoreIntegrations.length > 0) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[121][0]++;
            cov_2rr464tyiy().s[338]++;
            recommendations.push(`**Integration Patterns**: ${lowScoreIntegrations.length} workflow(s) have partial integration patterns - consider implementing complete API integration patterns`);
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[121][1]++;
          }
          // Check for notification improvements
          const hasComplexWorkflows =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[339]++, workflows.some(w => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[43]++;
            cov_2rr464tyiy().s[340]++;
            return (
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[122][0]++, w.nodes?.length) ||
            /* istanbul ignore next */
            (cov_2rr464tyiy().b[122][1]++, 0)) > 10;
          }));
          const hasNotificationPatterns =
          /* istanbul ignore next */
          (cov_2rr464tyiy().s[341]++, patternMatches['notification']?.length > 0);
          /* istanbul ignore next */
          cov_2rr464tyiy().s[342]++;
          if (
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[124][0]++, hasComplexWorkflows) &&
          /* istanbul ignore next */
          (cov_2rr464tyiy().b[124][1]++, !hasNotificationPatterns)) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[123][0]++;
            cov_2rr464tyiy().s[343]++;
            recommendations.push(`**Notification Patterns**: Complex workflows detected without notification patterns - consider adding monitoring and alerting`);
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[123][1]++;
          }
          cov_2rr464tyiy().s[344]++;
          if (recommendations.length === 0) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[125][0]++;
            cov_2rr464tyiy().s[345]++;
            recommendations.push('Workflows demonstrate good pattern usage - continue monitoring for optimization opportunities');
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[125][1]++;
          }
          cov_2rr464tyiy().s[346]++;
          recommendations.forEach((rec, index) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[44]++;
            cov_2rr464tyiy().s[347]++;
            analysis += `${index + 1}. ${rec}\n`;
          });
          /* istanbul ignore next */
          cov_2rr464tyiy().s[348]++;
          analysis += '\n';
          // Best practices
          /* istanbul ignore next */
          cov_2rr464tyiy().s[349]++;
          analysis += `## 🏆 Pattern Best Practices\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[350]++;
          Object.entries(WORKFLOW_PATTERNS).forEach(([key, pattern]) => {
            /* istanbul ignore next */
            cov_2rr464tyiy().f[45]++;
            cov_2rr464tyiy().s[351]++;
            analysis += `**${pattern.name}**: ${pattern.implementation}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[118][1]++;
        }
        cov_2rr464tyiy().s[352]++;
        analysis += `\n## 🔧 Related Tools\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[353]++;
        analysis += `- Use \`search-workflow-templates\` to find templates with these patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[354]++;
        analysis += `- Use \`get-best-practices\` for detailed implementation guidance\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[355]++;
        analysis += `- Use \`get-optimization-suggestions\` for specific improvements\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[356]++;
        return analysis;
      } catch (error) {
        /* istanbul ignore next */
        cov_2rr464tyiy().s[357]++;
        throw new fastmcp_1.UserError(`Failed to analyze workflow patterns: ${error.message}`);
      }
    }
  });
  // Get best practices
  /* istanbul ignore next */
  cov_2rr464tyiy().s[358]++;
  server.addTool({
    name: 'get-best-practices',
    description: 'Get comprehensive best practices and implementation guidelines for workflow development, organized by category',
    parameters: BestPracticesSchema,
    annotations: {
      title: 'Get Best Practices',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_2rr464tyiy().f[46]++;
      cov_2rr464tyiy().s[359]++;
      try {
        let bestPractices =
        /* istanbul ignore next */
        (cov_2rr464tyiy().s[360]++, `# n8n Workflow Best Practices Guide\n\n`);
        /* istanbul ignore next */
        cov_2rr464tyiy().s[361]++;
        bestPractices += `**Generated**: ${new Date().toLocaleString()}\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[362]++;
        bestPractices += `**Category Focus**: ${args.category}\n\n`;
        // Structure best practices
        /* istanbul ignore next */
        cov_2rr464tyiy().s[363]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[127][0]++, args.category === 'structure') ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[127][1]++, args.category === 'all')) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[126][0]++;
          cov_2rr464tyiy().s[364]++;
          bestPractices += `## 🏗️ Workflow Structure Best Practices\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[365]++;
          bestPractices += `### 1. Workflow Organization\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[366]++;
          bestPractices += `- **Single Responsibility**: Each workflow should have one clear purpose\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[367]++;
          bestPractices += `- **Logical Flow**: Organize nodes in a clear, left-to-right flow\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[368]++;
          bestPractices += `- **Node Naming**: Use descriptive, business-focused names\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[369]++;
          bestPractices += `- **Documentation**: Add notes to complex nodes and decision points\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[370]++;
          bestPractices += `- **Size Limits**: Keep workflows under 30 nodes when possible\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[371]++;
          bestPractices += `### 2. Node Configuration\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[372]++;
          bestPractices += `- **Parameter Validation**: Always validate input parameters\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[373]++;
          bestPractices += `- **Default Values**: Provide sensible defaults for optional parameters\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[374]++;
          bestPractices += `- **Environment Variables**: Use environment variables for configuration\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[375]++;
          bestPractices += `- **Resource Optimization**: Configure appropriate timeouts and limits\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[376]++;
          if (args.includeExamples) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[128][0]++;
            cov_2rr464tyiy().s[377]++;
            bestPractices += `### Example: Good Node Naming\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[378]++;
            bestPractices += `\`\`\`\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[379]++;
            bestPractices += `❌ Bad: "HTTP Request", "Set", "IF"\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[380]++;
            bestPractices += `✅ Good: "Fetch Customer Data", "Format Order Details", "Check Payment Status"\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[381]++;
            bestPractices += `\`\`\`\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[128][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[126][1]++;
        }
        // Performance best practices
        cov_2rr464tyiy().s[382]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[130][0]++, args.category === 'performance') ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[130][1]++, args.category === 'all')) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[129][0]++;
          cov_2rr464tyiy().s[383]++;
          bestPractices += `## ⚡ Performance Best Practices\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[384]++;
          bestPractices += `### 1. HTTP Request Optimization\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[385]++;
          bestPractices += `- **Connection Pooling**: Enable keep-alive for HTTP requests\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[386]++;
          bestPractices += `- **Request Batching**: Batch multiple requests when possible\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[387]++;
          bestPractices += `- **Timeout Configuration**: Set appropriate request timeouts\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[388]++;
          bestPractices += `- **Rate Limiting**: Implement rate limiting for external APIs\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[389]++;
          bestPractices += `- **Caching**: Cache frequently accessed data\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[390]++;
          bestPractices += `### 2. Data Processing\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[391]++;
          bestPractices += `- **Stream Processing**: Use streaming for large datasets\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[392]++;
          bestPractices += `- **Memory Management**: Avoid loading large datasets into memory\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[393]++;
          bestPractices += `- **Parallel Processing**: Use parallel execution where appropriate\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[394]++;
          bestPractices += `- **Data Validation**: Validate data early in the workflow\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[395]++;
          bestPractices += `### 3. Code Node Optimization\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[396]++;
          bestPractices += `- **Library Usage**: Minimize external library imports\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[397]++;
          bestPractices += `- **Loop Optimization**: Avoid nested loops in code nodes\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[398]++;
          bestPractices += `- **Error Handling**: Implement proper error handling in custom code\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[399]++;
          bestPractices += `- **Performance Monitoring**: Add timing and logging to code nodes\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[400]++;
          if (args.includeExamples) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[131][0]++;
            cov_2rr464tyiy().s[401]++;
            bestPractices += `### Example: HTTP Request Configuration\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[402]++;
            bestPractices += `\`\`\`json\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[403]++;
            bestPractices += `{\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[404]++;
            bestPractices += `  "timeout": 30000,\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[405]++;
            bestPractices += `  "redirect": {\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[406]++;
            bestPractices += `    "followRedirects": true,\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[407]++;
            bestPractices += `    "maxRedirects": 3\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[408]++;
            bestPractices += `  },\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[409]++;
            bestPractices += `  "response": {\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[410]++;
            bestPractices += `    "fullResponse": false\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[411]++;
            bestPractices += `  }\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[412]++;
            bestPractices += `}\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[413]++;
            bestPractices += `\`\`\`\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[131][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[129][1]++;
        }
        // Security best practices
        cov_2rr464tyiy().s[414]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[133][0]++, args.category === 'security') ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[133][1]++, args.category === 'all')) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[132][0]++;
          cov_2rr464tyiy().s[415]++;
          bestPractices += `## 🔒 Security Best Practices\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[416]++;
          bestPractices += `### 1. Credential Management\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[417]++;
          bestPractices += `- **No Hardcoded Secrets**: Never hardcode API keys or passwords\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[418]++;
          bestPractices += `- **Credential Scope**: Use least-privilege principle for credentials\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[419]++;
          bestPractices += `- **Credential Rotation**: Regularly rotate API keys and tokens\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[420]++;
          bestPractices += `- **Environment Separation**: Use different credentials for different environments\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[421]++;
          bestPractices += `### 2. Data Security\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[422]++;
          bestPractices += `- **Data Encryption**: Encrypt sensitive data in transit and at rest\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[423]++;
          bestPractices += `- **Input Sanitization**: Sanitize all external inputs\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[424]++;
          bestPractices += `- **Output Filtering**: Filter sensitive data from logs and responses\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[425]++;
          bestPractices += `- **Access Control**: Implement proper access controls\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[426]++;
          bestPractices += `### 3. Network Security\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[427]++;
          bestPractices += `- **HTTPS Only**: Always use HTTPS for external communications\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[428]++;
          bestPractices += `- **Certificate Validation**: Validate SSL certificates\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[429]++;
          bestPractices += `- **IP Whitelisting**: Restrict access to known IP addresses\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[430]++;
          bestPractices += `- **Webhook Security**: Validate webhook signatures\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[431]++;
          if (args.includeExamples) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[134][0]++;
            cov_2rr464tyiy().s[432]++;
            bestPractices += `### Example: Secure API Request\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[433]++;
            bestPractices += `\`\`\`javascript\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[434]++;
            bestPractices += `// In Code Node - Input Validation\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[435]++;
            bestPractices += `const email = $input.first().json.email;\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[436]++;
            bestPractices += `if (!email || !email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[437]++;
            bestPractices += `  throw new Error('Invalid email format');\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[438]++;
            bestPractices += `}\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[439]++;
            bestPractices += `\`\`\`\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[134][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[132][1]++;
        }
        // Maintainability best practices
        cov_2rr464tyiy().s[440]++;
        if (
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[136][0]++, args.category === 'maintainability') ||
        /* istanbul ignore next */
        (cov_2rr464tyiy().b[136][1]++, args.category === 'all')) {
          /* istanbul ignore next */
          cov_2rr464tyiy().b[135][0]++;
          cov_2rr464tyiy().s[441]++;
          bestPractices += `## 🔧 Maintainability Best Practices\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[442]++;
          bestPractices += `### 1. Documentation\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[443]++;
          bestPractices += `- **Workflow Description**: Clear description of workflow purpose\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[444]++;
          bestPractices += `- **Node Documentation**: Document complex logic and decision points\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[445]++;
          bestPractices += `- **Change Log**: Maintain a record of significant changes\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[446]++;
          bestPractices += `- **Dependencies**: Document external service dependencies\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[447]++;
          bestPractices += `### 2. Version Control\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[448]++;
          bestPractices += `- **Backup Strategy**: Regular workflow backups\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[449]++;
          bestPractices += `- **Change Tracking**: Track workflow modifications\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[450]++;
          bestPractices += `- **Environment Management**: Separate development and production workflows\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[451]++;
          bestPractices += `- **Rollback Plan**: Maintain ability to rollback changes\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[452]++;
          bestPractices += `### 3. Monitoring & Observability\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[453]++;
          bestPractices += `- **Error Monitoring**: Implement comprehensive error tracking\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[454]++;
          bestPractices += `- **Performance Metrics**: Track execution times and success rates\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[455]++;
          bestPractices += `- **Health Checks**: Regular workflow health validation\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[456]++;
          bestPractices += `- **Alerting**: Set up alerts for critical failures\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[457]++;
          bestPractices += `### 4. Testing Strategy\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[458]++;
          bestPractices += `- **Test Data**: Use realistic but non-sensitive test data\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[459]++;
          bestPractices += `- **Edge Cases**: Test error conditions and edge cases\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[460]++;
          bestPractices += `- **Integration Testing**: Test with actual external services\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[461]++;
          bestPractices += `- **Regression Testing**: Test after modifications\n\n`;
          /* istanbul ignore next */
          cov_2rr464tyiy().s[462]++;
          if (args.includeExamples) {
            /* istanbul ignore next */
            cov_2rr464tyiy().b[137][0]++;
            cov_2rr464tyiy().s[463]++;
            bestPractices += `### Example: Workflow Documentation Template\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[464]++;
            bestPractices += `\`\`\`\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[465]++;
            bestPractices += `Purpose: Process customer orders from e-commerce platform\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[466]++;
            bestPractices += `Trigger: Webhook from Shopify on new order\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[467]++;
            bestPractices += `Dependencies: Shopify API, Email service, Database\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[468]++;
            bestPractices += `Error Handling: Slack notifications for failures\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[469]++;
            bestPractices += `Last Updated: 2024-01-15 by John Doe\n`;
            /* istanbul ignore next */
            cov_2rr464tyiy().s[470]++;
            bestPractices += `\`\`\`\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2rr464tyiy().b[137][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2rr464tyiy().b[135][1]++;
        }
        // Common anti-patterns to avoid
        cov_2rr464tyiy().s[471]++;
        bestPractices += `## ❌ Common Anti-Patterns to Avoid\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[472]++;
        bestPractices += `### 1. Structure Anti-Patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[473]++;
        bestPractices += `- **Monolithic Workflows**: Workflows with 50+ nodes\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[474]++;
        bestPractices += `- **Deep Nesting**: Excessive IF/Switch nesting\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[475]++;
        bestPractices += `- **Unclear Dependencies**: Complex node interconnections\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[476]++;
        bestPractices += `- **Poor Naming**: Generic or technical node names\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[477]++;
        bestPractices += `### 2. Performance Anti-Patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[478]++;
        bestPractices += `- **Sequential HTTP Calls**: Making sequential API calls when parallel is possible\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[479]++;
        bestPractices += `- **Memory Leaks**: Not clearing large variables in code nodes\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[480]++;
        bestPractices += `- **Inefficient Loops**: Processing items one-by-one instead of batching\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[481]++;
        bestPractices += `- **No Caching**: Repeatedly fetching the same data\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[482]++;
        bestPractices += `### 3. Security Anti-Patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[483]++;
        bestPractices += `- **Hardcoded Credentials**: API keys in workflow configuration\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[484]++;
        bestPractices += `- **Logging Sensitive Data**: Including passwords or tokens in logs\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[485]++;
        bestPractices += `- **Unvalidated Input**: Processing external data without validation\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[486]++;
        bestPractices += `- **Overprivileged Access**: Using admin credentials for routine operations\n\n`;
        // Quick reference checklist
        /* istanbul ignore next */
        cov_2rr464tyiy().s[487]++;
        bestPractices += `## ✅ Quick Reference Checklist\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[488]++;
        bestPractices += `### Pre-Deployment Checklist\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[489]++;
        bestPractices += `- [ ] Workflow has clear, descriptive name and documentation\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[490]++;
        bestPractices += `- [ ] All nodes have descriptive, business-focused names\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[491]++;
        bestPractices += `- [ ] Error handling implemented for critical operations\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[492]++;
        bestPractices += `- [ ] No hardcoded credentials or sensitive data\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[493]++;
        bestPractices += `- [ ] Input validation implemented for external data\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[494]++;
        bestPractices += `- [ ] Appropriate timeouts configured for HTTP requests\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[495]++;
        bestPractices += `- [ ] Monitoring and alerting configured\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[496]++;
        bestPractices += `- [ ] Workflow tested with realistic data\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[497]++;
        bestPractices += `- [ ] Performance requirements validated\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[498]++;
        bestPractices += `- [ ] Security review completed\n\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[499]++;
        bestPractices += `## 🔧 Implementation Tools\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[500]++;
        bestPractices += `- Use \`analyze-workflow-complexity\` to assess workflow structure\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[501]++;
        bestPractices += `- Use \`get-optimization-suggestions\` for specific improvements\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[502]++;
        bestPractices += `- Use \`check-workflow-health\` for comprehensive health checks\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[503]++;
        bestPractices += `- Use \`search-workflow-templates\` for proven patterns\n`;
        /* istanbul ignore next */
        cov_2rr464tyiy().s[504]++;
        return bestPractices;
      } catch (error) {
        /* istanbul ignore next */
        cov_2rr464tyiy().s[505]++;
        throw new fastmcp_1.UserError(`Failed to get best practices: ${error.message}`);
      }
    }
  });
}
// Helper functions for pattern analysis
function analyzeIntegrationPattern(workflow) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[47]++;
  const nodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[506]++,
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[138][0]++, workflow.nodes) ||
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[138][1]++, []));
  const _nodeTypes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[507]++, nodes.map(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[48]++;
    cov_2rr464tyiy().s[508]++;
    return node.type.toLowerCase();
  }));
  const details =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[509]++, []);
  let score =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[510]++, 0);
  // Check for HTTP/API nodes
  const apiNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[511]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[49]++;
    cov_2rr464tyiy().s[512]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[139][0]++, type.includes('http')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[139][1]++, type.includes('webhook')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[139][2]++, type.includes('api'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[513]++;
  if (apiNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[140][0]++;
    cov_2rr464tyiy().s[514]++;
    score += 30;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[515]++;
    details.push(`${apiNodes} API integration node(s) detected`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[140][1]++;
  }
  // Check for data transformation
  const transformNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[516]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[50]++;
    cov_2rr464tyiy().s[517]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[141][0]++, type.includes('set')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[141][1]++, type.includes('code')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[141][2]++, type.includes('function'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[518]++;
  if (transformNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[142][0]++;
    cov_2rr464tyiy().s[519]++;
    score += 20;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[520]++;
    details.push(`${transformNodes} data transformation node(s) found`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[142][1]++;
  }
  // Check for error handling
  const errorNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[521]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[51]++;
    cov_2rr464tyiy().s[522]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[143][0]++, node.parameters) &&
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[143][1]++, JSON.stringify(node.parameters).toLowerCase().includes('error'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[523]++;
  if (errorNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[144][0]++;
    cov_2rr464tyiy().s[524]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[525]++;
    details.push(`Error handling implemented with ${errorNodes} node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[144][1]++;
  }
  // Check for authentication
  const authNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[526]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[52]++;
    cov_2rr464tyiy().s[527]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[145][0]++, node.credentials) &&
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[145][1]++, Object.keys(node.credentials).length > 0);
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[528]++;
  if (authNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[146][0]++;
    cov_2rr464tyiy().s[529]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[530]++;
    details.push(`Authentication configured for ${authNodes} node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[146][1]++;
  }
  cov_2rr464tyiy().s[531]++;
  return {
    score,
    details
  };
}
function analyzeDataTransformationPattern(workflow) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[53]++;
  const nodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[532]++,
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[147][0]++, workflow.nodes) ||
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[147][1]++, []));
  const _nodeTypes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[533]++, nodes.map(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[54]++;
    cov_2rr464tyiy().s[534]++;
    return node.type.toLowerCase();
  }));
  const details =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[535]++, []);
  let score =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[536]++, 0);
  // Check for data processing nodes
  const dataNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[537]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[55]++;
    cov_2rr464tyiy().s[538]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[148][0]++, type.includes('set')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[148][1]++, type.includes('merge')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[148][2]++, type.includes('split'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[539]++;
  if (dataNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[149][0]++;
    cov_2rr464tyiy().s[540]++;
    score += 40;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[541]++;
    details.push(`${dataNodes} data processing node(s) identified`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[149][1]++;
  }
  // Check for validation
  const validationNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[542]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[56]++;
    cov_2rr464tyiy().s[543]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[150][0]++, type.includes('if')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[150][1]++, type.includes('switch')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[150][2]++, type.includes('filter'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[544]++;
  if (validationNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[151][0]++;
    cov_2rr464tyiy().s[545]++;
    score += 30;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[546]++;
    details.push(`${validationNodes} validation/filtering node(s) found`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[151][1]++;
  }
  // Check for custom transformation logic
  const codeNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[547]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[57]++;
    cov_2rr464tyiy().s[548]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[152][0]++, type.includes('code')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[152][1]++, type.includes('function'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[549]++;
  if (codeNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[153][0]++;
    cov_2rr464tyiy().s[550]++;
    score += 30;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[551]++;
    details.push(`${codeNodes} custom transformation node(s) implemented`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[153][1]++;
  }
  cov_2rr464tyiy().s[552]++;
  return {
    score,
    details
  };
}
function analyzeErrorHandlingPattern(workflow) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[58]++;
  const nodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[553]++,
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[154][0]++, workflow.nodes) ||
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[154][1]++, []));
  const details =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[554]++, []);
  let score =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[555]++, 0);
  // Check for error trigger nodes
  const errorTriggers =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[556]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[59]++;
    cov_2rr464tyiy().s[557]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[155][0]++, node.type.toLowerCase().includes('error')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[155][1]++, node.parameters) &&
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[155][2]++, JSON.stringify(node.parameters).toLowerCase().includes('error'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[558]++;
  if (errorTriggers > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[156][0]++;
    cov_2rr464tyiy().s[559]++;
    score += 40;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[560]++;
    details.push(`${errorTriggers} error trigger/handler node(s) configured`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[156][1]++;
  }
  // Check for try-catch patterns in code nodes
  const codeNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[561]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[60]++;
    cov_2rr464tyiy().s[562]++;
    return node.type.toLowerCase().includes('code');
  }));
  const tryCatchNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[563]++, codeNodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[61]++;
    cov_2rr464tyiy().s[564]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[157][0]++, node.parameters) &&
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[157][1]++, JSON.stringify(node.parameters).includes('try'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[565]++;
  if (tryCatchNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[158][0]++;
    cov_2rr464tyiy().s[566]++;
    score += 30;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[567]++;
    details.push(`${tryCatchNodes} code node(s) with try-catch patterns`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[158][1]++;
  }
  // Check for notification nodes (error alerts)
  const notificationNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[568]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[62]++;
    const type =
    /* istanbul ignore next */
    (cov_2rr464tyiy().s[569]++, node.type.toLowerCase());
    /* istanbul ignore next */
    cov_2rr464tyiy().s[570]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[159][0]++, type.includes('slack')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[159][1]++, type.includes('email')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[159][2]++, type.includes('webhook'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[571]++;
  if (notificationNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[160][0]++;
    cov_2rr464tyiy().s[572]++;
    score += 30;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[573]++;
    details.push(`${notificationNodes} notification node(s) for error alerting`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[160][1]++;
  }
  cov_2rr464tyiy().s[574]++;
  return {
    score,
    details
  };
}
function analyzeNotificationPattern(workflow) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[63]++;
  const nodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[575]++,
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[161][0]++, workflow.nodes) ||
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[161][1]++, []));
  const _nodeTypes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[576]++, nodes.map(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[64]++;
    cov_2rr464tyiy().s[577]++;
    return node.type.toLowerCase();
  }));
  const details =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[578]++, []);
  let score =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[579]++, 0);
  // Check for notification nodes
  const notificationNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[580]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[65]++;
    cov_2rr464tyiy().s[581]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[162][0]++, type.includes('slack')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[162][1]++, type.includes('email')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[162][2]++, type.includes('sms')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[162][3]++, type.includes('webhook')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[162][4]++, type.includes('discord'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[582]++;
  if (notificationNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[163][0]++;
    cov_2rr464tyiy().s[583]++;
    score += 50;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[584]++;
    details.push(`${notificationNodes} notification channel(s) configured`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[163][1]++;
  }
  // Check for conditional notification logic
  const conditionalNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[585]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[66]++;
    cov_2rr464tyiy().s[586]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[164][0]++, type.includes('if')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[164][1]++, type.includes('switch'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[587]++;
  if (
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[166][0]++, conditionalNodes > 0) &&
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[166][1]++, notificationNodes > 0)) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[165][0]++;
    cov_2rr464tyiy().s[588]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[589]++;
    details.push(`Conditional notification logic with ${conditionalNodes} decision node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[165][1]++;
  }
  // Check for message formatting
  const formatNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[590]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[67]++;
    cov_2rr464tyiy().s[591]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[167][0]++, type.includes('set')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[167][1]++, type.includes('code'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[592]++;
  if (
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[169][0]++, formatNodes > 0) &&
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[169][1]++, notificationNodes > 0)) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[168][0]++;
    cov_2rr464tyiy().s[593]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[594]++;
    details.push(`Message formatting implemented with ${formatNodes} node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[168][1]++;
  }
  cov_2rr464tyiy().s[595]++;
  return {
    score,
    details
  };
}
function analyzeAIProcessingPattern(workflow) {
  /* istanbul ignore next */
  cov_2rr464tyiy().f[68]++;
  const nodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[596]++,
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[170][0]++, workflow.nodes) ||
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[170][1]++, []));
  const _nodeTypes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[597]++, nodes.map(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[69]++;
    cov_2rr464tyiy().s[598]++;
    return node.type.toLowerCase();
  }));
  const details =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[599]++, []);
  let score =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[600]++, 0);
  // Check for AI nodes
  const aiNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[601]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[70]++;
    cov_2rr464tyiy().s[602]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[171][0]++, type.includes('ai')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[171][1]++, type.includes('openai')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[171][2]++, type.includes('anthropic')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[171][3]++, type.includes('claude')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[171][4]++, type.includes('gpt')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[171][5]++, type.includes('llama'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[603]++;
  if (aiNodes > 0) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[172][0]++;
    cov_2rr464tyiy().s[604]++;
    score += 50;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[605]++;
    details.push(`${aiNodes} AI processing node(s) identified`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[172][1]++;
  }
  // Check for data preparation
  const prepNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[606]++, _nodeTypes.filter(type => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[71]++;
    cov_2rr464tyiy().s[607]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[173][0]++, type.includes('set')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[173][1]++, type.includes('code')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[173][2]++, type.includes('split'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[608]++;
  if (
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[175][0]++, prepNodes > 0) &&
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[175][1]++, aiNodes > 0)) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[174][0]++;
    cov_2rr464tyiy().s[609]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[610]++;
    details.push(`Data preparation implemented with ${prepNodes} node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[174][1]++;
  }
  // Check for AI result processing
  const processNodes =
  /* istanbul ignore next */
  (cov_2rr464tyiy().s[611]++, nodes.filter(node => {
    /* istanbul ignore next */
    cov_2rr464tyiy().f[72]++;
    cov_2rr464tyiy().s[612]++;
    return /* istanbul ignore next */(cov_2rr464tyiy().b[176][0]++, node.type.toLowerCase().includes('merge')) ||
    /* istanbul ignore next */
    (cov_2rr464tyiy().b[176][1]++, node.type.toLowerCase().includes('if'));
  }).length);
  /* istanbul ignore next */
  cov_2rr464tyiy().s[613]++;
  if (
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[178][0]++, processNodes > 0) &&
  /* istanbul ignore next */
  (cov_2rr464tyiy().b[178][1]++, aiNodes > 0)) {
    /* istanbul ignore next */
    cov_2rr464tyiy().b[177][0]++;
    cov_2rr464tyiy().s[614]++;
    score += 25;
    /* istanbul ignore next */
    cov_2rr464tyiy().s[615]++;
    details.push(`AI result processing with ${processNodes} node(s)`);
  } else
  /* istanbul ignore next */
  {
    cov_2rr464tyiy().b[177][1]++;
  }
  cov_2rr464tyiy().s[616]++;
  return {
    score,
    details
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,