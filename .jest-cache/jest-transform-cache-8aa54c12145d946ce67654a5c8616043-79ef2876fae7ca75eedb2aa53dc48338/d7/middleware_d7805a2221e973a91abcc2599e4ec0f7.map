{"version":3,"names":["cov_17yms1qxbx","actualCoverage","FastMCPAuthMiddleware","config","constructor","f","s","requireAuth","publicTools","publicResources","authHeader","authErrorMessage","authzErrorMessage","apply","server","console","log","_authMiddleware","createAuthenticateFunction","request","context","createRequestContext","authResult","authProvider","authenticate","success","b","Error","user","error","checkToolAccess","toolName","includes","hasAccess","canAccessTool","checkResourceAccess","resourceUri","some","pattern","startsWith","canAccessResource","clientId","id","headers","metadata","wrapTool","toolFunction","args","extractContextFromArgs","wrapResource","resourceFunction","lastArg","length","session","createAuthMiddleware","target","propertyKey","descriptor","originalMethod","value","requirePermission","permission","AUTH_ENV_CONFIG","REQUIRE_AUTH","PUBLIC_TOOLS","PUBLIC_RESOURCES","AUTH_HEADER","AUTH_ERROR_MESSAGE","AUTHZ_ERROR_MESSAGE","parseAuthConfigFromEnv","process","env","split","undefined"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts"],"sourcesContent":["/**\n * FastMCP Authentication Middleware\n *\n * Provides authentication middleware for FastMCP server integration.\n * Handles authentication checking and access control for tools and resources.\n */\n\n/* eslint-disable no-unused-vars */\n\nimport { FastMCP } from 'fastmcp';\nimport { AuthProvider, RequestContext } from './authProvider.js';\n\n/**\n * Authentication middleware configuration\n */\nexport interface AuthMiddlewareConfig {\n  /** Authentication provider to use */\n  authProvider: AuthProvider;\n\n  /** Whether to require authentication for all requests */\n  requireAuth?: boolean;\n\n  /** Tools that bypass authentication (always allowed) */\n  publicTools?: string[];\n\n  /** Resources that bypass authentication (always allowed) */\n  publicResources?: string[];\n\n  /** Custom authentication header name */\n  authHeader?: string;\n\n  /** Error message for authentication failures */\n  authErrorMessage?: string;\n\n  /** Error message for authorization failures */\n  authzErrorMessage?: string;\n}\n\n/**\n * Authentication middleware for FastMCP\n *\n * Integrates with FastMCP server to provide authentication and authorization\n * for tool access and resource access.\n */\nexport class FastMCPAuthMiddleware {\n  private config: Required<AuthMiddlewareConfig>;\n\n  constructor(config: AuthMiddlewareConfig) {\n    this.config = {\n      requireAuth: false,\n      publicTools: ['init-n8n', 'status'],\n      publicResources: [],\n      authHeader: 'authorization',\n      authErrorMessage: 'Authentication required',\n      authzErrorMessage: 'Access denied',\n      ...config,\n    };\n  }\n\n  /**\n   * Apply authentication middleware to FastMCP server\n   */\n  public apply(server: FastMCP): void {\n    // Note: Current FastMCP version doesn't have built-in authentication\n    // Authentication will be handled at the tool level through wrapper functions\n    console.log('üîê Authentication middleware configured (tool-level implementation)');\n\n    // Store reference for tool wrapping\n    (server as any)._authMiddleware = this;\n  }\n\n  /**\n   * Create authentication function for FastMCP\n   */\n  private createAuthenticateFunction() {\n    return async (request: any) => {\n      try {\n        const context = this.createRequestContext(request);\n        const authResult = await this.config.authProvider.authenticate(context);\n\n        if (!authResult.success) {\n          if (this.config.requireAuth) {\n            throw new Error(this.config.authErrorMessage);\n          }\n          // Allow anonymous access if auth not required\n          return null;\n        }\n\n        return authResult.user;\n      } catch (error) {\n        if (this.config.requireAuth) {\n          throw error;\n        }\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Check if tool access is allowed\n   */\n  public async checkToolAccess(toolName: string, context: RequestContext): Promise<void> {\n    // Public tools are always allowed\n    if (this.config.publicTools.includes(toolName)) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check tool access permissions\n    const hasAccess = await this.config.authProvider.canAccessTool(toolName, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${toolName}`);\n    }\n  }\n\n  /**\n   * Check if resource access is allowed\n   */\n  public async checkResourceAccess(resourceUri: string, context: RequestContext): Promise<void> {\n    // Public resources are always allowed\n    if (this.config.publicResources.some(pattern => resourceUri.startsWith(pattern))) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check resource access permissions\n    const hasAccess = await this.config.authProvider.canAccessResource(resourceUri, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${resourceUri}`);\n    }\n  }\n\n  /**\n   * Create request context from FastMCP request\n   */\n  private createRequestContext(request: any): RequestContext {\n    return {\n      clientId: request.clientId || request.id,\n      headers: request.headers || {},\n      metadata: request.metadata || {},\n    };\n  }\n\n  /**\n   * Wrap tool function with authentication\n   */\n  public wrapTool<T extends (...args: any[]) => any>(toolName: string, toolFunction: T): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkToolAccess(toolName, context);\n      return toolFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Wrap resource function with authentication\n   */\n  public wrapResource<T extends (...args: any[]) => any>(\n    resourceUri: string,\n    resourceFunction: T\n  ): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkResourceAccess(resourceUri, context);\n      return resourceFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Extract request context from function arguments\n   */\n  private extractContextFromArgs(args: any[]): RequestContext {\n    // Look for context in arguments (FastMCP typically passes context as last argument)\n    const lastArg = args[args.length - 1];\n    if (lastArg && typeof lastArg === 'object' && lastArg.session) {\n      return {\n        clientId: lastArg.session?.id,\n        headers: lastArg.headers || {},\n        metadata: lastArg.metadata || {},\n      };\n    }\n\n    return {\n      headers: {},\n      metadata: {},\n    };\n  }\n}\n\n/**\n * Create authentication middleware\n */\nexport function createAuthMiddleware(config: AuthMiddlewareConfig): FastMCPAuthMiddleware {\n  return new FastMCPAuthMiddleware(config);\n}\n\n/**\n * Authentication decorator for tools\n *\n * Usage:\n * @requireAuth('tool-name')\n * async function myTool() { ... }\n */\nexport function requireAuth(toolName: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`üîí Authentication check for tool: ${toolName}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Authorization decorator for tools with specific permissions\n *\n * Usage:\n * @requirePermission('workflows')\n * async function manageWorkflow() { ... }\n */\nexport function requirePermission(permission: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`üõ°Ô∏è  Permission check for: ${permission}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Environment variable configuration for authentication middleware\n */\nexport const AUTH_ENV_CONFIG = {\n  /** Whether authentication is required */\n  REQUIRE_AUTH: 'N8N_MCP_REQUIRE_AUTH',\n\n  /** Public tools (comma-separated) */\n  PUBLIC_TOOLS: 'N8N_MCP_PUBLIC_TOOLS',\n\n  /** Public resources (comma-separated) */\n  PUBLIC_RESOURCES: 'N8N_MCP_PUBLIC_RESOURCES',\n\n  /** Custom auth header name */\n  AUTH_HEADER: 'N8N_MCP_AUTH_HEADER',\n\n  /** Custom auth error message */\n  AUTH_ERROR_MESSAGE: 'N8N_MCP_AUTH_ERROR_MESSAGE',\n\n  /** Custom authz error message */\n  AUTHZ_ERROR_MESSAGE: 'N8N_MCP_AUTHZ_ERROR_MESSAGE',\n} as const;\n\n/**\n * Parse authentication middleware configuration from environment\n */\nexport function parseAuthConfigFromEnv(authProvider: AuthProvider): AuthMiddlewareConfig {\n  return {\n    authProvider,\n    requireAuth: process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] === 'true',\n    publicTools: process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS]?.split(',') || undefined,\n    publicResources: process.env[AUTH_ENV_CONFIG.PUBLIC_RESOURCES]?.split(',') || undefined,\n    authHeader: process.env[AUTH_ENV_CONFIG.AUTH_HEADER] || undefined,\n    authErrorMessage: process.env[AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE] || undefined,\n    authzErrorMessage: process.env[AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE] || undefined,\n  };\n}\n"],"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","ignoreList":[]}