{"version":3,"names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/types/n8n.ts"],"sourcesContent":["// Type definitions for n8n API responses\nexport interface N8nUser {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  personalizationAnswers?: Record<string, unknown>;\n  settings?: Record<string, unknown>;\n  role?: string;\n  password?: string;\n  resetPasswordToken?: string;\n  globalRoleId?: string;\n  isPending?: boolean;\n  disabled?: boolean;\n  lastSeenAt?: string;\n  globalRole?: {\n    scope: string;\n    name: string;\n    id: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt?: string;\n  updatedAt?: string;\n  hasRecoveryCodesLeft?: boolean;\n  mfaEnabled?: boolean;\n}\n\nexport interface N8nNode {\n  id: string;\n  name: string;\n  type: string;\n  typeVersion: number;\n  position: [number, number];\n  parameters?: Record<string, any>;\n  credentials?: Record<string, any>;\n  disabled?: boolean;\n  notes?: string;\n  webhookId?: string;\n  [key: string]: unknown; // Add index signature to make it compatible with Record<string, unknown>\n}\n\nexport interface N8nWorkflow {\n  id: string;\n  name: string;\n  active: boolean;\n  nodes?: N8nNode[];\n  connections: Record<string, unknown>;\n  settings?: Record<string, unknown>;\n  staticData?: Record<string, unknown>;\n  tags?: string[];\n  versionId?: string;\n  triggerCount?: number;\n  createdAt?: string;\n  updatedAt?: string;\n  pinData?: Record<string, unknown>;\n  meta?: Record<string, unknown>;\n}\n\nexport interface N8nExecution {\n  id: string;\n  finished: boolean;\n  mode: string;\n  retryOf?: string;\n  retrySuccessId?: string;\n  startedAt: string;\n  stoppedAt?: string;\n  workflowId: string;\n  waitTill?: Date;\n  status: 'error' | 'success' | 'running' | 'waiting';\n  data?: Record<string, unknown>;\n  workflowData?: N8nWorkflow;\n}\n\nexport interface N8nCredential {\n  id: string;\n  name: string;\n  type: string;\n  data?: Record<string, unknown>;\n  nodesAccess?: Array<{\n    nodeType: string;\n    user?: string;\n    date?: Date;\n  }>;\n  sharedWith?: Array<{\n    id: string;\n    user: N8nUser;\n    role: string;\n  }>;\n  homeProject?: {\n    id: string;\n    name: string;\n    type: string;\n  };\n  scopes?: string[];\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface N8nProject {\n  id: string;\n  name: string;\n  type: 'Personal' | 'Team';\n  createdAt: string;\n  updatedAt: string;\n  relations?: Array<{\n    id: string;\n    userId: string;\n    projectId: string;\n    role: string;\n    createdAt: string;\n    updatedAt: string;\n    user: N8nUser;\n  }>;\n}\n\nexport interface N8nVariable {\n  id: string;\n  key: string;\n  value: string;\n  type: 'string' | 'number' | 'boolean' | 'json';\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface N8nTag {\n  id: string;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n  usageCount?: number;\n}\n\nexport interface N8nAuditReport {\n  'Database Settings'?: Record<string, unknown>;\n  'Credentials Risk Report'?: Record<string, unknown>;\n  'Nodes Risk Report'?: Record<string, unknown>;\n  'Instance Risk Report'?: Record<string, unknown>;\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  nextCursor?: string;\n}\n\nexport interface PaginationOptions {\n  limit?: number;\n  cursor?: string;\n  projectId?: string;\n}\n\nexport interface CreateUserRequest {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password?: string;\n  role?: string;\n}\n\nexport interface UpdateUserRequest {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  role?: string;\n}\n\nexport interface CreateWorkflowRequest {\n  name: string;\n  nodes: Array<Record<string, unknown>>;\n  connections: Record<string, unknown>;\n  active?: boolean;\n  settings?: Record<string, unknown>;\n  tags?: string[];\n}\n\nexport interface UpdateWorkflowRequest {\n  name?: string;\n  nodes?: Array<Record<string, unknown>>;\n  connections?: Record<string, unknown>;\n  active?: boolean;\n  settings?: Record<string, unknown>;\n  tags?: string[];\n}\n\nexport interface CreateCredentialRequest {\n  name: string;\n  type: string;\n  data: Record<string, unknown>;\n  projectId?: string;\n}\n\nexport interface CreateProjectRequest {\n  name: string;\n  type?: string;\n}\n\nexport interface UpdateProjectRequest {\n  name?: string;\n}\n\nexport interface CreateVariableRequest {\n  key: string;\n  value: string;\n  type?: 'string' | 'number' | 'boolean' | 'json';\n}\n\nexport interface CreateTagRequest {\n  name: string;\n}\n\nexport interface UpdateTagRequest {\n  name?: string;\n}\n\n// Community Node and Package Management Types\n\nexport interface N8nCommunityPackage {\n  packageName: string;\n  installedVersion: string;\n  authorName?: string;\n  authorEmail?: string;\n  installedNodes?: N8nNodeTypeDescription[];\n  createdAt: string;\n  updatedAt: string;\n  failedLoading?: boolean;\n}\n\nexport interface N8nNodeTypeDescription {\n  name: string;\n  displayName: string;\n  description: string;\n  version: number;\n  defaults: Record<string, unknown>;\n  inputs: string[];\n  outputs: string[];\n  properties: N8nNodeProperty[];\n  credentials?: N8nNodeCredential[];\n  documentationUrl?: string;\n  icon?: string;\n  iconData?: {\n    type: string;\n    fileBuffer: string;\n  };\n  group: string[];\n  subtitle?: string;\n  codex?: {\n    label?: string;\n    categories?: string[];\n    subcategories?: Record<string, string[]>;\n    resources?: {\n      primaryDocumentation?: Array<{\n        url: string;\n      }>;\n      credentialDocumentation?: Array<{\n        url: string;\n      }>;\n    };\n    alias?: string[];\n  };\n  parameterPane?: string;\n  supportsCORS?: boolean;\n  maxNodes?: number;\n  polling?: boolean;\n  triggerPanel?: {\n    header: string;\n    executionsHelp: {\n      inactive: string;\n      active: string;\n    };\n    activationHint: string;\n  };\n  webhooks?: Array<{\n    name: string;\n    httpMethod: string;\n    responseMode: string;\n    path: string;\n    ndvHideUrl?: boolean;\n    ndvHideMethod?: boolean;\n  }>;\n  requestDefaults?: {\n    returnFullResponse?: boolean;\n    baseURL?: string;\n  };\n}\n\nexport interface N8nNodeProperty {\n  displayName: string;\n  name: string;\n  type: 'string' | 'number' | 'boolean' | 'options' | 'multiOptions' | 'json' | 'dateTime' | 'resourceLocator' | 'fixedCollection' | 'collection' | 'color' | 'hidden' | 'notice';\n  default?: unknown;\n  description?: string;\n  placeholder?: string;\n  required?: boolean;\n  options?: Array<{\n    name: string;\n    value: unknown;\n    description?: string;\n  }>;\n  routing?: Record<string, unknown>;\n  extractValue?: Record<string, unknown>;\n  displayOptions?: Record<string, unknown>;\n  typeOptions?: Record<string, unknown>;\n}\n\nexport interface N8nNodeCredential {\n  name: string;\n  required?: boolean;\n  displayOptions?: Record<string, unknown>;\n  testedBy?: string;\n}\n\nexport interface CommunityPackageInstallRequest {\n  name: string;\n  version?: string;\n}\n\nexport interface CommunityPackageUpdateRequest {\n  name: string;\n  version?: string;\n}\n\nexport interface NodeSearchResult {\n  workflowId: string;\n  workflowName: string;\n  node: N8nNode;\n  isWorkflowActive: boolean;\n}\n\nexport interface NodeUsageStats {\n  nodeType: string;\n  totalCount: number;\n  activeWorkflowCount: number;\n  workflowIds: string[];\n  lastUsed?: string;\n}\n\nexport interface NodeUpdateRequest {\n  workflowId: string;\n  nodeId: string;\n  updates: Partial<N8nNode>;\n}\n\nexport interface NodeInstallationProgress {\n  packageName: string;\n  status: 'downloading' | 'installing' | 'validating' | 'completed' | 'failed';\n  progress: number;\n  message?: string;\n  error?: string;\n}\n\nexport interface NodeRegistrySearchResult {\n  name: string;\n  version: string;\n  description: string;\n  keywords: string[];\n  author: {\n    name?: string;\n    email?: string;\n    url?: string;\n  };\n  maintainers: Array<{\n    name: string;\n    email?: string;\n  }>;\n  license: string;\n  homepage?: string;\n  repository?: {\n    type: string;\n    url: string;\n  };\n  downloads: {\n    weekly: number;\n    monthly: number;\n    total: number;\n  };\n  nodeTypes: string[];\n  compatibility: {\n    minN8nVersion: string;\n    maxN8nVersion?: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DynamicNodeParameter {\n  name: string;\n  displayName: string;\n  value: string;\n  type: string;\n  action?: string;\n}\n\nexport interface DynamicNodeOptions {\n  property: string;\n  currentNodeParameters: Record<string, unknown>;\n  credentials?: Record<string, unknown>;\n  path?: string;\n  methodName?: string;\n  loadOptionsMethod?: string;\n}\n\nexport interface ResourceLocatorResult {\n  name: string;\n  value: string;\n  url?: string;\n}\n\nexport interface AINodeClassification {\n  nodeType: string;\n  isAINode: boolean;\n  aiCapabilities: string[];\n  suggestedIntegrations: string[];\n  confidenceScore: number;\n}\n\nexport interface AINodeSuggestion {\n  nodeType: string;\n  suggestion: string;\n  reasoning: string;\n  confidence: number;\n  alternativeNodes: string[];\n}\n\n// Enhanced n8n fork API types\nexport interface ProjectUserRequest {\n  userId: string;\n  role: string;\n}\n\nexport interface ProjectUserResponse {\n  id: string;\n  userId: string;\n  projectId: string;\n  role: string;\n  createdAt: string;\n  updatedAt: string;\n  user: N8nUser;\n}\n\nexport interface WorkflowTransferRequest {\n  projectId: string;\n}\n\nexport interface CredentialTransferRequest {\n  projectId: string;\n}\n\nexport interface UserRoleUpdateRequest {\n  role: string;\n}\n\nexport interface SourceControlStatus {\n  branchName: string;\n  ahead: number;\n  behind: number;\n  current: string;\n  modified: string[];\n  untracked: string[];\n  staged: string[];\n}\n\nexport interface SourceControlCommit {\n  id: string;\n  message: string;\n  author: string;\n  date: string;\n}\n\nexport interface SourceControlPullRequest {\n  force?: boolean;\n  branch?: string;\n}\n\nexport interface SourceControlBranchRequest {\n  branch: string;\n}\n\nexport interface AuthenticationConfig {\n  type: 'api-key' | 'oauth2' | 'session' | 'saml' | 'oidc' | 'ldap';\n  credentials?: Record<string, any>;\n  sessionToken?: string;\n  refreshToken?: string;\n}\n\nexport interface SessionInfo {\n  authenticated: boolean;\n  user?: N8nUser;\n  expiresAt?: string;\n  permissions?: string[];\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n  mfaCode?: string;\n}\n\nexport interface LoginResponse {\n  user: N8nUser;\n  sessionToken?: string;\n  mfaRequired?: boolean;\n}\n\nexport interface OAuth2Config {\n  authorizationUrl: string;\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope?: string[];\n  redirectUri: string;\n}\n\nexport interface OAuth2Token {\n  accessToken: string;\n  refreshToken?: string;\n  expiresIn?: number;\n  tokenType: string;\n}\n\nexport interface VariableUpdateRequest {\n  key?: string;\n  value?: string;\n  type?: 'string' | 'number' | 'boolean' | 'json';\n}\n"],"mappings":"","ignoreList":[]}