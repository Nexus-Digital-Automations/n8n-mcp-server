4ab6921d4c21024c895ac147a9731faf
/* istanbul ignore next */
function cov_1u6y71utsd() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/documentationAccess.ts";
  var hash = "a83558956b68559d74d411f0d1c02012d4017cc5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/documentationAccess.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 89
        },
        end: {
          line: 5,
          column: 96
        }
      },
      "1": {
        start: {
          line: 7,
          column: 31
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "2": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 20,
          column: 10
        }
      },
      "5": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "6": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "7": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "10": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "11": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "12": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 69
        }
      },
      "13": {
        start: {
          line: 42,
          column: 45
        },
        end: {
          line: 42,
          column: 68
        }
      },
      "14": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "15": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "16": {
        start: {
          line: 45,
          column: 45
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "17": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 131
        }
      },
      "19": {
        start: {
          line: 50,
          column: 45
        },
        end: {
          line: 50,
          column: 129
        }
      },
      "20": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "22": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "23": {
        start: {
          line: 70,
          column: 18
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "24": {
        start: {
          line: 71,
          column: 17
        },
        end: {
          line: 71,
          column: 40
        }
      },
      "25": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 16
        }
      },
      "26": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "27": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "28": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 549,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "getNodeDocumentation",
        decl: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 42
          }
        },
        loc: {
          start: {
            line: 4,
            column: 67
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "getFunctionDocumentation",
        decl: {
          start: {
            line: 39,
            column: 22
          },
          end: {
            line: 39,
            column: 46
          }
        },
        loc: {
          start: {
            line: 39,
            column: 71
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 40
          },
          end: {
            line: 42,
            column: 41
          }
        },
        loc: {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 68
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 40
          },
          end: {
            line: 45,
            column: 41
          }
        },
        loc: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 46,
            column: 69
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 41
          }
        },
        loc: {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 129
          }
        },
        line: 50
      },
      "5": {
        name: "getDisplayNameFromType",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 31
          }
        },
        loc: {
          start: {
            line: 68,
            column: 42
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 75,
            column: 24
          }
        },
        loc: {
          start: {
            line: 75,
            column: 30
          },
          end: {
            line: 75,
            column: 47
          }
        },
        line: 75
      },
      "7": {
        name: "getNodeDocumentationDatabase",
        decl: {
          start: {
            line: 81,
            column: 9
          },
          end: {
            line: 81,
            column: 37
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 306,
            column: 1
          }
        },
        line: 81
      },
      "8": {
        name: "getFunctionDocumentationDatabase",
        decl: {
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 310,
            column: 41
          }
        },
        loc: {
          start: {
            line: 310,
            column: 44
          },
          end: {
            line: 550,
            column: 1
          }
        },
        line: 310
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 53
          },
          end: {
            line: 4,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 4,
            column: 65
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 5,
            column: 34
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 5,
            column: 36
          },
          end: {
            line: 5,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 55
          },
          end: {
            line: 5,
            column: 59
          }
        }],
        line: 5
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 61
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 79
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 18,
            column: 42
          }
        }, {
          start: {
            line: 18,
            column: 45
          },
          end: {
            line: 18,
            column: 54
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 19,
            column: 44
          }
        }, {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 19,
            column: 56
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 25,
            column: 52
          }
        }, {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 64
          }
        }],
        line: 25
      },
      "8": {
        loc: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 26,
            column: 55
          }
        }, {
          start: {
            line: 26,
            column: 58
          },
          end: {
            line: 26,
            column: 67
          }
        }],
        line: 26
      },
      "9": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "10": {
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 53
          }
        }, {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 30,
            column: 59
          }
        }],
        line: 30
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 46,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 45,
            column: 102
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 69
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 32
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 68
          }
        }, {
          start: {
            line: 50,
            column: 72
          },
          end: {
            line: 50,
            column: 129
          }
        }],
        line: 50
      },
      "16": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "17": {
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 30
          }
        }, {
          start: {
            line: 56,
            column: 34
          },
          end: {
            line: 56,
            column: 43
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/documentationAccess.ts",
      mappings: "AAoGA;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,QAAgB,EAChB,UAAgC,EAAE;IAElC,MAAM,EAAE,eAAe,GAAG,IAAI,EAAE,gBAAgB,GAAG,IAAI,EAAE,eAAe,GAAG,KAAK,EAAE,GAAG,OAAO,CAAC;IAE7F,sEAAsE;IACtE,MAAM,kBAAkB,GAAG,4BAA4B,EAAE,CAAC;IAE1D,MAAM,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,8CAA8C;QAC9C,OAAO;YACL,QAAQ;YACR,WAAW,EAAE,sBAAsB,CAAC,QAAQ,CAAC;YAC7C,WAAW,EAAE,qBAAqB,QAAQ,YAAY;YACtD,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;YAC1C,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;SAC7C,CAAC;IACJ,CAAC;IAED,wCAAwC;IACxC,MAAM,aAAa,GAAsB;QACvC,GAAG,OAAO;QACV,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QACxD,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;KAC5D,CAAC;IAEF,uCAAuC;IACvC,IAAI,eAAe,EAAE,CAAC;QACpB,aAAa,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QACpD,aAAa,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC1C,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IAED,OAAO,aAAa,CAAC;AACvB,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAC5C,YAAoB,EACpB,QAAqF;IAErF,MAAM,YAAY,GAAG,gCAAgC,EAAE,CAAC;IAExD,wBAAwB;IACxB,IAAI,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;IAElE,uCAAuC;IACvC,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,WAAW,GAAG,YAAY,CAAC,IAAI,CAC7B,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YACzD,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAC5D,CAAC;IACJ,CAAC;IAED,qEAAqE;IACrE,IAAI,CAAC,WAAW,IAAI,QAAQ,EAAE,CAAC;QAC7B,WAAW,GAAG,YAAY,CAAC,IAAI,CAC7B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAC1F,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,kDAAkD;QAClD,OAAO;YACL,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,QAAQ,IAAI,SAAS;YAC/B,WAAW,EAAE,qBAAqB,YAAY,WAAW;YACzD,MAAM,EAAE,GAAG,YAAY,IAAI;YAC3B,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AAED;;GAEG;AACH,SAAS,sBAAsB,CAAC,QAAgB;IAC9C,oCAAoC;IACpC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAErC,kCAAkC;IAClC,OAAO,IAAI;SACR,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC;SAC1B,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACvC,IAAI,EAAE,CAAC;AACZ,CAAC;AAED;;GAEG;AACH,SAAS,4BAA4B;IACnC,OAAO;QACL,4BAA4B,EAAE;YAC5B,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,+EAA+E;YAC5F,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,wBAAwB;oBACrC,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE;wBACP,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;wBACnC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;wBAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;wBAC/B,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;wBACrC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;wBACjC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;wBAC/B,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;qBAC9B;iBACF;gBACD;oBACE,IAAI,EAAE,KAAK;oBACX,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,gCAAgC;oBAC7C,WAAW,EAAE,yBAAyB;oBACtC,UAAU,EAAE,IAAI;iBACjB;gBACD;oBACE,IAAI,EAAE,gBAAgB;oBACtB,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,KAAK;oBACf,WAAW,EAAE,8BAA8B;oBAC3C,OAAO,EAAE,MAAM;oBACf,OAAO,EAAE;wBACP,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;wBAC/B,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE;wBAC1C,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,YAAY,EAAE;wBAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;wBACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;qBACpC;iBACF;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,WAAW,EAAE,yCAAyC;oBACtD,aAAa,EAAE;wBACb,MAAM,EAAE,KAAK;wBACb,GAAG,EAAE,8CAA8C;qBACpD;oBACD,cAAc,EAAE;wBACd,MAAM,EAAE,CAAC;wBACT,EAAE,EAAE,CAAC;wBACL,KAAK,EAAE,4EAA4E;wBACnF,IAAI,EAAE,+BAA+B;qBACtC;oBACD,OAAO,EAAE,8BAA8B;iBACxC;gBACD;oBACE,KAAK,EAAE,6BAA6B;oBACpC,WAAW,EAAE,mCAAmC;oBAChD,aAAa,EAAE;wBACb,MAAM,EAAE,MAAM;wBACd,GAAG,EAAE,4CAA4C;wBACjD,QAAQ,EAAE,IAAI;wBACd,WAAW,EAAE,MAAM;wBACnB,QAAQ,EAAE,kEAAkE;qBAC7E;oBACD,cAAc,EAAE;wBACd,EAAE,EAAE,GAAG;wBACP,KAAK,EAAE,UAAU;wBACjB,IAAI,EAAE,oBAAoB;wBAC1B,MAAM,EAAE,CAAC;qBACV;oBACD,OAAO,EAAE,gCAAgC;iBAC1C;aACF;SACF;QAED,oBAAoB,EAAE;YACpB,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,yDAAyD;YACtE,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,aAAa;oBACnB,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,KAAK;oBACf,WAAW,EAAE,6DAA6D;oBAC1E,OAAO,EAAE,KAAK;iBACf;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,iBAAiB;oBACvB,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,mBAAmB;oBAChC,OAAO,EAAE,EAAE;iBACZ;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,mBAAmB;oBAC1B,WAAW,EAAE,uCAAuC;oBACpD,aAAa,EAAE;wBACb,WAAW,EAAE,KAAK;wBAClB,MAAM,EAAE;4BACN,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE;gCACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;6BACpC;4BACD,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;gCAC1B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;6BAC/B;yBACF;qBACF;oBACD,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;oBACpB,cAAc,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;oBACnF,OAAO,EAAE,sCAAsC;iBAChD;aACF;SACF;QAED,yBAAyB,EAAE;YACzB,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,UAAU;YACvB,WAAW,EAAE,8CAA8C;YAC3D,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,gCAAgC;oBAC7C,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,KAAK;iBAClB;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,gBAAgB;oBACvB,WAAW,EAAE,0CAA0C;oBACvD,aAAa,EAAE;wBACb,YAAY,EAAE;;;;;;;cAOZ;qBACH;oBACD,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;oBACnD,cAAc,EAAE;wBACd;4BACE,SAAS,EAAE,MAAM;4BACjB,QAAQ,EAAE,KAAK;4BACf,QAAQ,EAAE,UAAU;4BACpB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;oBACD,OAAO,EAAE,kCAAkC;iBAC5C;aACF;YACD,SAAS,EAAE;gBACT;oBACE,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE,SAAS;oBACnB,WAAW,EAAE,4BAA4B;oBACzC,MAAM,EAAE,sBAAsB;oBAC9B,UAAU,EAAE,MAAM;oBAClB,QAAQ,EAAE;wBACR;4BACE,WAAW,EAAE,uBAAuB;4BACpC,IAAI,EAAE,6CAA6C;4BACnD,MAAM,EAAE,qBAAqB;4BAC7B,OAAO,EAAE,eAAe;yBACzB;qBACF;iBACF;aACF;SACF;QAED,mBAAmB,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,uDAAuD;YACpE,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,iBAAiB;oBACvB,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,yBAAyB;oBACtC,OAAO,EAAE,EAAE;iBACZ;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,sBAAsB;oBAC7B,WAAW,EAAE,oCAAoC;oBACjD,aAAa,EAAE;wBACb,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP;oCACE,MAAM,EAAE,iBAAiB;oCACzB,SAAS,EAAE,aAAa;oCACxB,MAAM,EAAE,EAAE;iCACX;6BACF;yBACF;qBACF;oBACD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE;oBACpC,OAAO,EAAE,8BAA8B;iBACxC;aACF;SACF;KACF,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,gCAAgC;IACvC,OAAO;QACL,iBAAiB;QACjB;YACE,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,gCAAgC;YAC7C,MAAM,EAAE,gBAAgB;YACxB,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,uBAAuB;oBACpC,IAAI,EAAE,sBAAsB;oBAC5B,MAAM,EAAE,0BAA0B;oBAClC,OAAO,EAAE,sBAAsB;iBAChC;aACF;SACF;QACD;YACE,IAAI,EAAE,iBAAiB;YACvB,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,yDAAyD;YACtE,MAAM,EAAE,+BAA+B;YACvC,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,yCAAyC;iBACvD;aACF;YACD,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,mCAAmC;oBAChD,IAAI,EAAE,2CAA2C;oBACjD,MAAM,EAAE,YAAY;oBACpB,OAAO,EAAE,iBAAiB;iBAC3B;gBACD;oBACE,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,oDAAoD;oBAC1D,MAAM,EAAE,qBAAqB;oBAC7B,OAAO,EAAE,qBAAqB;iBAC/B;aACF;SACF;QAED,mBAAmB;QACnB;YACE,IAAI,EAAE,oBAAoB;YAC1B,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,gCAAgC;YAC7C,MAAM,EAAE,sBAAsB;YAC9B,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,sBAAsB;oBACnC,IAAI,EAAE,mCAAmC;oBACzC,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,qBAAqB;iBAC/B;gBACD;oBACE,WAAW,EAAE,qBAAqB;oBAClC,IAAI,EAAE,gCAAgC;oBACtC,MAAM,EAAE,UAAU;oBAClB,OAAO,EAAE,sBAAsB;iBAChC;aACF;SACF;QACD;YACE,IAAI,EAAE,oBAAoB;YAC1B,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,gCAAgC;YAC7C,MAAM,EAAE,sBAAsB;YAC9B,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,sBAAsB;oBACnC,IAAI,EAAE,mCAAmC;oBACzC,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,qBAAqB;iBAC/B;aACF;SACF;QACD;YACE,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,+CAA+C;YAC5D,MAAM,EAAE,eAAe;YACvB,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,mBAAmB;oBAChC,IAAI,EAAE,gCAAgC;oBACtC,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,iBAAiB;iBAC3B;aACF;SACF;QAED,mBAAmB;QACnB;YACE,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,6CAA6C;YAC1D,MAAM,EAAE,oBAAoB;YAC5B,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,0BAA0B;iBACxC;aACF;YACD,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,oBAAoB;oBACjC,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,GAAG;oBACX,OAAO,EAAE,iBAAiB;iBAC3B;aACF;SACF;QACD;YACE,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,wCAAwC;YACrD,MAAM,EAAE,oBAAoB;YAC5B,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,0BAA0B;oBACvC,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,GAAG;oBACX,OAAO,EAAE,iBAAiB;iBAC3B;aACF;SACF;QAED,kBAAkB;QAClB;YACE,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE,6BAA6B;YAC1C,MAAM,EAAE,cAAc;YACtB,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,0BAA0B;oBAChC,MAAM,EAAE,GAAG;oBACX,OAAO,EAAE,qBAAqB;iBAC/B;aACF;SACF;QACD;YACE,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,OAAO;YACjB,WAAW,EACT,oFAAoF;YACtF,MAAM,EAAE,qBAAqB;YAC7B,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,0BAA0B;oBACvC,IAAI,EAAE,qCAAqC;oBAC3C,MAAM,EAAE,WAAW;oBACnB,OAAO,EAAE,sBAAsB;iBAChC;aACF;SACF;QAED,mBAAmB;QACnB;YACE,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,2CAA2C;YACxD,MAAM,EAAE,qBAAqB;YAC7B,UAAU,EAAE;gBACV;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,6BAA6B;iBAC3C;aACF;YACD,UAAU,EAAE,eAAe;YAC3B,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,iBAAiB;oBAC9B,IAAI,EAAE,0BAA0B;oBAChC,MAAM,EAAE,0BAA0B;oBAClC,OAAO,EAAE,mBAAmB;iBAC7B;aACF;SACF;QACD;YACE,IAAI,EAAE,eAAe;YACrB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,4CAA4C;YACzD,MAAM,EAAE,uBAAuB;YAC/B,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,mBAAmB;oBAChC,IAAI,EAAE,4BAA4B;oBAClC,MAAM,EAAE,kCAAkC;oBAC1C,OAAO,EAAE,mBAAmB;iBAC7B;aACF;SACF;QAED,qBAAqB;QACrB;YACE,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,MAAM,EAAE,cAAc;YACtB,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,qBAAqB;oBAClC,IAAI,EAAE,oBAAoB;oBAC1B,MAAM,EAAE,gBAAgB;oBACxB,OAAO,EAAE,mBAAmB;iBAC7B;aACF;SACF;QACD;YACE,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,2BAA2B;YACxC,MAAM,EAAE,gBAAgB;YACxB,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE;gBACR;oBACE,WAAW,EAAE,sBAAsB;oBACnC,IAAI,EAAE,sBAAsB;oBAC5B,MAAM,EAAE,OAAO;oBACf,OAAO,EAAE,mBAAmB;iBAC7B;aACF;SACF;KACF,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/documentationAccess.ts"],
      sourcesContent: ["export interface NodeDocumentation {\n  nodeType: string;\n  displayName: string;\n  description: string;\n  version: number;\n  category: string;\n  parameters?: ParameterDocumentation[];\n  examples?: NodeExample[];\n  functions?: FunctionDocumentation[];\n  credentials?: CredentialInfo[];\n  webhooks?: WebhookInfo[];\n  polling?: PollingInfo;\n  properties?: NodeProperty[];\n}\n\nexport interface ParameterDocumentation {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n  default?: any;\n  options?: ParameterOption[];\n  placeholder?: string;\n  hint?: string;\n  expression?: boolean;\n}\n\nexport interface ParameterOption {\n  name: string;\n  value: any;\n  description?: string;\n}\n\nexport interface NodeExample {\n  title: string;\n  description: string;\n  configuration: Record<string, any>;\n  inputData?: any;\n  expectedOutput?: any;\n  useCase: string;\n}\n\nexport interface FunctionDocumentation {\n  name: string;\n  category: 'date' | 'string' | 'number' | 'array' | 'object' | 'workflow' | 'utility';\n  description: string;\n  syntax: string;\n  parameters?: FunctionParameter[];\n  returnType: string;\n  examples: FunctionExample[];\n  relatedFunctions?: string[];\n}\n\nexport interface FunctionParameter {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n  default?: any;\n}\n\nexport interface FunctionExample {\n  description: string;\n  code: string;\n  result: string;\n  context?: string;\n}\n\nexport interface CredentialInfo {\n  name: string;\n  displayName: string;\n  required: boolean;\n  description: string;\n}\n\nexport interface WebhookInfo {\n  httpMethod: string;\n  path: string;\n  description: string;\n  responseMode: string;\n}\n\nexport interface PollingInfo {\n  enabled: boolean;\n  interval: number;\n  description: string;\n}\n\nexport interface NodeProperty {\n  name: string;\n  value: any;\n  description: string;\n}\n\nexport interface DocumentationOptions {\n  includeExamples?: boolean;\n  includeFunctions?: boolean;\n  includeAdvanced?: boolean;\n}\n\n/**\n * Get comprehensive documentation for a specific node type\n */\nexport async function getNodeDocumentation(\n  nodeType: string,\n  options: DocumentationOptions = {}\n): Promise<NodeDocumentation> {\n  const { includeExamples = true, includeFunctions = true, includeAdvanced = false } = options;\n\n  // This is a comprehensive documentation database for common n8n nodes\n  const nodeDocumentations = getNodeDocumentationDatabase();\n\n  const baseDoc = nodeDocumentations[nodeType];\n  if (!baseDoc) {\n    // Return a generic template for unknown nodes\n    return {\n      nodeType,\n      displayName: getDisplayNameFromType(nodeType),\n      description: `Documentation for ${nodeType} node type`,\n      version: 1,\n      category: 'unknown',\n      parameters: [],\n      examples: includeExamples ? [] : undefined,\n      functions: includeFunctions ? [] : undefined,\n    };\n  }\n\n  // Filter documentation based on options\n  const documentation: NodeDocumentation = {\n    ...baseDoc,\n    examples: includeExamples ? baseDoc.examples : undefined,\n    functions: includeFunctions ? baseDoc.functions : undefined,\n  };\n\n  // Add advanced properties if requested\n  if (includeAdvanced) {\n    documentation.properties = baseDoc.properties || [];\n    documentation.webhooks = baseDoc.webhooks;\n    documentation.polling = baseDoc.polling;\n  }\n\n  return documentation;\n}\n\n/**\n * Get documentation for built-in n8n expression functions\n */\nexport async function getFunctionDocumentation(\n  functionName: string,\n  category?: 'date' | 'string' | 'number' | 'array' | 'object' | 'workflow' | 'utility'\n): Promise<FunctionDocumentation> {\n  const functionDocs = getFunctionDocumentationDatabase();\n\n  // Try exact match first\n  let functionDoc = functionDocs.find(f => f.name === functionName);\n\n  // Try partial match if exact not found\n  if (!functionDoc) {\n    functionDoc = functionDocs.find(\n      f =>\n        f.name.toLowerCase().includes(functionName.toLowerCase()) ||\n        functionName.toLowerCase().includes(f.name.toLowerCase())\n    );\n  }\n\n  // Try category-based search if still not found and category provided\n  if (!functionDoc && category) {\n    functionDoc = functionDocs.find(\n      f => f.category === category && f.name.toLowerCase().includes(functionName.toLowerCase())\n    );\n  }\n\n  if (!functionDoc) {\n    // Return a generic template for unknown functions\n    return {\n      name: functionName,\n      category: category || 'utility',\n      description: `Documentation for ${functionName} function`,\n      syntax: `${functionName}()`,\n      returnType: 'unknown',\n      examples: [],\n    };\n  }\n\n  return functionDoc;\n}\n\n/**\n * Get display name from node type\n */\nfunction getDisplayNameFromType(nodeType: string): string {\n  // Convert node type to display name\n  const parts = nodeType.split('.');\n  const name = parts[parts.length - 1];\n\n  // Convert camelCase to Title Case\n  return name\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, str => str.toUpperCase())\n    .trim();\n}\n\n/**\n * Database of node documentation\n */\nfunction getNodeDocumentationDatabase(): Record<string, NodeDocumentation> {\n  return {\n    'n8n-nodes-base.httpRequest': {\n      nodeType: 'n8n-nodes-base.httpRequest',\n      displayName: 'HTTP Request',\n      description: 'Makes HTTP requests to any URL. Supports all HTTP methods and authentication.',\n      version: 4,\n      category: 'core',\n      parameters: [\n        {\n          name: 'method',\n          type: 'options',\n          required: true,\n          description: 'The HTTP method to use',\n          default: 'GET',\n          options: [\n            { name: 'DELETE', value: 'DELETE' },\n            { name: 'GET', value: 'GET' },\n            { name: 'HEAD', value: 'HEAD' },\n            { name: 'OPTIONS', value: 'OPTIONS' },\n            { name: 'PATCH', value: 'PATCH' },\n            { name: 'POST', value: 'POST' },\n            { name: 'PUT', value: 'PUT' },\n          ],\n        },\n        {\n          name: 'url',\n          type: 'string',\n          required: true,\n          description: 'The URL to make the request to',\n          placeholder: 'https://httpbin.org/get',\n          expression: true,\n        },\n        {\n          name: 'authentication',\n          type: 'options',\n          required: false,\n          description: 'Authentication method to use',\n          default: 'none',\n          options: [\n            { name: 'None', value: 'none' },\n            { name: 'Basic Auth', value: 'basicAuth' },\n            { name: 'Header Auth', value: 'headerAuth' },\n            { name: 'OAuth1', value: 'oAuth1' },\n            { name: 'OAuth2', value: 'oAuth2' },\n          ],\n        },\n      ],\n      examples: [\n        {\n          title: 'Simple GET Request',\n          description: 'Make a simple GET request to fetch data',\n          configuration: {\n            method: 'GET',\n            url: 'https://jsonplaceholder.typicode.com/posts/1',\n          },\n          expectedOutput: {\n            userId: 1,\n            id: 1,\n            title: 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',\n            body: 'quia et suscipit\\nsuscipit...',\n          },\n          useCase: 'Fetching data from REST APIs',\n        },\n        {\n          title: 'POST Request with JSON Body',\n          description: 'Send JSON data to an API endpoint',\n          configuration: {\n            method: 'POST',\n            url: 'https://jsonplaceholder.typicode.com/posts',\n            sendBody: true,\n            contentType: 'json',\n            jsonBody: '{\"title\": \"New Post\", \"body\": \"This is a new post\", \"userId\": 1}',\n          },\n          expectedOutput: {\n            id: 101,\n            title: 'New Post',\n            body: 'This is a new post',\n            userId: 1,\n          },\n          useCase: 'Creating new resources via API',\n        },\n      ],\n    },\n\n    'n8n-nodes-base.set': {\n      nodeType: 'n8n-nodes-base.set',\n      displayName: 'Set',\n      description: 'Sets values on items and optionally remove other values',\n      version: 3,\n      category: 'core',\n      parameters: [\n        {\n          name: 'keepOnlySet',\n          type: 'boolean',\n          required: false,\n          description: 'Keep only the values set on this node and remove all others',\n          default: false,\n        },\n        {\n          name: 'values',\n          type: 'fixedCollection',\n          required: true,\n          description: 'The values to set',\n          default: {},\n        },\n      ],\n      examples: [\n        {\n          title: 'Set Simple Values',\n          description: 'Set string and number values on items',\n          configuration: {\n            keepOnlySet: false,\n            values: {\n              string: [\n                { name: 'name', value: 'John Doe' },\n                { name: 'status', value: 'active' },\n              ],\n              number: [\n                { name: 'age', value: 30 },\n                { name: 'score', value: 85.5 },\n              ],\n            },\n          },\n          inputData: { id: 1 },\n          expectedOutput: { id: 1, name: 'John Doe', status: 'active', age: 30, score: 85.5 },\n          useCase: 'Adding computed values to data items',\n        },\n      ],\n    },\n\n    'n8n-nodes-base.function': {\n      nodeType: 'n8n-nodes-base.function',\n      displayName: 'Function',\n      description: 'Run custom JavaScript code to transform data',\n      version: 1,\n      category: 'core',\n      parameters: [\n        {\n          name: 'functionCode',\n          type: 'string',\n          required: true,\n          description: 'The JavaScript code to execute',\n          default: 'return items;',\n          expression: false,\n        },\n      ],\n      examples: [\n        {\n          title: 'Transform Data',\n          description: 'Transform incoming data using JavaScript',\n          configuration: {\n            functionCode: `\n// Transform each item\nfor (const item of items) {\n  item.json.fullName = \\`\\${item.json.firstName} \\${item.json.lastName}\\`;\n  item.json.timestamp = new Date().toISOString();\n}\n\nreturn items;`,\n          },\n          inputData: [{ firstName: 'John', lastName: 'Doe' }],\n          expectedOutput: [\n            {\n              firstName: 'John',\n              lastName: 'Doe',\n              fullName: 'John Doe',\n              timestamp: '2023-12-01T10:30:00.000Z',\n            },\n          ],\n          useCase: 'Custom data transformation logic',\n        },\n      ],\n      functions: [\n        {\n          name: 'console.log',\n          category: 'utility',\n          description: 'Log messages for debugging',\n          syntax: 'console.log(message)',\n          returnType: 'void',\n          examples: [\n            {\n              description: 'Log debug information',\n              code: 'console.log(\"Processing item:\", item.json);',\n              result: 'Outputs to n8n logs',\n              context: 'Function node',\n            },\n          ],\n        },\n      ],\n    },\n\n    'n8n-nodes-base.if': {\n      nodeType: 'n8n-nodes-base.if',\n      displayName: 'IF',\n      description: 'Routes items to different outputs based on conditions',\n      version: 2,\n      category: 'core',\n      parameters: [\n        {\n          name: 'conditions',\n          type: 'fixedCollection',\n          required: true,\n          description: 'The conditions to check',\n          default: {},\n        },\n      ],\n      examples: [\n        {\n          title: 'Route Based on Value',\n          description: 'Route items based on a field value',\n          configuration: {\n            conditions: {\n              boolean: [\n                {\n                  value1: '{{ $json.age }}',\n                  operation: 'largerEqual',\n                  value2: 18,\n                },\n              ],\n            },\n          },\n          inputData: { name: 'John', age: 25 },\n          useCase: 'Conditional workflow routing',\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Database of function documentation\n */\nfunction getFunctionDocumentationDatabase(): FunctionDocumentation[] {\n  return [\n    // Date functions\n    {\n      name: 'DateTime.now',\n      category: 'date',\n      description: 'Gets the current date and time',\n      syntax: 'DateTime.now()',\n      returnType: 'DateTime',\n      examples: [\n        {\n          description: 'Get current timestamp',\n          code: '{{ DateTime.now() }}',\n          result: '2023-12-01T10:30:00.000Z',\n          context: 'Any expression field',\n        },\n      ],\n    },\n    {\n      name: 'DateTime.format',\n      category: 'date',\n      description: 'Formats a date according to the specified format string',\n      syntax: 'DateTime.format(formatString)',\n      parameters: [\n        {\n          name: 'formatString',\n          type: 'string',\n          required: true,\n          description: 'The format pattern (e.g., \"yyyy-MM-dd\")',\n        },\n      ],\n      returnType: 'string',\n      examples: [\n        {\n          description: 'Format current date as YYYY-MM-DD',\n          code: '{{ DateTime.now().format(\"yyyy-MM-dd\") }}',\n          result: '2023-12-01',\n          context: 'Date formatting',\n        },\n        {\n          description: 'Format with time',\n          code: '{{ DateTime.now().format(\"yyyy-MM-dd HH:mm:ss\") }}',\n          result: '2023-12-01 10:30:00',\n          context: 'DateTime formatting',\n        },\n      ],\n    },\n\n    // String functions\n    {\n      name: 'String.toLowerCase',\n      category: 'string',\n      description: 'Converts a string to lowercase',\n      syntax: 'string.toLowerCase()',\n      returnType: 'string',\n      examples: [\n        {\n          description: 'Convert to lowercase',\n          code: '{{ \"HELLO WORLD\".toLowerCase() }}',\n          result: 'hello world',\n          context: 'String manipulation',\n        },\n        {\n          description: 'Convert field value',\n          code: '{{ $json.name.toLowerCase() }}',\n          result: 'john doe',\n          context: 'Field transformation',\n        },\n      ],\n    },\n    {\n      name: 'String.toUpperCase',\n      category: 'string',\n      description: 'Converts a string to uppercase',\n      syntax: 'string.toUpperCase()',\n      returnType: 'string',\n      examples: [\n        {\n          description: 'Convert to uppercase',\n          code: '{{ \"hello world\".toUpperCase() }}',\n          result: 'HELLO WORLD',\n          context: 'String manipulation',\n        },\n      ],\n    },\n    {\n      name: 'String.trim',\n      category: 'string',\n      description: 'Removes whitespace from both ends of a string',\n      syntax: 'string.trim()',\n      returnType: 'string',\n      examples: [\n        {\n          description: 'Remove whitespace',\n          code: '{{ \"  hello world  \".trim() }}',\n          result: 'hello world',\n          context: 'String cleaning',\n        },\n      ],\n    },\n\n    // Number functions\n    {\n      name: 'Math.floor',\n      category: 'number',\n      description: 'Rounds a number down to the nearest integer',\n      syntax: 'Math.floor(number)',\n      parameters: [\n        {\n          name: 'number',\n          type: 'number',\n          required: true,\n          description: 'The number to round down',\n        },\n      ],\n      returnType: 'number',\n      examples: [\n        {\n          description: 'Round down decimal',\n          code: '{{ Math.floor(4.7) }}',\n          result: '4',\n          context: 'Number rounding',\n        },\n      ],\n    },\n    {\n      name: 'Math.round',\n      category: 'number',\n      description: 'Rounds a number to the nearest integer',\n      syntax: 'Math.round(number)',\n      returnType: 'number',\n      examples: [\n        {\n          description: 'Round to nearest integer',\n          code: '{{ Math.round(4.7) }}',\n          result: '5',\n          context: 'Number rounding',\n        },\n      ],\n    },\n\n    // Array functions\n    {\n      name: 'Array.length',\n      category: 'array',\n      description: 'Gets the length of an array',\n      syntax: 'array.length',\n      returnType: 'number',\n      examples: [\n        {\n          description: 'Get array length',\n          code: '{{ $json.items.length }}',\n          result: '3',\n          context: 'Array size checking',\n        },\n      ],\n    },\n    {\n      name: 'Array.map',\n      category: 'array',\n      description:\n        'Creates a new array with the results of calling a function for every array element',\n      syntax: 'array.map(callback)',\n      returnType: 'Array',\n      examples: [\n        {\n          description: 'Transform array elements',\n          code: '{{ $json.numbers.map(x => x * 2) }}',\n          result: '[2, 4, 6]',\n          context: 'Array transformation',\n        },\n      ],\n    },\n\n    // Object functions\n    {\n      name: 'Object.keys',\n      category: 'object',\n      description: 'Returns an array of object property names',\n      syntax: 'Object.keys(object)',\n      parameters: [\n        {\n          name: 'object',\n          type: 'Object',\n          required: true,\n          description: 'The object to get keys from',\n        },\n      ],\n      returnType: 'Array<string>',\n      examples: [\n        {\n          description: 'Get object keys',\n          code: '{{ Object.keys($json) }}',\n          result: '[\"name\", \"age\", \"email\"]',\n          context: 'Object inspection',\n        },\n      ],\n    },\n    {\n      name: 'Object.values',\n      category: 'object',\n      description: 'Returns an array of object property values',\n      syntax: 'Object.values(object)',\n      returnType: 'Array',\n      examples: [\n        {\n          description: 'Get object values',\n          code: '{{ Object.values($json) }}',\n          result: '[\"John\", 30, \"john@example.com\"]',\n          context: 'Object inspection',\n        },\n      ],\n    },\n\n    // Workflow functions\n    {\n      name: '$input.all',\n      category: 'workflow',\n      description: 'Gets all input items',\n      syntax: '$input.all()',\n      returnType: 'Array',\n      examples: [\n        {\n          description: 'Get all input items',\n          code: '{{ $input.all() }}',\n          result: '[{...}, {...}]',\n          context: 'Input data access',\n        },\n      ],\n    },\n    {\n      name: '$input.first',\n      category: 'workflow',\n      description: 'Gets the first input item',\n      syntax: '$input.first()',\n      returnType: 'Object',\n      examples: [\n        {\n          description: 'Get first input item',\n          code: '{{ $input.first() }}',\n          result: '{...}',\n          context: 'Input data access',\n        },\n      ],\n    },\n  ];\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a83558956b68559d74d411f0d1c02012d4017cc5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u6y71utsd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u6y71utsd();
/**
 * Get comprehensive documentation for a specific node type
 */
export async function getNodeDocumentation(nodeType, options =
/* istanbul ignore next */
(cov_1u6y71utsd().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1u6y71utsd().f[0]++;
  const {
    includeExamples =
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[1][0]++, true),
    includeFunctions =
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[2][0]++, true),
    includeAdvanced =
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[3][0]++, false)
  } =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[0]++, options);
  // This is a comprehensive documentation database for common n8n nodes
  const nodeDocumentations =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[1]++, getNodeDocumentationDatabase());
  const baseDoc =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[2]++, nodeDocumentations[nodeType]);
  /* istanbul ignore next */
  cov_1u6y71utsd().s[3]++;
  if (!baseDoc) {
    /* istanbul ignore next */
    cov_1u6y71utsd().b[4][0]++;
    cov_1u6y71utsd().s[4]++;
    // Return a generic template for unknown nodes
    return {
      nodeType,
      displayName: getDisplayNameFromType(nodeType),
      description: `Documentation for ${nodeType} node type`,
      version: 1,
      category: 'unknown',
      parameters: [],
      examples: includeExamples ?
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[5][0]++, []) :
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[5][1]++, undefined),
      functions: includeFunctions ?
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[6][0]++, []) :
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[6][1]++, undefined)
    };
  } else
  /* istanbul ignore next */
  {
    cov_1u6y71utsd().b[4][1]++;
  }
  // Filter documentation based on options
  const documentation =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[5]++, {
    ...baseDoc,
    examples: includeExamples ?
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[7][0]++, baseDoc.examples) :
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[7][1]++, undefined),
    functions: includeFunctions ?
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[8][0]++, baseDoc.functions) :
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[8][1]++, undefined)
  });
  // Add advanced properties if requested
  /* istanbul ignore next */
  cov_1u6y71utsd().s[6]++;
  if (includeAdvanced) {
    /* istanbul ignore next */
    cov_1u6y71utsd().b[9][0]++;
    cov_1u6y71utsd().s[7]++;
    documentation.properties =
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[10][0]++, baseDoc.properties) ||
    /* istanbul ignore next */
    (cov_1u6y71utsd().b[10][1]++, []);
    /* istanbul ignore next */
    cov_1u6y71utsd().s[8]++;
    documentation.webhooks = baseDoc.webhooks;
    /* istanbul ignore next */
    cov_1u6y71utsd().s[9]++;
    documentation.polling = baseDoc.polling;
  } else
  /* istanbul ignore next */
  {
    cov_1u6y71utsd().b[9][1]++;
  }
  cov_1u6y71utsd().s[10]++;
  return documentation;
}
/**
 * Get documentation for built-in n8n expression functions
 */
export async function getFunctionDocumentation(functionName, category) {
  /* istanbul ignore next */
  cov_1u6y71utsd().f[1]++;
  const functionDocs =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[11]++, getFunctionDocumentationDatabase());
  // Try exact match first
  let functionDoc =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[12]++, functionDocs.find(f => {
    /* istanbul ignore next */
    cov_1u6y71utsd().f[2]++;
    cov_1u6y71utsd().s[13]++;
    return f.name === functionName;
  }));
  // Try partial match if exact not found
  /* istanbul ignore next */
  cov_1u6y71utsd().s[14]++;
  if (!functionDoc) {
    /* istanbul ignore next */
    cov_1u6y71utsd().b[11][0]++;
    cov_1u6y71utsd().s[15]++;
    functionDoc = functionDocs.find(f => {
      /* istanbul ignore next */
      cov_1u6y71utsd().f[3]++;
      cov_1u6y71utsd().s[16]++;
      return /* istanbul ignore next */(cov_1u6y71utsd().b[12][0]++, f.name.toLowerCase().includes(functionName.toLowerCase())) ||
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[12][1]++, functionName.toLowerCase().includes(f.name.toLowerCase()));
    });
  } else
  /* istanbul ignore next */
  {
    cov_1u6y71utsd().b[11][1]++;
  }
  // Try category-based search if still not found and category provided
  cov_1u6y71utsd().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1u6y71utsd().b[14][0]++, !functionDoc) &&
  /* istanbul ignore next */
  (cov_1u6y71utsd().b[14][1]++, category)) {
    /* istanbul ignore next */
    cov_1u6y71utsd().b[13][0]++;
    cov_1u6y71utsd().s[18]++;
    functionDoc = functionDocs.find(f => {
      /* istanbul ignore next */
      cov_1u6y71utsd().f[4]++;
      cov_1u6y71utsd().s[19]++;
      return /* istanbul ignore next */(cov_1u6y71utsd().b[15][0]++, f.category === category) &&
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[15][1]++, f.name.toLowerCase().includes(functionName.toLowerCase()));
    });
  } else
  /* istanbul ignore next */
  {
    cov_1u6y71utsd().b[13][1]++;
  }
  cov_1u6y71utsd().s[20]++;
  if (!functionDoc) {
    /* istanbul ignore next */
    cov_1u6y71utsd().b[16][0]++;
    cov_1u6y71utsd().s[21]++;
    // Return a generic template for unknown functions
    return {
      name: functionName,
      category:
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[17][0]++, category) ||
      /* istanbul ignore next */
      (cov_1u6y71utsd().b[17][1]++, 'utility'),
      description: `Documentation for ${functionName} function`,
      syntax: `${functionName}()`,
      returnType: 'unknown',
      examples: []
    };
  } else
  /* istanbul ignore next */
  {
    cov_1u6y71utsd().b[16][1]++;
  }
  cov_1u6y71utsd().s[22]++;
  return functionDoc;
}
/**
 * Get display name from node type
 */
function getDisplayNameFromType(nodeType) {
  /* istanbul ignore next */
  cov_1u6y71utsd().f[5]++;
  // Convert node type to display name
  const parts =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[23]++, nodeType.split('.'));
  const name =
  /* istanbul ignore next */
  (cov_1u6y71utsd().s[24]++, parts[parts.length - 1]);
  // Convert camelCase to Title Case
  /* istanbul ignore next */
  cov_1u6y71utsd().s[25]++;
  return name.replace(/([A-Z])/g, ' $1').replace(/^./, str => {
    /* istanbul ignore next */
    cov_1u6y71utsd().f[6]++;
    cov_1u6y71utsd().s[26]++;
    return str.toUpperCase();
  }).trim();
}
/**
 * Database of node documentation
 */
function getNodeDocumentationDatabase() {
  /* istanbul ignore next */
  cov_1u6y71utsd().f[7]++;
  cov_1u6y71utsd().s[27]++;
  return {
    'n8n-nodes-base.httpRequest': {
      nodeType: 'n8n-nodes-base.httpRequest',
      displayName: 'HTTP Request',
      description: 'Makes HTTP requests to any URL. Supports all HTTP methods and authentication.',
      version: 4,
      category: 'core',
      parameters: [{
        name: 'method',
        type: 'options',
        required: true,
        description: 'The HTTP method to use',
        default: 'GET',
        options: [{
          name: 'DELETE',
          value: 'DELETE'
        }, {
          name: 'GET',
          value: 'GET'
        }, {
          name: 'HEAD',
          value: 'HEAD'
        }, {
          name: 'OPTIONS',
          value: 'OPTIONS'
        }, {
          name: 'PATCH',
          value: 'PATCH'
        }, {
          name: 'POST',
          value: 'POST'
        }, {
          name: 'PUT',
          value: 'PUT'
        }]
      }, {
        name: 'url',
        type: 'string',
        required: true,
        description: 'The URL to make the request to',
        placeholder: 'https://httpbin.org/get',
        expression: true
      }, {
        name: 'authentication',
        type: 'options',
        required: false,
        description: 'Authentication method to use',
        default: 'none',
        options: [{
          name: 'None',
          value: 'none'
        }, {
          name: 'Basic Auth',
          value: 'basicAuth'
        }, {
          name: 'Header Auth',
          value: 'headerAuth'
        }, {
          name: 'OAuth1',
          value: 'oAuth1'
        }, {
          name: 'OAuth2',
          value: 'oAuth2'
        }]
      }],
      examples: [{
        title: 'Simple GET Request',
        description: 'Make a simple GET request to fetch data',
        configuration: {
          method: 'GET',
          url: 'https://jsonplaceholder.typicode.com/posts/1'
        },
        expectedOutput: {
          userId: 1,
          id: 1,
          title: 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',
          body: 'quia et suscipit\nsuscipit...'
        },
        useCase: 'Fetching data from REST APIs'
      }, {
        title: 'POST Request with JSON Body',
        description: 'Send JSON data to an API endpoint',
        configuration: {
          method: 'POST',
          url: 'https://jsonplaceholder.typicode.com/posts',
          sendBody: true,
          contentType: 'json',
          jsonBody: '{"title": "New Post", "body": "This is a new post", "userId": 1}'
        },
        expectedOutput: {
          id: 101,
          title: 'New Post',
          body: 'This is a new post',
          userId: 1
        },
        useCase: 'Creating new resources via API'
      }]
    },
    'n8n-nodes-base.set': {
      nodeType: 'n8n-nodes-base.set',
      displayName: 'Set',
      description: 'Sets values on items and optionally remove other values',
      version: 3,
      category: 'core',
      parameters: [{
        name: 'keepOnlySet',
        type: 'boolean',
        required: false,
        description: 'Keep only the values set on this node and remove all others',
        default: false
      }, {
        name: 'values',
        type: 'fixedCollection',
        required: true,
        description: 'The values to set',
        default: {}
      }],
      examples: [{
        title: 'Set Simple Values',
        description: 'Set string and number values on items',
        configuration: {
          keepOnlySet: false,
          values: {
            string: [{
              name: 'name',
              value: 'John Doe'
            }, {
              name: 'status',
              value: 'active'
            }],
            number: [{
              name: 'age',
              value: 30
            }, {
              name: 'score',
              value: 85.5
            }]
          }
        },
        inputData: {
          id: 1
        },
        expectedOutput: {
          id: 1,
          name: 'John Doe',
          status: 'active',
          age: 30,
          score: 85.5
        },
        useCase: 'Adding computed values to data items'
      }]
    },
    'n8n-nodes-base.function': {
      nodeType: 'n8n-nodes-base.function',
      displayName: 'Function',
      description: 'Run custom JavaScript code to transform data',
      version: 1,
      category: 'core',
      parameters: [{
        name: 'functionCode',
        type: 'string',
        required: true,
        description: 'The JavaScript code to execute',
        default: 'return items;',
        expression: false
      }],
      examples: [{
        title: 'Transform Data',
        description: 'Transform incoming data using JavaScript',
        configuration: {
          functionCode: `
// Transform each item
for (const item of items) {
  item.json.fullName = \`\${item.json.firstName} \${item.json.lastName}\`;
  item.json.timestamp = new Date().toISOString();
}

return items;`
        },
        inputData: [{
          firstName: 'John',
          lastName: 'Doe'
        }],
        expectedOutput: [{
          firstName: 'John',
          lastName: 'Doe',
          fullName: 'John Doe',
          timestamp: '2023-12-01T10:30:00.000Z'
        }],
        useCase: 'Custom data transformation logic'
      }],
      functions: [{
        name: 'console.log',
        category: 'utility',
        description: 'Log messages for debugging',
        syntax: 'console.log(message)',
        returnType: 'void',
        examples: [{
          description: 'Log debug information',
          code: 'console.log("Processing item:", item.json);',
          result: 'Outputs to n8n logs',
          context: 'Function node'
        }]
      }]
    },
    'n8n-nodes-base.if': {
      nodeType: 'n8n-nodes-base.if',
      displayName: 'IF',
      description: 'Routes items to different outputs based on conditions',
      version: 2,
      category: 'core',
      parameters: [{
        name: 'conditions',
        type: 'fixedCollection',
        required: true,
        description: 'The conditions to check',
        default: {}
      }],
      examples: [{
        title: 'Route Based on Value',
        description: 'Route items based on a field value',
        configuration: {
          conditions: {
            boolean: [{
              value1: '{{ $json.age }}',
              operation: 'largerEqual',
              value2: 18
            }]
          }
        },
        inputData: {
          name: 'John',
          age: 25
        },
        useCase: 'Conditional workflow routing'
      }]
    }
  };
}
/**
 * Database of function documentation
 */
function getFunctionDocumentationDatabase() {
  /* istanbul ignore next */
  cov_1u6y71utsd().f[8]++;
  cov_1u6y71utsd().s[28]++;
  return [
  // Date functions
  {
    name: 'DateTime.now',
    category: 'date',
    description: 'Gets the current date and time',
    syntax: 'DateTime.now()',
    returnType: 'DateTime',
    examples: [{
      description: 'Get current timestamp',
      code: '{{ DateTime.now() }}',
      result: '2023-12-01T10:30:00.000Z',
      context: 'Any expression field'
    }]
  }, {
    name: 'DateTime.format',
    category: 'date',
    description: 'Formats a date according to the specified format string',
    syntax: 'DateTime.format(formatString)',
    parameters: [{
      name: 'formatString',
      type: 'string',
      required: true,
      description: 'The format pattern (e.g., "yyyy-MM-dd")'
    }],
    returnType: 'string',
    examples: [{
      description: 'Format current date as YYYY-MM-DD',
      code: '{{ DateTime.now().format("yyyy-MM-dd") }}',
      result: '2023-12-01',
      context: 'Date formatting'
    }, {
      description: 'Format with time',
      code: '{{ DateTime.now().format("yyyy-MM-dd HH:mm:ss") }}',
      result: '2023-12-01 10:30:00',
      context: 'DateTime formatting'
    }]
  },
  // String functions
  {
    name: 'String.toLowerCase',
    category: 'string',
    description: 'Converts a string to lowercase',
    syntax: 'string.toLowerCase()',
    returnType: 'string',
    examples: [{
      description: 'Convert to lowercase',
      code: '{{ "HELLO WORLD".toLowerCase() }}',
      result: 'hello world',
      context: 'String manipulation'
    }, {
      description: 'Convert field value',
      code: '{{ $json.name.toLowerCase() }}',
      result: 'john doe',
      context: 'Field transformation'
    }]
  }, {
    name: 'String.toUpperCase',
    category: 'string',
    description: 'Converts a string to uppercase',
    syntax: 'string.toUpperCase()',
    returnType: 'string',
    examples: [{
      description: 'Convert to uppercase',
      code: '{{ "hello world".toUpperCase() }}',
      result: 'HELLO WORLD',
      context: 'String manipulation'
    }]
  }, {
    name: 'String.trim',
    category: 'string',
    description: 'Removes whitespace from both ends of a string',
    syntax: 'string.trim()',
    returnType: 'string',
    examples: [{
      description: 'Remove whitespace',
      code: '{{ "  hello world  ".trim() }}',
      result: 'hello world',
      context: 'String cleaning'
    }]
  },
  // Number functions
  {
    name: 'Math.floor',
    category: 'number',
    description: 'Rounds a number down to the nearest integer',
    syntax: 'Math.floor(number)',
    parameters: [{
      name: 'number',
      type: 'number',
      required: true,
      description: 'The number to round down'
    }],
    returnType: 'number',
    examples: [{
      description: 'Round down decimal',
      code: '{{ Math.floor(4.7) }}',
      result: '4',
      context: 'Number rounding'
    }]
  }, {
    name: 'Math.round',
    category: 'number',
    description: 'Rounds a number to the nearest integer',
    syntax: 'Math.round(number)',
    returnType: 'number',
    examples: [{
      description: 'Round to nearest integer',
      code: '{{ Math.round(4.7) }}',
      result: '5',
      context: 'Number rounding'
    }]
  },
  // Array functions
  {
    name: 'Array.length',
    category: 'array',
    description: 'Gets the length of an array',
    syntax: 'array.length',
    returnType: 'number',
    examples: [{
      description: 'Get array length',
      code: '{{ $json.items.length }}',
      result: '3',
      context: 'Array size checking'
    }]
  }, {
    name: 'Array.map',
    category: 'array',
    description: 'Creates a new array with the results of calling a function for every array element',
    syntax: 'array.map(callback)',
    returnType: 'Array',
    examples: [{
      description: 'Transform array elements',
      code: '{{ $json.numbers.map(x => x * 2) }}',
      result: '[2, 4, 6]',
      context: 'Array transformation'
    }]
  },
  // Object functions
  {
    name: 'Object.keys',
    category: 'object',
    description: 'Returns an array of object property names',
    syntax: 'Object.keys(object)',
    parameters: [{
      name: 'object',
      type: 'Object',
      required: true,
      description: 'The object to get keys from'
    }],
    returnType: 'Array<string>',
    examples: [{
      description: 'Get object keys',
      code: '{{ Object.keys($json) }}',
      result: '["name", "age", "email"]',
      context: 'Object inspection'
    }]
  }, {
    name: 'Object.values',
    category: 'object',
    description: 'Returns an array of object property values',
    syntax: 'Object.values(object)',
    returnType: 'Array',
    examples: [{
      description: 'Get object values',
      code: '{{ Object.values($json) }}',
      result: '["John", 30, "john@example.com"]',
      context: 'Object inspection'
    }]
  },
  // Workflow functions
  {
    name: '$input.all',
    category: 'workflow',
    description: 'Gets all input items',
    syntax: '$input.all()',
    returnType: 'Array',
    examples: [{
      description: 'Get all input items',
      code: '{{ $input.all() }}',
      result: '[{...}, {...}]',
      context: 'Input data access'
    }]
  }, {
    name: '$input.first',
    category: 'workflow',
    description: 'Gets the first input item',
    syntax: '$input.first()',
    returnType: 'Object',
    examples: [{
      description: 'Get first input item',
      code: '{{ $input.first() }}',
      result: '{...}',
      context: 'Input data access'
    }]
  }];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,