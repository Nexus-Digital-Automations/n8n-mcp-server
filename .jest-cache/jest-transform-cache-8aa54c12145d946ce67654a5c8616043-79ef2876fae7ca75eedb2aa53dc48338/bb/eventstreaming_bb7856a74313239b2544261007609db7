5fb9da8acd3a6f2e90ce01cebaefb1c0
/* istanbul ignore next */
function cov_2aeycc88c9() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts";
  var hash = "a0bf169507d76ecd591da17b6d2fbfdfd2e0d4e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 32
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "1": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "2": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "3": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "4": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "5": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "6": {
        start: {
          line: 57,
          column: 18
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "7": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "8": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "9": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "10": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "11": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "12": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 93
        }
      },
      "13": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "14": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "15": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "16": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 81
        }
      },
      "17": {
        start: {
          line: 78,
          column: 42
        },
        end: {
          line: 78,
          column: 79
        }
      },
      "18": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 87
        }
      },
      "19": {
        start: {
          line: 79,
          column: 45
        },
        end: {
          line: 79,
          column: 85
        }
      },
      "20": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 86
        }
      },
      "21": {
        start: {
          line: 80,
          column: 41
        },
        end: {
          line: 80,
          column: 84
        }
      },
      "22": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "23": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "24": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "25": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "26": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "27": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "28": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "29": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "30": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "31": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "32": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 128,
          column: 1
        }
      },
      "33": {
        start: {
          line: 112,
          column: 17
        },
        end: {
          line: 112,
          column: 34
        }
      },
      "34": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "35": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "36": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "37": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 55
        }
      },
      "38": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 51
        }
      },
      "39": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "40": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 88
        }
      },
      "41": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "42": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 74
        }
      },
      "43": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "44": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 73
        }
      },
      "45": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 18
        }
      },
      "46": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "47": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "48": {
        start: {
          line: 138,
          column: 31
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "49": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 140,
          column: 56
        }
      },
      "50": {
        start: {
          line: 142,
          column: 39
        },
        end: {
          line: 142,
          column: 95
        }
      },
      "51": {
        start: {
          line: 143,
          column: 31
        },
        end: {
          line: 143,
          column: 83
        }
      },
      "52": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 71
        }
      },
      "53": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 79
        }
      },
      "54": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "55": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 82
        }
      },
      "56": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "57": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 90
        }
      },
      "58": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 106
        }
      },
      "59": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "60": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 92
        }
      },
      "61": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "62": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "63": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 32
        }
      },
      "64": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 130
        }
      },
      "65": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "66": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "67": {
        start: {
          line: 173,
          column: 31
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "68": {
        start: {
          line: 174,
          column: 32
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "69": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "70": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 137
        }
      },
      "71": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 126
        }
      },
      "72": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "73": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 32
        }
      },
      "74": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 122
        }
      },
      "75": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "76": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "77": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 197,
          column: 56
        }
      },
      "78": {
        start: {
          line: 198,
          column: 38
        },
        end: {
          line: 198,
          column: 63
        }
      },
      "79": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 201,
          column: 17
        }
      },
      "80": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 131
        }
      },
      "81": {
        start: {
          line: 202,
          column: 31
        },
        end: {
          line: 202,
          column: 96
        }
      },
      "82": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 205,
          column: 19
        }
      },
      "83": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 77
        }
      },
      "84": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 32
        }
      },
      "85": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 211,
          column: 17
        }
      },
      "86": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "87": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 129
        }
      },
      "88": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 254,
          column: 7
        }
      },
      "89": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "90": {
        start: {
          line: 223,
          column: 31
        },
        end: {
          line: 223,
          column: 56
        }
      },
      "91": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "92": {
        start: {
          line: 232,
          column: 31
        },
        end: {
          line: 232,
          column: 78
        }
      },
      "93": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 66
        }
      },
      "94": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 235,
          column: 72
        }
      },
      "95": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 72
        }
      },
      "96": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 237,
          column: 74
        }
      },
      "97": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 74
        }
      },
      "98": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "99": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "100": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 80
        }
      },
      "101": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 243,
          column: 17
        }
      },
      "102": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 92
        }
      },
      "103": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 116
        }
      },
      "104": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "105": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 250,
          column: 17
        }
      },
      "106": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 32
        }
      },
      "107": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 121
        }
      },
      "108": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 298,
          column: 7
        }
      },
      "109": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 296,
          column: 13
        }
      },
      "110": {
        start: {
          line: 262,
          column: 31
        },
        end: {
          line: 262,
          column: 56
        }
      },
      "111": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "112": {
        start: {
          line: 273,
          column: 31
        },
        end: {
          line: 273,
          column: 81
        }
      },
      "113": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 55
        }
      },
      "114": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 63
        }
      },
      "115": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 59
        }
      },
      "116": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "117": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "118": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 280,
          column: 61
        }
      },
      "119": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 61
        }
      },
      "120": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 282,
          column: 70
        }
      },
      "121": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 70
        }
      },
      "122": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 284,
          column: 64
        }
      },
      "123": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 64
        }
      },
      "124": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 287,
          column: 17
        }
      },
      "125": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 96
        }
      },
      "126": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 117
        }
      },
      "127": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 32
        }
      },
      "128": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 294,
          column: 17
        }
      },
      "129": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 32
        }
      },
      "130": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 132
        }
      },
      "131": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 335,
          column: 7
        }
      },
      "132": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "133": {
        start: {
          line: 306,
          column: 31
        },
        end: {
          line: 306,
          column: 56
        }
      },
      "134": {
        start: {
          line: 307,
          column: 30
        },
        end: {
          line: 307,
          column: 61
        }
      },
      "135": {
        start: {
          line: 308,
          column: 31
        },
        end: {
          line: 308,
          column: 71
        }
      },
      "136": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 81
        }
      },
      "137": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 90
        }
      },
      "138": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 83
        }
      },
      "139": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 79
        }
      },
      "140": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 111
        }
      },
      "141": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 71
        }
      },
      "142": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 54
        }
      },
      "143": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 75
        }
      },
      "144": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 81
        }
      },
      "145": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 77
        }
      },
      "146": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 325,
          column: 17
        }
      },
      "147": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 60
        }
      },
      "148": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 324,
          column: 23
        }
      },
      "149": {
        start: {
          line: 322,
          column: 40
        },
        end: {
          line: 322,
          column: 117
        }
      },
      "150": {
        start: {
          line: 323,
          column: 24
        },
        end: {
          line: 323,
          column: 120
        }
      },
      "151": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 32
        }
      },
      "152": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 331,
          column: 17
        }
      },
      "153": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 330,
          column: 32
        }
      },
      "154": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 130
        }
      },
      "155": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 388,
          column: 7
        }
      },
      "156": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "157": {
        start: {
          line: 343,
          column: 31
        },
        end: {
          line: 343,
          column: 56
        }
      },
      "158": {
        start: {
          line: 344,
          column: 32
        },
        end: {
          line: 349,
          column: 17
        }
      },
      "159": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 360,
          column: 17
        }
      },
      "160": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 359,
          column: 22
        }
      },
      "161": {
        start: {
          line: 361,
          column: 31
        },
        end: {
          line: 361,
          column: 64
        }
      },
      "162": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 362,
          column: 64
        }
      },
      "163": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 53
        }
      },
      "164": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 59
        }
      },
      "165": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 82
        }
      },
      "166": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 76
        }
      },
      "167": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 378,
          column: 17
        }
      },
      "168": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 63
        }
      },
      "169": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 67
        }
      },
      "170": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 75
        }
      },
      "171": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 83
        }
      },
      "172": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 87
        }
      },
      "173": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 79
        }
      },
      "174": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 376,
          column: 74
        }
      },
      "175": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 377,
          column: 107
        }
      },
      "176": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "177": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 384,
          column: 17
        }
      },
      "178": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 32
        }
      },
      "179": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 123
        }
      },
      "180": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 435,
          column: 7
        }
      },
      "181": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "182": {
        start: {
          line: 396,
          column: 31
        },
        end: {
          line: 396,
          column: 56
        }
      },
      "183": {
        start: {
          line: 397,
          column: 29
        },
        end: {
          line: 397,
          column: 52
        }
      },
      "184": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "185": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 75
        }
      },
      "186": {
        start: {
          line: 400,
          column: 48
        },
        end: {
          line: 400,
          column: 73
        }
      },
      "187": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 405,
          column: 17
        }
      },
      "188": {
        start: {
          line: 403,
          column: 38
        },
        end: {
          line: 403,
          column: 58
        }
      },
      "189": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 404,
          column: 84
        }
      },
      "190": {
        start: {
          line: 404,
          column: 48
        },
        end: {
          line: 404,
          column: 82
        }
      },
      "191": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 51
        }
      },
      "192": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 410,
          column: 17
        }
      },
      "193": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 108
        }
      },
      "194": {
        start: {
          line: 411,
          column: 31
        },
        end: {
          line: 411,
          column: 82
        }
      },
      "195": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 425,
          column: 19
        }
      },
      "196": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 82
        }
      },
      "197": {
        start: {
          line: 414,
          column: 20
        },
        end: {
          line: 414,
          column: 98
        }
      },
      "198": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 416,
          column: 75
        }
      },
      "199": {
        start: {
          line: 416,
          column: 24
        },
        end: {
          line: 416,
          column: 75
        }
      },
      "200": {
        start: {
          line: 417,
          column: 20
        },
        end: {
          line: 418,
          column: 77
        }
      },
      "201": {
        start: {
          line: 418,
          column: 24
        },
        end: {
          line: 418,
          column: 77
        }
      },
      "202": {
        start: {
          line: 419,
          column: 20
        },
        end: {
          line: 420,
          column: 67
        }
      },
      "203": {
        start: {
          line: 420,
          column: 24
        },
        end: {
          line: 420,
          column: 67
        }
      },
      "204": {
        start: {
          line: 421,
          column: 20
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "205": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 81
        }
      },
      "206": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 424,
          column: 37
        }
      },
      "207": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 32
        }
      },
      "208": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 431,
          column: 17
        }
      },
      "209": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 32
        }
      },
      "210": {
        start: {
          line: 432,
          column: 16
        },
        end: {
          line: 432,
          column: 127
        }
      },
      "211": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 460,
          column: 7
        }
      },
      "212": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "213": {
        start: {
          line: 443,
          column: 31
        },
        end: {
          line: 443,
          column: 56
        }
      },
      "214": {
        start: {
          line: 444,
          column: 35
        },
        end: {
          line: 444,
          column: 65
        }
      },
      "215": {
        start: {
          line: 445,
          column: 39
        },
        end: {
          line: 445,
          column: 73
        }
      },
      "216": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 446,
          column: 38
        }
      },
      "217": {
        start: {
          line: 447,
          column: 31
        },
        end: {
          line: 447,
          column: 79
        }
      },
      "218": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 66
        }
      },
      "219": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 80
        }
      },
      "220": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 113
        }
      },
      "221": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 32
        }
      },
      "222": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 456,
          column: 17
        }
      },
      "223": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 455,
          column: 32
        }
      },
      "224": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 130
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 24
          }
        },
        loc: {
          start: {
            line: 59,
            column: 38
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 59
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 37
          }
        },
        loc: {
          start: {
            line: 78,
            column: 42
          },
          end: {
            line: 78,
            column: 79
          }
        },
        line: 78
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 79,
            column: 40
          }
        },
        loc: {
          start: {
            line: 79,
            column: 45
          },
          end: {
            line: 79,
            column: 85
          }
        },
        line: 79
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 33
          }
        },
        loc: {
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 84
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 82,
            column: 36
          },
          end: {
            line: 82,
            column: 37
          }
        },
        loc: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 82
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 28
          }
        },
        loc: {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 28
          }
        },
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 111
      },
      "7": {
        name: "createEventStreamingTools",
        decl: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 130,
            column: 41
          }
        },
        loc: {
          start: {
            line: 130,
            column: 61
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 130
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 136,
            column: 17
          },
          end: {
            line: 136,
            column: 18
          }
        },
        loc: {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 136
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 171,
            column: 18
          }
        },
        loc: {
          start: {
            line: 171,
            column: 33
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 171
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 195,
            column: 17
          },
          end: {
            line: 195,
            column: 18
          }
        },
        loc: {
          start: {
            line: 195,
            column: 29
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 195
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 203,
            column: 38
          },
          end: {
            line: 203,
            column: 39
          }
        },
        loc: {
          start: {
            line: 203,
            column: 54
          },
          end: {
            line: 205,
            column: 17
          }
        },
        line: 203
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 221,
            column: 17
          },
          end: {
            line: 221,
            column: 18
          }
        },
        loc: {
          start: {
            line: 221,
            column: 33
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 221
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 260,
            column: 17
          },
          end: {
            line: 260,
            column: 18
          }
        },
        loc: {
          start: {
            line: 260,
            column: 33
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 260
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 304,
            column: 17
          },
          end: {
            line: 304,
            column: 18
          }
        },
        loc: {
          start: {
            line: 304,
            column: 29
          },
          end: {
            line: 334,
            column: 9
          }
        },
        line: 304
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 321,
            column: 59
          },
          end: {
            line: 321,
            column: 60
          }
        },
        loc: {
          start: {
            line: 321,
            column: 80
          },
          end: {
            line: 324,
            column: 21
          }
        },
        line: 321
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 341,
            column: 17
          },
          end: {
            line: 341,
            column: 18
          }
        },
        loc: {
          start: {
            line: 341,
            column: 33
          },
          end: {
            line: 387,
            column: 9
          }
        },
        line: 341
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 394,
            column: 17
          },
          end: {
            line: 394,
            column: 18
          }
        },
        loc: {
          start: {
            line: 394,
            column: 33
          },
          end: {
            line: 434,
            column: 9
          }
        },
        line: 394
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 400,
            column: 43
          },
          end: {
            line: 400,
            column: 44
          }
        },
        loc: {
          start: {
            line: 400,
            column: 48
          },
          end: {
            line: 400,
            column: 73
          }
        },
        line: 400
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 404,
            column: 43
          },
          end: {
            line: 404,
            column: 44
          }
        },
        loc: {
          start: {
            line: 404,
            column: 48
          },
          end: {
            line: 404,
            column: 82
          }
        },
        line: 404
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 412,
            column: 31
          },
          end: {
            line: 412,
            column: 32
          }
        },
        loc: {
          start: {
            line: 412,
            column: 49
          },
          end: {
            line: 425,
            column: 17
          }
        },
        line: 412
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 441,
            column: 17
          },
          end: {
            line: 441,
            column: 18
          }
        },
        loc: {
          start: {
            line: 441,
            column: 29
          },
          end: {
            line: 459,
            column: 9
          }
        },
        line: 441
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 38
          }
        }, {
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 66,
            column: 66
          }
        }, {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 66,
            column: 93
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 36
          }
        }, {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 63
          }
        }, {
          start: {
            line: 67,
            column: 67
          },
          end: {
            line: 67,
            column: 69
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 91,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 91,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 34
          }
        }, {
          start: {
            line: 94,
            column: 38
          },
          end: {
            line: 94,
            column: 44
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 36
          }
        }, {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 95,
            column: 42
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 27
          },
          end: {
            line: 114,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 40
          },
          end: {
            line: 114,
            column: 50
          }
        }, {
          start: {
            line: 114,
            column: 53
          },
          end: {
            line: 114,
            column: 65
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "11": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "12": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 19
          }
        }, {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 124,
            column: 58
          }
        }],
        line: 124
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 162,
            column: 70
          },
          end: {
            line: 162,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 95
          },
          end: {
            line: 162,
            column: 108
          }
        }, {
          start: {
            line: 162,
            column: 111
          },
          end: {
            line: 162,
            column: 126
          }
        }],
        line: 162
      },
      "18": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: 178,
            column: 21
          },
          end: {
            line: 180,
            column: 17
          }
        }],
        line: 175
      },
      "19": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "20": {
        loc: {
          start: {
            line: 186,
            column: 62
          },
          end: {
            line: 186,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 87
          },
          end: {
            line: 186,
            column: 100
          }
        }, {
          start: {
            line: 186,
            column: 103
          },
          end: {
            line: 186,
            column: 118
          }
        }],
        line: 186
      },
      "21": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "22": {
        loc: {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "23": {
        loc: {
          start: {
            line: 212,
            column: 69
          },
          end: {
            line: 212,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 94
          },
          end: {
            line: 212,
            column: 107
          }
        }, {
          start: {
            line: 212,
            column: 110
          },
          end: {
            line: 212,
            column: 125
          }
        }],
        line: 212
      },
      "24": {
        loc: {
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 235,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 235,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 237,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 237,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 239,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 239,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "27": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 243,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 243,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "28": {
        loc: {
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 250,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 250,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "29": {
        loc: {
          start: {
            line: 251,
            column: 61
          },
          end: {
            line: 251,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 86
          },
          end: {
            line: 251,
            column: 99
          }
        }, {
          start: {
            line: 251,
            column: 102
          },
          end: {
            line: 251,
            column: 117
          }
        }],
        line: 251
      },
      "30": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 278,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 278,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "31": {
        loc: {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 280,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 280,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "32": {
        loc: {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 282,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 282,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "33": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 284,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 284,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "34": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 287,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 287,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "35": {
        loc: {
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "36": {
        loc: {
          start: {
            line: 295,
            column: 72
          },
          end: {
            line: 295,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 295,
            column: 97
          },
          end: {
            line: 295,
            column: 110
          }
        }, {
          start: {
            line: 295,
            column: 113
          },
          end: {
            line: 295,
            column: 128
          }
        }],
        line: 295
      },
      "37": {
        loc: {
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 325,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 325,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "38": {
        loc: {
          start: {
            line: 322,
            column: 40
          },
          end: {
            line: 322,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 63
          },
          end: {
            line: 322,
            column: 112
          }
        }, {
          start: {
            line: 322,
            column: 115
          },
          end: {
            line: 322,
            column: 117
          }
        }],
        line: 322
      },
      "39": {
        loc: {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 331,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 331,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "40": {
        loc: {
          start: {
            line: 332,
            column: 70
          },
          end: {
            line: 332,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 95
          },
          end: {
            line: 332,
            column: 108
          }
        }, {
          start: {
            line: 332,
            column: 111
          },
          end: {
            line: 332,
            column: 126
          }
        }],
        line: 332
      },
      "41": {
        loc: {
          start: {
            line: 347,
            column: 29
          },
          end: {
            line: 347,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 29
          },
          end: {
            line: 347,
            column: 41
          }
        }, {
          start: {
            line: 347,
            column: 45
          },
          end: {
            line: 347,
            column: 47
          }
        }],
        line: 347
      },
      "42": {
        loc: {
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 35
          }
        }, {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 348,
            column: 41
          }
        }],
        line: 348
      },
      "43": {
        loc: {
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 360,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 360,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "44": {
        loc: {
          start: {
            line: 365,
            column: 44
          },
          end: {
            line: 365,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 365,
            column: 68
          }
        }, {
          start: {
            line: 365,
            column: 71
          },
          end: {
            line: 365,
            column: 77
          }
        }],
        line: 365
      },
      "45": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 378,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 378,
            column: 17
          }
        }, {
          start: {
            line: 375,
            column: 21
          },
          end: {
            line: 378,
            column: 17
          }
        }],
        line: 367
      },
      "46": {
        loc: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 384,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 384,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "47": {
        loc: {
          start: {
            line: 385,
            column: 63
          },
          end: {
            line: 385,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 88
          },
          end: {
            line: 385,
            column: 101
          }
        }, {
          start: {
            line: 385,
            column: 104
          },
          end: {
            line: 385,
            column: 119
          }
        }],
        line: 385
      },
      "48": {
        loc: {
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 401,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 401,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "49": {
        loc: {
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 405,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 405,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "50": {
        loc: {
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "51": {
        loc: {
          start: {
            line: 415,
            column: 20
          },
          end: {
            line: 416,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 20
          },
          end: {
            line: 416,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "52": {
        loc: {
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 418,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 418,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "53": {
        loc: {
          start: {
            line: 419,
            column: 20
          },
          end: {
            line: 420,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 20
          },
          end: {
            line: 420,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "54": {
        loc: {
          start: {
            line: 421,
            column: 20
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 20
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "55": {
        loc: {
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "56": {
        loc: {
          start: {
            line: 432,
            column: 67
          },
          end: {
            line: 432,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 432,
            column: 92
          },
          end: {
            line: 432,
            column: 105
          }
        }, {
          start: {
            line: 432,
            column: 108
          },
          end: {
            line: 432,
            column: 123
          }
        }],
        line: 432
      },
      "57": {
        loc: {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 456,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 456,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "58": {
        loc: {
          start: {
            line: 457,
            column: 70
          },
          end: {
            line: 457,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 457,
            column: 95
          },
          end: {
            line: 457,
            column: 108
          }
        }, {
          start: {
            line: 457,
            column: 111
          },
          end: {
            line: 457,
            column: 126
          }
        }],
        line: 457
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { EventClient, EventStreamConfig, WebhookConfig } from '../client/eventClient.js';\n\n// Zod schemas for validation\nconst EventSubscriptionSchema = z.object({\n  eventTypes: z.array(z.string()).min(1, 'At least one event type is required'),\n  filters: z.record(z.unknown()).optional(),\n  webhookUrl: z.string().url().optional(),\n  webhookMethod: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),\n  webhookHeaders: z.record(z.string()).optional(),\n  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),\n  authToken: z.string().optional(),\n  authUsername: z.string().optional(),\n  authPassword: z.string().optional(),\n  apiKeyHeader: z.string().optional(),\n  apiKeyValue: z.string().optional(),\n});\n\nconst UnsubscribeSchema = z.object({\n  subscriptionId: z.string().min(1, 'Subscription ID is required'),\n});\n\nconst EmitEventSchema = z.object({\n  eventType: z.string().min(1, 'Event type is required'),\n  workflowId: z.string().optional(),\n  executionId: z.string().optional(),\n  nodeId: z.string().optional(),\n  data: z.record(z.unknown()).default({}),\n  metadata: z.record(z.unknown()).optional(),\n});\n\nconst TrackAnalyticsSchema = z.object({\n  type: z.enum(['workflow_execution', 'user_action', 'system_event', 'performance_metric']),\n  category: z.string().min(1, 'Category is required'),\n  action: z.string().min(1, 'Action is required'),\n  label: z.string().optional(),\n  value: z.number().optional(),\n  dimensions: z.record(z.string()).optional(),\n  sessionId: z.string().optional(),\n  userId: z.string().optional(),\n});\n\nconst WebhookTestSchema = z.object({\n  url: z.string().url('Valid URL is required'),\n  method: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),\n  headers: z.record(z.string()).optional(),\n  body: z.record(z.unknown()).optional(),\n  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),\n  authToken: z.string().optional(),\n  authUsername: z.string().optional(),\n  authPassword: z.string().optional(),\n  apiKeyHeader: z.string().optional(),\n  apiKeyValue: z.string().optional(),\n});\n\nconst EventBufferSchema = z.object({\n  limit: z.number().min(1).max(1000).default(100),\n  eventType: z.string().optional(),\n  since: z.string().optional(), // ISO timestamp\n});\n\n// Global event client instance\nlet eventClient: EventClient | null = null;\n\n// Initialize event client\nconst getEventClient = (getClient: () => N8nClient | null): EventClient => {\n  if (!eventClient) {\n    const client = getClient();\n    if (!client) {\n      throw new UserError('N8n client not available');\n    }\n\n    // Extract configuration from client\n    const baseUrl = (client as any).baseUrl || process.env.N8N_BASE_URL || 'http://localhost:5678';\n    const apiKey = (client as any).apiKey || process.env.N8N_API_KEY || '';\n\n    const config: EventStreamConfig = {\n      baseUrl,\n      apiKey,\n      reconnectInterval: 5000,\n      maxReconnectAttempts: 10,\n      enableHeartbeat: true,\n      heartbeatInterval: 30000,\n    };\n\n    eventClient = new EventClient(client, config);\n\n    // Set up event listeners for debugging\n    eventClient.on('connected', () => console.log('Event client connected'));\n    eventClient.on('disconnected', () => console.log('Event client disconnected'));\n    eventClient.on('error', error => console.error('Event client error:', error));\n\n    // Auto-connect\n    eventClient.connect().catch(error => {\n      console.error('Failed to connect event client:', error);\n    });\n  }\n  return eventClient;\n};\n\n// Helper functions\nconst buildWebhookConfig = (args: any): WebhookConfig | undefined => {\n  if (!args.webhookUrl) return undefined;\n\n  const webhook: WebhookConfig = {\n    url: args.webhookUrl,\n    method: args.webhookMethod || 'POST',\n    headers: args.webhookHeaders || {},\n    body: {},\n  };\n\n  // Add authentication if provided\n  if (args.authType) {\n    webhook.authentication = {\n      type: args.authType,\n      token: args.authToken,\n      username: args.authUsername,\n      password: args.authPassword,\n      apiKeyHeader: args.apiKeyHeader,\n      apiKeyValue: args.apiKeyValue,\n    };\n  }\n\n  return webhook;\n};\n\nconst formatSubscription = (sub: any): string => {\n  let result = `**${sub.id}**\\n`;\n  result += `\u2022 Event Types: ${sub.eventTypes.join(', ')}\\n`;\n  result += `\u2022 Status: ${sub.active ? '\u2705 Active' : '\u274C Inactive'}\\n`;\n  result += `\u2022 Created: ${new Date(sub.createdAt).toLocaleString()}\\n`;\n  result += `\u2022 Success Count: ${sub.successCount}\\n`;\n  result += `\u2022 Error Count: ${sub.errorCount}\\n`;\n\n  if (sub.lastTriggered) {\n    result += `\u2022 Last Triggered: ${new Date(sub.lastTriggered).toLocaleString()}\\n`;\n  }\n\n  if (sub.webhook) {\n    result += `\u2022 Webhook: ${sub.webhook.method} ${sub.webhook.url}\\n`;\n  }\n\n  if (sub.filters && Object.keys(sub.filters).length > 0) {\n    result += `\u2022 Filters: ${JSON.stringify(sub.filters, null, 2)}\\n`;\n  }\n\n  return result;\n};\n\n// Tool registration function\nexport function createEventStreamingTools(getClient: () => N8nClient | null, server: any) {\n  // Subscribe to events tool\n  server.addTool({\n    name: 'subscribe-to-events',\n    description: 'Subscribe to specific event types with optional webhook notifications',\n    parameters: EventSubscriptionSchema,\n    handler: async (args: z.infer<typeof EventSubscriptionSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n\n        // Build webhook configuration if provided\n        const webhook = buildWebhookConfig(args);\n\n        // Create subscription\n        const subscriptionId = client.subscribe(args.eventTypes, webhook, args.filters);\n\n        let response = `\u2705 **Event subscription created successfully!**\\n\\n`;\n        response += `**Subscription ID:** ${subscriptionId}\\n`;\n        response += `**Event Types:** ${args.eventTypes.join(', ')}\\n`;\n\n        if (webhook) {\n          response += `**Webhook:** ${webhook.method} ${webhook.url}\\n`;\n        }\n\n        if (args.filters) {\n          response += `**Filters:** ${JSON.stringify(args.filters, null, 2)}\\n`;\n        }\n\n        response += `\\nYou can now receive real-time events matching your subscription criteria.`;\n\n        if (webhook) {\n          response += ` Events will be sent to your webhook URL when they occur.`;\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to subscribe to events: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Unsubscribe from events tool\n  server.addTool({\n    name: 'unsubscribe-from-events',\n    description: 'Unsubscribe from event notifications',\n    parameters: UnsubscribeSchema,\n    handler: async (args: z.infer<typeof UnsubscribeSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n\n        const success = client.unsubscribe(args.subscriptionId);\n\n        if (success) {\n          return `\u2705 **Successfully unsubscribed from events**\\n\\nSubscription ID \\`${args.subscriptionId}\\` has been removed.`;\n        } else {\n          return `\u274C **Subscription not found**\\n\\nNo active subscription found with ID \\`${args.subscriptionId}\\`.`;\n        }\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to unsubscribe: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // List active subscriptions tool\n  server.addTool({\n    name: 'list-event-subscriptions',\n    description: 'List all active event subscriptions',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n        const subscriptions = client.getSubscriptions();\n\n        if (subscriptions.length === 0) {\n          return `\uD83D\uDCED **No active subscriptions**\\n\\nUse the \\`subscribe-to-events\\` tool to create event subscriptions.`;\n        }\n\n        let response = `\uD83D\uDCCA **Active Event Subscriptions (${subscriptions.length})**\\n\\n`;\n\n        subscriptions.forEach((sub, index) => {\n          response += `${index + 1}. ${formatSubscription(sub)}\\n`;\n        });\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to list subscriptions: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Emit custom event tool\n  server.addTool({\n    name: 'emit-custom-event',\n    description: 'Emit a custom event into the event stream',\n    parameters: EmitEventSchema,\n    handler: async (args: z.infer<typeof EmitEventSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n\n        client.emitEvent({\n          type: args.eventType,\n          workflowId: args.workflowId,\n          executionId: args.executionId,\n          nodeId: args.nodeId,\n          data: args.data,\n          metadata: args.metadata,\n        });\n\n        let response = `\uD83D\uDE80 **Custom event emitted successfully!**\\n\\n`;\n        response += `**Event Type:** ${args.eventType}\\n`;\n\n        if (args.workflowId) response += `**Workflow ID:** ${args.workflowId}\\n`;\n        if (args.executionId) response += `**Execution ID:** ${args.executionId}\\n`;\n        if (args.nodeId) response += `**Node ID:** ${args.nodeId}\\n`;\n\n        response += `**Data:** ${JSON.stringify(args.data, null, 2)}\\n`;\n\n        if (args.metadata) {\n          response += `**Metadata:** ${JSON.stringify(args.metadata, null, 2)}\\n`;\n        }\n\n        response += `\\nThe event has been added to the stream and will trigger any matching subscriptions.`;\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to emit event: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Track analytics event tool\n  server.addTool({\n    name: 'track-analytics-event',\n    description: 'Track an analytics event for usage insights and reporting',\n    parameters: TrackAnalyticsSchema,\n    handler: async (args: z.infer<typeof TrackAnalyticsSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n\n        client.trackEvent({\n          type: args.type,\n          category: args.category,\n          action: args.action,\n          label: args.label,\n          value: args.value,\n          dimensions: args.dimensions,\n          sessionId: args.sessionId,\n          userId: args.userId,\n        });\n\n        let response = `\uD83D\uDCC8 **Analytics event tracked successfully!**\\n\\n`;\n        response += `**Type:** ${args.type}\\n`;\n        response += `**Category:** ${args.category}\\n`;\n        response += `**Action:** ${args.action}\\n`;\n\n        if (args.label) response += `**Label:** ${args.label}\\n`;\n        if (args.value !== undefined) response += `**Value:** ${args.value}\\n`;\n        if (args.sessionId) response += `**Session ID:** ${args.sessionId}\\n`;\n        if (args.userId) response += `**User ID:** ${args.userId}\\n`;\n\n        if (args.dimensions) {\n          response += `**Dimensions:** ${JSON.stringify(args.dimensions, null, 2)}\\n`;\n        }\n\n        response += `\\nThe analytics event has been recorded and will be available in reporting dashboards.`;\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to track analytics event: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Get real-time stats tool\n  server.addTool({\n    name: 'get-realtime-stats',\n    description: 'Get current real-time system statistics and metrics',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n        const stats = await client.getRealtimeStats();\n\n        let response = `\uD83D\uDCCA **Real-time System Statistics**\\n\\n`;\n        response += `**Active Executions:** ${stats.activeExecutions}\\n`;\n        response += `**Total Executions Today:** ${stats.totalExecutionsToday}\\n`;\n        response += `**Success Rate:** ${stats.successRate.toFixed(1)}%\\n`;\n        response += `**Error Rate:** ${stats.errorRate.toFixed(1)}%\\n`;\n        response += `**Average Execution Time:** ${(stats.averageExecutionTime / 1000).toFixed(2)}s\\n`;\n        response += `**Active Users:** ${stats.activeUsers}\\n`;\n\n        response += `\\n**\uD83D\uDCBB System Load:**\\n`;\n        response += `\u2022 CPU: ${stats.systemLoad.cpu.toFixed(1)}%\\n`;\n        response += `\u2022 Memory: ${stats.systemLoad.memory.toFixed(1)}%\\n`;\n        response += `\u2022 Disk: ${stats.systemLoad.disk.toFixed(1)}%\\n`;\n\n        if (stats.topWorkflows.length > 0) {\n          response += `\\n**\uD83D\uDD25 Top Workflows:**\\n`;\n          stats.topWorkflows.slice(0, 5).forEach((workflow, index) => {\n            const avgTime =\n              workflow.avgTime > 0 ? ` (${(workflow.avgTime / 1000).toFixed(2)}s avg)` : '';\n            response += `${index + 1}. **${workflow.name}**: ${workflow.executions} executions${avgTime}\\n`;\n          });\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to get real-time stats: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Test webhook tool\n  server.addTool({\n    name: 'test-webhook',\n    description: 'Test webhook configuration by sending a test payload',\n    parameters: WebhookTestSchema,\n    handler: async (args: z.infer<typeof WebhookTestSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n\n        const webhook: WebhookConfig = {\n          url: args.url,\n          method: args.method,\n          headers: args.headers || {},\n          body: args.body || {},\n        };\n\n        // Add authentication if provided\n        if (args.authType) {\n          webhook.authentication = {\n            type: args.authType,\n            token: args.authToken,\n            username: args.authUsername,\n            password: args.authPassword,\n            apiKeyHeader: args.apiKeyHeader,\n            apiKeyValue: args.apiKeyValue,\n          };\n        }\n\n        const result = await client.testWebhook(webhook);\n\n        let response = `\uD83D\uDD17 **Webhook Test Results**\\n\\n`;\n        response += `**URL:** ${args.url}\\n`;\n        response += `**Method:** ${args.method}\\n`;\n        response += `**Success:** ${result.success ? '\u2705 Yes' : '\u274C No'}\\n`;\n        response += `**Response Time:** ${result.responseTime}ms\\n`;\n\n        if (result.error) {\n          response += `**Error:** ${result.error}\\n`;\n          response += `\\n\uD83D\uDCA1 **Troubleshooting Tips:**\\n`;\n          response += `\u2022 Verify the webhook URL is accessible\\n`;\n          response += `\u2022 Check authentication credentials if required\\n`;\n          response += `\u2022 Ensure the endpoint accepts the HTTP method used\\n`;\n          response += `\u2022 Verify any required headers are included\\n`;\n        } else {\n          response += `\\n\u2705 **Webhook is working correctly!**\\n`;\n          response += `The endpoint responded successfully and can receive event notifications.`;\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to test webhook: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Get event buffer tool\n  server.addTool({\n    name: 'get-event-buffer',\n    description: 'Get recent events from the event buffer with optional filtering',\n    parameters: EventBufferSchema,\n    handler: async (args: z.infer<typeof EventBufferSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        let events = client.getEventBuffer();\n\n        // Apply filters\n        if (args.eventType) {\n          events = events.filter(e => e.type === args.eventType);\n        }\n\n        if (args.since) {\n          const sinceDate = new Date(args.since);\n          events = events.filter(e => new Date(e.timestamp) >= sinceDate);\n        }\n\n        // Limit results\n        events = events.slice(-args.limit);\n\n        if (events.length === 0) {\n          return `\uD83D\uDCED **No events found**\\n\\nNo events match your criteria in the current buffer.`;\n        }\n\n        let response = `\uD83D\uDCCB **Event Buffer (${events.length} events)**\\n\\n`;\n\n        events.forEach((event, index) => {\n          response += `${index + 1}. **${event.type}** (${event.id})\\n`;\n          response += `   \u2022 Timestamp: ${new Date(event.timestamp).toLocaleString()}\\n`;\n\n          if (event.workflowId) response += `   \u2022 Workflow: ${event.workflowId}\\n`;\n          if (event.executionId) response += `   \u2022 Execution: ${event.executionId}\\n`;\n          if (event.nodeId) response += `   \u2022 Node: ${event.nodeId}\\n`;\n\n          if (Object.keys(event.data).length > 0) {\n            response += `   \u2022 Data: ${JSON.stringify(event.data)}\\n`;\n          }\n\n          response += `\\n`;\n        });\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to get event buffer: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n\n  // Clear event buffers tool\n  server.addTool({\n    name: 'clear-event-buffers',\n    description: 'Clear all buffered events and analytics data',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n\n        const eventCount = client.getEventBuffer().length;\n        const analyticsCount = client.getAnalyticsBuffer().length;\n\n        client.clearBuffers();\n\n        let response = `\uD83E\uDDF9 **Event buffers cleared successfully!**\\n\\n`;\n        response += `**Events cleared:** ${eventCount}\\n`;\n        response += `**Analytics events cleared:** ${analyticsCount}\\n`;\n        response += `\\nAll buffered data has been removed. New events will start accumulating from now.`;\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(\n          `Failed to clear event buffers: ${error instanceof Error ? error.message : 'Unknown error'}`\n        );\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0bf169507d76ecd591da17b6d2fbfdfd2e0d4e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2aeycc88c9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2aeycc88c9();
import { z } from 'zod';
import { UserError } from 'fastmcp';
import { EventClient } from '../client/eventClient.js';
// Zod schemas for validation
const EventSubscriptionSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[0]++, z.object({
  eventTypes: z.array(z.string()).min(1, 'At least one event type is required'),
  filters: z.record(z.unknown()).optional(),
  webhookUrl: z.string().url().optional(),
  webhookMethod: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),
  webhookHeaders: z.record(z.string()).optional(),
  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),
  authToken: z.string().optional(),
  authUsername: z.string().optional(),
  authPassword: z.string().optional(),
  apiKeyHeader: z.string().optional(),
  apiKeyValue: z.string().optional()
}));
const UnsubscribeSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[1]++, z.object({
  subscriptionId: z.string().min(1, 'Subscription ID is required')
}));
const EmitEventSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[2]++, z.object({
  eventType: z.string().min(1, 'Event type is required'),
  workflowId: z.string().optional(),
  executionId: z.string().optional(),
  nodeId: z.string().optional(),
  data: z.record(z.unknown()).default({}),
  metadata: z.record(z.unknown()).optional()
}));
const TrackAnalyticsSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[3]++, z.object({
  type: z.enum(['workflow_execution', 'user_action', 'system_event', 'performance_metric']),
  category: z.string().min(1, 'Category is required'),
  action: z.string().min(1, 'Action is required'),
  label: z.string().optional(),
  value: z.number().optional(),
  dimensions: z.record(z.string()).optional(),
  sessionId: z.string().optional(),
  userId: z.string().optional()
}));
const WebhookTestSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[4]++, z.object({
  url: z.string().url('Valid URL is required'),
  method: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),
  headers: z.record(z.string()).optional(),
  body: z.record(z.unknown()).optional(),
  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),
  authToken: z.string().optional(),
  authUsername: z.string().optional(),
  authPassword: z.string().optional(),
  apiKeyHeader: z.string().optional(),
  apiKeyValue: z.string().optional()
}));
const EventBufferSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[5]++, z.object({
  limit: z.number().min(1).max(1000).default(100),
  eventType: z.string().optional(),
  since: z.string().optional() // ISO timestamp
}));
// Global event client instance
let eventClient =
/* istanbul ignore next */
(cov_2aeycc88c9().s[6]++, null);
// Initialize event client
/* istanbul ignore next */
cov_2aeycc88c9().s[7]++;
const getEventClient = getClient => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[0]++;
  cov_2aeycc88c9().s[8]++;
  if (!eventClient) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[0][0]++;
    const client =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[9]++, getClient());
    /* istanbul ignore next */
    cov_2aeycc88c9().s[10]++;
    if (!client) {
      /* istanbul ignore next */
      cov_2aeycc88c9().b[1][0]++;
      cov_2aeycc88c9().s[11]++;
      throw new UserError('N8n client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2aeycc88c9().b[1][1]++;
    }
    // Extract configuration from client
    const baseUrl =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[12]++,
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][0]++, client.baseUrl) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][1]++, process.env.N8N_BASE_URL) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][2]++, 'http://localhost:5678'));
    const apiKey =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[13]++,
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][0]++, client.apiKey) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][1]++, process.env.N8N_API_KEY) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][2]++, ''));
    const config =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[14]++, {
      baseUrl,
      apiKey,
      reconnectInterval: 5000,
      maxReconnectAttempts: 10,
      enableHeartbeat: true,
      heartbeatInterval: 30000
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[15]++;
    eventClient = new EventClient(client, config);
    // Set up event listeners for debugging
    /* istanbul ignore next */
    cov_2aeycc88c9().s[16]++;
    eventClient.on('connected', () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[1]++;
      cov_2aeycc88c9().s[17]++;
      return console.log('Event client connected');
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[18]++;
    eventClient.on('disconnected', () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[2]++;
      cov_2aeycc88c9().s[19]++;
      return console.log('Event client disconnected');
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[20]++;
    eventClient.on('error', error => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[3]++;
      cov_2aeycc88c9().s[21]++;
      return console.error('Event client error:', error);
    });
    // Auto-connect
    /* istanbul ignore next */
    cov_2aeycc88c9().s[22]++;
    eventClient.connect().catch(error => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[4]++;
      cov_2aeycc88c9().s[23]++;
      console.error('Failed to connect event client:', error);
    });
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[0][1]++;
  }
  cov_2aeycc88c9().s[24]++;
  return eventClient;
};
// Helper functions
/* istanbul ignore next */
cov_2aeycc88c9().s[25]++;
const buildWebhookConfig = args => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[5]++;
  cov_2aeycc88c9().s[26]++;
  if (!args.webhookUrl) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[4][0]++;
    cov_2aeycc88c9().s[27]++;
    return undefined;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[4][1]++;
  }
  const webhook =
  /* istanbul ignore next */
  (cov_2aeycc88c9().s[28]++, {
    url: args.webhookUrl,
    method:
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[5][0]++, args.webhookMethod) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[5][1]++, 'POST'),
    headers:
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[6][0]++, args.webhookHeaders) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[6][1]++, {}),
    body: {}
  });
  // Add authentication if provided
  /* istanbul ignore next */
  cov_2aeycc88c9().s[29]++;
  if (args.authType) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[7][0]++;
    cov_2aeycc88c9().s[30]++;
    webhook.authentication = {
      type: args.authType,
      token: args.authToken,
      username: args.authUsername,
      password: args.authPassword,
      apiKeyHeader: args.apiKeyHeader,
      apiKeyValue: args.apiKeyValue
    };
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[7][1]++;
  }
  cov_2aeycc88c9().s[31]++;
  return webhook;
};
/* istanbul ignore next */
cov_2aeycc88c9().s[32]++;
const formatSubscription = sub => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[6]++;
  let result =
  /* istanbul ignore next */
  (cov_2aeycc88c9().s[33]++, `**${sub.id}**\n`);
  /* istanbul ignore next */
  cov_2aeycc88c9().s[34]++;
  result += `• Event Types: ${sub.eventTypes.join(', ')}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[35]++;
  result += `• Status: ${sub.active ?
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[8][0]++, '✅ Active') :
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[8][1]++, '❌ Inactive')}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[36]++;
  result += `• Created: ${new Date(sub.createdAt).toLocaleString()}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[37]++;
  result += `• Success Count: ${sub.successCount}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[38]++;
  result += `• Error Count: ${sub.errorCount}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[39]++;
  if (sub.lastTriggered) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[9][0]++;
    cov_2aeycc88c9().s[40]++;
    result += `• Last Triggered: ${new Date(sub.lastTriggered).toLocaleString()}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[9][1]++;
  }
  cov_2aeycc88c9().s[41]++;
  if (sub.webhook) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[10][0]++;
    cov_2aeycc88c9().s[42]++;
    result += `• Webhook: ${sub.webhook.method} ${sub.webhook.url}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[10][1]++;
  }
  cov_2aeycc88c9().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[12][0]++, sub.filters) &&
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[12][1]++, Object.keys(sub.filters).length > 0)) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[11][0]++;
    cov_2aeycc88c9().s[44]++;
    result += `• Filters: ${JSON.stringify(sub.filters, null, 2)}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[11][1]++;
  }
  cov_2aeycc88c9().s[45]++;
  return result;
};
// Tool registration function
export function createEventStreamingTools(getClient, server) {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[7]++;
  cov_2aeycc88c9().s[46]++;
  // Subscribe to events tool
  server.addTool({
    name: 'subscribe-to-events',
    description: 'Subscribe to specific event types with optional webhook notifications',
    parameters: EventSubscriptionSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[8]++;
      cov_2aeycc88c9().s[47]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[48]++, getEventClient(getClient));
        // Build webhook configuration if provided
        const webhook =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[49]++, buildWebhookConfig(args));
        // Create subscription
        const subscriptionId =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[50]++, client.subscribe(args.eventTypes, webhook, args.filters));
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[51]++, `✅ **Event subscription created successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[52]++;
        response += `**Subscription ID:** ${subscriptionId}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[53]++;
        response += `**Event Types:** ${args.eventTypes.join(', ')}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[54]++;
        if (webhook) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[13][0]++;
          cov_2aeycc88c9().s[55]++;
          response += `**Webhook:** ${webhook.method} ${webhook.url}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[13][1]++;
        }
        cov_2aeycc88c9().s[56]++;
        if (args.filters) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[14][0]++;
          cov_2aeycc88c9().s[57]++;
          response += `**Filters:** ${JSON.stringify(args.filters, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[14][1]++;
        }
        cov_2aeycc88c9().s[58]++;
        response += `\nYou can now receive real-time events matching your subscription criteria.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[59]++;
        if (webhook) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[15][0]++;
          cov_2aeycc88c9().s[60]++;
          response += ` Events will be sent to your webhook URL when they occur.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[15][1]++;
        }
        cov_2aeycc88c9().s[61]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[62]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[16][0]++;
          cov_2aeycc88c9().s[63]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[16][1]++;
        }
        cov_2aeycc88c9().s[64]++;
        throw new UserError(`Failed to subscribe to events: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[17][1]++, 'Unknown error')}`);
      }
    }
  });
  // Unsubscribe from events tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[65]++;
  server.addTool({
    name: 'unsubscribe-from-events',
    description: 'Unsubscribe from event notifications',
    parameters: UnsubscribeSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[9]++;
      cov_2aeycc88c9().s[66]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[67]++, getEventClient(getClient));
        const success =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[68]++, client.unsubscribe(args.subscriptionId));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[69]++;
        if (success) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[18][0]++;
          cov_2aeycc88c9().s[70]++;
          return `✅ **Successfully unsubscribed from events**\n\nSubscription ID \`${args.subscriptionId}\` has been removed.`;
        } else {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[18][1]++;
          cov_2aeycc88c9().s[71]++;
          return `❌ **Subscription not found**\n\nNo active subscription found with ID \`${args.subscriptionId}\`.`;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[72]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[19][0]++;
          cov_2aeycc88c9().s[73]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[19][1]++;
        }
        cov_2aeycc88c9().s[74]++;
        throw new UserError(`Failed to unsubscribe: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[20][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[20][1]++, 'Unknown error')}`);
      }
    }
  });
  // List active subscriptions tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[75]++;
  server.addTool({
    name: 'list-event-subscriptions',
    description: 'List all active event subscriptions',
    parameters: z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[10]++;
      cov_2aeycc88c9().s[76]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[77]++, getEventClient(getClient));
        const subscriptions =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[78]++, client.getSubscriptions());
        /* istanbul ignore next */
        cov_2aeycc88c9().s[79]++;
        if (subscriptions.length === 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[21][0]++;
          cov_2aeycc88c9().s[80]++;
          return `📭 **No active subscriptions**\n\nUse the \`subscribe-to-events\` tool to create event subscriptions.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[21][1]++;
        }
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[81]++, `📊 **Active Event Subscriptions (${subscriptions.length})**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[82]++;
        subscriptions.forEach((sub, index) => {
          /* istanbul ignore next */
          cov_2aeycc88c9().f[11]++;
          cov_2aeycc88c9().s[83]++;
          response += `${index + 1}. ${formatSubscription(sub)}\n`;
        });
        /* istanbul ignore next */
        cov_2aeycc88c9().s[84]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[85]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[22][0]++;
          cov_2aeycc88c9().s[86]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[22][1]++;
        }
        cov_2aeycc88c9().s[87]++;
        throw new UserError(`Failed to list subscriptions: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[23][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[23][1]++, 'Unknown error')}`);
      }
    }
  });
  // Emit custom event tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[88]++;
  server.addTool({
    name: 'emit-custom-event',
    description: 'Emit a custom event into the event stream',
    parameters: EmitEventSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[12]++;
      cov_2aeycc88c9().s[89]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[90]++, getEventClient(getClient));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[91]++;
        client.emitEvent({
          type: args.eventType,
          workflowId: args.workflowId,
          executionId: args.executionId,
          nodeId: args.nodeId,
          data: args.data,
          metadata: args.metadata
        });
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[92]++, `🚀 **Custom event emitted successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[93]++;
        response += `**Event Type:** ${args.eventType}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[94]++;
        if (args.workflowId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[24][0]++;
          cov_2aeycc88c9().s[95]++;
          response += `**Workflow ID:** ${args.workflowId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[24][1]++;
        }
        cov_2aeycc88c9().s[96]++;
        if (args.executionId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[25][0]++;
          cov_2aeycc88c9().s[97]++;
          response += `**Execution ID:** ${args.executionId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[25][1]++;
        }
        cov_2aeycc88c9().s[98]++;
        if (args.nodeId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[26][0]++;
          cov_2aeycc88c9().s[99]++;
          response += `**Node ID:** ${args.nodeId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[26][1]++;
        }
        cov_2aeycc88c9().s[100]++;
        response += `**Data:** ${JSON.stringify(args.data, null, 2)}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[101]++;
        if (args.metadata) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[27][0]++;
          cov_2aeycc88c9().s[102]++;
          response += `**Metadata:** ${JSON.stringify(args.metadata, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[27][1]++;
        }
        cov_2aeycc88c9().s[103]++;
        response += `\nThe event has been added to the stream and will trigger any matching subscriptions.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[104]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[105]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[28][0]++;
          cov_2aeycc88c9().s[106]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[28][1]++;
        }
        cov_2aeycc88c9().s[107]++;
        throw new UserError(`Failed to emit event: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[29][1]++, 'Unknown error')}`);
      }
    }
  });
  // Track analytics event tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[108]++;
  server.addTool({
    name: 'track-analytics-event',
    description: 'Track an analytics event for usage insights and reporting',
    parameters: TrackAnalyticsSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[13]++;
      cov_2aeycc88c9().s[109]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[110]++, getEventClient(getClient));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[111]++;
        client.trackEvent({
          type: args.type,
          category: args.category,
          action: args.action,
          label: args.label,
          value: args.value,
          dimensions: args.dimensions,
          sessionId: args.sessionId,
          userId: args.userId
        });
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[112]++, `📈 **Analytics event tracked successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[113]++;
        response += `**Type:** ${args.type}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[114]++;
        response += `**Category:** ${args.category}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[115]++;
        response += `**Action:** ${args.action}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[116]++;
        if (args.label) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[30][0]++;
          cov_2aeycc88c9().s[117]++;
          response += `**Label:** ${args.label}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[30][1]++;
        }
        cov_2aeycc88c9().s[118]++;
        if (args.value !== undefined) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[31][0]++;
          cov_2aeycc88c9().s[119]++;
          response += `**Value:** ${args.value}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[31][1]++;
        }
        cov_2aeycc88c9().s[120]++;
        if (args.sessionId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[32][0]++;
          cov_2aeycc88c9().s[121]++;
          response += `**Session ID:** ${args.sessionId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[32][1]++;
        }
        cov_2aeycc88c9().s[122]++;
        if (args.userId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[33][0]++;
          cov_2aeycc88c9().s[123]++;
          response += `**User ID:** ${args.userId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[33][1]++;
        }
        cov_2aeycc88c9().s[124]++;
        if (args.dimensions) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[34][0]++;
          cov_2aeycc88c9().s[125]++;
          response += `**Dimensions:** ${JSON.stringify(args.dimensions, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[34][1]++;
        }
        cov_2aeycc88c9().s[126]++;
        response += `\nThe analytics event has been recorded and will be available in reporting dashboards.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[127]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[128]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[35][0]++;
          cov_2aeycc88c9().s[129]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[35][1]++;
        }
        cov_2aeycc88c9().s[130]++;
        throw new UserError(`Failed to track analytics event: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[36][1]++, 'Unknown error')}`);
      }
    }
  });
  // Get real-time stats tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[131]++;
  server.addTool({
    name: 'get-realtime-stats',
    description: 'Get current real-time system statistics and metrics',
    parameters: z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[14]++;
      cov_2aeycc88c9().s[132]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[133]++, getEventClient(getClient));
        const stats =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[134]++, await client.getRealtimeStats());
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[135]++, `📊 **Real-time System Statistics**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[136]++;
        response += `**Active Executions:** ${stats.activeExecutions}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[137]++;
        response += `**Total Executions Today:** ${stats.totalExecutionsToday}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[138]++;
        response += `**Success Rate:** ${stats.successRate.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[139]++;
        response += `**Error Rate:** ${stats.errorRate.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[140]++;
        response += `**Average Execution Time:** ${(stats.averageExecutionTime / 1000).toFixed(2)}s\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[141]++;
        response += `**Active Users:** ${stats.activeUsers}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[142]++;
        response += `\n**💻 System Load:**\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[143]++;
        response += `• CPU: ${stats.systemLoad.cpu.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[144]++;
        response += `• Memory: ${stats.systemLoad.memory.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[145]++;
        response += `• Disk: ${stats.systemLoad.disk.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[146]++;
        if (stats.topWorkflows.length > 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[37][0]++;
          cov_2aeycc88c9().s[147]++;
          response += `\n**🔥 Top Workflows:**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[148]++;
          stats.topWorkflows.slice(0, 5).forEach((workflow, index) => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[15]++;
            const avgTime =
            /* istanbul ignore next */
            (cov_2aeycc88c9().s[149]++, workflow.avgTime > 0 ?
            /* istanbul ignore next */
            (cov_2aeycc88c9().b[38][0]++, ` (${(workflow.avgTime / 1000).toFixed(2)}s avg)`) :
            /* istanbul ignore next */
            (cov_2aeycc88c9().b[38][1]++, ''));
            /* istanbul ignore next */
            cov_2aeycc88c9().s[150]++;
            response += `${index + 1}. **${workflow.name}**: ${workflow.executions} executions${avgTime}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[37][1]++;
        }
        cov_2aeycc88c9().s[151]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[152]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[39][0]++;
          cov_2aeycc88c9().s[153]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[39][1]++;
        }
        cov_2aeycc88c9().s[154]++;
        throw new UserError(`Failed to get real-time stats: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[40][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[40][1]++, 'Unknown error')}`);
      }
    }
  });
  // Test webhook tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[155]++;
  server.addTool({
    name: 'test-webhook',
    description: 'Test webhook configuration by sending a test payload',
    parameters: WebhookTestSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[16]++;
      cov_2aeycc88c9().s[156]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[157]++, getEventClient(getClient));
        const webhook =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[158]++, {
          url: args.url,
          method: args.method,
          headers:
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[41][0]++, args.headers) ||
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[41][1]++, {}),
          body:
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[42][0]++, args.body) ||
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[42][1]++, {})
        });
        // Add authentication if provided
        /* istanbul ignore next */
        cov_2aeycc88c9().s[159]++;
        if (args.authType) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[43][0]++;
          cov_2aeycc88c9().s[160]++;
          webhook.authentication = {
            type: args.authType,
            token: args.authToken,
            username: args.authUsername,
            password: args.authPassword,
            apiKeyHeader: args.apiKeyHeader,
            apiKeyValue: args.apiKeyValue
          };
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[43][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[161]++, await client.testWebhook(webhook));
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[162]++, `🔗 **Webhook Test Results**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[163]++;
        response += `**URL:** ${args.url}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[164]++;
        response += `**Method:** ${args.method}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[165]++;
        response += `**Success:** ${result.success ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[44][0]++, '✅ Yes') :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[44][1]++, '❌ No')}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[166]++;
        response += `**Response Time:** ${result.responseTime}ms\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[167]++;
        if (result.error) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[45][0]++;
          cov_2aeycc88c9().s[168]++;
          response += `**Error:** ${result.error}\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[169]++;
          response += `\n💡 **Troubleshooting Tips:**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[170]++;
          response += `• Verify the webhook URL is accessible\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[171]++;
          response += `• Check authentication credentials if required\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[172]++;
          response += `• Ensure the endpoint accepts the HTTP method used\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[173]++;
          response += `• Verify any required headers are included\n`;
        } else {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[45][1]++;
          cov_2aeycc88c9().s[174]++;
          response += `\n✅ **Webhook is working correctly!**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[175]++;
          response += `The endpoint responded successfully and can receive event notifications.`;
        }
        /* istanbul ignore next */
        cov_2aeycc88c9().s[176]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[177]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[46][0]++;
          cov_2aeycc88c9().s[178]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[46][1]++;
        }
        cov_2aeycc88c9().s[179]++;
        throw new UserError(`Failed to test webhook: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[47][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[47][1]++, 'Unknown error')}`);
      }
    }
  });
  // Get event buffer tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[180]++;
  server.addTool({
    name: 'get-event-buffer',
    description: 'Get recent events from the event buffer with optional filtering',
    parameters: EventBufferSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[17]++;
      cov_2aeycc88c9().s[181]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[182]++, getEventClient(getClient));
        let events =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[183]++, client.getEventBuffer());
        // Apply filters
        /* istanbul ignore next */
        cov_2aeycc88c9().s[184]++;
        if (args.eventType) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[48][0]++;
          cov_2aeycc88c9().s[185]++;
          events = events.filter(e => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[18]++;
            cov_2aeycc88c9().s[186]++;
            return e.type === args.eventType;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[48][1]++;
        }
        cov_2aeycc88c9().s[187]++;
        if (args.since) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[49][0]++;
          const sinceDate =
          /* istanbul ignore next */
          (cov_2aeycc88c9().s[188]++, new Date(args.since));
          /* istanbul ignore next */
          cov_2aeycc88c9().s[189]++;
          events = events.filter(e => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[19]++;
            cov_2aeycc88c9().s[190]++;
            return new Date(e.timestamp) >= sinceDate;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[49][1]++;
        }
        // Limit results
        cov_2aeycc88c9().s[191]++;
        events = events.slice(-args.limit);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[192]++;
        if (events.length === 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[50][0]++;
          cov_2aeycc88c9().s[193]++;
          return `📭 **No events found**\n\nNo events match your criteria in the current buffer.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[50][1]++;
        }
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[194]++, `📋 **Event Buffer (${events.length} events)**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[195]++;
        events.forEach((event, index) => {
          /* istanbul ignore next */
          cov_2aeycc88c9().f[20]++;
          cov_2aeycc88c9().s[196]++;
          response += `${index + 1}. **${event.type}** (${event.id})\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[197]++;
          response += `   • Timestamp: ${new Date(event.timestamp).toLocaleString()}\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[198]++;
          if (event.workflowId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[51][0]++;
            cov_2aeycc88c9().s[199]++;
            response += `   • Workflow: ${event.workflowId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[51][1]++;
          }
          cov_2aeycc88c9().s[200]++;
          if (event.executionId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[52][0]++;
            cov_2aeycc88c9().s[201]++;
            response += `   • Execution: ${event.executionId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[52][1]++;
          }
          cov_2aeycc88c9().s[202]++;
          if (event.nodeId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[53][0]++;
            cov_2aeycc88c9().s[203]++;
            response += `   • Node: ${event.nodeId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[53][1]++;
          }
          cov_2aeycc88c9().s[204]++;
          if (Object.keys(event.data).length > 0) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[54][0]++;
            cov_2aeycc88c9().s[205]++;
            response += `   • Data: ${JSON.stringify(event.data)}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[54][1]++;
          }
          cov_2aeycc88c9().s[206]++;
          response += `\n`;
        });
        /* istanbul ignore next */
        cov_2aeycc88c9().s[207]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[208]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[55][0]++;
          cov_2aeycc88c9().s[209]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[55][1]++;
        }
        cov_2aeycc88c9().s[210]++;
        throw new UserError(`Failed to get event buffer: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[56][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[56][1]++, 'Unknown error')}`);
      }
    }
  });
  // Clear event buffers tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[211]++;
  server.addTool({
    name: 'clear-event-buffers',
    description: 'Clear all buffered events and analytics data',
    parameters: z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[21]++;
      cov_2aeycc88c9().s[212]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[213]++, getEventClient(getClient));
        const eventCount =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[214]++, client.getEventBuffer().length);
        const analyticsCount =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[215]++, client.getAnalyticsBuffer().length);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[216]++;
        client.clearBuffers();
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[217]++, `🧹 **Event buffers cleared successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[218]++;
        response += `**Events cleared:** ${eventCount}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[219]++;
        response += `**Analytics events cleared:** ${analyticsCount}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[220]++;
        response += `\nAll buffered data has been removed. New events will start accumulating from now.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[221]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[222]++;
        if (error instanceof UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[57][0]++;
          cov_2aeycc88c9().s[223]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[57][1]++;
        }
        cov_2aeycc88c9().s[224]++;
        throw new UserError(`Failed to clear event buffers: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[58][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[58][1]++, 'Unknown error')}`);
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,