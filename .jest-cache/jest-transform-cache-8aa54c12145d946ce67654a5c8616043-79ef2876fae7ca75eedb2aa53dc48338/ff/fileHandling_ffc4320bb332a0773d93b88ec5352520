c777dcc9cbdd72b534173effdfad5572
"use strict";

/* istanbul ignore next */
function cov_1ipm9bts74() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/fileHandling.ts";
  var hash = "0940dc3ebbfaf8d4c242afdb8e33dd6ac02da44c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/fileHandling.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "37": {
        start: {
          line: 37,
          column: 11
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "38": {
        start: {
          line: 38,
          column: 13
        },
        end: {
          line: 38,
          column: 42
        }
      },
      "39": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "40": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "41": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "42": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 16
        }
      },
      "43": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "44": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "45": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "46": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 55
        }
      },
      "47": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 75
        }
      },
      "48": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "49": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 81
        }
      },
      "50": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "51": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "52": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "53": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 70
        }
      },
      "54": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 85
        }
      },
      "55": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "56": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 35
        }
      },
      "57": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 108
        }
      },
      "58": {
        start: {
          line: 111,
          column: 34
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "59": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "60": {
        start: {
          line: 113,
          column: 31
        },
        end: {
          line: 113,
          column: 51
        }
      },
      "61": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 51
        }
      },
      "62": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 40
        }
      },
      "63": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "64": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "65": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 71
        }
      },
      "66": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "67": {
        start: {
          line: 124,
          column: 34
        },
        end: {
          line: 124,
          column: 70
        }
      },
      "68": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "69": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 39
        }
      },
      "70": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 85
        }
      },
      "71": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "72": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 35
        }
      },
      "73": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 56
        }
      },
      "74": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "75": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 35
        }
      },
      "76": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 72
        }
      },
      "77": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "78": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 145,
          column: 52
        }
      },
      "79": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "80": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "81": {
        start: {
          line: 149,
          column: 35
        },
        end: {
          line: 149,
          column: 48
        }
      },
      "82": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 106
        }
      },
      "83": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "84": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 157,
          column: 18
        }
      },
      "85": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 48
        }
      },
      "86": {
        start: {
          line: 160,
          column: 29
        },
        end: {
          line: 160,
          column: 53
        }
      },
      "87": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 161,
          column: 61
        }
      },
      "88": {
        start: {
          line: 163,
          column: 29
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "89": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 59
        }
      },
      "90": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "91": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 49
        }
      },
      "92": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "93": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 80
        }
      },
      "94": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 55
        }
      },
      "95": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 43
        }
      },
      "96": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 42
        }
      },
      "97": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "98": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "99": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 52
        }
      },
      "100": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "101": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 206,
          column: 65
        }
      },
      "102": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "103": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 43
        }
      },
      "104": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 90
        }
      },
      "105": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 64
        }
      },
      "106": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 54
        }
      },
      "107": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 56
        }
      },
      "108": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 218,
          column: 14
        }
      },
      "109": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 225,
          column: 52
        }
      },
      "110": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "111": {
        start: {
          line: 227,
          column: 29
        },
        end: {
          line: 227,
          column: 53
        }
      },
      "112": {
        start: {
          line: 228,
          column: 33
        },
        end: {
          line: 228,
          column: 61
        }
      },
      "113": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "114": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 42
        }
      },
      "115": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 46
        }
      },
      "116": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 239,
          column: 18
        }
      },
      "117": {
        start: {
          line: 242,
          column: 36
        },
        end: {
          line: 242,
          column: 76
        }
      },
      "118": {
        start: {
          line: 243,
          column: 29
        },
        end: {
          line: 243,
          column: 56
        }
      },
      "119": {
        start: {
          line: 245,
          column: 29
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "120": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "121": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "122": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "123": {
        start: {
          line: 258,
          column: 31
        },
        end: {
          line: 258,
          column: 56
        }
      },
      "124": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 58
        }
      },
      "125": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 43
        }
      },
      "126": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 42
        }
      },
      "127": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 60
        }
      },
      "128": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "129": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 52
        }
      },
      "130": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 275,
          column: 14
        }
      },
      "131": {
        start: {
          line: 278,
          column: 29
        },
        end: {
          line: 278,
          column: 65
        }
      },
      "132": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "133": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 43
        }
      },
      "134": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 90
        }
      },
      "135": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "136": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 54
        }
      },
      "137": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 56
        }
      },
      "138": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 290,
          column: 14
        }
      },
      "139": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "140": {
        start: {
          line: 298,
          column: 29
        },
        end: {
          line: 298,
          column: 53
        }
      },
      "141": {
        start: {
          line: 299,
          column: 33
        },
        end: {
          line: 299,
          column: 61
        }
      },
      "142": {
        start: {
          line: 301,
          column: 27
        },
        end: {
          line: 301,
          column: 31
        }
      },
      "143": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "144": {
        start: {
          line: 303,
          column: 40
        },
        end: {
          line: 303,
          column: 80
        }
      },
      "145": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 55
        }
      },
      "146": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 310,
          column: 18
        }
      },
      "147": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 316,
          column: 15
        }
      },
      "148": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 322,
          column: 14
        }
      },
      "149": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 328,
          column: 14
        }
      },
      "150": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "151": {
        start: {
          line: 336,
          column: 26
        },
        end: {
          line: 336,
          column: 69
        }
      },
      "152": {
        start: {
          line: 337,
          column: 34
        },
        end: {
          line: 337,
          column: 83
        }
      },
      "153": {
        start: {
          line: 337,
          column: 55
        },
        end: {
          line: 337,
          column: 82
        }
      },
      "154": {
        start: {
          line: 338,
          column: 30
        },
        end: {
          line: 338,
          column: 32
        }
      },
      "155": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 378,
          column: 13
        }
      },
      "156": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 377,
          column: 17
        }
      },
      "157": {
        start: {
          line: 341,
          column: 41
        },
        end: {
          line: 341,
          column: 87
        }
      },
      "158": {
        start: {
          line: 342,
          column: 36
        },
        end: {
          line: 342,
          column: 76
        }
      },
      "159": {
        start: {
          line: 343,
          column: 37
        },
        end: {
          line: 343,
          column: 56
        }
      },
      "160": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 347,
          column: 21
        }
      },
      "161": {
        start: {
          line: 346,
          column: 24
        },
        end: {
          line: 346,
          column: 33
        }
      },
      "162": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 350,
          column: 21
        }
      },
      "163": {
        start: {
          line: 349,
          column: 24
        },
        end: {
          line: 349,
          column: 33
        }
      },
      "164": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 353,
          column: 21
        }
      },
      "165": {
        start: {
          line: 352,
          column: 24
        },
        end: {
          line: 352,
          column: 33
        }
      },
      "166": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "167": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 33
        }
      },
      "168": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 359,
          column: 21
        }
      },
      "169": {
        start: {
          line: 358,
          column: 24
        },
        end: {
          line: 358,
          column: 33
        }
      },
      "170": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 362,
          column: 21
        }
      },
      "171": {
        start: {
          line: 361,
          column: 24
        },
        end: {
          line: 361,
          column: 33
        }
      },
      "172": {
        start: {
          line: 363,
          column: 20
        },
        end: {
          line: 365,
          column: 21
        }
      },
      "173": {
        start: {
          line: 364,
          column: 24
        },
        end: {
          line: 364,
          column: 33
        }
      },
      "174": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 368,
          column: 21
        }
      },
      "175": {
        start: {
          line: 367,
          column: 24
        },
        end: {
          line: 367,
          column: 33
        }
      },
      "176": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 371,
          column: 21
        }
      },
      "177": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 33
        }
      },
      "178": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 45
        }
      },
      "179": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 376,
          column: 29
        }
      },
      "180": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 106
        }
      },
      "181": {
        start: {
          line: 380,
          column: 37
        },
        end: {
          line: 380,
          column: 104
        }
      },
      "182": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "183": {
        start: {
          line: 383,
          column: 30
        },
        end: {
          line: 383,
          column: 49
        }
      },
      "184": {
        start: {
          line: 384,
          column: 28
        },
        end: {
          line: 384,
          column: 77
        }
      },
      "185": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 51
        }
      },
      "186": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 29
        }
      },
      "187": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 113
        }
      },
      "188": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "189": {
        start: {
          line: 398,
          column: 33
        },
        end: {
          line: 398,
          column: 61
        }
      },
      "190": {
        start: {
          line: 399,
          column: 28
        },
        end: {
          line: 399,
          column: 68
        }
      },
      "191": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 39
        }
      },
      "192": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 24
        }
      },
      "193": {
        start: {
          line: 410,
          column: 22
        },
        end: {
          line: 410,
          column: 58
        }
      },
      "194": {
        start: {
          line: 411,
          column: 26
        },
        end: {
          line: 411,
          column: 77
        }
      },
      "195": {
        start: {
          line: 411,
          column: 54
        },
        end: {
          line: 411,
          column: 73
        }
      },
      "196": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 419,
          column: 10
        }
      },
      "197": {
        start: {
          line: 425,
          column: 28
        },
        end: {
          line: 425,
          column: 38
        }
      },
      "198": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 107
        }
      },
      "199": {
        start: {
          line: 427,
          column: 25
        },
        end: {
          line: 427,
          column: 47
        }
      },
      "200": {
        start: {
          line: 428,
          column: 30
        },
        end: {
          line: 428,
          column: 94
        }
      },
      "201": {
        start: {
          line: 428,
          column: 54
        },
        end: {
          line: 428,
          column: 93
        }
      },
      "202": {
        start: {
          line: 429,
          column: 27
        },
        end: {
          line: 429,
          column: 28
        }
      },
      "203": {
        start: {
          line: 430,
          column: 25
        },
        end: {
          line: 430,
          column: 26
        }
      },
      "204": {
        start: {
          line: 431,
          column: 23
        },
        end: {
          line: 431,
          column: 25
        }
      },
      "205": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "206": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "207": {
        start: {
          line: 434,
          column: 31
        },
        end: {
          line: 434,
          column: 61
        }
      },
      "208": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 441,
          column: 17
        }
      },
      "209": {
        start: {
          line: 436,
          column: 20
        },
        end: {
          line: 436,
          column: 35
        }
      },
      "210": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 437,
          column: 48
        }
      },
      "211": {
        start: {
          line: 440,
          column: 20
        },
        end: {
          line: 440,
          column: 88
        }
      },
      "212": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 124
        }
      },
      "213": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 451,
          column: 10
        }
      },
      "214": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 60
        }
      },
      "215": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 57
        }
      },
      "216": {
        start: {
          line: 469,
          column: 25
        },
        end: {
          line: 469,
          column: 61
        }
      },
      "217": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "218": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 42
        }
      },
      "219": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 60
        }
      },
      "220": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 53
        }
      },
      "221": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 52
        }
      },
      "222": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 24
        }
      },
      "223": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 21
        }
      },
      "224": {
        start: {
          line: 483,
          column: 22
        },
        end: {
          line: 483,
          column: 44
        }
      },
      "225": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "226": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 491,
          column: 14
        }
      },
      "227": {
        start: {
          line: 493,
          column: 26
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "228": {
        start: {
          line: 493,
          column: 54
        },
        end: {
          line: 493,
          column: 73
        }
      },
      "229": {
        start: {
          line: 494,
          column: 29
        },
        end: {
          line: 494,
          column: 123
        }
      },
      "230": {
        start: {
          line: 494,
          column: 55
        },
        end: {
          line: 494,
          column: 122
        }
      },
      "231": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 501,
          column: 10
        }
      },
      "232": {
        start: {
          line: 504,
          column: 0
        },
        end: {
          line: 504,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 62
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 67
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 97
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 111,
            column: 52
          },
          end: {
            line: 111,
            column: 53
          }
        },
        loc: {
          start: {
            line: 111,
            column: 63
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 111
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 144
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 31
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 224
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 29
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 296
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 314,
            column: 42
          },
          end: {
            line: 314,
            column: 43
          }
        },
        loc: {
          start: {
            line: 314,
            column: 48
          },
          end: {
            line: 314,
            column: 51
          }
        },
        line: 314
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 315,
            column: 46
          },
          end: {
            line: 315,
            column: 47
          }
        },
        loc: {
          start: {
            line: 315,
            column: 52
          },
          end: {
            line: 315,
            column: 55
          }
        },
        line: 315
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 34
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 334
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 337,
            column: 47
          },
          end: {
            line: 337,
            column: 48
          }
        },
        loc: {
          start: {
            line: 337,
            column: 55
          },
          end: {
            line: 337,
            column: 82
          }
        },
        line: 337
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 380,
            column: 27
          },
          end: {
            line: 380,
            column: 28
          }
        },
        loc: {
          start: {
            line: 380,
            column: 37
          },
          end: {
            line: 380,
            column: 104
          }
        },
        line: 380
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 34
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 396
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 46
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 409
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 411,
            column: 39
          },
          end: {
            line: 411,
            column: 40
          }
        },
        loc: {
          start: {
            line: 411,
            column: 54
          },
          end: {
            line: 411,
            column: 73
          }
        },
        line: 411
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 41
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 424
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 428,
            column: 46
          },
          end: {
            line: 428,
            column: 47
          }
        },
        loc: {
          start: {
            line: 428,
            column: 54
          },
          end: {
            line: 428,
            column: 93
          }
        },
        line: 428
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 36
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 456
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 462,
            column: 5
          }
        },
        loc: {
          start: {
            line: 462,
            column: 25
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 462
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 31
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 468
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 28
          },
          end: {
            line: 502,
            column: 5
          }
        },
        line: 482
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 493,
            column: 39
          },
          end: {
            line: 493,
            column: 40
          }
        },
        loc: {
          start: {
            line: 493,
            column: 54
          },
          end: {
            line: 493,
            column: 73
          }
        },
        line: 493
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 494,
            column: 45
          },
          end: {
            line: 494,
            column: 46
          }
        },
        loc: {
          start: {
            line: 494,
            column: 55
          },
          end: {
            line: 494,
            column: 122
          }
        },
        line: 494
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 27
          }
        }],
        line: 44
      },
      "18": {
        loc: {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 65
          }
        }],
        line: 47
      },
      "19": {
        loc: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 43
          }
        }, {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 64
          }
        }],
        line: 48
      },
      "20": {
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 49
      },
      "21": {
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 53
          }
        }, {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 59
          }
        }],
        line: 58
      },
      "22": {
        loc: {
          start: {
            line: 97,
            column: 53
          },
          end: {
            line: 97,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 63
          },
          end: {
            line: 97,
            column: 65
          }
        }],
        line: 97
      },
      "23": {
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 43
          }
        }, {
          start: {
            line: 103,
            column: 47
          },
          end: {
            line: 103,
            column: 70
          }
        }],
        line: 103
      },
      "24": {
        loc: {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 53
          }
        }, {
          start: {
            line: 104,
            column: 57
          },
          end: {
            line: 104,
            column: 85
          }
        }],
        line: 104
      },
      "25": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "26": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "27": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "28": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "29": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "30": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "31": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 21
          }
        }, {
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 53
          }
        }],
        line: 131
      },
      "32": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "33": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 35
          }
        }, {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 61
          }
        }, {
          start: {
            line: 135,
            column: 65
          },
          end: {
            line: 135,
            column: 88
          }
        }],
        line: 135
      },
      "34": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "35": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "36": {
        loc: {
          start: {
            line: 209,
            column: 33
          },
          end: {
            line: 209,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 58
          },
          end: {
            line: 209,
            column: 71
          }
        }, {
          start: {
            line: 209,
            column: 74
          },
          end: {
            line: 209,
            column: 89
          }
        }],
        line: 209
      },
      "37": {
        loc: {
          start: {
            line: 216,
            column: 48
          },
          end: {
            line: 216,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 73
          },
          end: {
            line: 216,
            column: 86
          }
        }, {
          start: {
            line: 216,
            column: 89
          },
          end: {
            line: 216,
            column: 104
          }
        }],
        line: 216
      },
      "38": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "39": {
        loc: {
          start: {
            line: 281,
            column: 33
          },
          end: {
            line: 281,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 58
          },
          end: {
            line: 281,
            column: 71
          }
        }, {
          start: {
            line: 281,
            column: 74
          },
          end: {
            line: 281,
            column: 89
          }
        }],
        line: 281
      },
      "40": {
        loc: {
          start: {
            line: 288,
            column: 50
          },
          end: {
            line: 288,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 75
          },
          end: {
            line: 288,
            column: 88
          }
        }, {
          start: {
            line: 288,
            column: 91
          },
          end: {
            line: 288,
            column: 106
          }
        }],
        line: 288
      },
      "41": {
        loc: {
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 44
          }
        }, {
          start: {
            line: 320,
            column: 48
          },
          end: {
            line: 320,
            column: 57
          }
        }],
        line: 320
      },
      "42": {
        loc: {
          start: {
            line: 327,
            column: 50
          },
          end: {
            line: 327,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 75
          },
          end: {
            line: 327,
            column: 88
          }
        }, {
          start: {
            line: 327,
            column: 91
          },
          end: {
            line: 327,
            column: 106
          }
        }],
        line: 327
      },
      "43": {
        loc: {
          start: {
            line: 334,
            column: 20
          },
          end: {
            line: 334,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 334,
            column: 30
          },
          end: {
            line: 334,
            column: 32
          }
        }],
        line: 334
      },
      "44": {
        loc: {
          start: {
            line: 345,
            column: 20
          },
          end: {
            line: 347,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 20
          },
          end: {
            line: 347,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "45": {
        loc: {
          start: {
            line: 345,
            column: 24
          },
          end: {
            line: 345,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 24
          },
          end: {
            line: 345,
            column: 40
          }
        }, {
          start: {
            line: 345,
            column: 44
          },
          end: {
            line: 345,
            column: 117
          }
        }],
        line: 345
      },
      "46": {
        loc: {
          start: {
            line: 348,
            column: 20
          },
          end: {
            line: 350,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 20
          },
          end: {
            line: 350,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "47": {
        loc: {
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 40
          }
        }, {
          start: {
            line: 348,
            column: 44
          },
          end: {
            line: 348,
            column: 82
          }
        }],
        line: 348
      },
      "48": {
        loc: {
          start: {
            line: 351,
            column: 20
          },
          end: {
            line: 353,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 20
          },
          end: {
            line: 353,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "49": {
        loc: {
          start: {
            line: 351,
            column: 24
          },
          end: {
            line: 351,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 24
          },
          end: {
            line: 351,
            column: 42
          }
        }, {
          start: {
            line: 351,
            column: 46
          },
          end: {
            line: 351,
            column: 88
          }
        }],
        line: 351
      },
      "50": {
        loc: {
          start: {
            line: 354,
            column: 20
          },
          end: {
            line: 356,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 20
          },
          end: {
            line: 356,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "51": {
        loc: {
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 43
          }
        }, {
          start: {
            line: 354,
            column: 47
          },
          end: {
            line: 354,
            column: 91
          }
        }],
        line: 354
      },
      "52": {
        loc: {
          start: {
            line: 357,
            column: 20
          },
          end: {
            line: 359,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 20
          },
          end: {
            line: 359,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "53": {
        loc: {
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 357,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 357,
            column: 38
          }
        }, {
          start: {
            line: 357,
            column: 42
          },
          end: {
            line: 357,
            column: 76
          }
        }],
        line: 357
      },
      "54": {
        loc: {
          start: {
            line: 360,
            column: 20
          },
          end: {
            line: 362,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 20
          },
          end: {
            line: 362,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "55": {
        loc: {
          start: {
            line: 360,
            column: 24
          },
          end: {
            line: 360,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 24
          },
          end: {
            line: 360,
            column: 45
          }
        }, {
          start: {
            line: 360,
            column: 49
          },
          end: {
            line: 360,
            column: 112
          }
        }],
        line: 360
      },
      "56": {
        loc: {
          start: {
            line: 363,
            column: 20
          },
          end: {
            line: 365,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 20
          },
          end: {
            line: 365,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "57": {
        loc: {
          start: {
            line: 363,
            column: 24
          },
          end: {
            line: 363,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 24
          },
          end: {
            line: 363,
            column: 46
          }
        }, {
          start: {
            line: 363,
            column: 50
          },
          end: {
            line: 363,
            column: 114
          }
        }],
        line: 363
      },
      "58": {
        loc: {
          start: {
            line: 366,
            column: 20
          },
          end: {
            line: 368,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 20
          },
          end: {
            line: 368,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "59": {
        loc: {
          start: {
            line: 366,
            column: 24
          },
          end: {
            line: 366,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 24
          },
          end: {
            line: 366,
            column: 43
          }
        }, {
          start: {
            line: 366,
            column: 47
          },
          end: {
            line: 366,
            column: 86
          }
        }],
        line: 366
      },
      "60": {
        loc: {
          start: {
            line: 369,
            column: 20
          },
          end: {
            line: 371,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 20
          },
          end: {
            line: 371,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "61": {
        loc: {
          start: {
            line: 369,
            column: 24
          },
          end: {
            line: 369,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 24
          },
          end: {
            line: 369,
            column: 43
          }
        }, {
          start: {
            line: 369,
            column: 47
          },
          end: {
            line: 369,
            column: 86
          }
        }],
        line: 369
      },
      "62": {
        loc: {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 386,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 386,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "63": {
        loc: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 382,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 382,
            column: 30
          }
        }, {
          start: {
            line: 382,
            column: 34
          },
          end: {
            line: 382,
            column: 47
          }
        }],
        line: 382
      },
      "64": {
        loc: {
          start: {
            line: 383,
            column: 30
          },
          end: {
            line: 383,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 30
          },
          end: {
            line: 383,
            column: 44
          }
        }, {
          start: {
            line: 383,
            column: 48
          },
          end: {
            line: 383,
            column: 49
          }
        }],
        line: 383
      },
      "65": {
        loc: {
          start: {
            line: 384,
            column: 28
          },
          end: {
            line: 384,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 44
          },
          end: {
            line: 384,
            column: 65
          }
        }, {
          start: {
            line: 384,
            column: 68
          },
          end: {
            line: 384,
            column: 77
          }
        }],
        line: 384
      },
      "66": {
        loc: {
          start: {
            line: 390,
            column: 53
          },
          end: {
            line: 390,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 390,
            column: 78
          },
          end: {
            line: 390,
            column: 91
          }
        }, {
          start: {
            line: 390,
            column: 94
          },
          end: {
            line: 390,
            column: 109
          }
        }],
        line: 390
      },
      "67": {
        loc: {
          start: {
            line: 418,
            column: 25
          },
          end: {
            line: 418,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 44
          },
          end: {
            line: 418,
            column: 63
          }
        }, {
          start: {
            line: 418,
            column: 66
          },
          end: {
            line: 418,
            column: 90
          }
        }],
        line: 418
      },
      "68": {
        loc: {
          start: {
            line: 426,
            column: 53
          },
          end: {
            line: 426,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 53
          },
          end: {
            line: 426,
            column: 66
          }
        }, {
          start: {
            line: 426,
            column: 70
          },
          end: {
            line: 426,
            column: 98
          }
        }, {
          start: {
            line: 426,
            column: 102
          },
          end: {
            line: 426,
            column: 104
          }
        }],
        line: 426
      },
      "69": {
        loc: {
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 441,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 441,
            column: 17
          }
        }, {
          start: {
            line: 439,
            column: 21
          },
          end: {
            line: 441,
            column: 17
          }
        }],
        line: 435
      },
      "70": {
        loc: {
          start: {
            line: 444,
            column: 64
          },
          end: {
            line: 444,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 89
          },
          end: {
            line: 444,
            column: 102
          }
        }, {
          start: {
            line: 444,
            column: 105
          },
          end: {
            line: 444,
            column: 120
          }
        }],
        line: 444
      },
      "71": {
        loc: {
          start: {
            line: 457,
            column: 15
          },
          end: {
            line: 457,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 15
          },
          end: {
            line: 457,
            column: 51
          }
        }, {
          start: {
            line: 457,
            column: 55
          },
          end: {
            line: 457,
            column: 59
          }
        }],
        line: 457
      },
      "72": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 476,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 476,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "73": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 20
          }
        }, {
          start: {
            line: 470,
            column: 24
          },
          end: {
            line: 470,
            column: 57
          }
        }],
        line: 470
      },
      "74": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/fileHandling.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAkC;AAClC,2CAA6B;AAC7B,+CAAiC;AACjC,mCAAsC;AAetC,MAAa,iBAAkB,SAAQ,qBAAY;IACzC,MAAM,CAAoB;IAC1B,eAAe,GAAsC,IAAI,GAAG,EAAE,CAAC;IAEvE,YAAY,SAAqC,EAAE;QACjD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG;YACZ,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,cAAc;YACrD,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,gBAAgB;YACtE,gBAAgB,EAAE,MAAM,CAAC,gBAAgB,IAAI;gBAC3C,SAAS;gBACT,QAAQ;gBACR,kBAAkB;gBAClB,iBAAiB;gBACjB,iBAAiB;gBACjB,8BAA8B;gBAC9B,0BAA0B;aAC3B;YACD,gBAAgB,EAAE,MAAM,CAAC,gBAAgB,IAAI,EAAE,EAAE,UAAU;SAC5D,CAAC;QAEF,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,qBAAqB;QACjC,IAAI,CAAC;YACH,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC;QAAC,MAAM,CAAC;YACP,MAAM,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED;;OAEG;IACK,cAAc;QACpB,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,OAAO,YAAY,IAAI,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;IAC3E,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,MAAc;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAG,MAAM,OAAO,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,MAAc;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAG,MAAM,YAAY,CAAC,CAAC;IACrE,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAChB,QAAgB,EAChB,QAAgB,EAChB,QAAgB,EAChB,UAAiC,EAAE;QAEnC,MAAM,MAAM,GAAyB;YACnC,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,MAAM,OAAO,GAAG,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QAC/D,MAAM,YAAY,GAAG,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;QAE9E,kBAAkB;QAClB,IAAI,QAAQ,GAAG,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,QAAQ,uCAAuC,OAAO,QAAQ,CAAC,CAAC;QAClG,CAAC;QAED,kBAAkB;QAClB,MAAM,iBAAiB,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACpD,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC3B,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpC,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;YACD,OAAO,OAAO,KAAK,QAAQ,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;QAC7D,CAAC;QAED,oCAAoC;QACpC,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3D,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;gBACvD,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,aAAa,iBAAiB,CAAC,CAAC;YACvE,CAAC;QACH,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9C,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YACjF,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;QAC9D,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,UAAU,CAAC,OAA0B;QACzC,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE7C,IAAI,CAAC;YACH,wCAAwC;YACxC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACnD,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;YAErC,gBAAgB;YAChB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,YAAY,CACxC,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,QAAQ,EAChB,cAAc,CACf,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBACxB,OAAO;oBACL,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,2BAA2B,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAClE,UAAU;iBACX,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAElD,+BAA+B;YAC/B,MAAM,QAAQ,GAAyB;gBACrC,UAAU;gBACV,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,UAAU,EAAE,cAAc;gBAC1B,gBAAgB,EAAE,CAAC;gBACnB,eAAe,EAAE,CAAC;gBAClB,MAAM,EAAE,aAAa;gBACrB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACpC,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAEvC,kBAAkB;YAClB,MAAM,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAErC,kBAAkB;YAClB,MAAM,QAAQ,GAAmB;gBAC/B,EAAE,EAAE,MAAM;gBACV,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,QAAQ,EAAE,cAAc;gBACxB,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACpC,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,QAAQ;aACT,CAAC;YAEF,MAAM,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpE,kBAAkB;YAClB,QAAQ,CAAC,gBAAgB,GAAG,cAAc,CAAC;YAC3C,QAAQ,CAAC,eAAe,GAAG,GAAG,CAAC;YAC/B,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;YAC9B,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEhD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAExC,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,MAAM;gBACN,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,OAAO,EAAE,4BAA4B;gBACrC,QAAQ,EAAE,cAAc;gBACxB,UAAU;aACX,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC3B,QAAQ,CAAC,KAAK,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC1E,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;gBACtC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;YAED,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,uBAAuB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE;gBAC1F,UAAU;aACX,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAAC,MAAc;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE7C,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAElD,uBAAuB;YACvB,IAAI,CAAC;gBACH,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC1B,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAChC,CAAC;YAAC,MAAM,CAAC;gBACP,OAAO;oBACL,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,gBAAgB,MAAM,YAAY;oBAC3C,UAAU;iBACX,CAAC;YACJ,CAAC;YAED,gBAAgB;YAChB,MAAM,eAAe,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YACjE,MAAM,QAAQ,GAAmB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAE7D,+BAA+B;YAC/B,MAAM,QAAQ,GAAyB;gBACrC,UAAU;gBACV,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,UAAU,EAAE,QAAQ,CAAC,QAAQ;gBAC7B,gBAAgB,EAAE,CAAC;gBACnB,eAAe,EAAE,CAAC;gBAClB,MAAM,EAAE,aAAa;gBACrB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACpC,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAEvC,iBAAiB;YACjB,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE7C,kBAAkB;YAClB,QAAQ,CAAC,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC9C,QAAQ,CAAC,eAAe,GAAG,GAAG,CAAC;YAC/B,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;YAC9B,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEhD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAExC,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,MAAM;gBACN,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,OAAO,EAAE,8BAA8B;gBACvC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,UAAU;gBACV,IAAI,EAAE,UAAU;gBAChB,QAAQ;aACT,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC3B,QAAQ,CAAC,KAAK,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC1E,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;gBACtC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;YAED,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,yBAAyB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE;gBAC5F,UAAU;aACX,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,UAAU,CAAC,MAAc;QAC7B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAElD,wCAAwC;YACxC,IAAI,QAAQ,GAA0B,IAAI,CAAC;YAC3C,IAAI,CAAC;gBACH,MAAM,eAAe,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACjE,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YACzC,CAAC;YAAC,MAAM,CAAC;gBACP,OAAO;oBACL,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,gBAAgB,MAAM,YAAY;iBAC5C,CAAC;YACJ,CAAC;YAED,eAAe;YACf,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,EAAE,sCAAsC;gBAC3E,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC;aACxC,CAAC,CAAC;YAEH,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,MAAM;gBACN,QAAQ,EAAE,QAAQ,EAAE,QAAQ,IAAI,SAAS;gBACzC,OAAO,EAAE,2BAA2B;aACrC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,yBAAyB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE;aAC7F,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,SAAS,CAAC,UAA6B,EAAE;QAC7C,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAC1D,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;YAExE,MAAM,SAAS,GAAqB,EAAE,CAAC;YAEvC,KAAK,MAAM,QAAQ,IAAI,aAAa,EAAE,CAAC;gBACrC,IAAI,CAAC;oBACH,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;oBACpE,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;oBACzD,MAAM,QAAQ,GAAmB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAErD,gBAAgB;oBAChB,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;wBAClG,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,EAAE,CAAC;wBAC/D,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,KAAK,OAAO,CAAC,UAAU,EAAE,CAAC;wBACrE,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC;wBACxE,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC;wBACzD,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,aAAa,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;wBAC7F,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,cAAc,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC;wBAC/F,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;wBACnE,SAAS;oBACX,CAAC;oBAED,IAAI,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;wBACnE,SAAS;oBACX,CAAC;oBAED,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,8BAA8B;oBAC9B,SAAS;gBACX,CAAC;YACH,CAAC;YAED,qCAAqC;YACrC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;YAE9F,mBAAmB;YACnB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;gBACpC,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;gBAClC,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC9D,OAAO,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC;YAED,OAAO,SAAS,CAAC;QACnB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC;QACvG,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAC,MAAc;QAClC,IAAI,CAAC;YACH,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAClD,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC;QAAC,MAAM,CAAC;YACP,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,uBAAuB,CAAC,UAAkB;QAC9C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEtE,OAAO;YACL,UAAU;YACV,YAAY,EAAE,UAAU,EAAE,gDAAgD;YAC1E,KAAK;YACL,SAAS;YACT,SAAS,EAAE,KAAK,CAAC,MAAM;YACvB,WAAW,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SAC/E,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAC,aAAsB;QAC1C,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC,CAAC;QAEnG,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACxC,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,CAAC;QAEvF,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,MAAM,MAAM,GAAa,EAAE,CAAC;QAE5B,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE,CAAC;YACjC,IAAI,CAAC;gBACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC9C,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;oBACnB,YAAY,EAAE,CAAC;oBACf,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC;gBAC9B,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;gBACtE,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,QAAQ,KAAK,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC;YAC9G,CAAC;QACH,CAAC;QAED,OAAO;YACL,YAAY;YACZ,UAAU;YACV,MAAM;SACP,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,mBAAmB,CAAC,UAAkB;QACpC,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IACtD,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,UAAkB;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,aAAa,EAAE,CAAC;YAClD,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;YAC9B,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe;QAOnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QAErC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,OAAO;gBACL,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC;gBACZ,eAAe,EAAE,CAAC;gBAClB,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAE,IAAI;aACjB,CAAC;QACJ,CAAC;QAED,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACtE,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAEpH,OAAO;YACL,UAAU,EAAE,KAAK,CAAC,MAAM;YACxB,SAAS;YACT,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,MAAM;YACzC,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU;YACtC,UAAU,EAAE,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU;SAC7D,CAAC;IACJ,CAAC;CACF;AA9hBD,8CA8hBC",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/fileHandling.ts"],
      sourcesContent: ["import * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport { EventEmitter } from 'events';\nimport {\n  BinaryData,\n  FileUploadRequest,\n  StaticFileInfo,\n  FileStorageConfig,\n  FileTransferProgress,\n  FileOperationResult,\n  FileValidationOptions,\n  FileValidationResult,\n  FileCleanupResult,\n  WorkflowFileManifest,\n  FileSearchOptions,\n} from '../types/fileTypes.js';\n\nexport class FileHandlingUtils extends EventEmitter {\n  private config: FileStorageConfig;\n  private activeTransfers: Map<string, FileTransferProgress> = new Map();\n\n  constructor(config: Partial<FileStorageConfig> = {}) {\n    super();\n    this.config = {\n      baseDirectory: config.baseDirectory || './data/files',\n      maxFileSize: config.maxFileSize || 100 * 1024 * 1024, // 100MB default\n      allowedMimeTypes: config.allowedMimeTypes || [\n        'image/*',\n        'text/*',\n        'application/json',\n        'application/pdf',\n        'application/zip',\n        'application/x-zip-compressed',\n        'application/octet-stream',\n      ],\n      cleanupOlderThan: config.cleanupOlderThan || 30, // 30 days\n    };\n\n    this.ensureDirectoryExists();\n  }\n\n  private async ensureDirectoryExists(): Promise<void> {\n    try {\n      await fs.access(this.config.baseDirectory);\n    } catch {\n      await fs.mkdir(this.config.baseDirectory, { recursive: true });\n    }\n  }\n\n  /**\n   * Generate a unique file ID\n   */\n  private generateFileId(): string {\n    return crypto.randomUUID();\n  }\n\n  /**\n   * Generate transfer ID for progress tracking\n   */\n  private generateTransferId(): string {\n    return `transfer_${Date.now()}_${crypto.randomBytes(4).toString('hex')}`;\n  }\n\n  /**\n   * Get file path from file ID\n   */\n  private getFilePath(fileId: string): string {\n    return path.join(this.config.baseDirectory, `${fileId}.data`);\n  }\n\n  /**\n   * Get metadata file path from file ID\n   */\n  private getMetadataPath(fileId: string): string {\n    return path.join(this.config.baseDirectory, `${fileId}.meta.json`);\n  }\n\n  /**\n   * Validate file before upload\n   */\n  async validateFile(\n    fileName: string,\n    mimeType: string,\n    fileSize: number,\n    options: FileValidationOptions = {}\n  ): Promise<FileValidationResult> {\n    const result: FileValidationResult = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    const maxSize = options.maxFileSize || this.config.maxFileSize;\n    const allowedTypes = options.allowedMimeTypes || this.config.allowedMimeTypes;\n\n    // Check file size\n    if (fileSize > maxSize) {\n      result.isValid = false;\n      result.errors.push(`File size ${fileSize} bytes exceeds maximum allowed size ${maxSize} bytes`);\n    }\n\n    // Check MIME type\n    const isMimeTypeAllowed = allowedTypes.some(allowed => {\n      if (allowed.endsWith('/*')) {\n        const prefix = allowed.slice(0, -2);\n        return mimeType.startsWith(prefix);\n      }\n      return allowed === mimeType;\n    });\n\n    if (!isMimeTypeAllowed) {\n      result.isValid = false;\n      result.errors.push(`MIME type ${mimeType} is not allowed`);\n    }\n\n    // Check file extension if specified\n    if (options.allowedExtensions) {\n      const fileExtension = path.extname(fileName).toLowerCase();\n      if (!options.allowedExtensions.includes(fileExtension)) {\n        result.isValid = false;\n        result.errors.push(`File extension ${fileExtension} is not allowed`);\n      }\n    }\n\n    // Validate file name\n    if (!fileName || fileName.trim().length === 0) {\n      result.isValid = false;\n      result.errors.push('File name is required');\n    }\n\n    if (fileName.includes('..') || fileName.includes('/') || fileName.includes('\\\\')) {\n      result.isValid = false;\n      result.errors.push('File name contains invalid characters');\n    }\n\n    return result;\n  }\n\n  /**\n   * Upload a file from base64 data\n   */\n  async uploadFile(request: FileUploadRequest): Promise<FileOperationResult> {\n    const transferId = this.generateTransferId();\n    \n    try {\n      // Decode base64 to get actual file size\n      const buffer = Buffer.from(request.data, 'base64');\n      const actualFileSize = buffer.length;\n\n      // Validate file\n      const validation = await this.validateFile(\n        request.fileName,\n        request.mimeType,\n        actualFileSize\n      );\n\n      if (!validation.isValid) {\n        return {\n          success: false,\n          message: `File validation failed: ${validation.errors.join(', ')}`,\n          transferId,\n        };\n      }\n\n      const fileId = this.generateFileId();\n      const filePath = this.getFilePath(fileId);\n      const metadataPath = this.getMetadataPath(fileId);\n\n      // Initialize transfer progress\n      const progress: FileTransferProgress = {\n        transferId,\n        fileName: request.fileName,\n        totalBytes: actualFileSize,\n        transferredBytes: 0,\n        percentComplete: 0,\n        status: 'in-progress',\n        startedAt: new Date().toISOString(),\n      };\n\n      this.activeTransfers.set(transferId, progress);\n      this.emit('transferStarted', progress);\n\n      // Write file data\n      await fs.writeFile(filePath, buffer);\n\n      // Create metadata\n      const metadata: StaticFileInfo = {\n        id: fileId,\n        fileName: request.fileName,\n        mimeType: request.mimeType,\n        fileSize: actualFileSize,\n        uploadedAt: new Date().toISOString(),\n        workflowId: request.workflowId,\n        executionId: request.executionId,\n        nodeId: request.nodeId,\n        filePath,\n      };\n\n      await fs.writeFile(metadataPath, JSON.stringify(metadata, null, 2));\n\n      // Update progress\n      progress.transferredBytes = actualFileSize;\n      progress.percentComplete = 100;\n      progress.status = 'completed';\n      progress.completedAt = new Date().toISOString();\n\n      this.emit('transferCompleted', progress);\n      this.activeTransfers.delete(transferId);\n\n      return {\n        success: true,\n        fileId,\n        fileName: request.fileName,\n        message: `File uploaded successfully`,\n        fileSize: actualFileSize,\n        transferId,\n      };\n    } catch (error) {\n      const progress = this.activeTransfers.get(transferId);\n      if (progress) {\n        progress.status = 'failed';\n        progress.error = error instanceof Error ? error.message : 'Unknown error';\n        progress.completedAt = new Date().toISOString();\n        this.emit('transferFailed', progress);\n        this.activeTransfers.delete(transferId);\n      }\n\n      return {\n        success: false,\n        message: `File upload failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        transferId,\n      };\n    }\n  }\n\n  /**\n   * Download a file as base64 data\n   */\n  async downloadFile(fileId: string): Promise<FileOperationResult & { data?: string; metadata?: StaticFileInfo }> {\n    const transferId = this.generateTransferId();\n\n    try {\n      const filePath = this.getFilePath(fileId);\n      const metadataPath = this.getMetadataPath(fileId);\n\n      // Check if file exists\n      try {\n        await fs.access(filePath);\n        await fs.access(metadataPath);\n      } catch {\n        return {\n          success: false,\n          message: `File with ID ${fileId} not found`,\n          transferId,\n        };\n      }\n\n      // Read metadata\n      const metadataContent = await fs.readFile(metadataPath, 'utf-8');\n      const metadata: StaticFileInfo = JSON.parse(metadataContent);\n\n      // Initialize transfer progress\n      const progress: FileTransferProgress = {\n        transferId,\n        fileName: metadata.fileName,\n        totalBytes: metadata.fileSize,\n        transferredBytes: 0,\n        percentComplete: 0,\n        status: 'in-progress',\n        startedAt: new Date().toISOString(),\n      };\n\n      this.activeTransfers.set(transferId, progress);\n      this.emit('transferStarted', progress);\n\n      // Read file data\n      const buffer = await fs.readFile(filePath);\n      const base64Data = buffer.toString('base64');\n\n      // Update progress\n      progress.transferredBytes = metadata.fileSize;\n      progress.percentComplete = 100;\n      progress.status = 'completed';\n      progress.completedAt = new Date().toISOString();\n\n      this.emit('transferCompleted', progress);\n      this.activeTransfers.delete(transferId);\n\n      return {\n        success: true,\n        fileId,\n        fileName: metadata.fileName,\n        message: `File downloaded successfully`,\n        fileSize: metadata.fileSize,\n        transferId,\n        data: base64Data,\n        metadata,\n      };\n    } catch (error) {\n      const progress = this.activeTransfers.get(transferId);\n      if (progress) {\n        progress.status = 'failed';\n        progress.error = error instanceof Error ? error.message : 'Unknown error';\n        progress.completedAt = new Date().toISOString();\n        this.emit('transferFailed', progress);\n        this.activeTransfers.delete(transferId);\n      }\n\n      return {\n        success: false,\n        message: `File download failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        transferId,\n      };\n    }\n  }\n\n  /**\n   * Delete a file\n   */\n  async deleteFile(fileId: string): Promise<FileOperationResult> {\n    try {\n      const filePath = this.getFilePath(fileId);\n      const metadataPath = this.getMetadataPath(fileId);\n\n      // Check if file exists and get metadata\n      let metadata: StaticFileInfo | null = null;\n      try {\n        const metadataContent = await fs.readFile(metadataPath, 'utf-8');\n        metadata = JSON.parse(metadataContent);\n      } catch {\n        return {\n          success: false,\n          message: `File with ID ${fileId} not found`,\n        };\n      }\n\n      // Delete files\n      await Promise.all([\n        fs.unlink(filePath).catch(() => {}), // Ignore errors if file doesn't exist\n        fs.unlink(metadataPath).catch(() => {}),\n      ]);\n\n      return {\n        success: true,\n        fileId,\n        fileName: metadata?.fileName || 'Unknown',\n        message: `File deleted successfully`,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `File deletion failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n      };\n    }\n  }\n\n  /**\n   * List files based on search criteria\n   */\n  async listFiles(options: FileSearchOptions = {}): Promise<StaticFileInfo[]> {\n    try {\n      const files = await fs.readdir(this.config.baseDirectory);\n      const metadataFiles = files.filter(file => file.endsWith('.meta.json'));\n\n      const fileInfos: StaticFileInfo[] = [];\n\n      for (const metaFile of metadataFiles) {\n        try {\n          const metadataPath = path.join(this.config.baseDirectory, metaFile);\n          const content = await fs.readFile(metadataPath, 'utf-8');\n          const metadata: StaticFileInfo = JSON.parse(content);\n\n          // Apply filters\n          if (options.fileName && !metadata.fileName.toLowerCase().includes(options.fileName.toLowerCase())) {\n            continue;\n          }\n\n          if (options.mimeType && metadata.mimeType !== options.mimeType) {\n            continue;\n          }\n\n          if (options.workflowId && metadata.workflowId !== options.workflowId) {\n            continue;\n          }\n\n          if (options.executionId && metadata.executionId !== options.executionId) {\n            continue;\n          }\n\n          if (options.nodeId && metadata.nodeId !== options.nodeId) {\n            continue;\n          }\n\n          if (options.uploadedAfter && new Date(metadata.uploadedAt) < new Date(options.uploadedAfter)) {\n            continue;\n          }\n\n          if (options.uploadedBefore && new Date(metadata.uploadedAt) > new Date(options.uploadedBefore)) {\n            continue;\n          }\n\n          if (options.minFileSize && metadata.fileSize < options.minFileSize) {\n            continue;\n          }\n\n          if (options.maxFileSize && metadata.fileSize > options.maxFileSize) {\n            continue;\n          }\n\n          fileInfos.push(metadata);\n        } catch (error) {\n          // Skip invalid metadata files\n          continue;\n        }\n      }\n\n      // Sort by upload date (newest first)\n      fileInfos.sort((a, b) => new Date(b.uploadedAt).getTime() - new Date(a.uploadedAt).getTime());\n\n      // Apply pagination\n      if (options.offset || options.limit) {\n        const start = options.offset || 0;\n        const end = options.limit ? start + options.limit : undefined;\n        return fileInfos.slice(start, end);\n      }\n\n      return fileInfos;\n    } catch (error) {\n      throw new Error(`Failed to list files: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Get file metadata\n   */\n  async getFileMetadata(fileId: string): Promise<StaticFileInfo | null> {\n    try {\n      const metadataPath = this.getMetadataPath(fileId);\n      const content = await fs.readFile(metadataPath, 'utf-8');\n      return JSON.parse(content);\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * Get workflow file manifest\n   */\n  async getWorkflowFileManifest(workflowId: string): Promise<WorkflowFileManifest> {\n    const files = await this.listFiles({ workflowId });\n    const totalSize = files.reduce((sum, file) => sum + file.fileSize, 0);\n\n    return {\n      workflowId,\n      workflowName: workflowId, // Could be enhanced to get actual workflow name\n      files,\n      totalSize,\n      fileCount: files.length,\n      lastUpdated: files.length > 0 ? files[0].uploadedAt : new Date().toISOString(),\n    };\n  }\n\n  /**\n   * Cleanup old files\n   */\n  async cleanupOldFiles(olderThanDays?: number): Promise<FileCleanupResult> {\n    const cleanupDate = new Date();\n    cleanupDate.setDate(cleanupDate.getDate() - (olderThanDays || this.config.cleanupOlderThan || 30));\n\n    const allFiles = await this.listFiles();\n    const filesToDelete = allFiles.filter(file => new Date(file.uploadedAt) < cleanupDate);\n\n    let deletedFiles = 0;\n    let freedSpace = 0;\n    const errors: string[] = [];\n\n    for (const file of filesToDelete) {\n      try {\n        const result = await this.deleteFile(file.id);\n        if (result.success) {\n          deletedFiles++;\n          freedSpace += file.fileSize;\n        } else {\n          errors.push(`Failed to delete ${file.fileName}: ${result.message}`);\n        }\n      } catch (error) {\n        errors.push(`Error deleting ${file.fileName}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n\n    return {\n      deletedFiles,\n      freedSpace,\n      errors,\n    };\n  }\n\n  /**\n   * Get transfer progress\n   */\n  getTransferProgress(transferId: string): FileTransferProgress | null {\n    return this.activeTransfers.get(transferId) || null;\n  }\n\n  /**\n   * Get all active transfers\n   */\n  getActiveTransfers(): FileTransferProgress[] {\n    return Array.from(this.activeTransfers.values());\n  }\n\n  /**\n   * Cancel an active transfer\n   */\n  cancelTransfer(transferId: string): boolean {\n    const transfer = this.activeTransfers.get(transferId);\n    if (transfer && transfer.status === 'in-progress') {\n      transfer.status = 'cancelled';\n      transfer.completedAt = new Date().toISOString();\n      this.emit('transferCancelled', transfer);\n      this.activeTransfers.delete(transferId);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats(): Promise<{\n    totalFiles: number;\n    totalSize: number;\n    averageFileSize: number;\n    oldestFile: string | null;\n    newestFile: string | null;\n  }> {\n    const files = await this.listFiles();\n    \n    if (files.length === 0) {\n      return {\n        totalFiles: 0,\n        totalSize: 0,\n        averageFileSize: 0,\n        oldestFile: null,\n        newestFile: null,\n      };\n    }\n\n    const totalSize = files.reduce((sum, file) => sum + file.fileSize, 0);\n    const sortedByDate = [...files].sort((a, b) => new Date(a.uploadedAt).getTime() - new Date(b.uploadedAt).getTime());\n\n    return {\n      totalFiles: files.length,\n      totalSize,\n      averageFileSize: totalSize / files.length,\n      oldestFile: sortedByDate[0].uploadedAt,\n      newestFile: sortedByDate[sortedByDate.length - 1].uploadedAt,\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0940dc3ebbfaf8d4c242afdb8e33dd6ac02da44c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ipm9bts74 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ipm9bts74();
var __createBinding =
/* istanbul ignore next */
(cov_1ipm9bts74().s[0]++,
/* istanbul ignore next */
(cov_1ipm9bts74().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ipm9bts74().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1ipm9bts74().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1ipm9bts74().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1ipm9bts74().f[0]++;
  cov_1ipm9bts74().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1ipm9bts74().b[2][0]++;
    cov_1ipm9bts74().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1ipm9bts74().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1ipm9bts74().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1ipm9bts74().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[5][1]++,
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1ipm9bts74().b[3][0]++;
    cov_1ipm9bts74().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1ipm9bts74().f[1]++;
        cov_1ipm9bts74().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ipm9bts74().b[3][1]++;
  }
  cov_1ipm9bts74().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1ipm9bts74().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1ipm9bts74().f[2]++;
  cov_1ipm9bts74().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1ipm9bts74().b[7][0]++;
    cov_1ipm9bts74().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1ipm9bts74().b[7][1]++;
  }
  cov_1ipm9bts74().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1ipm9bts74().s[11]++,
/* istanbul ignore next */
(cov_1ipm9bts74().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1ipm9bts74().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1ipm9bts74().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1ipm9bts74().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1ipm9bts74().f[3]++;
  cov_1ipm9bts74().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1ipm9bts74().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1ipm9bts74().f[4]++;
  cov_1ipm9bts74().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1ipm9bts74().s[14]++,
/* istanbul ignore next */
(cov_1ipm9bts74().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1ipm9bts74().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1ipm9bts74().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1ipm9bts74().f[5]++;
  cov_1ipm9bts74().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[6]++;
    cov_1ipm9bts74().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[17]++, []);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1ipm9bts74().b[12][0]++;
          cov_1ipm9bts74().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1ipm9bts74().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1ipm9bts74().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1ipm9bts74().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1ipm9bts74().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[8]++;
    cov_1ipm9bts74().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[13][0]++;
      cov_1ipm9bts74().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[26]++, {});
    /* istanbul ignore next */
    cov_1ipm9bts74().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[15][0]++;
      cov_1ipm9bts74().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1ipm9bts74().b[16][0]++;
          cov_1ipm9bts74().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1ipm9bts74().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[15][1]++;
    }
    cov_1ipm9bts74().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1ipm9bts74().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1ipm9bts74().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ipm9bts74().s[36]++;
exports.FileHandlingUtils = void 0;
const fs =
/* istanbul ignore next */
(cov_1ipm9bts74().s[37]++, __importStar(require("fs/promises")));
const path =
/* istanbul ignore next */
(cov_1ipm9bts74().s[38]++, __importStar(require("path")));
const crypto =
/* istanbul ignore next */
(cov_1ipm9bts74().s[39]++, __importStar(require("crypto")));
const events_1 =
/* istanbul ignore next */
(cov_1ipm9bts74().s[40]++, require("events"));
class FileHandlingUtils extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  config;
  activeTransfers =
  /* istanbul ignore next */
  (cov_1ipm9bts74().s[41]++, new Map());
  constructor(config =
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[9]++;
    cov_1ipm9bts74().s[42]++;
    super();
    /* istanbul ignore next */
    cov_1ipm9bts74().s[43]++;
    this.config = {
      baseDirectory:
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[18][0]++, config.baseDirectory) ||
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[18][1]++, './data/files'),
      maxFileSize:
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[19][0]++, config.maxFileSize) ||
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[19][1]++, 100 * 1024 * 1024),
      // 100MB default
      allowedMimeTypes:
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[20][0]++, config.allowedMimeTypes) ||
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[20][1]++, ['image/*', 'text/*', 'application/json', 'application/pdf', 'application/zip', 'application/x-zip-compressed', 'application/octet-stream']),
      cleanupOlderThan:
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[21][0]++, config.cleanupOlderThan) ||
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[21][1]++, 30) // 30 days
    };
    /* istanbul ignore next */
    cov_1ipm9bts74().s[44]++;
    this.ensureDirectoryExists();
  }
  async ensureDirectoryExists() {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[10]++;
    cov_1ipm9bts74().s[45]++;
    try {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[46]++;
      await fs.access(this.config.baseDirectory);
    } catch {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[47]++;
      await fs.mkdir(this.config.baseDirectory, {
        recursive: true
      });
    }
  }
  /**
   * Generate a unique file ID
   */
  generateFileId() {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[11]++;
    cov_1ipm9bts74().s[48]++;
    return crypto.randomUUID();
  }
  /**
   * Generate transfer ID for progress tracking
   */
  generateTransferId() {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[12]++;
    cov_1ipm9bts74().s[49]++;
    return `transfer_${Date.now()}_${crypto.randomBytes(4).toString('hex')}`;
  }
  /**
   * Get file path from file ID
   */
  getFilePath(fileId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[13]++;
    cov_1ipm9bts74().s[50]++;
    return path.join(this.config.baseDirectory, `${fileId}.data`);
  }
  /**
   * Get metadata file path from file ID
   */
  getMetadataPath(fileId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[14]++;
    cov_1ipm9bts74().s[51]++;
    return path.join(this.config.baseDirectory, `${fileId}.meta.json`);
  }
  /**
   * Validate file before upload
   */
  async validateFile(fileName, mimeType, fileSize, options =
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[22][0]++, {})) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[15]++;
    const result =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[52]++, {
      isValid: true,
      errors: [],
      warnings: []
    });
    const maxSize =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[53]++,
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[23][0]++, options.maxFileSize) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[23][1]++, this.config.maxFileSize));
    const allowedTypes =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[54]++,
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[24][0]++, options.allowedMimeTypes) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[24][1]++, this.config.allowedMimeTypes));
    // Check file size
    /* istanbul ignore next */
    cov_1ipm9bts74().s[55]++;
    if (fileSize > maxSize) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[25][0]++;
      cov_1ipm9bts74().s[56]++;
      result.isValid = false;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[57]++;
      result.errors.push(`File size ${fileSize} bytes exceeds maximum allowed size ${maxSize} bytes`);
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[25][1]++;
    }
    // Check MIME type
    const isMimeTypeAllowed =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[58]++, allowedTypes.some(allowed => {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[16]++;
      cov_1ipm9bts74().s[59]++;
      if (allowed.endsWith('/*')) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[26][0]++;
        const prefix =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[60]++, allowed.slice(0, -2));
        /* istanbul ignore next */
        cov_1ipm9bts74().s[61]++;
        return mimeType.startsWith(prefix);
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[26][1]++;
      }
      cov_1ipm9bts74().s[62]++;
      return allowed === mimeType;
    }));
    /* istanbul ignore next */
    cov_1ipm9bts74().s[63]++;
    if (!isMimeTypeAllowed) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[27][0]++;
      cov_1ipm9bts74().s[64]++;
      result.isValid = false;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[65]++;
      result.errors.push(`MIME type ${mimeType} is not allowed`);
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[27][1]++;
    }
    // Check file extension if specified
    cov_1ipm9bts74().s[66]++;
    if (options.allowedExtensions) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[28][0]++;
      const fileExtension =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[67]++, path.extname(fileName).toLowerCase());
      /* istanbul ignore next */
      cov_1ipm9bts74().s[68]++;
      if (!options.allowedExtensions.includes(fileExtension)) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[29][0]++;
        cov_1ipm9bts74().s[69]++;
        result.isValid = false;
        /* istanbul ignore next */
        cov_1ipm9bts74().s[70]++;
        result.errors.push(`File extension ${fileExtension} is not allowed`);
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[29][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[28][1]++;
    }
    // Validate file name
    cov_1ipm9bts74().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[31][0]++, !fileName) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[31][1]++, fileName.trim().length === 0)) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[30][0]++;
      cov_1ipm9bts74().s[72]++;
      result.isValid = false;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[73]++;
      result.errors.push('File name is required');
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[30][1]++;
    }
    cov_1ipm9bts74().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[33][0]++, fileName.includes('..')) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[33][1]++, fileName.includes('/')) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[33][2]++, fileName.includes('\\'))) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[32][0]++;
      cov_1ipm9bts74().s[75]++;
      result.isValid = false;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[76]++;
      result.errors.push('File name contains invalid characters');
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[32][1]++;
    }
    cov_1ipm9bts74().s[77]++;
    return result;
  }
  /**
   * Upload a file from base64 data
   */
  async uploadFile(request) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[17]++;
    const transferId =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[78]++, this.generateTransferId());
    /* istanbul ignore next */
    cov_1ipm9bts74().s[79]++;
    try {
      // Decode base64 to get actual file size
      const buffer =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[80]++, Buffer.from(request.data, 'base64'));
      const actualFileSize =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[81]++, buffer.length);
      // Validate file
      const validation =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[82]++, await this.validateFile(request.fileName, request.mimeType, actualFileSize));
      /* istanbul ignore next */
      cov_1ipm9bts74().s[83]++;
      if (!validation.isValid) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[34][0]++;
        cov_1ipm9bts74().s[84]++;
        return {
          success: false,
          message: `File validation failed: ${validation.errors.join(', ')}`,
          transferId
        };
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[34][1]++;
      }
      const fileId =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[85]++, this.generateFileId());
      const filePath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[86]++, this.getFilePath(fileId));
      const metadataPath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[87]++, this.getMetadataPath(fileId));
      // Initialize transfer progress
      const progress =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[88]++, {
        transferId,
        fileName: request.fileName,
        totalBytes: actualFileSize,
        transferredBytes: 0,
        percentComplete: 0,
        status: 'in-progress',
        startedAt: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1ipm9bts74().s[89]++;
      this.activeTransfers.set(transferId, progress);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[90]++;
      this.emit('transferStarted', progress);
      // Write file data
      /* istanbul ignore next */
      cov_1ipm9bts74().s[91]++;
      await fs.writeFile(filePath, buffer);
      // Create metadata
      const metadata =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[92]++, {
        id: fileId,
        fileName: request.fileName,
        mimeType: request.mimeType,
        fileSize: actualFileSize,
        uploadedAt: new Date().toISOString(),
        workflowId: request.workflowId,
        executionId: request.executionId,
        nodeId: request.nodeId,
        filePath
      });
      /* istanbul ignore next */
      cov_1ipm9bts74().s[93]++;
      await fs.writeFile(metadataPath, JSON.stringify(metadata, null, 2));
      // Update progress
      /* istanbul ignore next */
      cov_1ipm9bts74().s[94]++;
      progress.transferredBytes = actualFileSize;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[95]++;
      progress.percentComplete = 100;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[96]++;
      progress.status = 'completed';
      /* istanbul ignore next */
      cov_1ipm9bts74().s[97]++;
      progress.completedAt = new Date().toISOString();
      /* istanbul ignore next */
      cov_1ipm9bts74().s[98]++;
      this.emit('transferCompleted', progress);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[99]++;
      this.activeTransfers.delete(transferId);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[100]++;
      return {
        success: true,
        fileId,
        fileName: request.fileName,
        message: `File uploaded successfully`,
        fileSize: actualFileSize,
        transferId
      };
    } catch (error) {
      const progress =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[101]++, this.activeTransfers.get(transferId));
      /* istanbul ignore next */
      cov_1ipm9bts74().s[102]++;
      if (progress) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[35][0]++;
        cov_1ipm9bts74().s[103]++;
        progress.status = 'failed';
        /* istanbul ignore next */
        cov_1ipm9bts74().s[104]++;
        progress.error = error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[36][1]++, 'Unknown error');
        /* istanbul ignore next */
        cov_1ipm9bts74().s[105]++;
        progress.completedAt = new Date().toISOString();
        /* istanbul ignore next */
        cov_1ipm9bts74().s[106]++;
        this.emit('transferFailed', progress);
        /* istanbul ignore next */
        cov_1ipm9bts74().s[107]++;
        this.activeTransfers.delete(transferId);
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[35][1]++;
      }
      cov_1ipm9bts74().s[108]++;
      return {
        success: false,
        message: `File upload failed: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[37][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[37][1]++, 'Unknown error')}`,
        transferId
      };
    }
  }
  /**
   * Download a file as base64 data
   */
  async downloadFile(fileId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[18]++;
    const transferId =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[109]++, this.generateTransferId());
    /* istanbul ignore next */
    cov_1ipm9bts74().s[110]++;
    try {
      const filePath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[111]++, this.getFilePath(fileId));
      const metadataPath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[112]++, this.getMetadataPath(fileId));
      // Check if file exists
      /* istanbul ignore next */
      cov_1ipm9bts74().s[113]++;
      try {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[114]++;
        await fs.access(filePath);
        /* istanbul ignore next */
        cov_1ipm9bts74().s[115]++;
        await fs.access(metadataPath);
      } catch {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[116]++;
        return {
          success: false,
          message: `File with ID ${fileId} not found`,
          transferId
        };
      }
      // Read metadata
      const metadataContent =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[117]++, await fs.readFile(metadataPath, 'utf-8'));
      const metadata =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[118]++, JSON.parse(metadataContent));
      // Initialize transfer progress
      const progress =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[119]++, {
        transferId,
        fileName: metadata.fileName,
        totalBytes: metadata.fileSize,
        transferredBytes: 0,
        percentComplete: 0,
        status: 'in-progress',
        startedAt: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1ipm9bts74().s[120]++;
      this.activeTransfers.set(transferId, progress);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[121]++;
      this.emit('transferStarted', progress);
      // Read file data
      const buffer =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[122]++, await fs.readFile(filePath));
      const base64Data =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[123]++, buffer.toString('base64'));
      // Update progress
      /* istanbul ignore next */
      cov_1ipm9bts74().s[124]++;
      progress.transferredBytes = metadata.fileSize;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[125]++;
      progress.percentComplete = 100;
      /* istanbul ignore next */
      cov_1ipm9bts74().s[126]++;
      progress.status = 'completed';
      /* istanbul ignore next */
      cov_1ipm9bts74().s[127]++;
      progress.completedAt = new Date().toISOString();
      /* istanbul ignore next */
      cov_1ipm9bts74().s[128]++;
      this.emit('transferCompleted', progress);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[129]++;
      this.activeTransfers.delete(transferId);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[130]++;
      return {
        success: true,
        fileId,
        fileName: metadata.fileName,
        message: `File downloaded successfully`,
        fileSize: metadata.fileSize,
        transferId,
        data: base64Data,
        metadata
      };
    } catch (error) {
      const progress =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[131]++, this.activeTransfers.get(transferId));
      /* istanbul ignore next */
      cov_1ipm9bts74().s[132]++;
      if (progress) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[38][0]++;
        cov_1ipm9bts74().s[133]++;
        progress.status = 'failed';
        /* istanbul ignore next */
        cov_1ipm9bts74().s[134]++;
        progress.error = error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[39][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[39][1]++, 'Unknown error');
        /* istanbul ignore next */
        cov_1ipm9bts74().s[135]++;
        progress.completedAt = new Date().toISOString();
        /* istanbul ignore next */
        cov_1ipm9bts74().s[136]++;
        this.emit('transferFailed', progress);
        /* istanbul ignore next */
        cov_1ipm9bts74().s[137]++;
        this.activeTransfers.delete(transferId);
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[38][1]++;
      }
      cov_1ipm9bts74().s[138]++;
      return {
        success: false,
        message: `File download failed: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[40][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[40][1]++, 'Unknown error')}`,
        transferId
      };
    }
  }
  /**
   * Delete a file
   */
  async deleteFile(fileId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[19]++;
    cov_1ipm9bts74().s[139]++;
    try {
      const filePath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[140]++, this.getFilePath(fileId));
      const metadataPath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[141]++, this.getMetadataPath(fileId));
      // Check if file exists and get metadata
      let metadata =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[142]++, null);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[143]++;
      try {
        const metadataContent =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[144]++, await fs.readFile(metadataPath, 'utf-8'));
        /* istanbul ignore next */
        cov_1ipm9bts74().s[145]++;
        metadata = JSON.parse(metadataContent);
      } catch {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[146]++;
        return {
          success: false,
          message: `File with ID ${fileId} not found`
        };
      }
      // Delete files
      /* istanbul ignore next */
      cov_1ipm9bts74().s[147]++;
      await Promise.all([fs.unlink(filePath).catch(() => {
        /* istanbul ignore next */
        cov_1ipm9bts74().f[20]++;
      }),
      // Ignore errors if file doesn't exist
      fs.unlink(metadataPath).catch(() => {
        /* istanbul ignore next */
        cov_1ipm9bts74().f[21]++;
      })]);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[148]++;
      return {
        success: true,
        fileId,
        fileName:
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[41][0]++, metadata?.fileName) ||
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[41][1]++, 'Unknown'),
        message: `File deleted successfully`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[149]++;
      return {
        success: false,
        message: `File deletion failed: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[42][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[42][1]++, 'Unknown error')}`
      };
    }
  }
  /**
   * List files based on search criteria
   */
  async listFiles(options =
  /* istanbul ignore next */
  (cov_1ipm9bts74().b[43][0]++, {})) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[22]++;
    cov_1ipm9bts74().s[150]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[151]++, await fs.readdir(this.config.baseDirectory));
      const metadataFiles =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[152]++, files.filter(file => {
        /* istanbul ignore next */
        cov_1ipm9bts74().f[23]++;
        cov_1ipm9bts74().s[153]++;
        return file.endsWith('.meta.json');
      }));
      const fileInfos =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[154]++, []);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[155]++;
      for (const metaFile of metadataFiles) {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[156]++;
        try {
          const metadataPath =
          /* istanbul ignore next */
          (cov_1ipm9bts74().s[157]++, path.join(this.config.baseDirectory, metaFile));
          const content =
          /* istanbul ignore next */
          (cov_1ipm9bts74().s[158]++, await fs.readFile(metadataPath, 'utf-8'));
          const metadata =
          /* istanbul ignore next */
          (cov_1ipm9bts74().s[159]++, JSON.parse(content));
          // Apply filters
          /* istanbul ignore next */
          cov_1ipm9bts74().s[160]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[45][0]++, options.fileName) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[45][1]++, !metadata.fileName.toLowerCase().includes(options.fileName.toLowerCase()))) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[44][0]++;
            cov_1ipm9bts74().s[161]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[44][1]++;
          }
          cov_1ipm9bts74().s[162]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[47][0]++, options.mimeType) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[47][1]++, metadata.mimeType !== options.mimeType)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[46][0]++;
            cov_1ipm9bts74().s[163]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[46][1]++;
          }
          cov_1ipm9bts74().s[164]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[49][0]++, options.workflowId) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[49][1]++, metadata.workflowId !== options.workflowId)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[48][0]++;
            cov_1ipm9bts74().s[165]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[48][1]++;
          }
          cov_1ipm9bts74().s[166]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[51][0]++, options.executionId) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[51][1]++, metadata.executionId !== options.executionId)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[50][0]++;
            cov_1ipm9bts74().s[167]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[50][1]++;
          }
          cov_1ipm9bts74().s[168]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[53][0]++, options.nodeId) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[53][1]++, metadata.nodeId !== options.nodeId)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[52][0]++;
            cov_1ipm9bts74().s[169]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[52][1]++;
          }
          cov_1ipm9bts74().s[170]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[55][0]++, options.uploadedAfter) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[55][1]++, new Date(metadata.uploadedAt) < new Date(options.uploadedAfter))) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[54][0]++;
            cov_1ipm9bts74().s[171]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[54][1]++;
          }
          cov_1ipm9bts74().s[172]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[57][0]++, options.uploadedBefore) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[57][1]++, new Date(metadata.uploadedAt) > new Date(options.uploadedBefore))) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[56][0]++;
            cov_1ipm9bts74().s[173]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[56][1]++;
          }
          cov_1ipm9bts74().s[174]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[59][0]++, options.minFileSize) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[59][1]++, metadata.fileSize < options.minFileSize)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[58][0]++;
            cov_1ipm9bts74().s[175]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[58][1]++;
          }
          cov_1ipm9bts74().s[176]++;
          if (
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[61][0]++, options.maxFileSize) &&
          /* istanbul ignore next */
          (cov_1ipm9bts74().b[61][1]++, metadata.fileSize > options.maxFileSize)) {
            /* istanbul ignore next */
            cov_1ipm9bts74().b[60][0]++;
            cov_1ipm9bts74().s[177]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_1ipm9bts74().b[60][1]++;
          }
          cov_1ipm9bts74().s[178]++;
          fileInfos.push(metadata);
        } catch (error) {
          /* istanbul ignore next */
          cov_1ipm9bts74().s[179]++;
          // Skip invalid metadata files
          continue;
        }
      }
      // Sort by upload date (newest first)
      /* istanbul ignore next */
      cov_1ipm9bts74().s[180]++;
      fileInfos.sort((a, b) => {
        /* istanbul ignore next */
        cov_1ipm9bts74().f[24]++;
        cov_1ipm9bts74().s[181]++;
        return new Date(b.uploadedAt).getTime() - new Date(a.uploadedAt).getTime();
      });
      // Apply pagination
      /* istanbul ignore next */
      cov_1ipm9bts74().s[182]++;
      if (
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[63][0]++, options.offset) ||
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[63][1]++, options.limit)) {
        /* istanbul ignore next */
        cov_1ipm9bts74().b[62][0]++;
        const start =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[183]++,
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[64][0]++, options.offset) ||
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[64][1]++, 0));
        const end =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[184]++, options.limit ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[65][0]++, start + options.limit) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[65][1]++, undefined));
        /* istanbul ignore next */
        cov_1ipm9bts74().s[185]++;
        return fileInfos.slice(start, end);
      } else
      /* istanbul ignore next */
      {
        cov_1ipm9bts74().b[62][1]++;
      }
      cov_1ipm9bts74().s[186]++;
      return fileInfos;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[187]++;
      throw new Error(`Failed to list files: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[66][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[66][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Get file metadata
   */
  async getFileMetadata(fileId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[25]++;
    cov_1ipm9bts74().s[188]++;
    try {
      const metadataPath =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[189]++, this.getMetadataPath(fileId));
      const content =
      /* istanbul ignore next */
      (cov_1ipm9bts74().s[190]++, await fs.readFile(metadataPath, 'utf-8'));
      /* istanbul ignore next */
      cov_1ipm9bts74().s[191]++;
      return JSON.parse(content);
    } catch {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[192]++;
      return null;
    }
  }
  /**
   * Get workflow file manifest
   */
  async getWorkflowFileManifest(workflowId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[26]++;
    const files =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[193]++, await this.listFiles({
      workflowId
    }));
    const totalSize =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[194]++, files.reduce((sum, file) => {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[27]++;
      cov_1ipm9bts74().s[195]++;
      return sum + file.fileSize;
    }, 0));
    /* istanbul ignore next */
    cov_1ipm9bts74().s[196]++;
    return {
      workflowId,
      workflowName: workflowId,
      // Could be enhanced to get actual workflow name
      files,
      totalSize,
      fileCount: files.length,
      lastUpdated: files.length > 0 ?
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[67][0]++, files[0].uploadedAt) :
      /* istanbul ignore next */
      (cov_1ipm9bts74().b[67][1]++, new Date().toISOString())
    };
  }
  /**
   * Cleanup old files
   */
  async cleanupOldFiles(olderThanDays) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[28]++;
    const cleanupDate =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[197]++, new Date());
    /* istanbul ignore next */
    cov_1ipm9bts74().s[198]++;
    cleanupDate.setDate(cleanupDate.getDate() - (
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[68][0]++, olderThanDays) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[68][1]++, this.config.cleanupOlderThan) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[68][2]++, 30)));
    const allFiles =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[199]++, await this.listFiles());
    const filesToDelete =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[200]++, allFiles.filter(file => {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[29]++;
      cov_1ipm9bts74().s[201]++;
      return new Date(file.uploadedAt) < cleanupDate;
    }));
    let deletedFiles =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[202]++, 0);
    let freedSpace =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[203]++, 0);
    const errors =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[204]++, []);
    /* istanbul ignore next */
    cov_1ipm9bts74().s[205]++;
    for (const file of filesToDelete) {
      /* istanbul ignore next */
      cov_1ipm9bts74().s[206]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1ipm9bts74().s[207]++, await this.deleteFile(file.id));
        /* istanbul ignore next */
        cov_1ipm9bts74().s[208]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_1ipm9bts74().b[69][0]++;
          cov_1ipm9bts74().s[209]++;
          deletedFiles++;
          /* istanbul ignore next */
          cov_1ipm9bts74().s[210]++;
          freedSpace += file.fileSize;
        } else {
          /* istanbul ignore next */
          cov_1ipm9bts74().b[69][1]++;
          cov_1ipm9bts74().s[211]++;
          errors.push(`Failed to delete ${file.fileName}: ${result.message}`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1ipm9bts74().s[212]++;
        errors.push(`Error deleting ${file.fileName}: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[70][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ipm9bts74().b[70][1]++, 'Unknown error')}`);
      }
    }
    /* istanbul ignore next */
    cov_1ipm9bts74().s[213]++;
    return {
      deletedFiles,
      freedSpace,
      errors
    };
  }
  /**
   * Get transfer progress
   */
  getTransferProgress(transferId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[30]++;
    cov_1ipm9bts74().s[214]++;
    return /* istanbul ignore next */(cov_1ipm9bts74().b[71][0]++, this.activeTransfers.get(transferId)) ||
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[71][1]++, null);
  }
  /**
   * Get all active transfers
   */
  getActiveTransfers() {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[31]++;
    cov_1ipm9bts74().s[215]++;
    return Array.from(this.activeTransfers.values());
  }
  /**
   * Cancel an active transfer
   */
  cancelTransfer(transferId) {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[32]++;
    const transfer =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[216]++, this.activeTransfers.get(transferId));
    /* istanbul ignore next */
    cov_1ipm9bts74().s[217]++;
    if (
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[73][0]++, transfer) &&
    /* istanbul ignore next */
    (cov_1ipm9bts74().b[73][1]++, transfer.status === 'in-progress')) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[72][0]++;
      cov_1ipm9bts74().s[218]++;
      transfer.status = 'cancelled';
      /* istanbul ignore next */
      cov_1ipm9bts74().s[219]++;
      transfer.completedAt = new Date().toISOString();
      /* istanbul ignore next */
      cov_1ipm9bts74().s[220]++;
      this.emit('transferCancelled', transfer);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[221]++;
      this.activeTransfers.delete(transferId);
      /* istanbul ignore next */
      cov_1ipm9bts74().s[222]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[72][1]++;
    }
    cov_1ipm9bts74().s[223]++;
    return false;
  }
  /**
   * Get storage statistics
   */
  async getStorageStats() {
    /* istanbul ignore next */
    cov_1ipm9bts74().f[33]++;
    const files =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[224]++, await this.listFiles());
    /* istanbul ignore next */
    cov_1ipm9bts74().s[225]++;
    if (files.length === 0) {
      /* istanbul ignore next */
      cov_1ipm9bts74().b[74][0]++;
      cov_1ipm9bts74().s[226]++;
      return {
        totalFiles: 0,
        totalSize: 0,
        averageFileSize: 0,
        oldestFile: null,
        newestFile: null
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ipm9bts74().b[74][1]++;
    }
    const totalSize =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[227]++, files.reduce((sum, file) => {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[34]++;
      cov_1ipm9bts74().s[228]++;
      return sum + file.fileSize;
    }, 0));
    const sortedByDate =
    /* istanbul ignore next */
    (cov_1ipm9bts74().s[229]++, [...files].sort((a, b) => {
      /* istanbul ignore next */
      cov_1ipm9bts74().f[35]++;
      cov_1ipm9bts74().s[230]++;
      return new Date(a.uploadedAt).getTime() - new Date(b.uploadedAt).getTime();
    }));
    /* istanbul ignore next */
    cov_1ipm9bts74().s[231]++;
    return {
      totalFiles: files.length,
      totalSize,
      averageFileSize: totalSize / files.length,
      oldestFile: sortedByDate[0].uploadedAt,
      newestFile: sortedByDate[sortedByDate.length - 1].uploadedAt
    };
  }
}
/* istanbul ignore next */
cov_1ipm9bts74().s[232]++;
exports.FileHandlingUtils = FileHandlingUtils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,