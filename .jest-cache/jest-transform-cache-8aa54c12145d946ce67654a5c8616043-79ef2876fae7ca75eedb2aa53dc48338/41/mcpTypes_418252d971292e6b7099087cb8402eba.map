{"version":3,"names":["MCPErrorCode","cov_28kjakm4eb","s","f","b"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/types/mcpTypes.ts"],"sourcesContent":["// MCP (Model Context Protocol) type definitions for conversion utilities\n\nexport interface MCPServer {\n  id: string;\n  name: string;\n  url: string;\n  version: string;\n  authentication?: MCPAuthentication;\n  capabilities: MCPCapabilities;\n}\n\nexport interface MCPAuthentication {\n  type: 'none' | 'bearer' | 'api-key' | 'basic';\n  credentials?: Record<string, unknown>;\n}\n\nexport interface MCPCapabilities {\n  tools: MCPTool[];\n  resources?: MCPResource[];\n  sampling?: MCPSamplingCapability;\n}\n\nexport interface MCPTool {\n  name: string;\n  description: string;\n  inputSchema: MCPToolSchema;\n}\n\nexport interface MCPToolSchema {\n  type: 'object';\n  properties: Record<string, MCPToolProperty>;\n  required?: string[];\n  additionalProperties?: boolean;\n}\n\nexport interface MCPToolProperty {\n  type: 'string' | 'number' | 'integer' | 'boolean' | 'array' | 'object';\n  description?: string;\n  default?: unknown;\n  enum?: unknown[];\n  items?: MCPToolProperty;\n  properties?: Record<string, MCPToolProperty>;\n  format?: string;\n  minimum?: number;\n  maximum?: number;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: string;\n}\n\nexport interface MCPResource {\n  uri: string;\n  name: string;\n  description?: string;\n  mimeType?: string;\n}\n\nexport interface MCPSamplingCapability {\n  models: string[];\n}\n\n// Request/Response types\nexport interface MCPToolRequest {\n  name: string;\n  arguments: Record<string, unknown>;\n}\n\nexport interface MCPToolResponse {\n  content: Array<{\n    type: 'text' | 'image' | 'resource';\n    text?: string;\n    data?: string;\n    mimeType?: string;\n  }>;\n  isError?: boolean;\n}\n\nexport interface MCPError {\n  code: MCPErrorCode;\n  message: string;\n  data?: unknown;\n}\n\nexport enum MCPErrorCode {\n  PARSE_ERROR = -32700,\n  INVALID_REQUEST = -32600,\n  METHOD_NOT_FOUND = -32601,\n  INVALID_PARAMS = -32602,\n  INTERNAL_ERROR = -32603,\n  TOOL_NOT_FOUND = -404,\n  AUTHENTICATION_FAILED = -401,\n  AUTHORIZATION_FAILED = -403,\n}\n\n// n8n Integration Types\nexport interface N8nNodeTypeDescription {\n  displayName: string;\n  name: string;\n  icon: string;\n  group: string[];\n  version: number[];\n  description: string;\n  defaults: {\n    name: string;\n  };\n  inputs: string[];\n  outputs: string[];\n  credentials?: Array<{\n    name: string;\n    required: boolean;\n  }>;\n  properties: N8nNodeProperty[];\n}\n\nexport interface N8nNodeProperty {\n  displayName: string;\n  name: string;\n  type: N8nPropertyType;\n  default?: unknown;\n  description?: string;\n  required?: boolean;\n  placeholder?: string;\n  options?: Array<{\n    name: string;\n    value: unknown;\n  }>;\n  typeOptions?: Record<string, unknown>;\n  displayOptions?: {\n    show?: Record<string, unknown[]>;\n    hide?: Record<string, unknown[]>;\n  };\n}\n\nexport type N8nPropertyType =\n  | 'string'\n  | 'number'\n  | 'boolean'\n  | 'options'\n  | 'multiOptions'\n  | 'json'\n  | 'dateTime'\n  | 'collection'\n  | 'fixedCollection'\n  | 'resourceLocator'\n  | 'hidden';\n\nexport interface N8nExecutionData {\n  json: Record<string, unknown>;\n  binary?: Record<\n    string,\n    {\n      data: string;\n      mimeType: string;\n      fileName?: string;\n      fileExtension?: string;\n    }\n  >;\n  pairedItem?: {\n    item: number;\n    input?: number;\n  };\n}\n\n// Conversion Configuration\nexport interface MCPConversionConfig {\n  nodeNamePrefix?: string;\n  defaultIcon?: string;\n  defaultGroup?: string[];\n  credentialName?: string;\n  enableBinaryData?: boolean;\n  enableResourceAccess?: boolean;\n  typeMapping?: Record<string, N8nPropertyType>;\n}\n\nexport interface ConversionResult {\n  success: boolean;\n  nodeDefinition?: N8nNodeTypeDescription;\n  errors?: string[];\n  warnings?: string[];\n}\n\nexport interface ConversionContext {\n  mcpServer: MCPServer;\n  tool: MCPTool;\n  config: MCPConversionConfig;\n}\n\n// Connection and execution types\nexport interface MCPConnection {\n  serverId: string;\n  url: string;\n  authentication: MCPAuthentication;\n  isConnected: boolean;\n  lastHeartbeat?: Date;\n}\n\nexport interface MCPExecutionContext {\n  connection: MCPConnection;\n  tool: MCPTool;\n  inputData: N8nExecutionData[];\n  nodeParameters: Record<string, unknown>;\n}\n\nexport interface MCPExecutionResult {\n  outputData: N8nExecutionData[];\n  executionTime: number;\n  success: boolean;\n  error?: MCPError;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmFA,WAAYA,YASX;AAAA;AAAAC,cAAA,GAAAC,CAAA;AATD,WAAYF,YAAY;EAAA;EAAAC,cAAA,GAAAE,CAAA;EAAAF,cAAA,GAAAC,CAAA;EACtBF,YAAA,CAAAA,YAAA,yCAAoB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACpBF,YAAA,CAAAA,YAAA,iDAAwB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACxBF,YAAA,CAAAA,YAAA,mDAAyB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACzBF,YAAA,CAAAA,YAAA,+CAAuB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACvBF,YAAA,CAAAA,YAAA,+CAAuB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACvBF,YAAA,CAAAA,YAAA,6CAAqB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACrBF,YAAA,CAAAA,YAAA,2DAA4B;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAC5BF,YAAA,CAAAA,YAAA,yDAA2B;AAC7B,CAAC;AATW;AAAA,CAAAC,cAAA,GAAAG,CAAA,UAAAJ,YAAY;AAAA;AAAA,CAAAC,cAAA,GAAAG,CAAA,UAAZJ,YAAY","ignoreList":[]}