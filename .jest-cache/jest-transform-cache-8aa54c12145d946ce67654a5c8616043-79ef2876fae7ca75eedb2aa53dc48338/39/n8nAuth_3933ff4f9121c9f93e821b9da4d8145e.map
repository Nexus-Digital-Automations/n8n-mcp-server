{"version":3,"names":["cov_t0u8xt9l2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createN8nAuth","n8nClient_js_1","require","authProvider_js_1","N8nAuthProvider","BaseAuthProvider","config","authCache","Map","constructor","required","defaultBaseUrl","process","env","N8N_BASE_URL","defaultApiKey","N8N_API_KEY","validateConnection","cacheDuration","defaultRoles","authenticate","context","createAnonymousAuth","credentials","extractCredentials","success","error","cacheKey","getCacheKey","cached","get","expires","Date","now","result","authResult","validateCredentials","set","Error","message","String","refresh","user","baseUrl","n8nBaseUrl","apiKey","n8nApiKey","delete","id","roles","permissions","community","enterprise","workflows","executions","users","audit","authType","features","headers","replace","client","N8nClient","getWorkflows","limit","createAuthenticatedUser","detectFeatures","detectUserRoles","createPermissions","slice","getUsers","push","getProjects","Set","clearCache","clear","getCacheStats","validEntries","key","entry","entries","size","N8N_MCP_AUTH_REQUIRED","N8N_MCP_VALIDATE_CONNECTION","N8N_MCP_AUTH_CACHE_DURATION","parseInt","N8N_MCP_DEFAULT_ROLES","split","defaultN8nAuth"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/n8nAuth.ts"],"sourcesContent":["/**\n * n8n-specific Authentication Provider\n *\n * Implements authentication for n8n MCP server using n8n API keys and role-based access control.\n * Supports both Community and Enterprise n8n instances with appropriate feature detection.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-unused-vars */\n\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  AuthProvider,\n  BaseAuthProvider,\n  RequestContext,\n  AuthResult,\n  AuthenticatedUser,\n} from './authProvider.js';\n\n/**\n * n8n authentication configuration\n */\nexport interface N8nAuthConfig {\n  /** Whether authentication is required (default: false for backward compatibility) */\n  required?: boolean;\n\n  /** Default n8n instance URL (can be overridden per request) */\n  defaultBaseUrl?: string;\n\n  /** Default n8n API key (can be overridden per request) */\n  defaultApiKey?: string;\n\n  /** Whether to validate n8n connection during authentication */\n  validateConnection?: boolean;\n\n  /** Cache authentication results for this duration (ms) */\n  cacheDuration?: number;\n\n  /** Default user roles for authenticated users */\n  defaultRoles?: string[];\n}\n\n/**\n * Authentication cache entry\n */\ninterface AuthCacheEntry {\n  result: AuthResult;\n  expires: number;\n}\n\n/**\n * n8n authentication provider\n *\n * Provides authentication using n8n API keys with role-based access control.\n * Supports both authenticated and anonymous access based on configuration.\n */\nexport class N8nAuthProvider extends BaseAuthProvider {\n  private config: Required<N8nAuthConfig>;\n  private authCache = new Map<string, AuthCacheEntry>();\n\n  constructor(config: N8nAuthConfig = {}) {\n    super();\n\n    // Set defaults\n    this.config = {\n      required: false,\n      defaultBaseUrl: process.env.N8N_BASE_URL || '',\n      defaultApiKey: process.env.N8N_API_KEY || '',\n      validateConnection: true,\n      cacheDuration: 5 * 60 * 1000, // 5 minutes\n      defaultRoles: ['member'],\n      ...config,\n    };\n  }\n\n  /**\n   * Authenticate client request\n   */\n  async authenticate(context: RequestContext): Promise<AuthResult> {\n    try {\n      // If authentication is not required, allow anonymous access\n      if (!this.config.required) {\n        return this.createAnonymousAuth(context);\n      }\n\n      // Extract credentials from context\n      const credentials = this.extractCredentials(context);\n      if (!credentials) {\n        return {\n          success: false,\n          error: 'Authentication required but no credentials provided',\n        };\n      }\n\n      // Check cache first\n      const cacheKey = this.getCacheKey(credentials);\n      const cached = this.authCache.get(cacheKey);\n      if (cached && cached.expires > Date.now()) {\n        return cached.result;\n      }\n\n      // Validate credentials\n      const authResult = await this.validateCredentials(credentials);\n\n      // Cache successful results\n      if (authResult.success && this.config.cacheDuration > 0) {\n        this.authCache.set(cacheKey, {\n          result: authResult,\n          expires: Date.now() + this.config.cacheDuration,\n        });\n      }\n\n      return authResult;\n    } catch (error) {\n      return {\n        success: false,\n        error: `Authentication failed: ${error instanceof Error ? error.message : String(error)}`,\n      };\n    }\n  }\n\n  /**\n   * Refresh authentication\n   */\n  async refresh(context: RequestContext): Promise<AuthResult> {\n    // Clear cache and re-authenticate\n    if (context.user) {\n      const cacheKey = this.getCacheKey({\n        baseUrl: context.user.n8nBaseUrl || this.config.defaultBaseUrl,\n        apiKey: context.user.n8nApiKey || this.config.defaultApiKey,\n      });\n      this.authCache.delete(cacheKey);\n    }\n\n    return this.authenticate(context);\n  }\n\n  /**\n   * Create anonymous authentication result\n   */\n  private createAnonymousAuth(context: RequestContext): AuthResult {\n    const user: AuthenticatedUser = {\n      id: 'anonymous',\n      name: 'Anonymous User',\n      roles: ['anonymous'],\n      permissions: {\n        community: true,\n        enterprise: false,\n        workflows: true,\n        executions: true,\n        credentials: false,\n        users: false,\n        audit: false,\n      },\n      n8nBaseUrl: this.config.defaultBaseUrl,\n      n8nApiKey: this.config.defaultApiKey,\n    };\n\n    return {\n      success: true,\n      user,\n      context: {\n        authType: 'anonymous',\n        features: ['community'],\n      },\n    };\n  }\n\n  /**\n   * Extract credentials from request context\n   */\n  private extractCredentials(context: RequestContext): { baseUrl: string; apiKey: string } | null {\n    const headers = context.headers || {};\n\n    // Try different credential sources\n    const apiKey =\n      headers['x-n8n-api-key'] ||\n      headers['authorization']?.replace(/^Bearer\\s+/, '') ||\n      this.config.defaultApiKey;\n\n    const baseUrl = headers['x-n8n-base-url'] || this.config.defaultBaseUrl;\n\n    if (!apiKey || !baseUrl) {\n      return null;\n    }\n\n    return { baseUrl, apiKey };\n  }\n\n  /**\n   * Validate credentials against n8n instance\n   */\n  private async validateCredentials(credentials: {\n    baseUrl: string;\n    apiKey: string;\n  }): Promise<AuthResult> {\n    try {\n      // Create n8n client to test connection\n      const client = new N8nClient(credentials.baseUrl, credentials.apiKey);\n\n      if (this.config.validateConnection) {\n        // Test connection by fetching user info or workflows\n        try {\n          await client.getWorkflows({ limit: 1 });\n        } catch (error) {\n          return {\n            success: false,\n            error: `Invalid n8n credentials or connection failed: ${error instanceof Error ? error.message : String(error)}`,\n          };\n        }\n      }\n\n      // Create authenticated user\n      const user = await this.createAuthenticatedUser(credentials, client);\n\n      return {\n        success: true,\n        user,\n        context: {\n          authType: 'n8n-api-key',\n          features: this.detectFeatures(user),\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Authentication validation failed: ${error instanceof Error ? error.message : String(error)}`,\n      };\n    }\n  }\n\n  /**\n   * Create authenticated user from credentials\n   */\n  private async createAuthenticatedUser(\n    credentials: { baseUrl: string; apiKey: string },\n    client: N8nClient\n  ): Promise<AuthenticatedUser> {\n    // Detect user roles and permissions\n    const roles = await this.detectUserRoles(client);\n    const permissions = this.createPermissions(roles);\n\n    return {\n      id: `n8n-${credentials.baseUrl}-${credentials.apiKey.slice(-8)}`,\n      name: 'n8n API User',\n      roles,\n      permissions,\n      n8nBaseUrl: credentials.baseUrl,\n      n8nApiKey: credentials.apiKey,\n    };\n  }\n\n  /**\n   * Detect user roles based on n8n API capabilities\n   */\n  private async detectUserRoles(client: N8nClient): Promise<string[]> {\n    const roles: string[] = [...this.config.defaultRoles];\n\n    try {\n      // Test Enterprise features to determine if user has elevated permissions\n      try {\n        await client.getUsers({ limit: 1 });\n        roles.push('admin'); // Can access user management\n      } catch {\n        // User management not accessible, likely not an admin\n      }\n\n      try {\n        await client.getProjects({ limit: 1 });\n        roles.push('enterprise'); // Can access Enterprise features\n      } catch {\n        // Enterprise features not accessible\n      }\n    } catch {\n      // Default to basic roles\n    }\n\n    return [...new Set(roles)]; // Remove duplicates\n  }\n\n  /**\n   * Detect available features\n   */\n  private detectFeatures(user: AuthenticatedUser): string[] {\n    const features: string[] = ['community'];\n\n    if (user.permissions.enterprise) {\n      features.push('enterprise');\n    }\n\n    if (user.permissions.users) {\n      features.push('user-management');\n    }\n\n    if (user.permissions.audit) {\n      features.push('audit');\n    }\n\n    return features;\n  }\n\n  /**\n   * Generate cache key for credentials\n   */\n  private getCacheKey(credentials: { baseUrl: string; apiKey: string }): string {\n    return `${credentials.baseUrl}:${credentials.apiKey}`;\n  }\n\n  /**\n   * Clear authentication cache\n   */\n  public clearCache(): void {\n    this.authCache.clear();\n  }\n\n  /**\n   * Get cache statistics\n   */\n  public getCacheStats(): { size: number; entries: number } {\n    const now = Date.now();\n    let validEntries = 0;\n\n    for (const [key, entry] of this.authCache.entries()) {\n      if (entry.expires > now) {\n        validEntries++;\n      } else {\n        this.authCache.delete(key); // Clean up expired entries\n      }\n    }\n\n    return {\n      size: this.authCache.size,\n      entries: validEntries,\n    };\n  }\n}\n\n/**\n * Create n8n authentication provider from environment variables\n */\nexport function createN8nAuth(): N8nAuthProvider {\n  const config: N8nAuthConfig = {\n    required: process.env.N8N_MCP_AUTH_REQUIRED === 'true',\n    defaultBaseUrl: process.env.N8N_BASE_URL,\n    defaultApiKey: process.env.N8N_API_KEY,\n    validateConnection: process.env.N8N_MCP_VALIDATE_CONNECTION !== 'false',\n    cacheDuration: process.env.N8N_MCP_AUTH_CACHE_DURATION\n      ? parseInt(process.env.N8N_MCP_AUTH_CACHE_DURATION)\n      : undefined,\n    defaultRoles: process.env.N8N_MCP_DEFAULT_ROLES?.split(',') || undefined,\n  };\n\n  return new N8nAuthProvider(config);\n}\n\n/**\n * Default n8n authentication provider instance\n */\nexport const defaultN8nAuth = createN8nAuth();\n"],"mappings":"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","ignoreList":[]}