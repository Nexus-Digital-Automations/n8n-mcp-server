8f87a1d3ef06ba92102f8bf373e68eb1
"use strict";

/* istanbul ignore next */
function cov_efzsghwis() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts";
  var hash = "21ca326a80ad7e533fcd906ddc2072afca758dc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 48
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 9,
          column: 2
        }
      },
      "5": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 13,
          column: 2
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "7": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "8": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "9": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "10": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "11": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 104
        }
      },
      "12": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "13": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 34
        }
      },
      "14": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 44,
          column: 47
        }
      },
      "15": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 47
        }
      },
      "16": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 46,
          column: 49
        }
      },
      "17": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 49
        }
      },
      "18": {
        start: {
          line: 47,
          column: 33
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "19": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "20": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 68
        }
      },
      "21": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 76
        }
      },
      "22": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 62,
          column: 19
        }
      },
      "23": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "24": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "25": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "26": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 65
        }
      },
      "27": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "28": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 104
        }
      },
      "29": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "30": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 65,
          column: 17
        }
      },
      "31": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 95
        }
      },
      "32": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "33": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "34": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 73,
          column: 21
        }
      },
      "35": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 173
        }
      },
      "36": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 95
        }
      },
      "37": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 92
        }
      },
      "38": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "39": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 38
        }
      },
      "40": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "41": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 104
        }
      },
      "42": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "43": {
        start: {
          line: 98,
          column: 36
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "44": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 71
        }
      },
      "45": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "46": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "47": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 111,
          column: 21
        }
      },
      "48": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 173
        }
      },
      "49": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 96
        }
      },
      "50": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 93
        }
      },
      "51": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "52": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 38
        }
      },
      "53": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "54": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 104
        }
      },
      "55": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "56": {
        start: {
          line: 136,
          column: 53
        },
        end: {
          line: 136,
          column: 57
        }
      },
      "57": {
        start: {
          line: 137,
          column: 36
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "58": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 140,
          column: 82
        }
      },
      "59": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 142,
          column: 67
        }
      },
      "60": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "61": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 149,
          column: 21
        }
      },
      "62": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 173
        }
      },
      "63": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 96
        }
      },
      "64": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 93
        }
      },
      "65": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 188,
          column: 7
        }
      },
      "66": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 169,
          column: 38
        }
      },
      "67": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "68": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 104
        }
      },
      "69": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "70": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 59
        }
      },
      "71": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 83
        }
      },
      "72": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 184,
          column: 17
        }
      },
      "73": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 182,
          column: 21
        }
      },
      "74": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 173
        }
      },
      "75": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 96
        }
      },
      "76": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 93
        }
      }
    },
    fnMap: {
      "0": {
        name: "createProjectTools",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 27
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 38
          },
          end: {
            line: 52,
            column: 39
          }
        },
        loc: {
          start: {
            line: 52,
            column: 58
          },
          end: {
            line: 62,
            column: 17
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 92,
            column: 17
          },
          end: {
            line: 92,
            column: 18
          }
        },
        loc: {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 92
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 130,
            column: 17
          },
          end: {
            line: 130,
            column: 18
          }
        },
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 130
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 168,
            column: 17
          },
          end: {
            line: 168,
            column: 18
          }
        },
        loc: {
          start: {
            line: 168,
            column: 33
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 168
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 44,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 44,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 46,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 46,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 60,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 60,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 73,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 73,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 104,
            column: 59
          }
        }, {
          start: {
            line: 104,
            column: 62
          },
          end: {
            line: 104,
            column: 64
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 36
          },
          end: {
            line: 142,
            column: 59
          }
        }, {
          start: {
            line: 142,
            column: 62
          },
          end: {
            line: 142,
            column: 64
          }
        }],
        line: 142
      },
      "15": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 20
          },
          end: {
            line: 149,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 20
          },
          end: {
            line: 149,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "18": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "19": {
        loc: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  N8nProject,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  PaginationOptions,\n} from '../types/n8n.js';\n\n// Zod schemas for validation\nconst ProjectIdSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n});\n\nconst ListProjectsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateProjectSchema = z.object({\n  name: z.string().min(1, 'Project name is required'),\n  type: z.string().optional(),\n});\n\nconst UpdateProjectSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n  name: z.string().min(1, 'Project name is required'),\n});\n\n// Tool registration function\nexport function createProjectTools(getClient: () => N8nClient | null, server: any) {\n  // List projects tool\n  server.addTool({\n    name: 'list-projects',\n    description:\n      'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ListProjectsSchema,\n    annotations: {\n      title: 'List n8n Projects',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListProjectsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getProjects(options);\n\n        if (response.data.length === 0) {\n          return 'No projects found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} project(s):\\n\\n`;\n\n        response.data.forEach((project: N8nProject, index: number) => {\n          result += `${index + 1}. **${project.name}**\\n`;\n          result += `   - ID: ${project.id}\\n`;\n          if (project.type) {\n            result += `   - Type: ${project.type}\\n`;\n          }\n          if (project.createdAt) {\n            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n\uD83D\uDCC4 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list projects: ${error.message}`);\n        }\n        throw new UserError('Failed to list projects with unknown error');\n      }\n    },\n  });\n\n  // Create project tool\n  server.addTool({\n    name: 'create-project',\n    description:\n      'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: CreateProjectSchema,\n    annotations: {\n      title: 'Create New Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const projectData: CreateProjectRequest = {\n          name: args.name,\n          type: args.type,\n        };\n\n        const project = await client.createProject(projectData);\n\n        return (\n          `\u2705 Successfully created project \"${project.name}\" with ID: ${project.id}\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create project: ${error.message}`);\n        }\n        throw new UserError('Failed to create project with unknown error');\n      }\n    },\n  });\n\n  // Update project tool\n  server.addTool({\n    name: 'update-project',\n    description:\n      \"Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled\",\n    parameters: UpdateProjectSchema,\n    annotations: {\n      title: 'Update Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { projectId, ...updateData } = args;\n        const projectData: UpdateProjectRequest = {\n          name: updateData.name,\n        };\n\n        const project = await client.updateProject(projectId, projectData);\n\n        return (\n          `\u2705 Successfully updated project \"${project.name}\" (ID: ${project.id})\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to update project: ${error.message}`);\n        }\n        throw new UserError('Failed to update project with unknown error');\n      }\n    },\n  });\n\n  // Delete project tool\n  server.addTool({\n    name: 'delete-project',\n    description:\n      'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ProjectIdSchema,\n    annotations: {\n      title: 'Delete Project',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ProjectIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteProject(args.projectId);\n        return `\u2705 Successfully deleted project with ID: ${args.projectId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete project: ${error.message}`);\n        }\n        throw new UserError('Failed to delete project with unknown error');\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21ca326a80ad7e533fcd906ddc2072afca758dc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_efzsghwis = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_efzsghwis();
cov_efzsghwis().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_efzsghwis().s[1]++;
exports.createProjectTools = createProjectTools;
const zod_1 =
/* istanbul ignore next */
(cov_efzsghwis().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_efzsghwis().s[3]++, require("fastmcp"));
// Zod schemas for validation
const ProjectIdSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[4]++, zod_1.z.object({
  projectId: zod_1.z.string().min(1, 'Project ID is required')
}));
const ListProjectsSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[5]++, zod_1.z.object({
  limit: zod_1.z.number().min(1).max(100).optional(),
  cursor: zod_1.z.string().optional()
}));
const CreateProjectSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[6]++, zod_1.z.object({
  name: zod_1.z.string().min(1, 'Project name is required'),
  type: zod_1.z.string().optional()
}));
const UpdateProjectSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[7]++, zod_1.z.object({
  projectId: zod_1.z.string().min(1, 'Project ID is required'),
  name: zod_1.z.string().min(1, 'Project name is required')
}));
// Tool registration function
function createProjectTools(getClient, server) {
  /* istanbul ignore next */
  cov_efzsghwis().f[0]++;
  cov_efzsghwis().s[8]++;
  // List projects tool
  server.addTool({
    name: 'list-projects',
    description: 'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: ListProjectsSchema,
    annotations: {
      title: 'List n8n Projects',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[1]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[9]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[10]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[0][0]++;
        cov_efzsghwis().s[11]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[0][1]++;
      }
      cov_efzsghwis().s[12]++;
      try {
        const options =
        /* istanbul ignore next */
        (cov_efzsghwis().s[13]++, {});
        /* istanbul ignore next */
        cov_efzsghwis().s[14]++;
        if (args.limit) {
          /* istanbul ignore next */
          cov_efzsghwis().b[1][0]++;
          cov_efzsghwis().s[15]++;
          options.limit = args.limit;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[1][1]++;
        }
        cov_efzsghwis().s[16]++;
        if (args.cursor) {
          /* istanbul ignore next */
          cov_efzsghwis().b[2][0]++;
          cov_efzsghwis().s[17]++;
          options.cursor = args.cursor;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[2][1]++;
        }
        const response =
        /* istanbul ignore next */
        (cov_efzsghwis().s[18]++, await client.getProjects(options));
        /* istanbul ignore next */
        cov_efzsghwis().s[19]++;
        if (response.data.length === 0) {
          /* istanbul ignore next */
          cov_efzsghwis().b[3][0]++;
          cov_efzsghwis().s[20]++;
          return 'No projects found in the n8n instance.';
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[3][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_efzsghwis().s[21]++, `Found ${response.data.length} project(s):\n\n`);
        /* istanbul ignore next */
        cov_efzsghwis().s[22]++;
        response.data.forEach((project, index) => {
          /* istanbul ignore next */
          cov_efzsghwis().f[2]++;
          cov_efzsghwis().s[23]++;
          result += `${index + 1}. **${project.name}**\n`;
          /* istanbul ignore next */
          cov_efzsghwis().s[24]++;
          result += `   - ID: ${project.id}\n`;
          /* istanbul ignore next */
          cov_efzsghwis().s[25]++;
          if (project.type) {
            /* istanbul ignore next */
            cov_efzsghwis().b[4][0]++;
            cov_efzsghwis().s[26]++;
            result += `   - Type: ${project.type}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[4][1]++;
          }
          cov_efzsghwis().s[27]++;
          if (project.createdAt) {
            /* istanbul ignore next */
            cov_efzsghwis().b[5][0]++;
            cov_efzsghwis().s[28]++;
            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[5][1]++;
          }
          cov_efzsghwis().s[29]++;
          result += '\n';
        });
        /* istanbul ignore next */
        cov_efzsghwis().s[30]++;
        if (response.nextCursor) {
          /* istanbul ignore next */
          cov_efzsghwis().b[6][0]++;
          cov_efzsghwis().s[31]++;
          result += `\n📄 Use cursor "${response.nextCursor}" to get the next page.`;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[6][1]++;
        }
        cov_efzsghwis().s[32]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[33]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[7][0]++;
          cov_efzsghwis().s[34]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[8][0]++;
            cov_efzsghwis().s[35]++;
            throw new fastmcp_1.UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[8][1]++;
          }
          cov_efzsghwis().s[36]++;
          throw new fastmcp_1.UserError(`Failed to list projects: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[7][1]++;
        }
        cov_efzsghwis().s[37]++;
        throw new fastmcp_1.UserError('Failed to list projects with unknown error');
      }
    }
  });
  // Create project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[38]++;
  server.addTool({
    name: 'create-project',
    description: 'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: CreateProjectSchema,
    annotations: {
      title: 'Create New Project',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[3]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[39]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[40]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[9][0]++;
        cov_efzsghwis().s[41]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[9][1]++;
      }
      cov_efzsghwis().s[42]++;
      try {
        const projectData =
        /* istanbul ignore next */
        (cov_efzsghwis().s[43]++, {
          name: args.name,
          type: args.type
        });
        const project =
        /* istanbul ignore next */
        (cov_efzsghwis().s[44]++, await client.createProject(projectData));
        /* istanbul ignore next */
        cov_efzsghwis().s[45]++;
        return `✅ Successfully created project "${project.name}" with ID: ${project.id}\n` + (project.type ?
        /* istanbul ignore next */
        (cov_efzsghwis().b[10][0]++, `Type: ${project.type}`) :
        /* istanbul ignore next */
        (cov_efzsghwis().b[10][1]++, ''));
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[46]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[11][0]++;
          cov_efzsghwis().s[47]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[12][0]++;
            cov_efzsghwis().s[48]++;
            throw new fastmcp_1.UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[12][1]++;
          }
          cov_efzsghwis().s[49]++;
          throw new fastmcp_1.UserError(`Failed to create project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[11][1]++;
        }
        cov_efzsghwis().s[50]++;
        throw new fastmcp_1.UserError('Failed to create project with unknown error');
      }
    }
  });
  // Update project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[51]++;
  server.addTool({
    name: 'update-project',
    description: "Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled",
    parameters: UpdateProjectSchema,
    annotations: {
      title: 'Update Project',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[52]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[53]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[13][0]++;
        cov_efzsghwis().s[54]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[13][1]++;
      }
      cov_efzsghwis().s[55]++;
      try {
        const {
          projectId,
          ...updateData
        } =
        /* istanbul ignore next */
        (cov_efzsghwis().s[56]++, args);
        const projectData =
        /* istanbul ignore next */
        (cov_efzsghwis().s[57]++, {
          name: updateData.name
        });
        const project =
        /* istanbul ignore next */
        (cov_efzsghwis().s[58]++, await client.updateProject(projectId, projectData));
        /* istanbul ignore next */
        cov_efzsghwis().s[59]++;
        return `✅ Successfully updated project "${project.name}" (ID: ${project.id})\n` + (project.type ?
        /* istanbul ignore next */
        (cov_efzsghwis().b[14][0]++, `Type: ${project.type}`) :
        /* istanbul ignore next */
        (cov_efzsghwis().b[14][1]++, ''));
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[60]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[15][0]++;
          cov_efzsghwis().s[61]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[16][0]++;
            cov_efzsghwis().s[62]++;
            throw new fastmcp_1.UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[16][1]++;
          }
          cov_efzsghwis().s[63]++;
          throw new fastmcp_1.UserError(`Failed to update project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[15][1]++;
        }
        cov_efzsghwis().s[64]++;
        throw new fastmcp_1.UserError('Failed to update project with unknown error');
      }
    }
  });
  // Delete project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[65]++;
  server.addTool({
    name: 'delete-project',
    description: 'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: ProjectIdSchema,
    annotations: {
      title: 'Delete Project',
      readOnlyHint: false,
      destructiveHint: true,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[5]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[66]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[67]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[17][0]++;
        cov_efzsghwis().s[68]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[17][1]++;
      }
      cov_efzsghwis().s[69]++;
      try {
        /* istanbul ignore next */
        cov_efzsghwis().s[70]++;
        await client.deleteProject(args.projectId);
        /* istanbul ignore next */
        cov_efzsghwis().s[71]++;
        return `✅ Successfully deleted project with ID: ${args.projectId}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[72]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[18][0]++;
          cov_efzsghwis().s[73]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[19][0]++;
            cov_efzsghwis().s[74]++;
            throw new fastmcp_1.UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[19][1]++;
          }
          cov_efzsghwis().s[75]++;
          throw new fastmcp_1.UserError(`Failed to delete project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[18][1]++;
        }
        cov_efzsghwis().s[76]++;
        throw new fastmcp_1.UserError('Failed to delete project with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,