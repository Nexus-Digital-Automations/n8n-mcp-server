{"version":3,"names":["cov_1720wj6quo","actualCoverage","BaseAuthProvider","canAccessTool","toolName","context","f","s","user","b","permissions","toolPermissions","status","requiredPermission","community","canAccessResource","resourceUri","startsWith","workflows","executions","credentials","users","enterprise","createPermissions","roles","isAdmin","includes","isEditor","isMember","audit"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/authProvider.ts"],"sourcesContent":["/**\n * Authentication Provider Interface for n8n MCP Server\n *\n * Defines the contract for authentication providers that can validate\n * client requests and control access to n8n tools and resources.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Request context containing client information and request metadata\n */\nexport interface RequestContext {\n  /** Client identifier or session ID */\n  clientId?: string;\n\n  /** Request headers containing potential authentication tokens */\n  headers?: Record<string, string>;\n\n  /** Request metadata */\n  metadata?: Record<string, unknown>;\n\n  /** Authenticated user information (populated after successful auth) */\n  user?: AuthenticatedUser;\n}\n\n/**\n * Result of authentication attempt\n */\nexport interface AuthResult {\n  /** Whether authentication was successful */\n  success: boolean;\n\n  /** Authenticated user information (if successful) */\n  user?: AuthenticatedUser;\n\n  /** Error message (if failed) */\n  error?: string;\n\n  /** Additional context or session data */\n  context?: Record<string, unknown>;\n}\n\n/**\n * Authenticated user information\n */\nexport interface AuthenticatedUser {\n  /** Unique user identifier */\n  id: string;\n\n  /** User display name */\n  name?: string;\n\n  /** User email address */\n  email?: string;\n\n  /** User roles for access control */\n  roles: string[];\n\n  /** n8n instance permissions */\n  permissions: {\n    /** Can access Community features */\n    community: boolean;\n\n    /** Can access Enterprise features (projects, users, etc.) */\n    enterprise: boolean;\n\n    /** Can manage workflows */\n    workflows: boolean;\n\n    /** Can view executions */\n    executions: boolean;\n\n    /** Can manage credentials */\n    credentials: boolean;\n\n    /** Can manage users (admin only) */\n    users: boolean;\n\n    /** Can access audit logs */\n    audit: boolean;\n  };\n\n  /** n8n API key for backend requests */\n  n8nApiKey?: string;\n\n  /** n8n instance URL */\n  n8nBaseUrl?: string;\n}\n\n/**\n * Authentication provider interface\n */\n\nexport interface AuthProvider {\n  /**\n   * Authenticate a client request\n   * @param context Request context containing client information\n   * @returns Promise resolving to authentication result\n   */\n  authenticate(_context: RequestContext): Promise<AuthResult>;\n\n  /**\n   * Check if authenticated user can access a specific tool\n   * @param toolName Name of the tool being accessed\n   * @param context Request context with authenticated user\n   * @returns Promise resolving to true if access is allowed\n   */\n  canAccessTool(_toolName: string, _context: RequestContext): Promise<boolean>;\n\n  /**\n   * Check if authenticated user can access a specific resource\n   * @param resourceUri URI of the resource being accessed\n   * @param context Request context with authenticated user\n   * @returns Promise resolving to true if access is allowed\n   */\n  canAccessResource(_resourceUri: string, _context: RequestContext): Promise<boolean>;\n\n  /**\n   * Refresh or validate existing authentication\n   * @param context Request context with existing auth data\n   * @returns Promise resolving to updated authentication result\n   */\n  refresh(_context: RequestContext): Promise<AuthResult>;\n}\n\n/**\n * Base authentication provider with common functionality\n */\nexport abstract class BaseAuthProvider implements AuthProvider {\n  abstract authenticate(_context: RequestContext): Promise<AuthResult>;\n  abstract refresh(_context: RequestContext): Promise<AuthResult>;\n\n  /**\n   * Default tool access control based on user permissions\n   */\n  async canAccessTool(toolName: string, context: RequestContext): Promise<boolean> {\n    if (!context.user) {\n      return false;\n    }\n\n    const { permissions } = context.user;\n\n    // Tool access mapping\n    const toolPermissions: Record<string, keyof typeof permissions> = {\n      // Core workflow tools\n      'init-n8n': 'community',\n      status: 'community',\n      'list-workflows': 'workflows',\n      'get-workflow': 'workflows',\n      'create-workflow': 'workflows',\n      'update-workflow': 'workflows',\n      'delete-workflow': 'workflows',\n      'activate-workflow': 'workflows',\n      'deactivate-workflow': 'workflows',\n\n      // Execution tools\n      'list-executions': 'executions',\n      'get-execution': 'executions',\n      'delete-execution': 'executions',\n      'retry-execution': 'executions',\n      'stop-execution': 'executions',\n\n      // Enterprise features\n      'list-projects': 'enterprise',\n      'create-project': 'enterprise',\n      'get-project': 'enterprise',\n      'update-project': 'enterprise',\n      'delete-project': 'enterprise',\n      'list-project-workflows': 'enterprise',\n      'list-variables': 'enterprise',\n      'create-variable': 'enterprise',\n      'get-variable': 'enterprise',\n      'update-variable': 'enterprise',\n      'delete-variable': 'enterprise',\n\n      // User management\n      'list-users': 'users',\n      'create-user': 'users',\n      'get-user': 'users',\n      'update-user': 'users',\n      'delete-user': 'users',\n\n      // Credentials\n      'list-credentials': 'credentials',\n      'get-credential': 'credentials',\n      'create-credential': 'credentials',\n      'update-credential': 'credentials',\n      'delete-credential': 'credentials',\n\n      // Audit\n      'get-audit-logs': 'audit',\n      'generate-audit-report': 'audit',\n\n      // Tags (community feature)\n      'list-tags': 'community',\n      'create-tag': 'workflows',\n      'update-tag': 'workflows',\n      'delete-tag': 'workflows',\n    };\n\n    const requiredPermission = toolPermissions[toolName];\n    if (!requiredPermission) {\n      // Unknown tool, default to community access\n      return permissions.community;\n    }\n\n    return permissions[requiredPermission];\n  }\n\n  /**\n   * Default resource access control\n   */\n  async canAccessResource(resourceUri: string, context: RequestContext): Promise<boolean> {\n    if (!context.user) {\n      return false;\n    }\n\n    const { permissions } = context.user;\n\n    // Resource access based on URI patterns\n    if (resourceUri.startsWith('n8n://workflows/')) {\n      return permissions.workflows;\n    }\n\n    if (resourceUri.startsWith('n8n://executions/')) {\n      return permissions.executions;\n    }\n\n    if (resourceUri.startsWith('n8n://credentials/')) {\n      return permissions.credentials;\n    }\n\n    if (resourceUri.startsWith('n8n://users/')) {\n      return permissions.users;\n    }\n\n    if (resourceUri.startsWith('n8n://projects/')) {\n      return permissions.enterprise;\n    }\n\n    // Default to community access for other resources\n    return permissions.community;\n  }\n\n  /**\n   * Create default permissions based on user roles\n   */\n  protected createPermissions(roles: string[]): AuthenticatedUser['permissions'] {\n    const isAdmin = roles.includes('admin') || roles.includes('owner');\n    const isEditor = roles.includes('editor') || isAdmin;\n    const isMember = roles.includes('member') || isEditor;\n\n    return {\n      community: true, // All authenticated users get community access\n      enterprise: isAdmin, // Only admins get enterprise features by default\n      workflows: isMember, // Members and above can manage workflows\n      executions: isMember, // Members and above can view executions\n      credentials: isEditor, // Editors and above can manage credentials\n      users: isAdmin, // Only admins can manage users\n      audit: isAdmin, // Only admins can access audit logs\n    };\n  }\n}\n"],"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","ignoreList":[]}