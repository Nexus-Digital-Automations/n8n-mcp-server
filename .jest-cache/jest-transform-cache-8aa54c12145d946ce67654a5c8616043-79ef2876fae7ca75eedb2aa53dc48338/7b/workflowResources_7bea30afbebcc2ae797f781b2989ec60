7f61074641f2ed1fcd545734d70e5da0
"use strict";

/**
 * Workflow Resources for n8n MCP Server
 *
 * Provides MCP resources for accessing n8n workflow data including definitions,
 * metadata, and configuration. Supports both static workflow access and dynamic
 * workflow discovery.
 */
/* istanbul ignore next */
function cov_1cj318xcke() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/resources/workflowResources.ts";
  var hash = "ebf382919b86de851de0124028bc74f3231d7a52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/resources/workflowResources.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 58
        }
      },
      "3": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "5": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "6": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "7": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "8": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "9": {
        start: {
          line: 52,
          column: 33
        },
        end: {
          line: 52,
          column: 75
        }
      },
      "10": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "11": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "12": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "13": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "14": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 87
        }
      },
      "15": {
        start: {
          line: 68,
          column: 34
        },
        end: {
          line: 68,
          column: 76
        }
      },
      "16": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "17": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "18": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 42
        }
      },
      "19": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "20": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 87
        }
      },
      "21": {
        start: {
          line: 84,
          column: 40
        },
        end: {
          line: 84,
          column: 85
        }
      },
      "22": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 87,
          column: 18
        }
      },
      "23": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "24": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 42
        }
      },
      "25": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "26": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 87
        }
      },
      "27": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 73
        }
      },
      "28": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 18
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "30": {
        start: {
          line: 119,
          column: 31
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "31": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "32": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 87
        }
      },
      "33": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 123,
          column: 83
        }
      },
      "34": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 126,
          column: 18
        }
      },
      "35": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 56
        }
      },
      "36": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "37": {
        start: {
          line: 136,
          column: 23
        },
        end: {
          line: 136,
          column: 51
        }
      },
      "38": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "39": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "40": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "41": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 65
        }
      },
      "42": {
        start: {
          line: 143,
          column: 37
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "43": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 59
        }
      },
      "44": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 36
        }
      },
      "45": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 128
        }
      },
      "46": {
        start: {
          line: 173,
          column: 25
        },
        end: {
          line: 173,
          column: 41
        }
      },
      "47": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "48": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "49": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 26
        }
      },
      "50": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "51": {
        start: {
          line: 179,
          column: 30
        },
        end: {
          line: 181,
          column: 14
        }
      },
      "52": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "53": {
        start: {
          line: 183,
          column: 59
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "54": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 55
        }
      },
      "55": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 32
        }
      },
      "56": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 119
        }
      },
      "57": {
        start: {
          line: 216,
          column: 25
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "58": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 51
        }
      },
      "59": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "60": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 26
        }
      },
      "61": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "62": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 224,
          column: 14
        }
      },
      "63": {
        start: {
          line: 226,
          column: 40
        },
        end: {
          line: 226,
          column: 76
        }
      },
      "64": {
        start: {
          line: 226,
          column: 67
        },
        end: {
          line: 226,
          column: 75
        }
      },
      "65": {
        start: {
          line: 227,
          column: 36
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "66": {
        start: {
          line: 228,
          column: 70
        },
        end: {
          line: 234,
          column: 17
        }
      },
      "67": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 58
        }
      },
      "68": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 35
        }
      },
      "69": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 122
        }
      },
      "70": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 42
        }
      },
      "71": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 51
        }
      },
      "72": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "73": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 26
        }
      },
      "74": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "75": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 266,
          column: 14
        }
      },
      "76": {
        start: {
          line: 267,
          column: 26
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "77": {
        start: {
          line: 269,
          column: 60
        },
        end: {
          line: 269,
          column: 68
        }
      },
      "78": {
        start: {
          line: 270,
          column: 62
        },
        end: {
          line: 270,
          column: 71
        }
      },
      "79": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "80": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 25
        }
      },
      "81": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 125
        }
      },
      "82": {
        start: {
          line: 291,
          column: 25
        },
        end: {
          line: 291,
          column: 27
        }
      },
      "83": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "84": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "85": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "86": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 300,
          column: 21
        }
      },
      "87": {
        start: {
          line: 296,
          column: 40
        },
        end: {
          line: 296,
          column: 81
        }
      },
      "88": {
        start: {
          line: 297,
          column: 24
        },
        end: {
          line: 299,
          column: 25
        }
      },
      "89": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 298,
          column: 77
        }
      },
      "90": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 24
        }
      },
      "91": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 30
        }
      },
      "92": {
        start: {
          line: 311,
          column: 27
        },
        end: {
          line: 311,
          column: 76
        }
      },
      "93": {
        start: {
          line: 312,
          column: 28
        },
        end: {
          line: 312,
          column: 78
        }
      },
      "94": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "95": {
        start: {
          line: 314,
          column: 51
        },
        end: {
          line: 314,
          column: 85
        }
      },
      "96": {
        start: {
          line: 315,
          column: 52
        },
        end: {
          line: 315,
          column: 87
        }
      },
      "97": {
        start: {
          line: 316,
          column: 51
        },
        end: {
          line: 316,
          column: 85
        }
      },
      "98": {
        start: {
          line: 317,
          column: 52
        },
        end: {
          line: 317,
          column: 87
        }
      },
      "99": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 324,
          column: 42
        }
      },
      "100": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "101": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 31
        }
      },
      "102": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 20
        }
      },
      "103": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "104": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 338,
          column: 15
        }
      },
      "105": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 27
        }
      },
      "106": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 354,
          column: 10
        }
      },
      "107": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 357,
          column: 58
        }
      },
      "108": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 32
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 18
          },
          end: {
            line: 47,
            column: 19
          }
        },
        loc: {
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 56,
            column: 13
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 18
          },
          end: {
            line: 63,
            column: 19
          }
        },
        loc: {
          start: {
            line: 63,
            column: 30
          },
          end: {
            line: 72,
            column: 13
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 79,
            column: 18
          },
          end: {
            line: 79,
            column: 19
          }
        },
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 88,
            column: 13
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 18
          },
          end: {
            line: 95,
            column: 19
          }
        },
        loc: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 104,
            column: 13
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 118,
            column: 18
          },
          end: {
            line: 118,
            column: 19
          }
        },
        loc: {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 118
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 134
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 42
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 172
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 47
          }
        },
        loc: {
          start: {
            line: 183,
            column: 59
          },
          end: {
            line: 191,
            column: 17
          }
        },
        line: 183
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 45
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 215
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 226,
            column: 62
          },
          end: {
            line: 226,
            column: 63
          }
        },
        loc: {
          start: {
            line: 226,
            column: 67
          },
          end: {
            line: 226,
            column: 75
          }
        },
        line: 226
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 228,
            column: 57
          },
          end: {
            line: 228,
            column: 58
          }
        },
        loc: {
          start: {
            line: 228,
            column: 70
          },
          end: {
            line: 234,
            column: 17
          }
        },
        line: 228
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 43
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 257
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 269,
            column: 55
          },
          end: {
            line: 269,
            column: 56
          }
        },
        loc: {
          start: {
            line: 269,
            column: 60
          },
          end: {
            line: 269,
            column: 68
          }
        },
        line: 269
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 270,
            column: 57
          },
          end: {
            line: 270,
            column: 58
          }
        },
        loc: {
          start: {
            line: 270,
            column: 62
          },
          end: {
            line: 270,
            column: 71
          }
        },
        line: 270
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 33
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 290
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 27
          }
        },
        loc: {
          start: {
            line: 292,
            column: 38
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 292
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 294,
            column: 38
          },
          end: {
            line: 294,
            column: 39
          }
        },
        loc: {
          start: {
            line: 294,
            column: 47
          },
          end: {
            line: 301,
            column: 17
          }
        },
        line: 294
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 38
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 309
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 314,
            column: 46
          },
          end: {
            line: 314,
            column: 47
          }
        },
        loc: {
          start: {
            line: 314,
            column: 51
          },
          end: {
            line: 314,
            column: 85
          }
        },
        line: 314
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 315,
            column: 47
          },
          end: {
            line: 315,
            column: 48
          }
        },
        loc: {
          start: {
            line: 315,
            column: 52
          },
          end: {
            line: 315,
            column: 87
          }
        },
        line: 315
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 316,
            column: 46
          },
          end: {
            line: 316,
            column: 47
          }
        },
        loc: {
          start: {
            line: 316,
            column: 51
          },
          end: {
            line: 316,
            column: 85
          }
        },
        line: 316
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 317,
            column: 47
          },
          end: {
            line: 317,
            column: 48
          }
        },
        loc: {
          start: {
            line: 317,
            column: 52
          },
          end: {
            line: 317,
            column: 87
          }
        },
        line: 317
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 323
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 29
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 333
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 17
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 344
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 20
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 350
      },
      "28": {
        name: "createWorkflowResources",
        decl: {
          start: {
            line: 361,
            column: 9
          },
          end: {
            line: 361,
            column: 32
          }
        },
        loc: {
          start: {
            line: 361,
            column: 41
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 361
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 27
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 26
          },
          end: {
            line: 149,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 26
          },
          end: {
            line: 149,
            column: 39
          }
        }, {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 45
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 152,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 152,
            column: 53
          }
        }, {
          start: {
            line: 152,
            column: 57
          },
          end: {
            line: 152,
            column: 58
          }
        }],
        line: 152
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 153,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 60
          },
          end: {
            line: 153,
            column: 100
          }
        }, {
          start: {
            line: 153,
            column: 103
          },
          end: {
            line: 153,
            column: 104
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 95
          },
          end: {
            line: 166,
            column: 108
          }
        }, {
          start: {
            line: 166,
            column: 111
          },
          end: {
            line: 166,
            column: 124
          }
        }],
        line: 166
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 39
          }
        }, {
          start: {
            line: 187,
            column: 43
          },
          end: {
            line: 187,
            column: 45
          }
        }],
        line: 187
      },
      "13": {
        loc: {
          start: {
            line: 209,
            column: 61
          },
          end: {
            line: 209,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 86
          },
          end: {
            line: 209,
            column: 99
          }
        }, {
          start: {
            line: 209,
            column: 102
          },
          end: {
            line: 209,
            column: 115
          }
        }],
        line: 209
      },
      "14": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "15": {
        loc: {
          start: {
            line: 231,
            column: 26
          },
          end: {
            line: 231,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 26
          },
          end: {
            line: 231,
            column: 39
          }
        }, {
          start: {
            line: 231,
            column: 43
          },
          end: {
            line: 231,
            column: 45
          }
        }],
        line: 231
      },
      "16": {
        loc: {
          start: {
            line: 251,
            column: 64
          },
          end: {
            line: 251,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 89
          },
          end: {
            line: 251,
            column: 102
          }
        }, {
          start: {
            line: 251,
            column: 105
          },
          end: {
            line: 251,
            column: 118
          }
        }],
        line: 251
      },
      "17": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "18": {
        loc: {
          start: {
            line: 284,
            column: 67
          },
          end: {
            line: 284,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 92
          },
          end: {
            line: 284,
            column: 105
          }
        }, {
          start: {
            line: 284,
            column: 108
          },
          end: {
            line: 284,
            column: 121
          }
        }],
        line: 284
      },
      "19": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "20": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 29
          }
        }, {
          start: {
            line: 293,
            column: 33
          },
          end: {
            line: 293,
            column: 61
          }
        }],
        line: 293
      },
      "21": {
        loc: {
          start: {
            line: 295,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "22": {
        loc: {
          start: {
            line: 296,
            column: 40
          },
          end: {
            line: 296,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 66
          },
          end: {
            line: 296,
            column: 69
          }
        }, {
          start: {
            line: 296,
            column: 72
          },
          end: {
            line: 296,
            column: 81
          }
        }],
        line: 296
      },
      "23": {
        loc: {
          start: {
            line: 297,
            column: 24
          },
          end: {
            line: 299,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 24
          },
          end: {
            line: 299,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "24": {
        loc: {
          start: {
            line: 298,
            column: 49
          },
          end: {
            line: 298,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 49
          },
          end: {
            line: 298,
            column: 66
          }
        }, {
          start: {
            line: 298,
            column: 70
          },
          end: {
            line: 298,
            column: 71
          }
        }],
        line: 298
      },
      "25": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "26": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 18
          }
        }, {
          start: {
            line: 325,
            column: 22
          },
          end: {
            line: 325,
            column: 49
          }
        }],
        line: 325
      },
      "27": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/resources/workflowResources.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/resources/workflowResources.ts"],
      sourcesContent: ["/**\n * Workflow Resources for n8n MCP Server\n *\n * Provides MCP resources for accessing n8n workflow data including definitions,\n * metadata, and configuration. Supports both static workflow access and dynamic\n * workflow discovery.\n */\n\nimport { FastMCP } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\n\n/**\n * Workflow resource configuration\n */\nexport interface WorkflowResourceConfig {\n  /** Base URI prefix for workflow resources */\n  baseUri?: string;\n\n  /** Maximum number of workflows to include in listings */\n  maxWorkflows?: number;\n\n  /** Whether to include inactive workflows */\n  includeInactive?: boolean;\n\n  /** Whether to include workflow execution history */\n  includeExecutions?: boolean;\n\n  /** Cache duration for workflow data (ms) */\n  cacheDuration?: number;\n}\n\n/**\n * Workflow resource manager\n *\n * Manages workflow-related MCP resources including individual workflow access,\n * workflow listings, and workflow metadata.\n */\nexport class WorkflowResourceManager {\n  private config: Required<WorkflowResourceConfig>;\n  private cache = new Map<string, { data: any; expires: number }>();\n\n  constructor(config: WorkflowResourceConfig = {}) {\n    this.config = {\n      baseUri: 'n8n://workflows',\n      maxWorkflows: 100,\n      includeInactive: true,\n      includeExecutions: false,\n      cacheDuration: 5 * 60 * 1000, // 5 minutes\n      ...config,\n    };\n  }\n\n  /**\n   * Register workflow resources with FastMCP server\n   */\n  public register(server: FastMCP, getClient: () => N8nClient | null): void {\n    // Individual workflow resource template\n    server.addResourceTemplate({\n      uriTemplate: `${this.config.baseUri}/{id}`,\n      name: 'n8n Workflow',\n      mimeType: 'application/json',\n      arguments: [\n        {\n          name: 'id',\n          description: 'The ID of the n8n workflow',\n          required: true,\n        },\n      ],\n      load: async ({ id }: { id: string }) => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const workflow = await this.getWorkflowResource(client, id);\n        return {\n          text: JSON.stringify(workflow, null, 2),\n        };\n      },\n    });\n\n    // Workflow listing resource\n    server.addResource({\n      uri: `${this.config.baseUri}/list`,\n      name: 'n8n Workflow List',\n      mimeType: 'application/json',\n      load: async () => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const workflows = await this.getWorkflowListResource(client);\n        return {\n          text: JSON.stringify(workflows, null, 2),\n        };\n      },\n    });\n\n    // Active workflows resource\n    server.addResource({\n      uri: `${this.config.baseUri}/active`,\n      name: 'n8n Active Workflows',\n      mimeType: 'application/json',\n      load: async () => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const activeWorkflows = await this.getActiveWorkflowsResource(client);\n        return {\n          text: JSON.stringify(activeWorkflows, null, 2),\n        };\n      },\n    });\n\n    // Workflow statistics resource\n    server.addResource({\n      uri: `${this.config.baseUri}/stats`,\n      name: 'n8n Workflow Statistics',\n      mimeType: 'application/json',\n      load: async () => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const stats = await this.getWorkflowStatsResource(client);\n        return {\n          text: JSON.stringify(stats, null, 2),\n        };\n      },\n    });\n\n    // Workflow resource template for pattern matching\n    server.addResourceTemplate({\n      uriTemplate: `${this.config.baseUri}/{workflowId}`,\n      name: 'n8n Workflow by ID',\n      mimeType: 'application/json',\n      arguments: [\n        {\n          name: 'workflowId',\n          description: 'The ID of the n8n workflow',\n          required: true,\n        },\n      ],\n      load: async ({ workflowId }: { workflowId: string }) => {\n        const client = getClient();\n        if (!client) {\n          throw new Error('n8n client not initialized. Run init-n8n first.');\n        }\n\n        const workflow = await this.getWorkflowResource(client, workflowId);\n        return {\n          text: JSON.stringify(workflow, null, 2),\n        };\n      },\n    });\n\n    console.log('\uD83D\uDCC4 Workflow resources registered');\n  }\n\n  /**\n   * Get individual workflow resource\n   */\n  private async getWorkflowResource(client: N8nClient, workflowId: string): Promise<any> {\n    const cacheKey = `workflow:${workflowId}`;\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const workflow = await client.getWorkflow(workflowId);\n\n      // Enhance workflow data with metadata\n      const enhancedWorkflow = {\n        ...workflow,\n        metadata: {\n          id: workflow.id,\n          name: workflow.name,\n          active: workflow.active,\n          tags: workflow.tags || [],\n          createdAt: workflow.createdAt,\n          updatedAt: workflow.updatedAt,\n          nodeCount: workflow.nodes?.length || 0,\n          connectionCount: workflow.connections ? Object.keys(workflow.connections).length : 0,\n        },\n        resourceInfo: {\n          uri: `${this.config.baseUri}/${workflowId}`,\n          type: 'n8n-workflow',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n\n      this.setCachedData(cacheKey, enhancedWorkflow);\n      return enhancedWorkflow;\n    } catch (error) {\n      throw new Error(\n        `Failed to load workflow ${workflowId}: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  /**\n   * Get workflow list resource\n   */\n  private async getWorkflowListResource(client: N8nClient): Promise<any> {\n    const cacheKey = 'workflows:list';\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const workflows = await client.getWorkflows({\n        limit: this.config.maxWorkflows,\n      });\n\n      const workflowList = {\n        workflows: workflows.data.map(workflow => ({\n          id: workflow.id,\n          name: workflow.name,\n          active: workflow.active,\n          tags: workflow.tags || [],\n          createdAt: workflow.createdAt,\n          updatedAt: workflow.updatedAt,\n          uri: `${this.config.baseUri}/${workflow.id}`,\n        })),\n        metadata: {\n          total: workflows.data.length, // API doesn't provide total count\n          returned: workflows.data.length,\n          includeInactive: this.config.includeInactive,\n          maxWorkflows: this.config.maxWorkflows,\n        },\n        resourceInfo: {\n          uri: `${this.config.baseUri}/list`,\n          type: 'n8n-workflow-list',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n\n      this.setCachedData(cacheKey, workflowList);\n      return workflowList;\n    } catch (error) {\n      throw new Error(\n        `Failed to load workflow list: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  /**\n   * Get active workflows resource\n   */\n  private async getActiveWorkflowsResource(client: N8nClient): Promise<any> {\n    const cacheKey = 'workflows:active';\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const workflows = await client.getWorkflows({\n        limit: this.config.maxWorkflows,\n      });\n\n      // Filter for active workflows client-side\n      const activeWorkflowsData = workflows.data.filter(w => w.active);\n\n      const activeWorkflows = {\n        activeWorkflows: activeWorkflowsData.map(workflow => ({\n          id: workflow.id,\n          name: workflow.name,\n          tags: workflow.tags || [],\n          lastExecution: workflow.updatedAt,\n          uri: `${this.config.baseUri}/${workflow.id}`,\n        })),\n        metadata: {\n          total: activeWorkflowsData.length,\n          returned: activeWorkflowsData.length,\n          activeOnly: true,\n        },\n        resourceInfo: {\n          uri: `${this.config.baseUri}/active`,\n          type: 'n8n-active-workflows',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n\n      this.setCachedData(cacheKey, activeWorkflows);\n      return activeWorkflows;\n    } catch (error) {\n      throw new Error(\n        `Failed to load active workflows: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  /**\n   * Get workflow statistics resource\n   */\n  private async getWorkflowStatsResource(client: N8nClient): Promise<any> {\n    const cacheKey = 'workflows:stats';\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const workflows = await client.getWorkflows({\n        limit: this.config.maxWorkflows,\n      });\n\n      const stats = {\n        totalWorkflows: workflows.data.length,\n        activeWorkflows: workflows.data.filter(w => w.active).length,\n        inactiveWorkflows: workflows.data.filter(w => !w.active).length,\n        tagUsage: this.calculateTagUsage(workflows.data),\n        creationStats: this.calculateCreationStats(workflows.data),\n        resourceInfo: {\n          uri: `${this.config.baseUri}/stats`,\n          type: 'n8n-workflow-stats',\n          version: '1.0',\n          lastAccessed: new Date().toISOString(),\n        },\n      };\n\n      this.setCachedData(cacheKey, stats);\n      return stats;\n    } catch (error) {\n      throw new Error(\n        `Failed to load workflow statistics: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n\n  /**\n   * Calculate tag usage statistics\n   */\n  private calculateTagUsage(workflows: any[]): Record<string, number> {\n    const tagUsage: Record<string, number> = {};\n\n    workflows.forEach(workflow => {\n      if (workflow.tags && Array.isArray(workflow.tags)) {\n        workflow.tags.forEach((tag: any) => {\n          if (tag != null) {\n            const tagName = typeof tag === 'string' ? tag : tag?.name;\n            if (tagName) {\n              tagUsage[tagName] = (tagUsage[tagName] || 0) + 1;\n            }\n          }\n        });\n      }\n    });\n\n    return tagUsage;\n  }\n\n  /**\n   * Calculate creation statistics\n   */\n  private calculateCreationStats(workflows: any[]): any {\n    const now = new Date();\n    const oneWeekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    const oneMonthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n    return {\n      createdLastWeek: workflows.filter(w => new Date(w.createdAt) > oneWeekAgo).length,\n      createdLastMonth: workflows.filter(w => new Date(w.createdAt) > oneMonthAgo).length,\n      updatedLastWeek: workflows.filter(w => new Date(w.updatedAt) > oneWeekAgo).length,\n      updatedLastMonth: workflows.filter(w => new Date(w.updatedAt) > oneMonthAgo).length,\n    };\n  }\n\n  /**\n   * Get cached data if not expired\n   */\n  private getCachedData(key: string): any | null {\n    const cached = this.cache.get(key);\n    if (cached && cached.expires > Date.now()) {\n      return cached.data;\n    }\n    return null;\n  }\n\n  /**\n   * Set cached data with expiration\n   */\n  private setCachedData(key: string, data: any): void {\n    if (this.config.cacheDuration > 0) {\n      this.cache.set(key, {\n        data,\n        expires: Date.now() + this.config.cacheDuration,\n      });\n    }\n  }\n\n  /**\n   * Clear resource cache\n   */\n  public clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Get cache statistics\n   */\n  public getCacheStats(): { size: number; keys: string[] } {\n    return {\n      size: this.cache.size,\n      keys: Array.from(this.cache.keys()),\n    };\n  }\n}\n\n/**\n * Create workflow resource manager\n */\nexport function createWorkflowResources(config?: WorkflowResourceConfig): WorkflowResourceManager {\n  return new WorkflowResourceManager(config);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ebf382919b86de851de0124028bc74f3231d7a52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cj318xcke = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cj318xcke();
cov_1cj318xcke().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1cj318xcke().s[1]++;
exports.WorkflowResourceManager = void 0;
/* istanbul ignore next */
cov_1cj318xcke().s[2]++;
exports.createWorkflowResources = createWorkflowResources;
/**
 * Workflow resource manager
 *
 * Manages workflow-related MCP resources including individual workflow access,
 * workflow listings, and workflow metadata.
 */
class WorkflowResourceManager {
  config;
  cache =
  /* istanbul ignore next */
  (cov_1cj318xcke().s[3]++, new Map());
  constructor(config =
  /* istanbul ignore next */
  (cov_1cj318xcke().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[0]++;
    cov_1cj318xcke().s[4]++;
    this.config = {
      baseUri: 'n8n://workflows',
      maxWorkflows: 100,
      includeInactive: true,
      includeExecutions: false,
      cacheDuration: 5 * 60 * 1000,
      // 5 minutes
      ...config
    };
  }
  /**
   * Register workflow resources with FastMCP server
   */
  register(server, getClient) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[1]++;
    cov_1cj318xcke().s[5]++;
    // Individual workflow resource template
    server.addResourceTemplate({
      uriTemplate: `${this.config.baseUri}/{id}`,
      name: 'n8n Workflow',
      mimeType: 'application/json',
      arguments: [{
        name: 'id',
        description: 'The ID of the n8n workflow',
        required: true
      }],
      load: async ({
        id
      }) => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[2]++;
        const client =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[6]++, getClient());
        /* istanbul ignore next */
        cov_1cj318xcke().s[7]++;
        if (!client) {
          /* istanbul ignore next */
          cov_1cj318xcke().b[1][0]++;
          cov_1cj318xcke().s[8]++;
          throw new Error('n8n client not initialized. Run init-n8n first.');
        } else
        /* istanbul ignore next */
        {
          cov_1cj318xcke().b[1][1]++;
        }
        const workflow =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[9]++, await this.getWorkflowResource(client, id));
        /* istanbul ignore next */
        cov_1cj318xcke().s[10]++;
        return {
          text: JSON.stringify(workflow, null, 2)
        };
      }
    });
    // Workflow listing resource
    /* istanbul ignore next */
    cov_1cj318xcke().s[11]++;
    server.addResource({
      uri: `${this.config.baseUri}/list`,
      name: 'n8n Workflow List',
      mimeType: 'application/json',
      load: async () => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[3]++;
        const client =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[12]++, getClient());
        /* istanbul ignore next */
        cov_1cj318xcke().s[13]++;
        if (!client) {
          /* istanbul ignore next */
          cov_1cj318xcke().b[2][0]++;
          cov_1cj318xcke().s[14]++;
          throw new Error('n8n client not initialized. Run init-n8n first.');
        } else
        /* istanbul ignore next */
        {
          cov_1cj318xcke().b[2][1]++;
        }
        const workflows =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[15]++, await this.getWorkflowListResource(client));
        /* istanbul ignore next */
        cov_1cj318xcke().s[16]++;
        return {
          text: JSON.stringify(workflows, null, 2)
        };
      }
    });
    // Active workflows resource
    /* istanbul ignore next */
    cov_1cj318xcke().s[17]++;
    server.addResource({
      uri: `${this.config.baseUri}/active`,
      name: 'n8n Active Workflows',
      mimeType: 'application/json',
      load: async () => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[4]++;
        const client =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[18]++, getClient());
        /* istanbul ignore next */
        cov_1cj318xcke().s[19]++;
        if (!client) {
          /* istanbul ignore next */
          cov_1cj318xcke().b[3][0]++;
          cov_1cj318xcke().s[20]++;
          throw new Error('n8n client not initialized. Run init-n8n first.');
        } else
        /* istanbul ignore next */
        {
          cov_1cj318xcke().b[3][1]++;
        }
        const activeWorkflows =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[21]++, await this.getActiveWorkflowsResource(client));
        /* istanbul ignore next */
        cov_1cj318xcke().s[22]++;
        return {
          text: JSON.stringify(activeWorkflows, null, 2)
        };
      }
    });
    // Workflow statistics resource
    /* istanbul ignore next */
    cov_1cj318xcke().s[23]++;
    server.addResource({
      uri: `${this.config.baseUri}/stats`,
      name: 'n8n Workflow Statistics',
      mimeType: 'application/json',
      load: async () => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[5]++;
        const client =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[24]++, getClient());
        /* istanbul ignore next */
        cov_1cj318xcke().s[25]++;
        if (!client) {
          /* istanbul ignore next */
          cov_1cj318xcke().b[4][0]++;
          cov_1cj318xcke().s[26]++;
          throw new Error('n8n client not initialized. Run init-n8n first.');
        } else
        /* istanbul ignore next */
        {
          cov_1cj318xcke().b[4][1]++;
        }
        const stats =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[27]++, await this.getWorkflowStatsResource(client));
        /* istanbul ignore next */
        cov_1cj318xcke().s[28]++;
        return {
          text: JSON.stringify(stats, null, 2)
        };
      }
    });
    // Workflow resource template for pattern matching
    /* istanbul ignore next */
    cov_1cj318xcke().s[29]++;
    server.addResourceTemplate({
      uriTemplate: `${this.config.baseUri}/{workflowId}`,
      name: 'n8n Workflow by ID',
      mimeType: 'application/json',
      arguments: [{
        name: 'workflowId',
        description: 'The ID of the n8n workflow',
        required: true
      }],
      load: async ({
        workflowId
      }) => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[6]++;
        const client =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[30]++, getClient());
        /* istanbul ignore next */
        cov_1cj318xcke().s[31]++;
        if (!client) {
          /* istanbul ignore next */
          cov_1cj318xcke().b[5][0]++;
          cov_1cj318xcke().s[32]++;
          throw new Error('n8n client not initialized. Run init-n8n first.');
        } else
        /* istanbul ignore next */
        {
          cov_1cj318xcke().b[5][1]++;
        }
        const workflow =
        /* istanbul ignore next */
        (cov_1cj318xcke().s[33]++, await this.getWorkflowResource(client, workflowId));
        /* istanbul ignore next */
        cov_1cj318xcke().s[34]++;
        return {
          text: JSON.stringify(workflow, null, 2)
        };
      }
    });
    /* istanbul ignore next */
    cov_1cj318xcke().s[35]++;
    console.log('📄 Workflow resources registered');
  }
  /**
   * Get individual workflow resource
   */
  async getWorkflowResource(client, workflowId) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[7]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[36]++, `workflow:${workflowId}`);
    const cached =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[37]++, this.getCachedData(cacheKey));
    /* istanbul ignore next */
    cov_1cj318xcke().s[38]++;
    if (cached) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[6][0]++;
      cov_1cj318xcke().s[39]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[6][1]++;
    }
    cov_1cj318xcke().s[40]++;
    try {
      const workflow =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[41]++, await client.getWorkflow(workflowId));
      // Enhance workflow data with metadata
      const enhancedWorkflow =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[42]++, {
        ...workflow,
        metadata: {
          id: workflow.id,
          name: workflow.name,
          active: workflow.active,
          tags:
          /* istanbul ignore next */
          (cov_1cj318xcke().b[7][0]++, workflow.tags) ||
          /* istanbul ignore next */
          (cov_1cj318xcke().b[7][1]++, []),
          createdAt: workflow.createdAt,
          updatedAt: workflow.updatedAt,
          nodeCount:
          /* istanbul ignore next */
          (cov_1cj318xcke().b[8][0]++, workflow.nodes?.length) ||
          /* istanbul ignore next */
          (cov_1cj318xcke().b[8][1]++, 0),
          connectionCount: workflow.connections ?
          /* istanbul ignore next */
          (cov_1cj318xcke().b[9][0]++, Object.keys(workflow.connections).length) :
          /* istanbul ignore next */
          (cov_1cj318xcke().b[9][1]++, 0)
        },
        resourceInfo: {
          uri: `${this.config.baseUri}/${workflowId}`,
          type: 'n8n-workflow',
          version: '1.0',
          lastAccessed: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_1cj318xcke().s[43]++;
      this.setCachedData(cacheKey, enhancedWorkflow);
      /* istanbul ignore next */
      cov_1cj318xcke().s[44]++;
      return enhancedWorkflow;
    } catch (error) {
      /* istanbul ignore next */
      cov_1cj318xcke().s[45]++;
      throw new Error(`Failed to load workflow ${workflowId}: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cj318xcke().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cj318xcke().b[10][1]++, String(error))}`);
    }
  }
  /**
   * Get workflow list resource
   */
  async getWorkflowListResource(client) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[8]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[46]++, 'workflows:list');
    const cached =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[47]++, this.getCachedData(cacheKey));
    /* istanbul ignore next */
    cov_1cj318xcke().s[48]++;
    if (cached) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[11][0]++;
      cov_1cj318xcke().s[49]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[11][1]++;
    }
    cov_1cj318xcke().s[50]++;
    try {
      const workflows =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[51]++, await client.getWorkflows({
        limit: this.config.maxWorkflows
      }));
      const workflowList =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[52]++, {
        workflows: workflows.data.map(workflow => {
          /* istanbul ignore next */
          cov_1cj318xcke().f[9]++;
          cov_1cj318xcke().s[53]++;
          return {
            id: workflow.id,
            name: workflow.name,
            active: workflow.active,
            tags:
            /* istanbul ignore next */
            (cov_1cj318xcke().b[12][0]++, workflow.tags) ||
            /* istanbul ignore next */
            (cov_1cj318xcke().b[12][1]++, []),
            createdAt: workflow.createdAt,
            updatedAt: workflow.updatedAt,
            uri: `${this.config.baseUri}/${workflow.id}`
          };
        }),
        metadata: {
          total: workflows.data.length,
          // API doesn't provide total count
          returned: workflows.data.length,
          includeInactive: this.config.includeInactive,
          maxWorkflows: this.config.maxWorkflows
        },
        resourceInfo: {
          uri: `${this.config.baseUri}/list`,
          type: 'n8n-workflow-list',
          version: '1.0',
          lastAccessed: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_1cj318xcke().s[54]++;
      this.setCachedData(cacheKey, workflowList);
      /* istanbul ignore next */
      cov_1cj318xcke().s[55]++;
      return workflowList;
    } catch (error) {
      /* istanbul ignore next */
      cov_1cj318xcke().s[56]++;
      throw new Error(`Failed to load workflow list: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cj318xcke().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cj318xcke().b[13][1]++, String(error))}`);
    }
  }
  /**
   * Get active workflows resource
   */
  async getActiveWorkflowsResource(client) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[10]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[57]++, 'workflows:active');
    const cached =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[58]++, this.getCachedData(cacheKey));
    /* istanbul ignore next */
    cov_1cj318xcke().s[59]++;
    if (cached) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[14][0]++;
      cov_1cj318xcke().s[60]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[14][1]++;
    }
    cov_1cj318xcke().s[61]++;
    try {
      const workflows =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[62]++, await client.getWorkflows({
        limit: this.config.maxWorkflows
      }));
      // Filter for active workflows client-side
      const activeWorkflowsData =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[63]++, workflows.data.filter(w => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[11]++;
        cov_1cj318xcke().s[64]++;
        return w.active;
      }));
      const activeWorkflows =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[65]++, {
        activeWorkflows: activeWorkflowsData.map(workflow => {
          /* istanbul ignore next */
          cov_1cj318xcke().f[12]++;
          cov_1cj318xcke().s[66]++;
          return {
            id: workflow.id,
            name: workflow.name,
            tags:
            /* istanbul ignore next */
            (cov_1cj318xcke().b[15][0]++, workflow.tags) ||
            /* istanbul ignore next */
            (cov_1cj318xcke().b[15][1]++, []),
            lastExecution: workflow.updatedAt,
            uri: `${this.config.baseUri}/${workflow.id}`
          };
        }),
        metadata: {
          total: activeWorkflowsData.length,
          returned: activeWorkflowsData.length,
          activeOnly: true
        },
        resourceInfo: {
          uri: `${this.config.baseUri}/active`,
          type: 'n8n-active-workflows',
          version: '1.0',
          lastAccessed: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_1cj318xcke().s[67]++;
      this.setCachedData(cacheKey, activeWorkflows);
      /* istanbul ignore next */
      cov_1cj318xcke().s[68]++;
      return activeWorkflows;
    } catch (error) {
      /* istanbul ignore next */
      cov_1cj318xcke().s[69]++;
      throw new Error(`Failed to load active workflows: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cj318xcke().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cj318xcke().b[16][1]++, String(error))}`);
    }
  }
  /**
   * Get workflow statistics resource
   */
  async getWorkflowStatsResource(client) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[13]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[70]++, 'workflows:stats');
    const cached =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[71]++, this.getCachedData(cacheKey));
    /* istanbul ignore next */
    cov_1cj318xcke().s[72]++;
    if (cached) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[17][0]++;
      cov_1cj318xcke().s[73]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[17][1]++;
    }
    cov_1cj318xcke().s[74]++;
    try {
      const workflows =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[75]++, await client.getWorkflows({
        limit: this.config.maxWorkflows
      }));
      const stats =
      /* istanbul ignore next */
      (cov_1cj318xcke().s[76]++, {
        totalWorkflows: workflows.data.length,
        activeWorkflows: workflows.data.filter(w => {
          /* istanbul ignore next */
          cov_1cj318xcke().f[14]++;
          cov_1cj318xcke().s[77]++;
          return w.active;
        }).length,
        inactiveWorkflows: workflows.data.filter(w => {
          /* istanbul ignore next */
          cov_1cj318xcke().f[15]++;
          cov_1cj318xcke().s[78]++;
          return !w.active;
        }).length,
        tagUsage: this.calculateTagUsage(workflows.data),
        creationStats: this.calculateCreationStats(workflows.data),
        resourceInfo: {
          uri: `${this.config.baseUri}/stats`,
          type: 'n8n-workflow-stats',
          version: '1.0',
          lastAccessed: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_1cj318xcke().s[79]++;
      this.setCachedData(cacheKey, stats);
      /* istanbul ignore next */
      cov_1cj318xcke().s[80]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_1cj318xcke().s[81]++;
      throw new Error(`Failed to load workflow statistics: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cj318xcke().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cj318xcke().b[18][1]++, String(error))}`);
    }
  }
  /**
   * Calculate tag usage statistics
   */
  calculateTagUsage(workflows) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[16]++;
    const tagUsage =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[82]++, {});
    /* istanbul ignore next */
    cov_1cj318xcke().s[83]++;
    workflows.forEach(workflow => {
      /* istanbul ignore next */
      cov_1cj318xcke().f[17]++;
      cov_1cj318xcke().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_1cj318xcke().b[20][0]++, workflow.tags) &&
      /* istanbul ignore next */
      (cov_1cj318xcke().b[20][1]++, Array.isArray(workflow.tags))) {
        /* istanbul ignore next */
        cov_1cj318xcke().b[19][0]++;
        cov_1cj318xcke().s[85]++;
        workflow.tags.forEach(tag => {
          /* istanbul ignore next */
          cov_1cj318xcke().f[18]++;
          cov_1cj318xcke().s[86]++;
          if (tag != null) {
            /* istanbul ignore next */
            cov_1cj318xcke().b[21][0]++;
            const tagName =
            /* istanbul ignore next */
            (cov_1cj318xcke().s[87]++, typeof tag === 'string' ?
            /* istanbul ignore next */
            (cov_1cj318xcke().b[22][0]++, tag) :
            /* istanbul ignore next */
            (cov_1cj318xcke().b[22][1]++, tag?.name));
            /* istanbul ignore next */
            cov_1cj318xcke().s[88]++;
            if (tagName) {
              /* istanbul ignore next */
              cov_1cj318xcke().b[23][0]++;
              cov_1cj318xcke().s[89]++;
              tagUsage[tagName] = (
              /* istanbul ignore next */
              (cov_1cj318xcke().b[24][0]++, tagUsage[tagName]) ||
              /* istanbul ignore next */
              (cov_1cj318xcke().b[24][1]++, 0)) + 1;
            } else
            /* istanbul ignore next */
            {
              cov_1cj318xcke().b[23][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1cj318xcke().b[21][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1cj318xcke().b[19][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1cj318xcke().s[90]++;
    return tagUsage;
  }
  /**
   * Calculate creation statistics
   */
  calculateCreationStats(workflows) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[19]++;
    const now =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[91]++, new Date());
    const oneWeekAgo =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[92]++, new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000));
    const oneMonthAgo =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[93]++, new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000));
    /* istanbul ignore next */
    cov_1cj318xcke().s[94]++;
    return {
      createdLastWeek: workflows.filter(w => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[20]++;
        cov_1cj318xcke().s[95]++;
        return new Date(w.createdAt) > oneWeekAgo;
      }).length,
      createdLastMonth: workflows.filter(w => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[21]++;
        cov_1cj318xcke().s[96]++;
        return new Date(w.createdAt) > oneMonthAgo;
      }).length,
      updatedLastWeek: workflows.filter(w => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[22]++;
        cov_1cj318xcke().s[97]++;
        return new Date(w.updatedAt) > oneWeekAgo;
      }).length,
      updatedLastMonth: workflows.filter(w => {
        /* istanbul ignore next */
        cov_1cj318xcke().f[23]++;
        cov_1cj318xcke().s[98]++;
        return new Date(w.updatedAt) > oneMonthAgo;
      }).length
    };
  }
  /**
   * Get cached data if not expired
   */
  getCachedData(key) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[24]++;
    const cached =
    /* istanbul ignore next */
    (cov_1cj318xcke().s[99]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_1cj318xcke().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_1cj318xcke().b[26][0]++, cached) &&
    /* istanbul ignore next */
    (cov_1cj318xcke().b[26][1]++, cached.expires > Date.now())) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[25][0]++;
      cov_1cj318xcke().s[101]++;
      return cached.data;
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[25][1]++;
    }
    cov_1cj318xcke().s[102]++;
    return null;
  }
  /**
   * Set cached data with expiration
   */
  setCachedData(key, data) {
    /* istanbul ignore next */
    cov_1cj318xcke().f[25]++;
    cov_1cj318xcke().s[103]++;
    if (this.config.cacheDuration > 0) {
      /* istanbul ignore next */
      cov_1cj318xcke().b[27][0]++;
      cov_1cj318xcke().s[104]++;
      this.cache.set(key, {
        data,
        expires: Date.now() + this.config.cacheDuration
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cj318xcke().b[27][1]++;
    }
  }
  /**
   * Clear resource cache
   */
  clearCache() {
    /* istanbul ignore next */
    cov_1cj318xcke().f[26]++;
    cov_1cj318xcke().s[105]++;
    this.cache.clear();
  }
  /**
   * Get cache statistics
   */
  getCacheStats() {
    /* istanbul ignore next */
    cov_1cj318xcke().f[27]++;
    cov_1cj318xcke().s[106]++;
    return {
      size: this.cache.size,
      keys: Array.from(this.cache.keys())
    };
  }
}
/* istanbul ignore next */
cov_1cj318xcke().s[107]++;
exports.WorkflowResourceManager = WorkflowResourceManager;
/**
 * Create workflow resource manager
 */
function createWorkflowResources(config) {
  /* istanbul ignore next */
  cov_1cj318xcke().f[28]++;
  cov_1cj318xcke().s[108]++;
  return new WorkflowResourceManager(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,