{"version":3,"names":["cov_wmo7ylmjl","actualCoverage","s","exports","createAuditTools","zod_1","require","fastmcp_1","getClient","server","f","addTool","name","description","parameters","z","object","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","client","b","UserError","auditReport","generateAuditReport","result","Date","toLocaleString","dbSettings","JSON","stringify","credRisk","entries","Object","length","forEach","key","value","nodesRisk","instanceRisk","knownSections","additionalSections","keys","filter","includes","section","error","Error","message"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/audit.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\n\n// Tool registration function\nexport function createAuditTools(getClient: () => N8nClient | null, server: any) {\n  // Generate audit report tool\n  server.addTool({\n    name: 'generate-audit-report',\n    description:\n      'Generate a comprehensive security and configuration audit report for the n8n instance. NOTE: May require Enterprise license',\n    parameters: z.object({}),\n    annotations: {\n      title: 'Generate Audit Report',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const auditReport = await client.generateAuditReport();\n\n        let result = `# n8n Security Audit Report\\n\\n`;\n        result += `**Generated:** ${new Date().toLocaleString()}\\n\\n`;\n\n        // Database Settings section\n        if (auditReport['Database Settings']) {\n          result += `## Database Settings\\n\\n`;\n          const dbSettings = auditReport['Database Settings'];\n          result += '```json\\n';\n          result += JSON.stringify(dbSettings, null, 2);\n          result += '\\n```\\n\\n';\n        }\n\n        // Credentials Risk Report section\n        if (auditReport['Credentials Risk Report']) {\n          result += `## Credentials Risk Assessment\\n\\n`;\n          const credRisk = auditReport['Credentials Risk Report'];\n\n          if (typeof credRisk === 'object' && credRisk !== null) {\n            const entries = Object.entries(credRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No credential risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(credRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Nodes Risk Report section\n        if (auditReport['Nodes Risk Report']) {\n          result += `## Nodes Risk Assessment\\n\\n`;\n          const nodesRisk = auditReport['Nodes Risk Report'];\n\n          if (typeof nodesRisk === 'object' && nodesRisk !== null) {\n            const entries = Object.entries(nodesRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No node risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(nodesRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Instance Risk Report section\n        if (auditReport['Instance Risk Report']) {\n          result += `## Instance Risk Assessment\\n\\n`;\n          const instanceRisk = auditReport['Instance Risk Report'];\n\n          if (typeof instanceRisk === 'object' && instanceRisk !== null) {\n            const entries = Object.entries(instanceRisk);\n            if (entries.length > 0) {\n              entries.forEach(([key, value]) => {\n                result += `**${key}:** ${JSON.stringify(value)}\\n`;\n              });\n            } else {\n              result += `No instance risk issues found.\\n`;\n            }\n          } else {\n            result += '```json\\n';\n            result += JSON.stringify(instanceRisk, null, 2);\n            result += '\\n```\\n';\n          }\n          result += '\\n';\n        }\n\n        // Add any additional sections that might be present\n        const knownSections = [\n          'Database Settings',\n          'Credentials Risk Report',\n          'Nodes Risk Report',\n          'Instance Risk Report',\n        ];\n        const additionalSections = Object.keys(auditReport).filter(\n          key => !knownSections.includes(key)\n        );\n\n        if (additionalSections.length > 0) {\n          result += `## Additional Audit Information\\n\\n`;\n          additionalSections.forEach(section => {\n            result += `### ${section}\\n\\n`;\n            result += '```json\\n';\n            result += JSON.stringify((auditReport as Record<string, unknown>)[section], null, 2);\n            result += '\\n```\\n\\n';\n          });\n        }\n\n        result += `---\\n\\n`;\n        result += `**Security Recommendations:**\\n`;\n        result += `- Review any identified risk issues above\\n`;\n        result += `- Ensure credentials are properly scoped and secured\\n`;\n        result += `- Regularly update n8n to the latest version\\n`;\n        result += `- Monitor and audit workflow access permissions\\n`;\n        result += `- Use environment variables for sensitive configuration\\n`;\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license') || error.message.includes('Enterprise')) {\n            throw new UserError(\n              `This operation may require an n8n Enterprise license. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to generate audit report: ${error.message}`);\n        }\n        throw new UserError('Failed to generate audit report with unknown error');\n      }\n    },\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}