817b02d408a5e649b86b2c8eda73d728
/* istanbul ignore next */
function cov_1720wj6quo() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/authProvider.ts";
  var hash = "8c68268522d98474e4badfdd45b0cbf2a96b81ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/authProvider.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "1": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "2": {
        start: {
          line: 18,
          column: 32
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "3": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "4": {
        start: {
          line: 70,
          column: 35
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "5": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "6": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "7": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "8": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "9": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "10": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 44
        }
      },
      "11": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "12": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "13": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "14": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 42
        }
      },
      "15": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "16": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 43
        }
      },
      "17": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "18": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 37
        }
      },
      "19": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "20": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 42
        }
      },
      "21": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "22": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 74
        }
      },
      "23": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 109,
          column: 60
        }
      },
      "24": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 110,
          column: 61
        }
      },
      "25": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 43
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 107
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 47
          }
        }, {
          start: {
            line: 108,
            column: 51
          },
          end: {
            line: 108,
            column: 74
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 49
          }
        }, {
          start: {
            line: 109,
            column: 53
          },
          end: {
            line: 109,
            column: 60
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 25
          },
          end: {
            line: 110,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 25
          },
          end: {
            line: 110,
            column: 49
          }
        }, {
          start: {
            line: 110,
            column: 53
          },
          end: {
            line: 110,
            column: 61
          }
        }],
        line: 110
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/authProvider.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/authProvider.ts"],
      sourcesContent: ["/**\n * Authentication Provider Interface for n8n MCP Server\n *\n * Defines the contract for authentication providers that can validate\n * client requests and control access to n8n tools and resources.\n */\n\n/**\n * Request context containing client information and request metadata\n */\nexport interface RequestContext {\n  /** Client identifier or session ID */\n  clientId?: string;\n\n  /** Request headers containing potential authentication tokens */\n  headers?: Record<string, string>;\n\n  /** Request metadata */\n  metadata?: Record<string, unknown>;\n\n  /** Authenticated user information (populated after successful auth) */\n  user?: AuthenticatedUser;\n}\n\n/**\n * Result of authentication attempt\n */\nexport interface AuthResult {\n  /** Whether authentication was successful */\n  success: boolean;\n\n  /** Authenticated user information (if successful) */\n  user?: AuthenticatedUser;\n\n  /** Error message (if failed) */\n  error?: string;\n\n  /** Additional context or session data */\n  context?: Record<string, unknown>;\n}\n\n/**\n * Authenticated user information\n */\nexport interface AuthenticatedUser {\n  /** Unique user identifier */\n  id: string;\n\n  /** User display name */\n  name?: string;\n\n  /** User email address */\n  email?: string;\n\n  /** User roles for access control */\n  roles: string[];\n\n  /** n8n instance permissions */\n  permissions: {\n    /** Can access Community features */\n    community: boolean;\n\n    /** Can access Enterprise features (projects, users, etc.) */\n    enterprise: boolean;\n\n    /** Can manage workflows */\n    workflows: boolean;\n\n    /** Can view executions */\n    executions: boolean;\n\n    /** Can manage credentials */\n    credentials: boolean;\n\n    /** Can manage users (admin only) */\n    users: boolean;\n\n    /** Can access audit logs */\n    audit: boolean;\n  };\n\n  /** n8n API key for backend requests */\n  n8nApiKey?: string;\n\n  /** n8n instance URL */\n  n8nBaseUrl?: string;\n}\n\n/**\n * Authentication provider interface\n */\n\nexport interface AuthProvider {\n  /**\n   * Authenticate a client request\n   * @param context Request context containing client information\n   * @returns Promise resolving to authentication result\n   */\n  authenticate(_context: RequestContext): Promise<AuthResult>;\n\n  /**\n   * Check if authenticated user can access a specific tool\n   * @param toolName Name of the tool being accessed\n   * @param context Request context with authenticated user\n   * @returns Promise resolving to true if access is allowed\n   */\n  canAccessTool(_toolName: string, _context: RequestContext): Promise<boolean>;\n\n  /**\n   * Check if authenticated user can access a specific resource\n   * @param resourceUri URI of the resource being accessed\n   * @param context Request context with authenticated user\n   * @returns Promise resolving to true if access is allowed\n   */\n  canAccessResource(_resourceUri: string, _context: RequestContext): Promise<boolean>;\n\n  /**\n   * Refresh or validate existing authentication\n   * @param context Request context with existing auth data\n   * @returns Promise resolving to updated authentication result\n   */\n  refresh(_context: RequestContext): Promise<AuthResult>;\n}\n\n/**\n * Base authentication provider with common functionality\n */\nexport abstract class BaseAuthProvider implements AuthProvider {\n  abstract authenticate(_context: RequestContext): Promise<AuthResult>;\n  abstract refresh(_context: RequestContext): Promise<AuthResult>;\n\n  /**\n   * Default tool access control based on user permissions\n   */\n  async canAccessTool(toolName: string, context: RequestContext): Promise<boolean> {\n    if (!context.user) {\n      return false;\n    }\n\n    const { permissions } = context.user;\n\n    // Tool access mapping\n    const toolPermissions: Record<string, keyof typeof permissions> = {\n      // Core workflow tools\n      'init-n8n': 'community',\n      status: 'community',\n      'list-workflows': 'workflows',\n      'get-workflow': 'workflows',\n      'create-workflow': 'workflows',\n      'update-workflow': 'workflows',\n      'delete-workflow': 'workflows',\n      'activate-workflow': 'workflows',\n      'deactivate-workflow': 'workflows',\n\n      // Execution tools\n      'list-executions': 'executions',\n      'get-execution': 'executions',\n      'delete-execution': 'executions',\n      'retry-execution': 'executions',\n      'stop-execution': 'executions',\n\n      // Enterprise features\n      'list-projects': 'enterprise',\n      'create-project': 'enterprise',\n      'get-project': 'enterprise',\n      'update-project': 'enterprise',\n      'delete-project': 'enterprise',\n      'list-project-workflows': 'enterprise',\n      'list-variables': 'enterprise',\n      'create-variable': 'enterprise',\n      'get-variable': 'enterprise',\n      'update-variable': 'enterprise',\n      'delete-variable': 'enterprise',\n\n      // User management\n      'list-users': 'users',\n      'create-user': 'users',\n      'get-user': 'users',\n      'update-user': 'users',\n      'delete-user': 'users',\n\n      // Credentials\n      'list-credentials': 'credentials',\n      'get-credential': 'credentials',\n      'create-credential': 'credentials',\n      'update-credential': 'credentials',\n      'delete-credential': 'credentials',\n\n      // Audit\n      'get-audit-logs': 'audit',\n      'generate-audit-report': 'audit',\n\n      // Tags (community feature)\n      'list-tags': 'community',\n      'create-tag': 'workflows',\n      'update-tag': 'workflows',\n      'delete-tag': 'workflows',\n    };\n\n    const requiredPermission = toolPermissions[toolName];\n    if (!requiredPermission) {\n      // Unknown tool, default to community access\n      return permissions.community;\n    }\n\n    return permissions[requiredPermission];\n  }\n\n  /**\n   * Default resource access control\n   */\n  async canAccessResource(resourceUri: string, context: RequestContext): Promise<boolean> {\n    if (!context.user) {\n      return false;\n    }\n\n    const { permissions } = context.user;\n\n    // Resource access based on URI patterns\n    if (resourceUri.startsWith('n8n://workflows/')) {\n      return permissions.workflows;\n    }\n\n    if (resourceUri.startsWith('n8n://executions/')) {\n      return permissions.executions;\n    }\n\n    if (resourceUri.startsWith('n8n://credentials/')) {\n      return permissions.credentials;\n    }\n\n    if (resourceUri.startsWith('n8n://users/')) {\n      return permissions.users;\n    }\n\n    if (resourceUri.startsWith('n8n://projects/')) {\n      return permissions.enterprise;\n    }\n\n    // Default to community access for other resources\n    return permissions.community;\n  }\n\n  /**\n   * Create default permissions based on user roles\n   */\n  protected createPermissions(roles: string[]): AuthenticatedUser['permissions'] {\n    const isAdmin = roles.includes('admin') || roles.includes('owner');\n    const isEditor = roles.includes('editor') || isAdmin;\n    const isMember = roles.includes('member') || isEditor;\n\n    return {\n      community: true, // All authenticated users get community access\n      enterprise: isAdmin, // Only admins get enterprise features by default\n      workflows: isMember, // Members and above can manage workflows\n      executions: isMember, // Members and above can view executions\n      credentials: isEditor, // Editors and above can manage credentials\n      users: isAdmin, // Only admins can manage users\n      audit: isAdmin, // Only admins can access audit logs\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c68268522d98474e4badfdd45b0cbf2a96b81ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1720wj6quo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1720wj6quo();
/**
 * Authentication Provider Interface for n8n MCP Server
 *
 * Defines the contract for authentication providers that can validate
 * client requests and control access to n8n tools and resources.
 */
/**
 * Base authentication provider with common functionality
 */
export class BaseAuthProvider {
  /**
   * Default tool access control based on user permissions
   */
  async canAccessTool(toolName, context) {
    /* istanbul ignore next */
    cov_1720wj6quo().f[0]++;
    cov_1720wj6quo().s[0]++;
    if (!context.user) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[0][0]++;
      cov_1720wj6quo().s[1]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[0][1]++;
    }
    const {
      permissions
    } =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[2]++, context.user);
    // Tool access mapping
    const toolPermissions =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[3]++, {
      // Core workflow tools
      'init-n8n': 'community',
      status: 'community',
      'list-workflows': 'workflows',
      'get-workflow': 'workflows',
      'create-workflow': 'workflows',
      'update-workflow': 'workflows',
      'delete-workflow': 'workflows',
      'activate-workflow': 'workflows',
      'deactivate-workflow': 'workflows',
      // Execution tools
      'list-executions': 'executions',
      'get-execution': 'executions',
      'delete-execution': 'executions',
      'retry-execution': 'executions',
      'stop-execution': 'executions',
      // Enterprise features
      'list-projects': 'enterprise',
      'create-project': 'enterprise',
      'get-project': 'enterprise',
      'update-project': 'enterprise',
      'delete-project': 'enterprise',
      'list-project-workflows': 'enterprise',
      'list-variables': 'enterprise',
      'create-variable': 'enterprise',
      'get-variable': 'enterprise',
      'update-variable': 'enterprise',
      'delete-variable': 'enterprise',
      // User management
      'list-users': 'users',
      'create-user': 'users',
      'get-user': 'users',
      'update-user': 'users',
      'delete-user': 'users',
      // Credentials
      'list-credentials': 'credentials',
      'get-credential': 'credentials',
      'create-credential': 'credentials',
      'update-credential': 'credentials',
      'delete-credential': 'credentials',
      // Audit
      'get-audit-logs': 'audit',
      'generate-audit-report': 'audit',
      // Tags (community feature)
      'list-tags': 'community',
      'create-tag': 'workflows',
      'update-tag': 'workflows',
      'delete-tag': 'workflows'
    });
    const requiredPermission =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[4]++, toolPermissions[toolName]);
    /* istanbul ignore next */
    cov_1720wj6quo().s[5]++;
    if (!requiredPermission) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[1][0]++;
      cov_1720wj6quo().s[6]++;
      // Unknown tool, default to community access
      return permissions.community;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[1][1]++;
    }
    cov_1720wj6quo().s[7]++;
    return permissions[requiredPermission];
  }
  /**
   * Default resource access control
   */
  async canAccessResource(resourceUri, context) {
    /* istanbul ignore next */
    cov_1720wj6quo().f[1]++;
    cov_1720wj6quo().s[8]++;
    if (!context.user) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[2][0]++;
      cov_1720wj6quo().s[9]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[2][1]++;
    }
    const {
      permissions
    } =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[10]++, context.user);
    // Resource access based on URI patterns
    /* istanbul ignore next */
    cov_1720wj6quo().s[11]++;
    if (resourceUri.startsWith('n8n://workflows/')) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[3][0]++;
      cov_1720wj6quo().s[12]++;
      return permissions.workflows;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[3][1]++;
    }
    cov_1720wj6quo().s[13]++;
    if (resourceUri.startsWith('n8n://executions/')) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[4][0]++;
      cov_1720wj6quo().s[14]++;
      return permissions.executions;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[4][1]++;
    }
    cov_1720wj6quo().s[15]++;
    if (resourceUri.startsWith('n8n://credentials/')) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[5][0]++;
      cov_1720wj6quo().s[16]++;
      return permissions.credentials;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[5][1]++;
    }
    cov_1720wj6quo().s[17]++;
    if (resourceUri.startsWith('n8n://users/')) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[6][0]++;
      cov_1720wj6quo().s[18]++;
      return permissions.users;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[6][1]++;
    }
    cov_1720wj6quo().s[19]++;
    if (resourceUri.startsWith('n8n://projects/')) {
      /* istanbul ignore next */
      cov_1720wj6quo().b[7][0]++;
      cov_1720wj6quo().s[20]++;
      return permissions.enterprise;
    } else
    /* istanbul ignore next */
    {
      cov_1720wj6quo().b[7][1]++;
    }
    // Default to community access for other resources
    cov_1720wj6quo().s[21]++;
    return permissions.community;
  }
  /**
   * Create default permissions based on user roles
   */
  createPermissions(roles) {
    /* istanbul ignore next */
    cov_1720wj6quo().f[2]++;
    const isAdmin =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[22]++,
    /* istanbul ignore next */
    (cov_1720wj6quo().b[8][0]++, roles.includes('admin')) ||
    /* istanbul ignore next */
    (cov_1720wj6quo().b[8][1]++, roles.includes('owner')));
    const isEditor =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[23]++,
    /* istanbul ignore next */
    (cov_1720wj6quo().b[9][0]++, roles.includes('editor')) ||
    /* istanbul ignore next */
    (cov_1720wj6quo().b[9][1]++, isAdmin));
    const isMember =
    /* istanbul ignore next */
    (cov_1720wj6quo().s[24]++,
    /* istanbul ignore next */
    (cov_1720wj6quo().b[10][0]++, roles.includes('member')) ||
    /* istanbul ignore next */
    (cov_1720wj6quo().b[10][1]++, isEditor));
    /* istanbul ignore next */
    cov_1720wj6quo().s[25]++;
    return {
      community: true,
      // All authenticated users get community access
      enterprise: isAdmin,
      // Only admins get enterprise features by default
      workflows: isMember,
      // Members and above can manage workflows
      executions: isMember,
      // Members and above can view executions
      credentials: isEditor,
      // Editors and above can manage credentials
      users: isAdmin,
      // Only admins can manage users
      audit: isAdmin // Only admins can access audit logs
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,