92feec5e01031863dd8b8c218022f02e
/* istanbul ignore next */
function cov_6ynqod1mw() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/connectionManager.ts";
  var hash = "be9d2dc99e08fd6c3dc2c9546b1a89b8e079502e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/connectionManager.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 38
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "1": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "2": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 32
        }
      },
      "3": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 26
        }
      },
      "4": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 27
        }
      },
      "5": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 27
        }
      },
      "6": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "7": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 16
        }
      },
      "8": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "9": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 54
        }
      },
      "10": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 36
        }
      },
      "11": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "12": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "13": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 75
        }
      },
      "14": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 46
        }
      },
      "15": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 33
        }
      },
      "16": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "17": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 45
        }
      },
      "18": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 46
        }
      },
      "19": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "20": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "21": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "22": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 24
        }
      },
      "23": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "24": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 75
        }
      },
      "25": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 31
        }
      },
      "26": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "27": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 44
        }
      },
      "28": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "29": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 65
        }
      },
      "30": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "31": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 49
        }
      },
      "32": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 47
        }
      },
      "33": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 45
        }
      },
      "34": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 53
        }
      },
      "35": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "36": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "37": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "38": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "39": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "40": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 82
        }
      },
      "41": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "42": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 49
        }
      },
      "43": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 33
        }
      },
      "44": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "45": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 24
        }
      },
      "46": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "47": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 71
        }
      },
      "48": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 73
        }
      },
      "49": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "50": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 71
        }
      },
      "51": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 77
        }
      },
      "52": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "53": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 55
        }
      },
      "54": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 49
        }
      },
      "55": {
        start: {
          line: 217,
          column: 22
        },
        end: {
          line: 217,
          column: 69
        }
      },
      "56": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "57": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 57
        }
      },
      "58": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "59": {
        start: {
          line: 228,
          column: 32
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "60": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 80
        }
      },
      "61": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 38
        }
      },
      "62": {
        start: {
          line: 236,
          column: 30
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "63": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 94
        }
      },
      "64": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 44
        }
      },
      "65": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "66": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 64
        }
      },
      "67": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "68": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 45
        }
      },
      "69": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 77
        }
      },
      "70": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 264,
          column: 56
        }
      },
      "71": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "72": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 78
        }
      },
      "73": {
        start: {
          line: 269,
          column: 32
        },
        end: {
          line: 269,
          column: 92
        }
      },
      "74": {
        start: {
          line: 270,
          column: 29
        },
        end: {
          line: 274,
          column: 13
        }
      },
      "75": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 61
        }
      },
      "76": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 42
        }
      },
      "77": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "78": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "79": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 44
        }
      },
      "80": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 44
        }
      },
      "81": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 50
        }
      },
      "82": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 47
        }
      },
      "83": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 48
        }
      },
      "84": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 292,
          column: 15
        }
      },
      "85": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 41
        }
      },
      "86": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 45
        }
      },
      "87": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "88": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "89": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 41
        }
      },
      "90": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 24
        }
      },
      "91": {
        start: {
          line: 314,
          column: 27
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "92": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "93": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 93
        }
      },
      "94": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 321,
          column: 13
        }
      },
      "95": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 86
        }
      },
      "96": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 26
        }
      },
      "97": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "98": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 19
        }
      },
      "99": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 43
        }
      },
      "100": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 37
        }
      },
      "101": {
        start: {
          line: 334,
          column: 22
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "102": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "103": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 349,
          column: 18
        }
      },
      "104": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 46
        }
      },
      "105": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "106": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 37
        }
      },
      "107": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 356,
          column: 19
        }
      },
      "108": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 19
        }
      },
      "109": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 369,
          column: 11
        }
      },
      "110": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 47
        }
      },
      "111": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 45
        }
      },
      "112": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "113": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 15
        }
      },
      "114": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "115": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 41
        }
      },
      "116": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "117": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 50
        }
      },
      "118": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 375,
          column: 15
        }
      },
      "119": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 384,
          column: 11
        }
      },
      "120": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 41
        }
      },
      "121": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 50
        }
      },
      "122": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 383,
          column: 15
        }
      },
      "123": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 391,
          column: 19
        }
      },
      "124": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 19
        }
      },
      "125": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 394,
          column: 11
        }
      },
      "126": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 48
        }
      },
      "127": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 397,
          column: 11
        }
      },
      "128": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 48
        }
      },
      "129": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 401,
          column: 11
        }
      },
      "130": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 49
        }
      },
      "131": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 46
        }
      },
      "132": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "133": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 46
        }
      },
      "134": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 11
        }
      },
      "135": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 48
        }
      },
      "136": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 411,
          column: 11
        }
      },
      "137": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 50
        }
      },
      "138": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 418,
          column: 19
        }
      },
      "139": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 19
        }
      },
      "140": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 421,
          column: 11
        }
      },
      "141": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 47
        }
      },
      "142": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 424,
          column: 11
        }
      },
      "143": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 49
        }
      },
      "144": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 427,
          column: 11
        }
      },
      "145": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 47
        }
      },
      "146": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 436,
          column: 11
        }
      },
      "147": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 434,
          column: 13
        }
      },
      "148": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 430,
          column: 54
        }
      },
      "149": {
        start: {
          line: 432,
          column: 17
        },
        end: {
          line: 434,
          column: 13
        }
      },
      "150": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 53
        }
      },
      "151": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 38
        }
      },
      "152": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 444,
          column: 45
        }
      },
      "153": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 38
        }
      },
      "154": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 452,
          column: 18
        }
      },
      "155": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 36
        }
      },
      "156": {
        start: {
          line: 458,
          column: 23
        },
        end: {
          line: 458,
          column: 49
        }
      },
      "157": {
        start: {
          line: 459,
          column: 26
        },
        end: {
          line: 459,
          column: 27
        }
      },
      "158": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 461,
          column: 30
        }
      },
      "159": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 30
        }
      },
      "160": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 463,
          column: 30
        }
      },
      "161": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 30
        }
      },
      "162": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 465,
          column: 30
        }
      },
      "163": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 30
        }
      },
      "164": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 467,
          column: 30
        }
      },
      "165": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 30
        }
      },
      "166": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "167": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 48
        }
      },
      "168": {
        start: {
          line: 472,
          column: 13
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "169": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 49
        }
      },
      "170": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 50
        }
      },
      "171": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 483,
          column: 11
        }
      },
      "172": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "173": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 504,
          column: 13
        }
      },
      "174": {
        start: {
          line: 491,
          column: 38
        },
        end: {
          line: 491,
          column: 97
        }
      },
      "175": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 497,
          column: 17
        }
      },
      "176": {
        start: {
          line: 493,
          column: 20
        },
        end: {
          line: 493,
          column: 59
        }
      },
      "177": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 496,
          column: 23
        }
      },
      "178": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 503,
          column: 19
        }
      },
      "179": {
        start: {
          line: 511,
          column: 20
        },
        end: {
          line: 511,
          column: 36
        }
      },
      "180": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 66
        }
      },
      "181": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 36
        }
      },
      "182": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 30
        }
      },
      "183": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "184": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 67
        }
      },
      "185": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 17
        }
      },
      "186": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 25
        }
      },
      "187": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 92
        }
      },
      "188": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 546,
          column: 9
        }
      },
      "189": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 544,
          column: 49
        }
      },
      "190": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 545,
          column: 41
        }
      },
      "191": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 550,
          column: 9
        }
      },
      "192": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 49
        }
      },
      "193": {
        start: {
          line: 549,
          column: 12
        },
        end: {
          line: 549,
          column: 41
        }
      },
      "194": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 554,
          column: 9
        }
      },
      "195": {
        start: {
          line: 552,
          column: 12
        },
        end: {
          line: 552,
          column: 53
        }
      },
      "196": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 553,
          column: 46
        }
      },
      "197": {
        start: {
          line: 561,
          column: 19
        },
        end: {
          line: 593,
          column: 5
        }
      },
      "198": {
        start: {
          line: 594,
          column: 4
        },
        end: {
          line: 594,
          column: 41
        }
      },
      "199": {
        start: {
          line: 599,
          column: 41
        },
        end: {
          line: 625,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 60
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 18
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 77
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 107
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 25
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 143
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 152
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 167
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 42
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 188
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 197
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 31
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 206
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 215
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 20
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 256
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 25
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 313
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 24
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 328
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 341,
            column: 48
          },
          end: {
            line: 341,
            column: 49
          }
        },
        loc: {
          start: {
            line: 341,
            column: 60
          },
          end: {
            line: 349,
            column: 9
          }
        },
        line: 341
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 29
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 354
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 357,
            column: 41
          },
          end: {
            line: 357,
            column: 42
          }
        },
        loc: {
          start: {
            line: 357,
            column: 51
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 357
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 370,
            column: 34
          },
          end: {
            line: 370,
            column: 35
          }
        },
        loc: {
          start: {
            line: 370,
            column: 45
          },
          end: {
            line: 376,
            column: 9
          }
        },
        line: 370
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 377,
            column: 56
          },
          end: {
            line: 377,
            column: 57
          }
        },
        loc: {
          start: {
            line: 377,
            column: 62
          },
          end: {
            line: 384,
            column: 9
          }
        },
        line: 377
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 29
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 389
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 392,
            column: 58
          },
          end: {
            line: 392,
            column: 59
          }
        },
        loc: {
          start: {
            line: 392,
            column: 68
          },
          end: {
            line: 394,
            column: 9
          }
        },
        line: 392
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 395,
            column: 58
          },
          end: {
            line: 395,
            column: 59
          }
        },
        loc: {
          start: {
            line: 395,
            column: 68
          },
          end: {
            line: 397,
            column: 9
          }
        },
        line: 395
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 398,
            column: 56
          },
          end: {
            line: 398,
            column: 57
          }
        },
        loc: {
          start: {
            line: 398,
            column: 66
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 398
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 403,
            column: 55
          },
          end: {
            line: 403,
            column: 56
          }
        },
        loc: {
          start: {
            line: 403,
            column: 66
          },
          end: {
            line: 405,
            column: 9
          }
        },
        line: 403
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 406,
            column: 58
          },
          end: {
            line: 406,
            column: 59
          }
        },
        loc: {
          start: {
            line: 406,
            column: 68
          },
          end: {
            line: 408,
            column: 9
          }
        },
        line: 406
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 409,
            column: 60
          },
          end: {
            line: 409,
            column: 61
          }
        },
        loc: {
          start: {
            line: 409,
            column: 70
          },
          end: {
            line: 411,
            column: 9
          }
        },
        line: 409
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 35
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 416
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 419,
            column: 51
          },
          end: {
            line: 419,
            column: 52
          }
        },
        loc: {
          start: {
            line: 419,
            column: 61
          },
          end: {
            line: 421,
            column: 9
          }
        },
        line: 419
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 422,
            column: 53
          },
          end: {
            line: 422,
            column: 54
          }
        },
        loc: {
          start: {
            line: 422,
            column: 63
          },
          end: {
            line: 424,
            column: 9
          }
        },
        line: 422
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 425,
            column: 51
          },
          end: {
            line: 425,
            column: 52
          }
        },
        loc: {
          start: {
            line: 425,
            column: 61
          },
          end: {
            line: 427,
            column: 9
          }
        },
        line: 425
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 428,
            column: 41
          },
          end: {
            line: 428,
            column: 42
          }
        },
        loc: {
          start: {
            line: 428,
            column: 52
          },
          end: {
            line: 436,
            column: 9
          }
        },
        line: 428
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        loc: {
          start: {
            line: 441,
            column: 28
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 441
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 442,
            column: 44
          },
          end: {
            line: 442,
            column: 45
          }
        },
        loc: {
          start: {
            line: 442,
            column: 50
          },
          end: {
            line: 444,
            column: 9
          }
        },
        line: 442
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 33
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 449
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 450,
            column: 44
          },
          end: {
            line: 450,
            column: 45
          }
        },
        loc: {
          start: {
            line: 450,
            column: 50
          },
          end: {
            line: 452,
            column: 9
          }
        },
        line: 450
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        loc: {
          start: {
            line: 457,
            column: 25
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 457
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 29
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 488
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 510,
            column: 4
          },
          end: {
            line: 510,
            column: 5
          }
        },
        loc: {
          start: {
            line: 510,
            column: 32
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 510
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 5
          }
        },
        loc: {
          start: {
            line: 519,
            column: 22
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 519
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 528,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        },
        loc: {
          start: {
            line: 528,
            column: 23
          },
          end: {
            line: 531,
            column: 5
          }
        },
        line: 528
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 535,
            column: 5
          }
        },
        loc: {
          start: {
            line: 535,
            column: 25
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 535
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 542,
            column: 5
          }
        },
        loc: {
          start: {
            line: 542,
            column: 18
          },
          end: {
            line: 555,
            column: 5
          }
        },
        line: 542
      },
      "41": {
        name: "createConnectionManager",
        decl: {
          start: {
            line: 560,
            column: 16
          },
          end: {
            line: 560,
            column: 39
          }
        },
        loc: {
          start: {
            line: 560,
            column: 78
          },
          end: {
            line: 595,
            column: 1
          }
        },
        line: 560
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 98,
            column: 23
          },
          end: {
            line: 98,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 48
          },
          end: {
            line: 98,
            column: 61
          }
        }, {
          start: {
            line: 98,
            column: 64
          },
          end: {
            line: 98,
            column: 87
          }
        }],
        line: 98
      },
      "2": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "3": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "4": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 48
          },
          end: {
            line: 135,
            column: 61
          }
        }, {
          start: {
            line: 135,
            column: 64
          },
          end: {
            line: 135,
            column: 84
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 154,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 154,
            column: 60
          }
        }, {
          start: {
            line: 154,
            column: 64
          },
          end: {
            line: 154,
            column: 69
          }
        }],
        line: 154
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 90
          }
        }, {
          start: {
            line: 156,
            column: 94
          },
          end: {
            line: 156,
            column: 99
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 179,
            column: 61
          }
        }, {
          start: {
            line: 179,
            column: 64
          },
          end: {
            line: 179,
            column: 89
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "11": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 26
          }
        }, {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 58
          }
        }],
        line: 207
      },
      "14": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "15": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "16": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "17": {
        loc: {
          start: {
            line: 298,
            column: 23
          },
          end: {
            line: 298,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 48
          },
          end: {
            line: 298,
            column: 61
          }
        }, {
          start: {
            line: 298,
            column: 64
          },
          end: {
            line: 298,
            column: 90
          }
        }],
        line: 298
      },
      "18": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "19": {
        loc: {
          start: {
            line: 303,
            column: 16
          },
          end: {
            line: 304,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 16
          },
          end: {
            line: 303,
            column: 51
          }
        }, {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 304,
            column: 87
          }
        }],
        line: 303
      },
      "20": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "21": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 30
          }
        }, {
          start: {
            line: 316,
            column: 34
          },
          end: {
            line: 316,
            column: 51
          }
        }],
        line: 316
      },
      "22": {
        loc: {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "23": {
        loc: {
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 319,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 319,
            column: 56
          }
        }, {
          start: {
            line: 319,
            column: 60
          },
          end: {
            line: 319,
            column: 92
          }
        }],
        line: 319
      },
      "24": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "25": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "26": {
        loc: {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "27": {
        loc: {
          start: {
            line: 366,
            column: 16
          },
          end: {
            line: 366,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 16
          },
          end: {
            line: 366,
            column: 51
          }
        }, {
          start: {
            line: 366,
            column: 55
          },
          end: {
            line: 366,
            column: 73
          }
        }],
        line: 366
      },
      "28": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 391,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 391,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "29": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 418,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 418,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "30": {
        loc: {
          start: {
            line: 429,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        }, {
          start: {
            line: 432,
            column: 17
          },
          end: {
            line: 434,
            column: 13
          }
        }],
        line: 429
      },
      "31": {
        loc: {
          start: {
            line: 432,
            column: 17
          },
          end: {
            line: 434,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 17
          },
          end: {
            line: 434,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "32": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 461,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 461,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "33": {
        loc: {
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 463,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 463,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "34": {
        loc: {
          start: {
            line: 464,
            column: 8
          },
          end: {
            line: 465,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 8
          },
          end: {
            line: 465,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "35": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 467,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 467,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "36": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 477,
            column: 9
          }
        }],
        line: 469
      },
      "37": {
        loc: {
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: 475,
            column: 13
          },
          end: {
            line: 477,
            column: 9
          }
        }],
        line: 472
      },
      "38": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "39": {
        loc: {
          start: {
            line: 492,
            column: 16
          },
          end: {
            line: 497,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 16
          },
          end: {
            line: 497,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "40": {
        loc: {
          start: {
            line: 501,
            column: 27
          },
          end: {
            line: 501,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 501,
            column: 52
          },
          end: {
            line: 501,
            column: 65
          }
        }, {
          start: {
            line: 501,
            column: 68
          },
          end: {
            line: 501,
            column: 89
          }
        }],
        line: 501
      },
      "41": {
        loc: {
          start: {
            line: 512,
            column: 23
          },
          end: {
            line: 512,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 512,
            column: 51
          },
          end: {
            line: 512,
            column: 57
          }
        }, {
          start: {
            line: 512,
            column: 60
          },
          end: {
            line: 512,
            column: 65
          }
        }],
        line: 512
      },
      "42": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "43": {
        loc: {
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "44": {
        loc: {
          start: {
            line: 547,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "45": {
        loc: {
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 554,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 554,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "46": {
        loc: {
          start: {
            line: 560,
            column: 64
          },
          end: {
            line: 560,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 560,
            column: 74
          },
          end: {
            line: 560,
            column: 76
          }
        }],
        line: 560
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/connectionManager.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/connectionManager.ts"],
      sourcesContent: ["/**\n * Connection Manager for n8n Fork Real-time Integration\n *\n * Manages WebSocket connections with automatic reconnection, error handling,\n * authentication refresh, and connection health monitoring.\n */\n\nimport { EventEmitter } from 'events';\nimport { N8nWebSocketClient, WebSocketConfig } from './websocketClient.js';\nimport { EventStreamingManager, EventStreamingConfig } from './eventStreamingManager.js';\nimport { ProgressMonitor, ProgressMonitorConfig } from './progressMonitor.js';\nimport { WebSocketAuthManager, AuthConfig, AuthResult } from './websocketAuth.js';\nimport { z } from 'zod';\n\n// Connection manager schemas\nexport const ConnectionConfigSchema = z.object({\n  n8nBaseUrl: z.string().url(),\n  authConfig: z.any(), // AuthConfig will be validated separately\n  websocket: z.object({\n    reconnectInterval: z.number().default(1000),\n    maxReconnectAttempts: z.number().default(10),\n    heartbeatInterval: z.number().default(30000),\n    connectionTimeout: z.number().default(10000),\n    autoReconnect: z.boolean().default(true),\n  }).default({}),\n  streaming: z.object({\n    bufferSize: z.number().default(100),\n    retryAttempts: z.number().default(5),\n    enableProgressTracking: z.boolean().default(true),\n    enableMetrics: z.boolean().default(true),\n  }).default({}),\n  monitoring: z.object({\n    enablePredictiveAnalytics: z.boolean().default(true),\n    enablePerformanceTracking: z.boolean().default(true),\n    historicalDataLimit: z.number().default(1000),\n    progressUpdateInterval: z.number().default(1000),\n  }).default({}),\n  healthCheck: z.object({\n    enabled: z.boolean().default(true),\n    interval: z.number().default(60000), // 1 minute\n    timeout: z.number().default(5000),\n    maxFailures: z.number().default(3),\n  }).default({}),\n});\n\nexport type ConnectionConfig = z.infer<typeof ConnectionConfigSchema>;\n\nexport interface ConnectionState {\n  status: 'disconnected' | 'connecting' | 'connected' | 'reconnecting' | 'failed';\n  authenticated: boolean;\n  lastConnected?: Date;\n  lastDisconnected?: Date;\n  totalReconnects: number;\n  consecutiveFailures: number;\n  uptime: number;\n  authExpiresAt?: Date;\n  healthStatus: 'healthy' | 'degraded' | 'unhealthy';\n}\n\nexport interface ConnectionHealth {\n  websocketConnected: boolean;\n  authenticationValid: boolean;\n  streamingActive: boolean;\n  progressMonitorActive: boolean;\n  lastHeartbeat?: Date;\n  roundTripLatency?: number;\n  errorRate: number;\n  reconnectAttempts: number;\n}\n\n/**\n * Connection Manager\n *\n * Orchestrates all WebSocket connection components with comprehensive\n * error handling, reconnection logic, and health monitoring.\n */\nexport class ConnectionManager extends EventEmitter {\n  private config: ConnectionConfig;\n  private wsClient: N8nWebSocketClient | null = null;\n  private eventStreamingManager: EventStreamingManager | null = null;\n  private progressMonitor: ProgressMonitor | null = null;\n  private authManager: WebSocketAuthManager;\n  \n  private state: ConnectionState;\n  private healthCheckTimer: NodeJS.Timeout | null = null;\n  private authRefreshTimer: NodeJS.Timeout | null = null;\n  private reconnectAttemptTimer: NodeJS.Timeout | null = null;\n  private startTime: Date;\n\n  constructor(config: ConnectionConfig) {\n    super();\n    this.config = ConnectionConfigSchema.parse(config);\n    this.authManager = new WebSocketAuthManager();\n    this.startTime = new Date();\n    \n    this.state = {\n      status: 'disconnected',\n      authenticated: false,\n      totalReconnects: 0,\n      consecutiveFailures: 0,\n      uptime: 0,\n      healthStatus: 'healthy',\n    };\n  }\n\n  /**\n   * Start the connection manager\n   */\n  public async start(): Promise<void> {\n    try {\n      this.emit('starting', { timestamp: new Date().toISOString() });\n      \n      // Initialize components\n      await this.initializeComponents();\n      \n      // Start connection\n      await this.connect();\n      \n      // Start health monitoring\n      if (this.config.healthCheck.enabled) {\n        this.startHealthMonitoring();\n      }\n      \n      // Start authentication refresh monitoring\n      this.startAuthRefreshMonitoring();\n      \n      this.emit('started', { \n        timestamp: new Date().toISOString(),\n        state: this.getConnectionState(),\n      });\n      \n    } catch (error) {\n      this.state.status = 'failed';\n      this.emit('startupError', {\n        error: error instanceof Error ? error.message : 'Unknown startup error',\n        timestamp: new Date().toISOString(),\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Stop the connection manager\n   */\n  public async stop(): Promise<void> {\n    try {\n      this.emit('stopping', { timestamp: new Date().toISOString() });\n      \n      // Clear timers\n      this.clearTimers();\n      \n      // Stop monitoring\n      if (this.progressMonitor) {\n        this.progressMonitor.stop();\n      }\n      \n      // Stop streaming\n      if (this.eventStreamingManager) {\n        await this.eventStreamingManager.stopStreaming();\n      }\n      \n      // Disconnect WebSocket\n      if (this.wsClient) {\n        await this.wsClient.disconnect();\n      }\n      \n      this.state.status = 'disconnected';\n      this.state.authenticated = false;\n      this.state.lastDisconnected = new Date();\n      \n      this.emit('stopped', { \n        timestamp: new Date().toISOString(),\n        totalUptime: this.calculateUptime(),\n        totalReconnects: this.state.totalReconnects,\n      });\n      \n    } catch (error) {\n      this.emit('stopError', {\n        error: error instanceof Error ? error.message : 'Unknown stop error',\n        timestamp: new Date().toISOString(),\n      });\n    }\n  }\n\n  /**\n   * Get current connection state\n   */\n  public getConnectionState(): ConnectionState {\n    return {\n      ...this.state,\n      uptime: this.calculateUptime(),\n    };\n  }\n\n  /**\n   * Get connection health information\n   */\n  public getConnectionHealth(): ConnectionHealth {\n    return {\n      websocketConnected: this.wsClient?.isConnected() || false,\n      authenticationValid: this.state.authenticated,\n      streamingActive: this.eventStreamingManager?.getConnectionStatus().isStreaming || false,\n      progressMonitorActive: this.progressMonitor !== null,\n      lastHeartbeat: this.wsClient?.getConnectionState().lastHeartbeat,\n      roundTripLatency: this.calculateLatency(),\n      errorRate: this.calculateErrorRate(),\n      reconnectAttempts: this.state.totalReconnects,\n    };\n  }\n\n  /**\n   * Force reconnection\n   */\n  public async reconnect(): Promise<void> {\n    try {\n      this.emit('manualReconnect', { timestamp: new Date().toISOString() });\n      \n      // Disconnect existing connection\n      if (this.wsClient) {\n        await this.wsClient.disconnect();\n      }\n      \n      // Attempt new connection\n      await this.connect();\n      \n    } catch (error) {\n      this.emit('reconnectError', {\n        error: error instanceof Error ? error.message : 'Unknown reconnect error',\n        timestamp: new Date().toISOString(),\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Subscribe to workflow updates\n   */\n  public async subscribeToWorkflow(workflowId: string): Promise<void> {\n    if (!this.eventStreamingManager) {\n      throw new Error('Event streaming manager not initialized');\n    }\n    \n    await this.eventStreamingManager.subscribeToWorkflow(workflowId);\n  }\n\n  /**\n   * Unsubscribe from workflow updates\n   */\n  public async unsubscribeFromWorkflow(workflowId: string): Promise<void> {\n    if (!this.eventStreamingManager) {\n      throw new Error('Event streaming manager not initialized');\n    }\n    \n    await this.eventStreamingManager.unsubscribeFromWorkflow(workflowId);\n  }\n\n  /**\n   * Send command to n8n fork\n   */\n  public async sendCommand(command: any): Promise<void> {\n    if (!this.wsClient || !this.wsClient.isConnected()) {\n      throw new Error('WebSocket not connected');\n    }\n    \n    await this.wsClient.sendMessage(command);\n  }\n\n  /**\n   * Initialize all components\n   */\n  private async initializeComponents(): Promise<void> {\n    // Create WebSocket URL\n    const wsUrl = this.createWebSocketUrl(this.config.n8nBaseUrl);\n    \n    // Create WebSocket configuration\n    const wsConfig: WebSocketConfig = {\n      url: wsUrl,\n      ...this.config.websocket,\n    };\n    \n    // Initialize WebSocket client\n    this.wsClient = new N8nWebSocketClient(wsConfig);\n    \n    // Setup WebSocket event handlers\n    this.setupWebSocketHandlers();\n    \n    // Initialize event streaming manager\n    const streamingConfig: EventStreamingConfig = {\n      wsConfig,\n      ...this.config.streaming,\n    };\n    \n    this.eventStreamingManager = new EventStreamingManager(streamingConfig);\n    \n    // Setup streaming event handlers\n    this.setupStreamingHandlers();\n    \n    // Initialize progress monitor\n    const monitorConfig: ProgressMonitorConfig = {\n      ...this.config.monitoring,\n      enablePredictiveAnalytics: this.config.monitoring.enablePredictiveAnalytics,\n      enablePerformanceTracking: this.config.monitoring.enablePerformanceTracking,\n      historicalDataLimit: this.config.monitoring.historicalDataLimit,\n      progressUpdateInterval: this.config.monitoring.progressUpdateInterval,\n      benchmarkingEnabled: true,\n      alertThresholds: {\n        slowExecutionMultiplier: 2.0,\n        highFailureRate: 0.3,\n        maxExecutionTime: 300000,\n      },\n    };\n    \n    this.progressMonitor = new ProgressMonitor(this.eventStreamingManager, monitorConfig);\n    \n    // Setup progress monitor event handlers\n    this.setupProgressMonitorHandlers();\n  }\n\n  /**\n   * Connect to n8n fork\n   */\n  private async connect(): Promise<void> {\n    if (!this.wsClient) {\n      throw new Error('WebSocket client not initialized');\n    }\n    \n    try {\n      this.state.status = 'connecting';\n      this.emit('connecting', { timestamp: new Date().toISOString() });\n      \n      // Authenticate\n      const authResult = await this.authenticate();\n      if (!authResult.success) {\n        throw new Error(`Authentication failed: ${authResult.error}`);\n      }\n      \n      // Apply authentication headers\n      const authHeaders = this.authManager.generateAuthHeaders(this.config.authConfig);\n      const wsConfig: WebSocketConfig = {\n        url: this.createWebSocketUrl(this.config.n8nBaseUrl),\n        ...this.config.websocket,\n        headers: authHeaders,\n      };\n      this.wsClient = new N8nWebSocketClient(wsConfig);\n      \n      // Connect WebSocket\n      await this.wsClient.connect();\n      \n      // Start streaming\n      if (this.eventStreamingManager) {\n        await this.eventStreamingManager.startStreaming();\n      }\n      \n      // Update state\n      this.state.status = 'connected';\n      this.state.authenticated = true;\n      this.state.lastConnected = new Date();\n      this.state.consecutiveFailures = 0;\n      this.state.healthStatus = 'healthy';\n      \n      this.emit('connected', {\n        timestamp: new Date().toISOString(),\n        authResult,\n        reconnectAttempt: this.state.totalReconnects > 0,\n      });\n      \n    } catch (error) {\n      this.state.status = 'failed';\n      this.state.consecutiveFailures++;\n      \n      this.emit('connectionError', {\n        error: error instanceof Error ? error.message : 'Unknown connection error',\n        timestamp: new Date().toISOString(),\n        consecutiveFailures: this.state.consecutiveFailures,\n      });\n      \n      // Attempt automatic reconnection if enabled\n      if (this.config.websocket.autoReconnect && \n          this.state.totalReconnects < this.config.websocket.maxReconnectAttempts) {\n        this.scheduleReconnect();\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Authenticate with n8n fork\n   */\n  private async authenticate(): Promise<AuthResult> {\n    const authResult = await this.authManager.authenticate(\n      this.config.authConfig,\n      { remoteAddress: '127.0.0.1' } // TODO: Get actual remote address\n    );\n    \n    if (authResult.success && authResult.userId) {\n      this.authManager.trackConnection(authResult.userId, this.config.authConfig.type);\n      \n      // Set auth expiration if applicable\n      if (this.config.authConfig.type === 'oauth2' && this.config.authConfig.expiresAt) {\n        this.state.authExpiresAt = new Date(this.config.authConfig.expiresAt);\n      }\n    }\n    \n    return authResult;\n  }\n\n  /**\n   * Schedule automatic reconnection\n   */\n  private scheduleReconnect(): void {\n    if (this.reconnectAttemptTimer) {\n      return;\n    }\n    \n    this.state.status = 'reconnecting';\n    this.state.totalReconnects++;\n    \n    const delay = Math.min(\n      this.config.websocket.reconnectInterval * Math.pow(2, this.state.totalReconnects - 1),\n      30000 // Max 30 seconds\n    );\n    \n    this.emit('reconnectScheduled', {\n      attempt: this.state.totalReconnects,\n      delay,\n      timestamp: new Date().toISOString(),\n    });\n    \n    this.reconnectAttemptTimer = setTimeout(async () => {\n      this.reconnectAttemptTimer = null;\n      \n      try {\n        await this.connect();\n      } catch (error) {\n        // Error handling is done in connect() method\n      }\n    }, delay);\n  }\n\n  /**\n   * Setup WebSocket event handlers\n   */\n  private setupWebSocketHandlers(): void {\n    if (!this.wsClient) return;\n    \n    this.wsClient.on('disconnected', (data) => {\n      this.state.status = 'disconnected';\n      this.state.authenticated = false;\n      this.state.lastDisconnected = new Date();\n      \n      this.emit('disconnected', {\n        ...data,\n        timestamp: new Date().toISOString(),\n      });\n      \n      // Attempt reconnection if not a clean disconnect\n      if (this.config.websocket.autoReconnect && data.code !== 1000) {\n        this.scheduleReconnect();\n      }\n    });\n    \n    this.wsClient.on('error', (error) => {\n      this.state.healthStatus = 'unhealthy';\n      \n      this.emit('websocketError', {\n        error: error.message,\n        timestamp: new Date().toISOString(),\n      });\n    });\n    \n    this.wsClient.on('maxReconnectAttemptsReached', () => {\n      this.state.status = 'failed';\n      this.state.healthStatus = 'unhealthy';\n      \n      this.emit('maxReconnectAttemptsReached', {\n        totalAttempts: this.state.totalReconnects,\n        timestamp: new Date().toISOString(),\n      });\n    });\n  }\n\n  /**\n   * Setup streaming event handlers\n   */\n  private setupStreamingHandlers(): void {\n    if (!this.eventStreamingManager) return;\n    \n    this.eventStreamingManager.on('streamingStarted', (data) => {\n      this.emit('streamingStarted', data);\n    });\n    \n    this.eventStreamingManager.on('streamingStopped', (data) => {\n      this.emit('streamingStopped', data);\n    });\n    \n    this.eventStreamingManager.on('streamingError', (data) => {\n      this.state.healthStatus = 'degraded';\n      this.emit('streamingError', data);\n    });\n    \n    // Forward workflow events\n    this.eventStreamingManager.on('workflowEvent', (event) => {\n      this.emit('workflowEvent', event);\n    });\n    \n    this.eventStreamingManager.on('executionStarted', (data) => {\n      this.emit('executionStarted', data);\n    });\n    \n    this.eventStreamingManager.on('executionCompleted', (data) => {\n      this.emit('executionCompleted', data);\n    });\n  }\n\n  /**\n   * Setup progress monitor event handlers\n   */\n  private setupProgressMonitorHandlers(): void {\n    if (!this.progressMonitor) return;\n    \n    this.progressMonitor.on('progressStarted', (data) => {\n      this.emit('progressStarted', data);\n    });\n    \n    this.progressMonitor.on('progressCompleted', (data) => {\n      this.emit('progressCompleted', data);\n    });\n    \n    this.progressMonitor.on('progressUpdated', (data) => {\n      this.emit('progressUpdated', data);\n    });\n    \n    this.progressMonitor.on('alert', (alert) => {\n      if (alert.severity === 'critical') {\n        this.state.healthStatus = 'unhealthy';\n      } else if (alert.severity === 'high') {\n        this.state.healthStatus = 'degraded';\n      }\n      \n      this.emit('alert', alert);\n    });\n  }\n\n  /**\n   * Start health monitoring\n   */\n  private startHealthMonitoring(): void {\n    this.healthCheckTimer = setInterval(() => {\n      this.performHealthCheck();\n    }, this.config.healthCheck.interval);\n  }\n\n  /**\n   * Start authentication refresh monitoring\n   */\n  private startAuthRefreshMonitoring(): void {\n    this.authRefreshTimer = setInterval(() => {\n      this.checkAuthRefresh();\n    }, 60000); // Check every minute\n  }\n\n  /**\n   * Perform health check\n   */\n  private performHealthCheck(): void {\n    const health = this.getConnectionHealth();\n    \n    let healthScore = 0;\n    if (health.websocketConnected) healthScore += 25;\n    if (health.authenticationValid) healthScore += 25;\n    if (health.streamingActive) healthScore += 25;\n    if (health.progressMonitorActive) healthScore += 25;\n    \n    // Update health status\n    if (healthScore >= 75) {\n      this.state.healthStatus = 'healthy';\n    } else if (healthScore >= 50) {\n      this.state.healthStatus = 'degraded';\n    } else {\n      this.state.healthStatus = 'unhealthy';\n    }\n    \n    this.emit('healthCheck', {\n      health,\n      healthScore,\n      status: this.state.healthStatus,\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  /**\n   * Check if authentication needs refresh\n   */\n  private async checkAuthRefresh(): Promise<void> {\n    if (this.authManager.needsTokenRefresh(this.config.authConfig)) {\n      try {\n        const refreshedAuth = await this.authManager.refreshToken(this.config.authConfig);\n        if (refreshedAuth) {\n          this.config.authConfig = refreshedAuth;\n          this.emit('authRefreshed', {\n            timestamp: new Date().toISOString(),\n          });\n        }\n      } catch (error) {\n        this.emit('authRefreshError', {\n          error: error instanceof Error ? error.message : 'Auth refresh failed',\n          timestamp: new Date().toISOString(),\n        });\n      }\n    }\n  }\n\n  /**\n   * Create WebSocket URL from base URL\n   */\n  private createWebSocketUrl(baseUrl: string): string {\n    const url = new URL(baseUrl);\n    url.protocol = url.protocol === 'https:' ? 'wss:' : 'ws:';\n    url.pathname = '/rest/push';\n    return url.toString();\n  }\n\n  /**\n   * Calculate uptime in milliseconds\n   */\n  private calculateUptime(): number {\n    if (this.state.lastConnected) {\n      return Date.now() - this.state.lastConnected.getTime();\n    }\n    return 0;\n  }\n\n  /**\n   * Calculate round-trip latency\n   */\n  private calculateLatency(): number | undefined {\n    // TODO: Implement actual latency calculation\n    return undefined;\n  }\n\n  /**\n   * Calculate error rate\n   */\n  private calculateErrorRate(): number {\n    // TODO: Implement actual error rate calculation\n    return this.state.consecutiveFailures / Math.max(this.state.totalReconnects + 1, 1);\n  }\n\n  /**\n   * Clear all timers\n   */\n  private clearTimers(): void {\n    if (this.healthCheckTimer) {\n      clearInterval(this.healthCheckTimer);\n      this.healthCheckTimer = null;\n    }\n    \n    if (this.authRefreshTimer) {\n      clearInterval(this.authRefreshTimer);\n      this.authRefreshTimer = null;\n    }\n    \n    if (this.reconnectAttemptTimer) {\n      clearTimeout(this.reconnectAttemptTimer);\n      this.reconnectAttemptTimer = null;\n    }\n  }\n}\n\n/**\n * Create connection manager with default configuration\n */\nexport function createConnectionManager(\n  n8nBaseUrl: string,\n  authConfig: AuthConfig,\n  options: Partial<ConnectionConfig> = {}\n): ConnectionManager {\n  const config: ConnectionConfig = {\n    n8nBaseUrl,\n    authConfig,\n    websocket: {\n      reconnectInterval: 1000,\n      maxReconnectAttempts: 10,\n      heartbeatInterval: 30000,\n      connectionTimeout: 10000,\n      autoReconnect: true,\n      ...options.websocket,\n    },\n    streaming: {\n      bufferSize: 100,\n      retryAttempts: 5,\n      enableProgressTracking: true,\n      enableMetrics: true,\n      ...options.streaming,\n    },\n    monitoring: {\n      enablePredictiveAnalytics: true,\n      enablePerformanceTracking: true,\n      historicalDataLimit: 1000,\n      progressUpdateInterval: 1000,\n      ...options.monitoring,\n    },\n    healthCheck: {\n      enabled: true,\n      interval: 60000,\n      timeout: 5000,\n      maxFailures: 3,\n      ...options.healthCheck,\n    },\n  };\n\n  return new ConnectionManager(config);\n}\n\n/**\n * Default connection configuration\n */\nexport const DEFAULT_CONNECTION_CONFIG: Partial<ConnectionConfig> = {\n  websocket: {\n    reconnectInterval: 1000,\n    maxReconnectAttempts: 10,\n    heartbeatInterval: 30000,\n    connectionTimeout: 10000,\n    autoReconnect: true,\n  },\n  streaming: {\n    bufferSize: 100,\n    retryAttempts: 5,\n    enableProgressTracking: true,\n    enableMetrics: true,\n  },\n  monitoring: {\n    enablePredictiveAnalytics: true,\n    enablePerformanceTracking: true,\n    historicalDataLimit: 1000,\n    progressUpdateInterval: 1000,\n  },\n  healthCheck: {\n    enabled: true,\n    interval: 60000,\n    timeout: 5000,\n    maxFailures: 3,\n  },\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "be9d2dc99e08fd6c3dc2c9546b1a89b8e079502e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6ynqod1mw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6ynqod1mw();
/**
 * Connection Manager for n8n Fork Real-time Integration
 *
 * Manages WebSocket connections with automatic reconnection, error handling,
 * authentication refresh, and connection health monitoring.
 */
import { EventEmitter } from 'events';
import { N8nWebSocketClient } from './websocketClient.js';
import { EventStreamingManager } from './eventStreamingManager.js';
import { ProgressMonitor } from './progressMonitor.js';
import { WebSocketAuthManager } from './websocketAuth.js';
import { z } from 'zod';
// Connection manager schemas
export const ConnectionConfigSchema =
/* istanbul ignore next */
(cov_6ynqod1mw().s[0]++, z.object({
  n8nBaseUrl: z.string().url(),
  authConfig: z.any(),
  // AuthConfig will be validated separately
  websocket: z.object({
    reconnectInterval: z.number().default(1000),
    maxReconnectAttempts: z.number().default(10),
    heartbeatInterval: z.number().default(30000),
    connectionTimeout: z.number().default(10000),
    autoReconnect: z.boolean().default(true)
  }).default({}),
  streaming: z.object({
    bufferSize: z.number().default(100),
    retryAttempts: z.number().default(5),
    enableProgressTracking: z.boolean().default(true),
    enableMetrics: z.boolean().default(true)
  }).default({}),
  monitoring: z.object({
    enablePredictiveAnalytics: z.boolean().default(true),
    enablePerformanceTracking: z.boolean().default(true),
    historicalDataLimit: z.number().default(1000),
    progressUpdateInterval: z.number().default(1000)
  }).default({}),
  healthCheck: z.object({
    enabled: z.boolean().default(true),
    interval: z.number().default(60000),
    // 1 minute
    timeout: z.number().default(5000),
    maxFailures: z.number().default(3)
  }).default({})
}));
/**
 * Connection Manager
 *
 * Orchestrates all WebSocket connection components with comprehensive
 * error handling, reconnection logic, and health monitoring.
 */
export class ConnectionManager extends EventEmitter {
  config;
  wsClient =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[1]++, null);
  eventStreamingManager =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[2]++, null);
  progressMonitor =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[3]++, null);
  authManager;
  state;
  healthCheckTimer =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[4]++, null);
  authRefreshTimer =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[5]++, null);
  reconnectAttemptTimer =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[6]++, null);
  startTime;
  constructor(config) {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[0]++;
    cov_6ynqod1mw().s[7]++;
    super();
    /* istanbul ignore next */
    cov_6ynqod1mw().s[8]++;
    this.config = ConnectionConfigSchema.parse(config);
    /* istanbul ignore next */
    cov_6ynqod1mw().s[9]++;
    this.authManager = new WebSocketAuthManager();
    /* istanbul ignore next */
    cov_6ynqod1mw().s[10]++;
    this.startTime = new Date();
    /* istanbul ignore next */
    cov_6ynqod1mw().s[11]++;
    this.state = {
      status: 'disconnected',
      authenticated: false,
      totalReconnects: 0,
      consecutiveFailures: 0,
      uptime: 0,
      healthStatus: 'healthy'
    };
  }
  /**
   * Start the connection manager
   */
  async start() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[1]++;
    cov_6ynqod1mw().s[12]++;
    try {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[13]++;
      this.emit('starting', {
        timestamp: new Date().toISOString()
      });
      // Initialize components
      /* istanbul ignore next */
      cov_6ynqod1mw().s[14]++;
      await this.initializeComponents();
      // Start connection
      /* istanbul ignore next */
      cov_6ynqod1mw().s[15]++;
      await this.connect();
      // Start health monitoring
      /* istanbul ignore next */
      cov_6ynqod1mw().s[16]++;
      if (this.config.healthCheck.enabled) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[0][0]++;
        cov_6ynqod1mw().s[17]++;
        this.startHealthMonitoring();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[0][1]++;
      }
      // Start authentication refresh monitoring
      cov_6ynqod1mw().s[18]++;
      this.startAuthRefreshMonitoring();
      /* istanbul ignore next */
      cov_6ynqod1mw().s[19]++;
      this.emit('started', {
        timestamp: new Date().toISOString(),
        state: this.getConnectionState()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[20]++;
      this.state.status = 'failed';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[21]++;
      this.emit('startupError', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[1][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[1][1]++, 'Unknown startup error'),
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_6ynqod1mw().s[22]++;
      throw error;
    }
  }
  /**
   * Stop the connection manager
   */
  async stop() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[2]++;
    cov_6ynqod1mw().s[23]++;
    try {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[24]++;
      this.emit('stopping', {
        timestamp: new Date().toISOString()
      });
      // Clear timers
      /* istanbul ignore next */
      cov_6ynqod1mw().s[25]++;
      this.clearTimers();
      // Stop monitoring
      /* istanbul ignore next */
      cov_6ynqod1mw().s[26]++;
      if (this.progressMonitor) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[2][0]++;
        cov_6ynqod1mw().s[27]++;
        this.progressMonitor.stop();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[2][1]++;
      }
      // Stop streaming
      cov_6ynqod1mw().s[28]++;
      if (this.eventStreamingManager) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[3][0]++;
        cov_6ynqod1mw().s[29]++;
        await this.eventStreamingManager.stopStreaming();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[3][1]++;
      }
      // Disconnect WebSocket
      cov_6ynqod1mw().s[30]++;
      if (this.wsClient) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[4][0]++;
        cov_6ynqod1mw().s[31]++;
        await this.wsClient.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[4][1]++;
      }
      cov_6ynqod1mw().s[32]++;
      this.state.status = 'disconnected';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[33]++;
      this.state.authenticated = false;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[34]++;
      this.state.lastDisconnected = new Date();
      /* istanbul ignore next */
      cov_6ynqod1mw().s[35]++;
      this.emit('stopped', {
        timestamp: new Date().toISOString(),
        totalUptime: this.calculateUptime(),
        totalReconnects: this.state.totalReconnects
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[36]++;
      this.emit('stopError', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[5][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[5][1]++, 'Unknown stop error'),
        timestamp: new Date().toISOString()
      });
    }
  }
  /**
   * Get current connection state
   */
  getConnectionState() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[3]++;
    cov_6ynqod1mw().s[37]++;
    return {
      ...this.state,
      uptime: this.calculateUptime()
    };
  }
  /**
   * Get connection health information
   */
  getConnectionHealth() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[4]++;
    cov_6ynqod1mw().s[38]++;
    return {
      websocketConnected:
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[6][0]++, this.wsClient?.isConnected()) ||
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[6][1]++, false),
      authenticationValid: this.state.authenticated,
      streamingActive:
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[7][0]++, this.eventStreamingManager?.getConnectionStatus().isStreaming) ||
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[7][1]++, false),
      progressMonitorActive: this.progressMonitor !== null,
      lastHeartbeat: this.wsClient?.getConnectionState().lastHeartbeat,
      roundTripLatency: this.calculateLatency(),
      errorRate: this.calculateErrorRate(),
      reconnectAttempts: this.state.totalReconnects
    };
  }
  /**
   * Force reconnection
   */
  async reconnect() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[5]++;
    cov_6ynqod1mw().s[39]++;
    try {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[40]++;
      this.emit('manualReconnect', {
        timestamp: new Date().toISOString()
      });
      // Disconnect existing connection
      /* istanbul ignore next */
      cov_6ynqod1mw().s[41]++;
      if (this.wsClient) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[8][0]++;
        cov_6ynqod1mw().s[42]++;
        await this.wsClient.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[8][1]++;
      }
      // Attempt new connection
      cov_6ynqod1mw().s[43]++;
      await this.connect();
    } catch (error) {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[44]++;
      this.emit('reconnectError', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[9][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[9][1]++, 'Unknown reconnect error'),
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_6ynqod1mw().s[45]++;
      throw error;
    }
  }
  /**
   * Subscribe to workflow updates
   */
  async subscribeToWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[6]++;
    cov_6ynqod1mw().s[46]++;
    if (!this.eventStreamingManager) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[10][0]++;
      cov_6ynqod1mw().s[47]++;
      throw new Error('Event streaming manager not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[10][1]++;
    }
    cov_6ynqod1mw().s[48]++;
    await this.eventStreamingManager.subscribeToWorkflow(workflowId);
  }
  /**
   * Unsubscribe from workflow updates
   */
  async unsubscribeFromWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[7]++;
    cov_6ynqod1mw().s[49]++;
    if (!this.eventStreamingManager) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[11][0]++;
      cov_6ynqod1mw().s[50]++;
      throw new Error('Event streaming manager not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[11][1]++;
    }
    cov_6ynqod1mw().s[51]++;
    await this.eventStreamingManager.unsubscribeFromWorkflow(workflowId);
  }
  /**
   * Send command to n8n fork
   */
  async sendCommand(command) {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[8]++;
    cov_6ynqod1mw().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[13][0]++, !this.wsClient) ||
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[13][1]++, !this.wsClient.isConnected())) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[12][0]++;
      cov_6ynqod1mw().s[53]++;
      throw new Error('WebSocket not connected');
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[12][1]++;
    }
    cov_6ynqod1mw().s[54]++;
    await this.wsClient.sendMessage(command);
  }
  /**
   * Initialize all components
   */
  async initializeComponents() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[9]++;
    // Create WebSocket URL
    const wsUrl =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[55]++, this.createWebSocketUrl(this.config.n8nBaseUrl));
    // Create WebSocket configuration
    const wsConfig =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[56]++, {
      url: wsUrl,
      ...this.config.websocket
    });
    // Initialize WebSocket client
    /* istanbul ignore next */
    cov_6ynqod1mw().s[57]++;
    this.wsClient = new N8nWebSocketClient(wsConfig);
    // Setup WebSocket event handlers
    /* istanbul ignore next */
    cov_6ynqod1mw().s[58]++;
    this.setupWebSocketHandlers();
    // Initialize event streaming manager
    const streamingConfig =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[59]++, {
      wsConfig,
      ...this.config.streaming
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[60]++;
    this.eventStreamingManager = new EventStreamingManager(streamingConfig);
    // Setup streaming event handlers
    /* istanbul ignore next */
    cov_6ynqod1mw().s[61]++;
    this.setupStreamingHandlers();
    // Initialize progress monitor
    const monitorConfig =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[62]++, {
      ...this.config.monitoring,
      enablePredictiveAnalytics: this.config.monitoring.enablePredictiveAnalytics,
      enablePerformanceTracking: this.config.monitoring.enablePerformanceTracking,
      historicalDataLimit: this.config.monitoring.historicalDataLimit,
      progressUpdateInterval: this.config.monitoring.progressUpdateInterval,
      benchmarkingEnabled: true,
      alertThresholds: {
        slowExecutionMultiplier: 2.0,
        highFailureRate: 0.3,
        maxExecutionTime: 300000
      }
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[63]++;
    this.progressMonitor = new ProgressMonitor(this.eventStreamingManager, monitorConfig);
    // Setup progress monitor event handlers
    /* istanbul ignore next */
    cov_6ynqod1mw().s[64]++;
    this.setupProgressMonitorHandlers();
  }
  /**
   * Connect to n8n fork
   */
  async connect() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[10]++;
    cov_6ynqod1mw().s[65]++;
    if (!this.wsClient) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[14][0]++;
      cov_6ynqod1mw().s[66]++;
      throw new Error('WebSocket client not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[14][1]++;
    }
    cov_6ynqod1mw().s[67]++;
    try {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[68]++;
      this.state.status = 'connecting';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[69]++;
      this.emit('connecting', {
        timestamp: new Date().toISOString()
      });
      // Authenticate
      const authResult =
      /* istanbul ignore next */
      (cov_6ynqod1mw().s[70]++, await this.authenticate());
      /* istanbul ignore next */
      cov_6ynqod1mw().s[71]++;
      if (!authResult.success) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[15][0]++;
        cov_6ynqod1mw().s[72]++;
        throw new Error(`Authentication failed: ${authResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[15][1]++;
      }
      // Apply authentication headers
      const authHeaders =
      /* istanbul ignore next */
      (cov_6ynqod1mw().s[73]++, this.authManager.generateAuthHeaders(this.config.authConfig));
      const wsConfig =
      /* istanbul ignore next */
      (cov_6ynqod1mw().s[74]++, {
        url: this.createWebSocketUrl(this.config.n8nBaseUrl),
        ...this.config.websocket,
        headers: authHeaders
      });
      /* istanbul ignore next */
      cov_6ynqod1mw().s[75]++;
      this.wsClient = new N8nWebSocketClient(wsConfig);
      // Connect WebSocket
      /* istanbul ignore next */
      cov_6ynqod1mw().s[76]++;
      await this.wsClient.connect();
      // Start streaming
      /* istanbul ignore next */
      cov_6ynqod1mw().s[77]++;
      if (this.eventStreamingManager) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[16][0]++;
        cov_6ynqod1mw().s[78]++;
        await this.eventStreamingManager.startStreaming();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[16][1]++;
      }
      // Update state
      cov_6ynqod1mw().s[79]++;
      this.state.status = 'connected';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[80]++;
      this.state.authenticated = true;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[81]++;
      this.state.lastConnected = new Date();
      /* istanbul ignore next */
      cov_6ynqod1mw().s[82]++;
      this.state.consecutiveFailures = 0;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[83]++;
      this.state.healthStatus = 'healthy';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[84]++;
      this.emit('connected', {
        timestamp: new Date().toISOString(),
        authResult,
        reconnectAttempt: this.state.totalReconnects > 0
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6ynqod1mw().s[85]++;
      this.state.status = 'failed';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[86]++;
      this.state.consecutiveFailures++;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[87]++;
      this.emit('connectionError', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6ynqod1mw().b[17][1]++, 'Unknown connection error'),
        timestamp: new Date().toISOString(),
        consecutiveFailures: this.state.consecutiveFailures
      });
      // Attempt automatic reconnection if enabled
      /* istanbul ignore next */
      cov_6ynqod1mw().s[88]++;
      if (
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[19][0]++, this.config.websocket.autoReconnect) &&
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[19][1]++, this.state.totalReconnects < this.config.websocket.maxReconnectAttempts)) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[18][0]++;
        cov_6ynqod1mw().s[89]++;
        this.scheduleReconnect();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[18][1]++;
      }
      cov_6ynqod1mw().s[90]++;
      throw error;
    }
  }
  /**
   * Authenticate with n8n fork
   */
  async authenticate() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[11]++;
    const authResult =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[91]++, await this.authManager.authenticate(this.config.authConfig, {
      remoteAddress: '127.0.0.1'
    } // TODO: Get actual remote address
    ));
    /* istanbul ignore next */
    cov_6ynqod1mw().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[21][0]++, authResult.success) &&
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[21][1]++, authResult.userId)) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[20][0]++;
      cov_6ynqod1mw().s[93]++;
      this.authManager.trackConnection(authResult.userId, this.config.authConfig.type);
      // Set auth expiration if applicable
      /* istanbul ignore next */
      cov_6ynqod1mw().s[94]++;
      if (
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[23][0]++, this.config.authConfig.type === 'oauth2') &&
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[23][1]++, this.config.authConfig.expiresAt)) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[22][0]++;
        cov_6ynqod1mw().s[95]++;
        this.state.authExpiresAt = new Date(this.config.authConfig.expiresAt);
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[20][1]++;
    }
    cov_6ynqod1mw().s[96]++;
    return authResult;
  }
  /**
   * Schedule automatic reconnection
   */
  scheduleReconnect() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[12]++;
    cov_6ynqod1mw().s[97]++;
    if (this.reconnectAttemptTimer) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[24][0]++;
      cov_6ynqod1mw().s[98]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[24][1]++;
    }
    cov_6ynqod1mw().s[99]++;
    this.state.status = 'reconnecting';
    /* istanbul ignore next */
    cov_6ynqod1mw().s[100]++;
    this.state.totalReconnects++;
    const delay =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[101]++, Math.min(this.config.websocket.reconnectInterval * Math.pow(2, this.state.totalReconnects - 1), 30000 // Max 30 seconds
    ));
    /* istanbul ignore next */
    cov_6ynqod1mw().s[102]++;
    this.emit('reconnectScheduled', {
      attempt: this.state.totalReconnects,
      delay,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[103]++;
    this.reconnectAttemptTimer = setTimeout(async () => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[13]++;
      cov_6ynqod1mw().s[104]++;
      this.reconnectAttemptTimer = null;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[105]++;
      try {
        /* istanbul ignore next */
        cov_6ynqod1mw().s[106]++;
        await this.connect();
      } catch (error) {
        // Error handling is done in connect() method
      }
    }, delay);
  }
  /**
   * Setup WebSocket event handlers
   */
  setupWebSocketHandlers() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[14]++;
    cov_6ynqod1mw().s[107]++;
    if (!this.wsClient) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[25][0]++;
      cov_6ynqod1mw().s[108]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[25][1]++;
    }
    cov_6ynqod1mw().s[109]++;
    this.wsClient.on('disconnected', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[15]++;
      cov_6ynqod1mw().s[110]++;
      this.state.status = 'disconnected';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[111]++;
      this.state.authenticated = false;
      /* istanbul ignore next */
      cov_6ynqod1mw().s[112]++;
      this.state.lastDisconnected = new Date();
      /* istanbul ignore next */
      cov_6ynqod1mw().s[113]++;
      this.emit('disconnected', {
        ...data,
        timestamp: new Date().toISOString()
      });
      // Attempt reconnection if not a clean disconnect
      /* istanbul ignore next */
      cov_6ynqod1mw().s[114]++;
      if (
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[27][0]++, this.config.websocket.autoReconnect) &&
      /* istanbul ignore next */
      (cov_6ynqod1mw().b[27][1]++, data.code !== 1000)) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[26][0]++;
        cov_6ynqod1mw().s[115]++;
        this.scheduleReconnect();
      } else
      /* istanbul ignore next */
      {
        cov_6ynqod1mw().b[26][1]++;
      }
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[116]++;
    this.wsClient.on('error', error => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[16]++;
      cov_6ynqod1mw().s[117]++;
      this.state.healthStatus = 'unhealthy';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[118]++;
      this.emit('websocketError', {
        error: error.message,
        timestamp: new Date().toISOString()
      });
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[119]++;
    this.wsClient.on('maxReconnectAttemptsReached', () => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[17]++;
      cov_6ynqod1mw().s[120]++;
      this.state.status = 'failed';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[121]++;
      this.state.healthStatus = 'unhealthy';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[122]++;
      this.emit('maxReconnectAttemptsReached', {
        totalAttempts: this.state.totalReconnects,
        timestamp: new Date().toISOString()
      });
    });
  }
  /**
   * Setup streaming event handlers
   */
  setupStreamingHandlers() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[18]++;
    cov_6ynqod1mw().s[123]++;
    if (!this.eventStreamingManager) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[28][0]++;
      cov_6ynqod1mw().s[124]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[28][1]++;
    }
    cov_6ynqod1mw().s[125]++;
    this.eventStreamingManager.on('streamingStarted', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[19]++;
      cov_6ynqod1mw().s[126]++;
      this.emit('streamingStarted', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[127]++;
    this.eventStreamingManager.on('streamingStopped', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[20]++;
      cov_6ynqod1mw().s[128]++;
      this.emit('streamingStopped', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[129]++;
    this.eventStreamingManager.on('streamingError', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[21]++;
      cov_6ynqod1mw().s[130]++;
      this.state.healthStatus = 'degraded';
      /* istanbul ignore next */
      cov_6ynqod1mw().s[131]++;
      this.emit('streamingError', data);
    });
    // Forward workflow events
    /* istanbul ignore next */
    cov_6ynqod1mw().s[132]++;
    this.eventStreamingManager.on('workflowEvent', event => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[22]++;
      cov_6ynqod1mw().s[133]++;
      this.emit('workflowEvent', event);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[134]++;
    this.eventStreamingManager.on('executionStarted', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[23]++;
      cov_6ynqod1mw().s[135]++;
      this.emit('executionStarted', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[136]++;
    this.eventStreamingManager.on('executionCompleted', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[24]++;
      cov_6ynqod1mw().s[137]++;
      this.emit('executionCompleted', data);
    });
  }
  /**
   * Setup progress monitor event handlers
   */
  setupProgressMonitorHandlers() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[25]++;
    cov_6ynqod1mw().s[138]++;
    if (!this.progressMonitor) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[29][0]++;
      cov_6ynqod1mw().s[139]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[29][1]++;
    }
    cov_6ynqod1mw().s[140]++;
    this.progressMonitor.on('progressStarted', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[26]++;
      cov_6ynqod1mw().s[141]++;
      this.emit('progressStarted', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[142]++;
    this.progressMonitor.on('progressCompleted', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[27]++;
      cov_6ynqod1mw().s[143]++;
      this.emit('progressCompleted', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[144]++;
    this.progressMonitor.on('progressUpdated', data => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[28]++;
      cov_6ynqod1mw().s[145]++;
      this.emit('progressUpdated', data);
    });
    /* istanbul ignore next */
    cov_6ynqod1mw().s[146]++;
    this.progressMonitor.on('alert', alert => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[29]++;
      cov_6ynqod1mw().s[147]++;
      if (alert.severity === 'critical') {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[30][0]++;
        cov_6ynqod1mw().s[148]++;
        this.state.healthStatus = 'unhealthy';
      } else {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[30][1]++;
        cov_6ynqod1mw().s[149]++;
        if (alert.severity === 'high') {
          /* istanbul ignore next */
          cov_6ynqod1mw().b[31][0]++;
          cov_6ynqod1mw().s[150]++;
          this.state.healthStatus = 'degraded';
        } else
        /* istanbul ignore next */
        {
          cov_6ynqod1mw().b[31][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6ynqod1mw().s[151]++;
      this.emit('alert', alert);
    });
  }
  /**
   * Start health monitoring
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[30]++;
    cov_6ynqod1mw().s[152]++;
    this.healthCheckTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[31]++;
      cov_6ynqod1mw().s[153]++;
      this.performHealthCheck();
    }, this.config.healthCheck.interval);
  }
  /**
   * Start authentication refresh monitoring
   */
  startAuthRefreshMonitoring() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[32]++;
    cov_6ynqod1mw().s[154]++;
    this.authRefreshTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_6ynqod1mw().f[33]++;
      cov_6ynqod1mw().s[155]++;
      this.checkAuthRefresh();
    }, 60000); // Check every minute
  }
  /**
   * Perform health check
   */
  performHealthCheck() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[34]++;
    const health =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[156]++, this.getConnectionHealth());
    let healthScore =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[157]++, 0);
    /* istanbul ignore next */
    cov_6ynqod1mw().s[158]++;
    if (health.websocketConnected) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[32][0]++;
      cov_6ynqod1mw().s[159]++;
      healthScore += 25;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[32][1]++;
    }
    cov_6ynqod1mw().s[160]++;
    if (health.authenticationValid) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[33][0]++;
      cov_6ynqod1mw().s[161]++;
      healthScore += 25;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[33][1]++;
    }
    cov_6ynqod1mw().s[162]++;
    if (health.streamingActive) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[34][0]++;
      cov_6ynqod1mw().s[163]++;
      healthScore += 25;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[34][1]++;
    }
    cov_6ynqod1mw().s[164]++;
    if (health.progressMonitorActive) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[35][0]++;
      cov_6ynqod1mw().s[165]++;
      healthScore += 25;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[35][1]++;
    }
    // Update health status
    cov_6ynqod1mw().s[166]++;
    if (healthScore >= 75) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[36][0]++;
      cov_6ynqod1mw().s[167]++;
      this.state.healthStatus = 'healthy';
    } else {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[36][1]++;
      cov_6ynqod1mw().s[168]++;
      if (healthScore >= 50) {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[37][0]++;
        cov_6ynqod1mw().s[169]++;
        this.state.healthStatus = 'degraded';
      } else {
        /* istanbul ignore next */
        cov_6ynqod1mw().b[37][1]++;
        cov_6ynqod1mw().s[170]++;
        this.state.healthStatus = 'unhealthy';
      }
    }
    /* istanbul ignore next */
    cov_6ynqod1mw().s[171]++;
    this.emit('healthCheck', {
      health,
      healthScore,
      status: this.state.healthStatus,
      timestamp: new Date().toISOString()
    });
  }
  /**
   * Check if authentication needs refresh
   */
  async checkAuthRefresh() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[35]++;
    cov_6ynqod1mw().s[172]++;
    if (this.authManager.needsTokenRefresh(this.config.authConfig)) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[38][0]++;
      cov_6ynqod1mw().s[173]++;
      try {
        const refreshedAuth =
        /* istanbul ignore next */
        (cov_6ynqod1mw().s[174]++, await this.authManager.refreshToken(this.config.authConfig));
        /* istanbul ignore next */
        cov_6ynqod1mw().s[175]++;
        if (refreshedAuth) {
          /* istanbul ignore next */
          cov_6ynqod1mw().b[39][0]++;
          cov_6ynqod1mw().s[176]++;
          this.config.authConfig = refreshedAuth;
          /* istanbul ignore next */
          cov_6ynqod1mw().s[177]++;
          this.emit('authRefreshed', {
            timestamp: new Date().toISOString()
          });
        } else
        /* istanbul ignore next */
        {
          cov_6ynqod1mw().b[39][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_6ynqod1mw().s[178]++;
        this.emit('authRefreshError', {
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_6ynqod1mw().b[40][0]++, error.message) :
          /* istanbul ignore next */
          (cov_6ynqod1mw().b[40][1]++, 'Auth refresh failed'),
          timestamp: new Date().toISOString()
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[38][1]++;
    }
  }
  /**
   * Create WebSocket URL from base URL
   */
  createWebSocketUrl(baseUrl) {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[36]++;
    const url =
    /* istanbul ignore next */
    (cov_6ynqod1mw().s[179]++, new URL(baseUrl));
    /* istanbul ignore next */
    cov_6ynqod1mw().s[180]++;
    url.protocol = url.protocol === 'https:' ?
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[41][0]++, 'wss:') :
    /* istanbul ignore next */
    (cov_6ynqod1mw().b[41][1]++, 'ws:');
    /* istanbul ignore next */
    cov_6ynqod1mw().s[181]++;
    url.pathname = '/rest/push';
    /* istanbul ignore next */
    cov_6ynqod1mw().s[182]++;
    return url.toString();
  }
  /**
   * Calculate uptime in milliseconds
   */
  calculateUptime() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[37]++;
    cov_6ynqod1mw().s[183]++;
    if (this.state.lastConnected) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[42][0]++;
      cov_6ynqod1mw().s[184]++;
      return Date.now() - this.state.lastConnected.getTime();
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[42][1]++;
    }
    cov_6ynqod1mw().s[185]++;
    return 0;
  }
  /**
   * Calculate round-trip latency
   */
  calculateLatency() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[38]++;
    cov_6ynqod1mw().s[186]++;
    // TODO: Implement actual latency calculation
    return undefined;
  }
  /**
   * Calculate error rate
   */
  calculateErrorRate() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[39]++;
    cov_6ynqod1mw().s[187]++;
    // TODO: Implement actual error rate calculation
    return this.state.consecutiveFailures / Math.max(this.state.totalReconnects + 1, 1);
  }
  /**
   * Clear all timers
   */
  clearTimers() {
    /* istanbul ignore next */
    cov_6ynqod1mw().f[40]++;
    cov_6ynqod1mw().s[188]++;
    if (this.healthCheckTimer) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[43][0]++;
      cov_6ynqod1mw().s[189]++;
      clearInterval(this.healthCheckTimer);
      /* istanbul ignore next */
      cov_6ynqod1mw().s[190]++;
      this.healthCheckTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[43][1]++;
    }
    cov_6ynqod1mw().s[191]++;
    if (this.authRefreshTimer) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[44][0]++;
      cov_6ynqod1mw().s[192]++;
      clearInterval(this.authRefreshTimer);
      /* istanbul ignore next */
      cov_6ynqod1mw().s[193]++;
      this.authRefreshTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[44][1]++;
    }
    cov_6ynqod1mw().s[194]++;
    if (this.reconnectAttemptTimer) {
      /* istanbul ignore next */
      cov_6ynqod1mw().b[45][0]++;
      cov_6ynqod1mw().s[195]++;
      clearTimeout(this.reconnectAttemptTimer);
      /* istanbul ignore next */
      cov_6ynqod1mw().s[196]++;
      this.reconnectAttemptTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_6ynqod1mw().b[45][1]++;
    }
  }
}
/**
 * Create connection manager with default configuration
 */
export function createConnectionManager(n8nBaseUrl, authConfig, options =
/* istanbul ignore next */
(cov_6ynqod1mw().b[46][0]++, {})) {
  /* istanbul ignore next */
  cov_6ynqod1mw().f[41]++;
  const config =
  /* istanbul ignore next */
  (cov_6ynqod1mw().s[197]++, {
    n8nBaseUrl,
    authConfig,
    websocket: {
      reconnectInterval: 1000,
      maxReconnectAttempts: 10,
      heartbeatInterval: 30000,
      connectionTimeout: 10000,
      autoReconnect: true,
      ...options.websocket
    },
    streaming: {
      bufferSize: 100,
      retryAttempts: 5,
      enableProgressTracking: true,
      enableMetrics: true,
      ...options.streaming
    },
    monitoring: {
      enablePredictiveAnalytics: true,
      enablePerformanceTracking: true,
      historicalDataLimit: 1000,
      progressUpdateInterval: 1000,
      ...options.monitoring
    },
    healthCheck: {
      enabled: true,
      interval: 60000,
      timeout: 5000,
      maxFailures: 3,
      ...options.healthCheck
    }
  });
  /* istanbul ignore next */
  cov_6ynqod1mw().s[198]++;
  return new ConnectionManager(config);
}
/**
 * Default connection configuration
 */
export const DEFAULT_CONNECTION_CONFIG =
/* istanbul ignore next */
(cov_6ynqod1mw().s[199]++, {
  websocket: {
    reconnectInterval: 1000,
    maxReconnectAttempts: 10,
    heartbeatInterval: 30000,
    connectionTimeout: 10000,
    autoReconnect: true
  },
  streaming: {
    bufferSize: 100,
    retryAttempts: 5,
    enableProgressTracking: true,
    enableMetrics: true
  },
  monitoring: {
    enablePredictiveAnalytics: true,
    enablePerformanceTracking: true,
    historicalDataLimit: 1000,
    progressUpdateInterval: 1000
  },
  healthCheck: {
    enabled: true,
    interval: 60000,
    timeout: 5000,
    maxFailures: 3
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,