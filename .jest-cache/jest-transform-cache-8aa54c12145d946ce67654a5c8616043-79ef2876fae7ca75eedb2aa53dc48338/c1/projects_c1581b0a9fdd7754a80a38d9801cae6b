ef785543892cdabb587f5bfac8f094ae
/* istanbul ignore next */
function cov_efzsghwis() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts";
  var hash = "61acb25521a44d7c24b82b946bd91f8d4ac36ed5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 6,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 27
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "3": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 18,
          column: 2
        }
      },
      "4": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "5": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "6": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "7": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 94
        }
      },
      "8": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "9": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 34
        }
      },
      "10": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "11": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "12": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "13": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "14": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 44,
          column: 66
        }
      },
      "15": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 47,
          column: 17
        }
      },
      "16": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "17": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 76
        }
      },
      "18": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "19": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 68
        }
      },
      "20": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "21": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 54,
          column: 21
        }
      },
      "22": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 65
        }
      },
      "23": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "24": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 104
        }
      },
      "25": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "26": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "27": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 95
        }
      },
      "28": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "29": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "30": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "31": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 163
        }
      },
      "32": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 85
        }
      },
      "33": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 82
        }
      },
      "34": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "35": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 90,
          column: 38
        }
      },
      "36": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "37": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 94
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "39": {
        start: {
          line: 95,
          column: 36
        },
        end: {
          line: 98,
          column: 17
        }
      },
      "40": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 99,
          column: 71
        }
      },
      "41": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 101,
          column: 67
        }
      },
      "42": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 110,
          column: 17
        }
      },
      "43": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 108,
          column: 21
        }
      },
      "44": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 163
        }
      },
      "45": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 86
        }
      },
      "46": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "47": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "48": {
        start: {
          line: 128,
          column: 27
        },
        end: {
          line: 128,
          column: 38
        }
      },
      "49": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "50": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 94
        }
      },
      "51": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "52": {
        start: {
          line: 133,
          column: 53
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "53": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "54": {
        start: {
          line: 137,
          column: 32
        },
        end: {
          line: 137,
          column: 82
        }
      },
      "55": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 139,
          column: 67
        }
      },
      "56": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "57": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "58": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 163
        }
      },
      "59": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 86
        }
      },
      "60": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 83
        }
      },
      "61": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 185,
          column: 7
        }
      },
      "62": {
        start: {
          line: 166,
          column: 27
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "63": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "64": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 94
        }
      },
      "65": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "66": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 59
        }
      },
      "67": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 83
        }
      },
      "68": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "69": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "70": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 163
        }
      },
      "71": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 86
        }
      },
      "72": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "createProjectTools",
        decl: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 34
          }
        },
        loc: {
          start: {
            line: 20,
            column: 54
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 33
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 38
          },
          end: {
            line: 49,
            column: 39
          }
        },
        loc: {
          start: {
            line: 49,
            column: 58
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 49
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 17
          },
          end: {
            line: 89,
            column: 18
          }
        },
        loc: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 113,
            column: 9
          }
        },
        line: 89
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 127,
            column: 18
          }
        },
        loc: {
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 127
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 165,
            column: 17
          },
          end: {
            line: 165,
            column: 18
          }
        },
        loc: {
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 184,
            column: 9
          }
        },
        line: 165
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 41,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 43,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 43,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 36
          },
          end: {
            line: 101,
            column: 59
          }
        }, {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 101,
            column: 64
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 139,
            column: 21
          },
          end: {
            line: 139,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 36
          },
          end: {
            line: 139,
            column: 59
          }
        }, {
          start: {
            line: 139,
            column: 62
          },
          end: {
            line: 139,
            column: 64
          }
        }],
        line: 139
      },
      "15": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "16": {
        loc: {
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 146,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 146,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "17": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "18": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "19": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  N8nProject,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  PaginationOptions,\n} from '../types/n8n.js';\n\n// Zod schemas for validation\nconst ProjectIdSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n});\n\nconst ListProjectsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateProjectSchema = z.object({\n  name: z.string().min(1, 'Project name is required'),\n  type: z.string().optional(),\n});\n\nconst UpdateProjectSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n  name: z.string().min(1, 'Project name is required'),\n});\n\n// Tool registration function\nexport function createProjectTools(getClient: () => N8nClient | null, server: any) {\n  // List projects tool\n  server.addTool({\n    name: 'list-projects',\n    description:\n      'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ListProjectsSchema,\n    annotations: {\n      title: 'List n8n Projects',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListProjectsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getProjects(options);\n\n        if (response.data.length === 0) {\n          return 'No projects found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} project(s):\\n\\n`;\n\n        response.data.forEach((project: N8nProject, index: number) => {\n          result += `${index + 1}. **${project.name}**\\n`;\n          result += `   - ID: ${project.id}\\n`;\n          if (project.type) {\n            result += `   - Type: ${project.type}\\n`;\n          }\n          if (project.createdAt) {\n            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n\uD83D\uDCC4 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list projects: ${error.message}`);\n        }\n        throw new UserError('Failed to list projects with unknown error');\n      }\n    },\n  });\n\n  // Create project tool\n  server.addTool({\n    name: 'create-project',\n    description:\n      'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: CreateProjectSchema,\n    annotations: {\n      title: 'Create New Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const projectData: CreateProjectRequest = {\n          name: args.name,\n          type: args.type,\n        };\n\n        const project = await client.createProject(projectData);\n\n        return (\n          `\u2705 Successfully created project \"${project.name}\" with ID: ${project.id}\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create project: ${error.message}`);\n        }\n        throw new UserError('Failed to create project with unknown error');\n      }\n    },\n  });\n\n  // Update project tool\n  server.addTool({\n    name: 'update-project',\n    description:\n      \"Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled\",\n    parameters: UpdateProjectSchema,\n    annotations: {\n      title: 'Update Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { projectId, ...updateData } = args;\n        const projectData: UpdateProjectRequest = {\n          name: updateData.name,\n        };\n\n        const project = await client.updateProject(projectId, projectData);\n\n        return (\n          `\u2705 Successfully updated project \"${project.name}\" (ID: ${project.id})\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to update project: ${error.message}`);\n        }\n        throw new UserError('Failed to update project with unknown error');\n      }\n    },\n  });\n\n  // Delete project tool\n  server.addTool({\n    name: 'delete-project',\n    description:\n      'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ProjectIdSchema,\n    annotations: {\n      title: 'Delete Project',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ProjectIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteProject(args.projectId);\n        return `\u2705 Successfully deleted project with ID: ${args.projectId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete project: ${error.message}`);\n        }\n        throw new UserError('Failed to delete project with unknown error');\n      }\n    },\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61acb25521a44d7c24b82b946bd91f8d4ac36ed5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_efzsghwis = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_efzsghwis();
import { z } from 'zod';
import { UserError } from 'fastmcp';
// Zod schemas for validation
const ProjectIdSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[0]++, z.object({
  projectId: z.string().min(1, 'Project ID is required')
}));
const ListProjectsSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[1]++, z.object({
  limit: z.number().min(1).max(100).optional(),
  cursor: z.string().optional()
}));
const CreateProjectSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[2]++, z.object({
  name: z.string().min(1, 'Project name is required'),
  type: z.string().optional()
}));
const UpdateProjectSchema =
/* istanbul ignore next */
(cov_efzsghwis().s[3]++, z.object({
  projectId: z.string().min(1, 'Project ID is required'),
  name: z.string().min(1, 'Project name is required')
}));
// Tool registration function
export function createProjectTools(getClient, server) {
  /* istanbul ignore next */
  cov_efzsghwis().f[0]++;
  cov_efzsghwis().s[4]++;
  // List projects tool
  server.addTool({
    name: 'list-projects',
    description: 'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: ListProjectsSchema,
    annotations: {
      title: 'List n8n Projects',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[1]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[5]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[6]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[0][0]++;
        cov_efzsghwis().s[7]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[0][1]++;
      }
      cov_efzsghwis().s[8]++;
      try {
        const options =
        /* istanbul ignore next */
        (cov_efzsghwis().s[9]++, {});
        /* istanbul ignore next */
        cov_efzsghwis().s[10]++;
        if (args.limit) {
          /* istanbul ignore next */
          cov_efzsghwis().b[1][0]++;
          cov_efzsghwis().s[11]++;
          options.limit = args.limit;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[1][1]++;
        }
        cov_efzsghwis().s[12]++;
        if (args.cursor) {
          /* istanbul ignore next */
          cov_efzsghwis().b[2][0]++;
          cov_efzsghwis().s[13]++;
          options.cursor = args.cursor;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[2][1]++;
        }
        const response =
        /* istanbul ignore next */
        (cov_efzsghwis().s[14]++, await client.getProjects(options));
        /* istanbul ignore next */
        cov_efzsghwis().s[15]++;
        if (response.data.length === 0) {
          /* istanbul ignore next */
          cov_efzsghwis().b[3][0]++;
          cov_efzsghwis().s[16]++;
          return 'No projects found in the n8n instance.';
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[3][1]++;
        }
        let result =
        /* istanbul ignore next */
        (cov_efzsghwis().s[17]++, `Found ${response.data.length} project(s):\n\n`);
        /* istanbul ignore next */
        cov_efzsghwis().s[18]++;
        response.data.forEach((project, index) => {
          /* istanbul ignore next */
          cov_efzsghwis().f[2]++;
          cov_efzsghwis().s[19]++;
          result += `${index + 1}. **${project.name}**\n`;
          /* istanbul ignore next */
          cov_efzsghwis().s[20]++;
          result += `   - ID: ${project.id}\n`;
          /* istanbul ignore next */
          cov_efzsghwis().s[21]++;
          if (project.type) {
            /* istanbul ignore next */
            cov_efzsghwis().b[4][0]++;
            cov_efzsghwis().s[22]++;
            result += `   - Type: ${project.type}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[4][1]++;
          }
          cov_efzsghwis().s[23]++;
          if (project.createdAt) {
            /* istanbul ignore next */
            cov_efzsghwis().b[5][0]++;
            cov_efzsghwis().s[24]++;
            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[5][1]++;
          }
          cov_efzsghwis().s[25]++;
          result += '\n';
        });
        /* istanbul ignore next */
        cov_efzsghwis().s[26]++;
        if (response.nextCursor) {
          /* istanbul ignore next */
          cov_efzsghwis().b[6][0]++;
          cov_efzsghwis().s[27]++;
          result += `\n📄 Use cursor "${response.nextCursor}" to get the next page.`;
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[6][1]++;
        }
        cov_efzsghwis().s[28]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[29]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[7][0]++;
          cov_efzsghwis().s[30]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[8][0]++;
            cov_efzsghwis().s[31]++;
            throw new UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[8][1]++;
          }
          cov_efzsghwis().s[32]++;
          throw new UserError(`Failed to list projects: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[7][1]++;
        }
        cov_efzsghwis().s[33]++;
        throw new UserError('Failed to list projects with unknown error');
      }
    }
  });
  // Create project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[34]++;
  server.addTool({
    name: 'create-project',
    description: 'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: CreateProjectSchema,
    annotations: {
      title: 'Create New Project',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[3]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[35]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[36]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[9][0]++;
        cov_efzsghwis().s[37]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[9][1]++;
      }
      cov_efzsghwis().s[38]++;
      try {
        const projectData =
        /* istanbul ignore next */
        (cov_efzsghwis().s[39]++, {
          name: args.name,
          type: args.type
        });
        const project =
        /* istanbul ignore next */
        (cov_efzsghwis().s[40]++, await client.createProject(projectData));
        /* istanbul ignore next */
        cov_efzsghwis().s[41]++;
        return `✅ Successfully created project "${project.name}" with ID: ${project.id}\n` + (project.type ?
        /* istanbul ignore next */
        (cov_efzsghwis().b[10][0]++, `Type: ${project.type}`) :
        /* istanbul ignore next */
        (cov_efzsghwis().b[10][1]++, ''));
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[42]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[11][0]++;
          cov_efzsghwis().s[43]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[12][0]++;
            cov_efzsghwis().s[44]++;
            throw new UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[12][1]++;
          }
          cov_efzsghwis().s[45]++;
          throw new UserError(`Failed to create project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[11][1]++;
        }
        cov_efzsghwis().s[46]++;
        throw new UserError('Failed to create project with unknown error');
      }
    }
  });
  // Update project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[47]++;
  server.addTool({
    name: 'update-project',
    description: "Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled",
    parameters: UpdateProjectSchema,
    annotations: {
      title: 'Update Project',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[4]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[48]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[49]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[13][0]++;
        cov_efzsghwis().s[50]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[13][1]++;
      }
      cov_efzsghwis().s[51]++;
      try {
        const {
          projectId,
          ...updateData
        } =
        /* istanbul ignore next */
        (cov_efzsghwis().s[52]++, args);
        const projectData =
        /* istanbul ignore next */
        (cov_efzsghwis().s[53]++, {
          name: updateData.name
        });
        const project =
        /* istanbul ignore next */
        (cov_efzsghwis().s[54]++, await client.updateProject(projectId, projectData));
        /* istanbul ignore next */
        cov_efzsghwis().s[55]++;
        return `✅ Successfully updated project "${project.name}" (ID: ${project.id})\n` + (project.type ?
        /* istanbul ignore next */
        (cov_efzsghwis().b[14][0]++, `Type: ${project.type}`) :
        /* istanbul ignore next */
        (cov_efzsghwis().b[14][1]++, ''));
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[56]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[15][0]++;
          cov_efzsghwis().s[57]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[16][0]++;
            cov_efzsghwis().s[58]++;
            throw new UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[16][1]++;
          }
          cov_efzsghwis().s[59]++;
          throw new UserError(`Failed to update project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[15][1]++;
        }
        cov_efzsghwis().s[60]++;
        throw new UserError('Failed to update project with unknown error');
      }
    }
  });
  // Delete project tool
  /* istanbul ignore next */
  cov_efzsghwis().s[61]++;
  server.addTool({
    name: 'delete-project',
    description: 'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',
    parameters: ProjectIdSchema,
    annotations: {
      title: 'Delete Project',
      readOnlyHint: false,
      destructiveHint: true,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_efzsghwis().f[5]++;
      const client =
      /* istanbul ignore next */
      (cov_efzsghwis().s[62]++, getClient());
      /* istanbul ignore next */
      cov_efzsghwis().s[63]++;
      if (!client) {
        /* istanbul ignore next */
        cov_efzsghwis().b[17][0]++;
        cov_efzsghwis().s[64]++;
        throw new UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_efzsghwis().b[17][1]++;
      }
      cov_efzsghwis().s[65]++;
      try {
        /* istanbul ignore next */
        cov_efzsghwis().s[66]++;
        await client.deleteProject(args.projectId);
        /* istanbul ignore next */
        cov_efzsghwis().s[67]++;
        return `✅ Successfully deleted project with ID: ${args.projectId}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_efzsghwis().s[68]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_efzsghwis().b[18][0]++;
          cov_efzsghwis().s[69]++;
          // Check for license-related errors
          if (error.message.includes('license')) {
            /* istanbul ignore next */
            cov_efzsghwis().b[19][0]++;
            cov_efzsghwis().s[70]++;
            throw new UserError(`This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_efzsghwis().b[19][1]++;
          }
          cov_efzsghwis().s[71]++;
          throw new UserError(`Failed to delete project: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_efzsghwis().b[18][1]++;
        }
        cov_efzsghwis().s[72]++;
        throw new UserError('Failed to delete project with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,