{"version":3,"names":["cov_17yms1qxbx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createAuthMiddleware","requireAuth","requirePermission","parseAuthConfigFromEnv","FastMCPAuthMiddleware","config","constructor","publicTools","publicResources","authHeader","authErrorMessage","authzErrorMessage","apply","server","console","log","_authMiddleware","createAuthenticateFunction","request","context","createRequestContext","authResult","authProvider","authenticate","success","Error","user","error","checkToolAccess","toolName","includes","hasAccess","canAccessTool","checkResourceAccess","resourceUri","some","pattern","startsWith","canAccessResource","clientId","id","headers","metadata","wrapTool","toolFunction","args","extractContextFromArgs","wrapResource","resourceFunction","lastArg","length","session","target","propertyKey","descriptor","originalMethod","value","permission","AUTH_ENV_CONFIG","REQUIRE_AUTH","PUBLIC_TOOLS","PUBLIC_RESOURCES","AUTH_HEADER","AUTH_ERROR_MESSAGE","AUTHZ_ERROR_MESSAGE","process","env","split"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts"],"sourcesContent":["/**\n * FastMCP Authentication Middleware\n *\n * Provides authentication middleware for FastMCP server integration.\n * Handles authentication checking and access control for tools and resources.\n */\n\nimport { FastMCP } from 'fastmcp';\nimport { AuthProvider, RequestContext } from './authProvider.js';\n\n/**\n * Authentication middleware configuration\n */\nexport interface AuthMiddlewareConfig {\n  /** Authentication provider to use */\n  authProvider: AuthProvider;\n\n  /** Whether to require authentication for all requests */\n  requireAuth?: boolean;\n\n  /** Tools that bypass authentication (always allowed) */\n  publicTools?: string[];\n\n  /** Resources that bypass authentication (always allowed) */\n  publicResources?: string[];\n\n  /** Custom authentication header name */\n  authHeader?: string;\n\n  /** Error message for authentication failures */\n  authErrorMessage?: string;\n\n  /** Error message for authorization failures */\n  authzErrorMessage?: string;\n}\n\n/**\n * Authentication middleware for FastMCP\n *\n * Integrates with FastMCP server to provide authentication and authorization\n * for tool access and resource access.\n */\nexport class FastMCPAuthMiddleware {\n  private config: Required<AuthMiddlewareConfig>;\n\n  constructor(config: AuthMiddlewareConfig) {\n    this.config = {\n      requireAuth: false,\n      publicTools: ['init-n8n', 'status'],\n      publicResources: [],\n      authHeader: 'authorization',\n      authErrorMessage: 'Authentication required',\n      authzErrorMessage: 'Access denied',\n      ...config,\n    };\n  }\n\n  /**\n   * Apply authentication middleware to FastMCP server\n   */\n  public apply(server: FastMCP): void {\n    // Note: Current FastMCP version doesn't have built-in authentication\n    // Authentication will be handled at the tool level through wrapper functions\n    console.log('üîê Authentication middleware configured (tool-level implementation)');\n\n    // Store reference for tool wrapping\n    (server as any)._authMiddleware = this;\n  }\n\n  /**\n   * Create authentication function for FastMCP\n   */\n  private createAuthenticateFunction() {\n    return async (request: any) => {\n      try {\n        const context = this.createRequestContext(request);\n        const authResult = await this.config.authProvider.authenticate(context);\n\n        if (!authResult.success) {\n          if (this.config.requireAuth) {\n            throw new Error(this.config.authErrorMessage);\n          }\n          // Allow anonymous access if auth not required\n          return null;\n        }\n\n        return authResult.user;\n      } catch (error) {\n        if (this.config.requireAuth) {\n          throw error;\n        }\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Check if tool access is allowed\n   */\n  public async checkToolAccess(toolName: string, context: RequestContext): Promise<void> {\n    // Public tools are always allowed\n    if (this.config.publicTools.includes(toolName)) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check tool access permissions\n    const hasAccess = await this.config.authProvider.canAccessTool(toolName, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${toolName}`);\n    }\n  }\n\n  /**\n   * Check if resource access is allowed\n   */\n  public async checkResourceAccess(resourceUri: string, context: RequestContext): Promise<void> {\n    // Public resources are always allowed\n    if (this.config.publicResources.some(pattern => resourceUri.startsWith(pattern))) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check resource access permissions\n    const hasAccess = await this.config.authProvider.canAccessResource(resourceUri, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${resourceUri}`);\n    }\n  }\n\n  /**\n   * Create request context from FastMCP request\n   */\n  private createRequestContext(request: any): RequestContext {\n    return {\n      clientId: request.clientId || request.id,\n      headers: request.headers || {},\n      metadata: request.metadata || {},\n    };\n  }\n\n  /**\n   * Wrap tool function with authentication\n   */\n  public wrapTool<T extends (...args: any[]) => any>(toolName: string, toolFunction: T): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkToolAccess(toolName, context);\n      return toolFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Wrap resource function with authentication\n   */\n  public wrapResource<T extends (...args: any[]) => any>(\n    resourceUri: string,\n    resourceFunction: T\n  ): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkResourceAccess(resourceUri, context);\n      return resourceFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Extract request context from function arguments\n   */\n  private extractContextFromArgs(args: any[]): RequestContext {\n    // Look for context in arguments (FastMCP typically passes context as last argument)\n    const lastArg = args[args.length - 1];\n    if (lastArg && typeof lastArg === 'object' && lastArg.session) {\n      return {\n        clientId: lastArg.session?.id,\n        headers: lastArg.headers || {},\n        metadata: lastArg.metadata || {},\n      };\n    }\n\n    return {\n      headers: {},\n      metadata: {},\n    };\n  }\n}\n\n/**\n * Create authentication middleware\n */\nexport function createAuthMiddleware(config: AuthMiddlewareConfig): FastMCPAuthMiddleware {\n  return new FastMCPAuthMiddleware(config);\n}\n\n/**\n * Authentication decorator for tools\n *\n * Usage:\n * @requireAuth('tool-name')\n * async function myTool() { ... }\n */\nexport function requireAuth(toolName: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`üîí Authentication check for tool: ${toolName}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Authorization decorator for tools with specific permissions\n *\n * Usage:\n * @requirePermission('workflows')\n * async function manageWorkflow() { ... }\n */\nexport function requirePermission(permission: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`üõ°Ô∏è  Permission check for: ${permission}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Environment variable configuration for authentication middleware\n */\nexport const AUTH_ENV_CONFIG = {\n  /** Whether authentication is required */\n  REQUIRE_AUTH: 'N8N_MCP_REQUIRE_AUTH',\n\n  /** Public tools (comma-separated) */\n  PUBLIC_TOOLS: 'N8N_MCP_PUBLIC_TOOLS',\n\n  /** Public resources (comma-separated) */\n  PUBLIC_RESOURCES: 'N8N_MCP_PUBLIC_RESOURCES',\n\n  /** Custom auth header name */\n  AUTH_HEADER: 'N8N_MCP_AUTH_HEADER',\n\n  /** Custom auth error message */\n  AUTH_ERROR_MESSAGE: 'N8N_MCP_AUTH_ERROR_MESSAGE',\n\n  /** Custom authz error message */\n  AUTHZ_ERROR_MESSAGE: 'N8N_MCP_AUTHZ_ERROR_MESSAGE',\n} as const;\n\n/**\n * Parse authentication middleware configuration from environment\n */\nexport function parseAuthConfigFromEnv(authProvider: AuthProvider): AuthMiddlewareConfig {\n  return {\n    authProvider,\n    requireAuth: process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] === 'true',\n    publicTools: process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS]?.split(',') || undefined,\n    publicResources: process.env[AUTH_ENV_CONFIG.PUBLIC_RESOURCES]?.split(',') || undefined,\n    authHeader: process.env[AUTH_ENV_CONFIG.AUTH_HEADER] || undefined,\n    authErrorMessage: process.env[AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE] || undefined,\n    authzErrorMessage: process.env[AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE] || undefined,\n  };\n}\n"],"mappings":"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","ignoreList":[]}