{"version":3,"names":["cov_26nrb6tjz3","actualCoverage","s","fastmcp_1","require","zod_1","n8nClient_js_1","workflow_js_1","projects_js_1","users_js_1","variables_js_1","executions_js_1","tags_js_1","credentials_js_1","audit_js_1","ai_config_js_1","ai_testing_js_1","ai_models_js_1","monitoring_js_1","analytics_js_1","templates_js_1","source_control_js_1","resource_transfer_js_1","data_management_js_1","credential_testing_js_1","execution_control_js_1","workflow_development_js_1","node_management_js_1","ai_helpers_js_1","instance_monitoring_js_1","transportConfig_js_1","sseTransport_js_1","n8nClient","server","FastMCP","name","version","instructions","trim","getClient","setClient","client","f","createWorkflowTools","createProjectTools","createUserTools","createVariableTools","createExecutionTools","createTagTools","createCredentialTools","createAuditTools","createSourceControlTools","createResourceTransferTools","createDataManagementTools","createCredentialTestingTools","createExecutionControlTools","createWorkflowDevelopmentTools","createNodeManagementTools","createAIHelperTools","createInstanceMonitoringTools","createAIConfigTools","createAITestingTools","createAIModelsTools","createMonitoringTools","createAnalyticsTools","createTemplateTools","addTool","description","parameters","z","object","baseUrl","string","url","apiKey","min","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","N8nClient","getWorkflows","limit","error","Error","b","message","String","startServer","transportConfig","detectTransportConfig","validatedConfig","validateTransportConfig","isStdioTransport","type","log","console","SSEUtils","validateConfig","process","exit","sseTransport","createSSETransport","start","serverUrl","getServerUrl","transportType","on"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/index-fastmcp.ts"],"sourcesContent":["\n\nimport { FastMCP } from 'fastmcp';\nimport { z } from 'zod';\nimport { N8nClient } from './client/n8nClient.js';\nimport { createWorkflowTools } from './tools/workflow.js';\nimport { createProjectTools } from './tools/projects.js';\nimport { createUserTools } from './tools/users.js';\nimport { createVariableTools } from './tools/variables.js';\nimport { createExecutionTools } from './tools/executions.js';\nimport { createTagTools } from './tools/tags.js';\nimport { createCredentialTools } from './tools/credentials.js';\nimport { createAuditTools } from './tools/audit.js';\nimport { createAIConfigTools } from './tools/ai-config.js';\nimport { createAITestingTools } from './tools/ai-testing.js';\nimport { createAIModelsTools } from './tools/ai-models.js';\nimport { createMonitoringTools } from './tools/monitoring.js';\nimport { createAnalyticsTools } from './tools/analytics.js';\nimport { createTemplateTools } from './tools/templates.js';\nimport { createSourceControlTools } from './tools/source-control.js';\nimport { createResourceTransferTools } from './tools/resource-transfer.js';\nimport { createDataManagementTools } from './tools/data-management.js';\nimport { createCredentialTestingTools } from './tools/credential-testing.js';\nimport { createExecutionControlTools } from './tools/execution-control.js';\nimport { createWorkflowDevelopmentTools } from './tools/workflow-development.js';\nimport { createNodeManagementTools } from './tools/node-management.js';\nimport { createAIHelperTools } from './tools/ai-helpers.js';\nimport { createInstanceMonitoringTools } from './tools/instance-monitoring.js';\nimport {\n  detectTransportConfig,\n  validateTransportConfig,\n  getServerUrl,\n} from './transport/transportConfig.js';\nimport { createSSETransport, SSEUtils } from './transport/sseTransport.js';\n\n// Global client instance\nlet n8nClient: N8nClient | null = null;\n\n// FastMCP server instance\nconst server = new FastMCP({\n  name: 'n8n-mcp-server',\n  version: '2.0.0',\n  instructions: `\nThis server provides comprehensive access to n8n workflows, executions, users, projects, credentials, and AI capabilities through the Model Context Protocol.\n\nKey Features:\n- Complete workflow management (create, read, update, delete, activate/deactivate)\n- User and project management (Enterprise features)\n- Execution monitoring and management\n- Sophisticated execution control (cancel, retry, partial execution with checkpoints)\n- Credential and variable management\n- Tag system for organization\n- Audit and security reporting\n- AI-centric features for AI node configuration and testing\n- AI model management and recommendations\n- AI prompt validation and testing tools\n- Advanced monitoring and alerting system\n- Workflow performance tracking and health checks\n- Error notification and alert rule management\n- Workflow intelligence and complexity analysis\n- Performance bottleneck identification and optimization suggestions\n- Workflow comparison and best practice identification\n- Template and pattern management with curated library\n- Workflow template search, import/export, and pattern analysis\n- Resource portability with comprehensive export/import tools\n- Cross-instance workflow, credential, and configuration transfer\n- Batch resource operations and project migration tools\n- Binary data management with upload/download capabilities\n- Large file handling with progress tracking and validation\n- Static workflow file storage and organization tools\n- Enhanced authentication with OAuth2 callback mechanisms\n- Credential validity testing and security validation\n- Multi-factor authentication and session management\n- Advanced security monitoring and audit capabilities\n- Community node and integration management with npm registry support\n- Node installation, removal, and update tools with progress tracking\n- Node type discovery and detailed parameter documentation\n- Workflow-centric node analysis and usage statistics\n- Dynamic parameter resolution and AI-powered node suggestions\n- AI-powered workflow analysis with connection suggestions and optimization\n- Smart parameter mapping with auto-configuration capabilities\n- Node compatibility analysis with transformation recommendations\n- Data flow analysis with bottleneck identification and performance optimization\n- Instance-level resource monitoring with CPU, memory, and disk usage tracking\n- Per-workflow resource consumption metrics and performance analysis\n- System health monitoring with alerting and threshold management\n- Real-time resource usage tracking with historical data retention\n\nGetting Started:\n1. Initialize connection: Use 'init-n8n' with your n8n instance URL and API key\n2. Explore workflows: Use 'list-workflows' to see available workflows\n3. Manage workflows: Create, update, activate/deactivate workflows as needed\n4. Explore AI features: Use 'list-ai-models' to see available AI models and 'list-ai-nodes' to find AI nodes in workflows\n5. Monitor system health: Use 'get-monitoring-dashboard' for real-time system overview and 'check-workflow-health' for detailed analysis\n\nThe server supports both Community and Enterprise n8n features. Enterprise features (projects, variables) will return appropriate errors if not available in your n8n instance.\n\nAll operations include proper error handling and user-friendly messages. Long-running operations report progress when possible.\n  `.trim(),\n});\n\n// Function to get the global client instance\nconst getClient = () => n8nClient;\n\n// Helper function to set the global client\nconst setClient = (client: N8nClient) => {\n  n8nClient = client;\n};\n\n// Register all tools using the create*Tools helpers\ncreateWorkflowTools(getClient, server);\ncreateProjectTools(getClient, server);\ncreateUserTools(getClient, server);\ncreateVariableTools(getClient, server);\ncreateExecutionTools(getClient, server);\ncreateTagTools(getClient, server);\ncreateCredentialTools(getClient, server);\ncreateAuditTools(getClient, server);\n\n// Register source control integration tools (Phase 1)\ncreateSourceControlTools(getClient, server);\n\n// Register resource transfer tools (Phase 1)\ncreateResourceTransferTools(getClient, server);\n\n// Register data management tools (Phase 1)\ncreateDataManagementTools(getClient, server);\n\n// Register credential testing tools (Phase 1)\ncreateCredentialTestingTools(getClient, server);\n\n// Register execution control tools (Phase 1)\ncreateExecutionControlTools(getClient, server);\n\n// Register workflow development tools (Phase 2)\ncreateWorkflowDevelopmentTools(getClient, server);\n\n// Register node and integration management tools (Phase 2)\ncreateNodeManagementTools(getClient, server);\n\n// Register AI-powered helper tools (Phase 2)\ncreateAIHelperTools(getClient, server);\n\n// Register instance resource monitoring tools (Phase 4)\ncreateInstanceMonitoringTools(getClient, server);\n\n// Register AI-centric tools (Phase 3)\ncreateAIConfigTools(getClient, server);\ncreateAITestingTools(getClient, server);\ncreateAIModelsTools(getClient, server);\n\n// Register advanced monitoring tools (Phase 3)\ncreateMonitoringTools(getClient, server);\n\n// Register workflow analytics and intelligence tools (Phase 3)\ncreateAnalyticsTools(getClient, server);\n\n// Register template and pattern management tools (Phase 3)\ncreateTemplateTools(getClient, server);\n\n// Override the init-n8n tool to properly set the global client\nserver.addTool({\n  name: 'init-n8n',\n  description: 'Initialize connection to n8n instance with base URL and API key',\n  parameters: z.object({\n    baseUrl: z.string().url('Must be a valid URL'),\n    apiKey: z.string().min(1, 'API key is required'),\n  }),\n  annotations: {\n    title: 'Initialize n8n Connection',\n    readOnlyHint: false,\n    destructiveHint: false,\n    idempotentHint: true,\n    openWorldHint: true,\n  },\n  execute: async (args: any) => {\n    try {\n      // Create and set the global client\n      const client = new N8nClient(args.baseUrl, args.apiKey);\n\n      // Test the connection\n      await client.getWorkflows({ limit: 1 });\n\n      // Set the global client\n      setClient(client);\n\n      return `✅ Successfully connected to n8n instance at ${args.baseUrl}`;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Failed to connect to n8n: ${error.message}`);\n      }\n      throw new Error('Failed to connect to n8n with unknown error');\n    }\n  },\n});\n\n// Add a simple status check tool\nserver.addTool({\n  name: 'status',\n  description: 'Check the current connection status to n8n',\n  parameters: z.object({}),\n  annotations: {\n    title: 'Check n8n Connection Status',\n    readOnlyHint: true,\n    destructiveHint: false,\n    idempotentHint: true,\n    openWorldHint: true,\n  },\n  execute: async () => {\n    if (!n8nClient) {\n      return \"❌ Not connected to n8n. Please run 'init-n8n' first.\";\n    }\n\n    try {\n      // Test the connection\n      await n8nClient.getWorkflows({ limit: 1 });\n      return '✅ Connected to n8n and ready to use.';\n    } catch (error) {\n      return `⚠️ Connected but unable to communicate with n8n: ${error instanceof Error ? error.message : String(error)}`;\n    }\n  },\n});\n\n// Configure and start the server with appropriate transport\nasync function startServer() {\n  try {\n    // Detect transport configuration\n    const transportConfig = detectTransportConfig();\n    const validatedConfig = validateTransportConfig(transportConfig);\n\n    // Only log to stderr for stdio transport to avoid corrupting JSON-RPC communication\n    const isStdioTransport = validatedConfig.type === 'stdio';\n    const log = isStdioTransport ? console.error : console.log;\n\n    log(`🚀 Starting n8n MCP Server...`);\n    log(`📡 Transport type: ${validatedConfig.type}`);\n\n    if (validatedConfig.type === 'sse') {\n      // Validate SSE configuration\n      if (!SSEUtils.validateConfig(validatedConfig)) {\n        console.error('❌ Invalid SSE configuration');\n        process.exit(1);\n      }\n\n      // Create and start SSE transport\n      const sseTransport = createSSETransport(server, validatedConfig);\n      await sseTransport.start();\n\n      // Log connection URL\n      const serverUrl = getServerUrl(validatedConfig);\n      if (serverUrl) {\n        log(`🌐 Server URL: ${serverUrl}`);\n      }\n    } else {\n      // Start with stdio transport (default)\n      await server.start({\n        transportType: 'stdio',\n      });\n      log('📟 Server started with stdio transport');\n    }\n\n    log('✅ n8n MCP Server is ready!');\n  } catch (error) {\n    console.error('❌ Failed to start server:', error);\n    process.exit(1);\n  }\n}\n\n// Start the server\nstartServer();\n\n// Handle graceful shutdown\nprocess.on('SIGINT', () => {\n  console.error('Received SIGINT, shutting down gracefully...');\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  console.error('Received SIGTERM, shutting down gracefully...');\n  process.exit(0);\n});\n"],"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","ignoreList":[]}