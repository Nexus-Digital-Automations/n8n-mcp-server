{"version":3,"names":["cov_r9sl8ujhn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","detectTransportConfig","validateTransportConfig","getServerUrl","parseConfigFromEnv","zod_1","require","TransportConfigSchema","z","object","enum","default","sse","port","number","min","max","endpoint","string","host","cors","enabled","boolean","origins","array","credentials","healthCheck","optional","DEFAULT_CONFIGS","development","production","web","process","env","PORT","parseInt","CORS_ORIGINS","split","transportType","N8N_MCP_TRANSPORT","NODE_ENV","RAILWAY_ENVIRONMENT","VERCEL","RENDER","config","parse","protocol","ENV_CONFIG","TRANSPORT_TYPE","SSE_PORT","SSE_HOST","SSE_ENDPOINT","CORS_CREDENTIALS","HEALTH_CHECK_ENABLED","HEALTH_CHECK_ENDPOINT","hasAnySSEConfig","ssePortEnv"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/transportConfig.ts"],"sourcesContent":["/**\n * Transport Configuration for n8n MCP Server\n *\n * Provides transport type detection and configuration for different deployment scenarios.\n * Supports both stdio (local development) and SSE (remote/web access) transports.\n */\n\nimport { z } from 'zod';\n\n// Transport configuration schema\nexport const TransportConfigSchema = z.object({\n  type: z.enum(['stdio', 'sse']).default('stdio'),\n  sse: z\n    .object({\n      port: z.number().min(1024).max(65535).default(8080),\n      endpoint: z.string().default('/sse'),\n      host: z.string().default('localhost'),\n      cors: z\n        .object({\n          enabled: z.boolean().default(true),\n          origins: z.array(z.string()).default(['*']),\n          credentials: z.boolean().default(false),\n        })\n        .default({}),\n      healthCheck: z\n        .object({\n          enabled: z.boolean().default(true),\n          endpoint: z.string().default('/health'),\n        })\n        .default({}),\n    })\n    .optional(),\n});\n\nexport type TransportConfig = z.infer<typeof TransportConfigSchema>;\n\n/**\n * Default transport configurations for different environments\n */\nexport const DEFAULT_CONFIGS = {\n  development: {\n    type: 'stdio' as const,\n  },\n  production: {\n    type: 'sse' as const,\n    sse: {\n      port: 8080,\n      endpoint: '/sse',\n      host: '0.0.0.0',\n      cors: {\n        enabled: true,\n        origins: ['*'],\n        credentials: false,\n      },\n      healthCheck: {\n        enabled: true,\n        endpoint: '/health',\n      },\n    },\n  },\n  web: {\n    type: 'sse' as const,\n    sse: {\n      port: process.env.PORT ? parseInt(process.env.PORT) : 3000,\n      endpoint: '/sse',\n      host: '0.0.0.0',\n      cors: {\n        enabled: true,\n        origins: process.env.CORS_ORIGINS?.split(',') || ['*'],\n        credentials: true,\n      },\n      healthCheck: {\n        enabled: true,\n        endpoint: '/health',\n      },\n    },\n  },\n} as const;\n\n/**\n * Detect appropriate transport configuration based on environment\n */\nexport function detectTransportConfig(): TransportConfig {\n  // Check environment variables for explicit transport type\n  const transportType = process.env.N8N_MCP_TRANSPORT as 'stdio' | 'sse' | undefined;\n\n  if (transportType === 'sse') {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  if (transportType === 'stdio') {\n    return DEFAULT_CONFIGS.development;\n  }\n\n  // Auto-detect based on environment\n  if (process.env.NODE_ENV === 'production' || process.env.PORT) {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  // Check if running in a web environment (Railway, Vercel, etc.)\n  if (process.env.RAILWAY_ENVIRONMENT || process.env.VERCEL || process.env.RENDER) {\n    return DEFAULT_CONFIGS.web;\n  }\n\n  // Default to stdio for local development\n  return DEFAULT_CONFIGS.development;\n}\n\n/**\n * Validate and normalize transport configuration\n */\nexport function validateTransportConfig(config: unknown): TransportConfig {\n  return TransportConfigSchema.parse(config);\n}\n\n/**\n * Get SSE server URL from configuration\n */\nexport function getServerUrl(config: TransportConfig): string | null {\n  if (config.type !== 'sse' || !config.sse) {\n    return null;\n  }\n\n  const { host, port, endpoint } = config.sse;\n  const protocol = port === 443 ? 'https' : 'http';\n  return `${protocol}://${host}:${port}${endpoint}`;\n}\n\n/**\n * Environment variable configuration helpers\n */\nexport const ENV_CONFIG = {\n  // Transport type selection\n  TRANSPORT_TYPE: 'N8N_MCP_TRANSPORT', // 'stdio' | 'sse'\n\n  // SSE configuration\n  SSE_PORT: 'N8N_MCP_SSE_PORT',\n  SSE_HOST: 'N8N_MCP_SSE_HOST',\n  SSE_ENDPOINT: 'N8N_MCP_SSE_ENDPOINT',\n\n  // CORS configuration\n  CORS_ORIGINS: 'N8N_MCP_CORS_ORIGINS', // comma-separated list\n  CORS_CREDENTIALS: 'N8N_MCP_CORS_CREDENTIALS', // 'true' | 'false'\n\n  // Health check configuration\n  HEALTH_CHECK_ENABLED: 'N8N_MCP_HEALTH_CHECK_ENABLED',\n  HEALTH_CHECK_ENDPOINT: 'N8N_MCP_HEALTH_CHECK_ENDPOINT',\n} as const;\n\n/**\n * Parse transport configuration from environment variables\n */\nexport function parseConfigFromEnv(): Partial<TransportConfig> {\n  const config: Partial<TransportConfig> = {};\n\n  // Transport type\n  if (process.env[ENV_CONFIG.TRANSPORT_TYPE]) {\n    config.type = process.env[ENV_CONFIG.TRANSPORT_TYPE] as 'stdio' | 'sse';\n  }\n\n  // SSE configuration - create if any SSE-related environment variables are set\n  const hasAnySSEConfig =\n    ENV_CONFIG.SSE_PORT in process.env ||\n    ENV_CONFIG.SSE_HOST in process.env ||\n    ENV_CONFIG.SSE_ENDPOINT in process.env ||\n    ENV_CONFIG.CORS_ORIGINS in process.env ||\n    ENV_CONFIG.CORS_CREDENTIALS in process.env ||\n    ENV_CONFIG.HEALTH_CHECK_ENABLED in process.env ||\n    ENV_CONFIG.HEALTH_CHECK_ENDPOINT in process.env;\n\n  if (config.type === 'sse' || hasAnySSEConfig) {\n    const ssePortEnv = process.env[ENV_CONFIG.SSE_PORT];\n    config.sse = {\n      port: ssePortEnv ? parseInt(ssePortEnv) : 8080,\n      host: process.env[ENV_CONFIG.SSE_HOST] || 'localhost',\n      endpoint: process.env[ENV_CONFIG.SSE_ENDPOINT] || '/sse',\n      cors: {\n        enabled: process.env[ENV_CONFIG.CORS_ORIGINS] !== undefined,\n        origins: process.env[ENV_CONFIG.CORS_ORIGINS]?.split(',') ?? ['*'],\n        credentials: process.env[ENV_CONFIG.CORS_CREDENTIALS] === 'true',\n      },\n      healthCheck: {\n        enabled: process.env[ENV_CONFIG.HEALTH_CHECK_ENABLED] !== 'false',\n        endpoint: process.env[ENV_CONFIG.HEALTH_CHECK_ENDPOINT] || '/health',\n      },\n    };\n  }\n\n  return config;\n}\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}