3e1a8a47f30579aa3cfa2f4530515176
"use strict";

/* istanbul ignore next */
function cov_16n10e6e1o() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/nodeGenerator.ts";
  var hash = "2b1e7a93c41ce3c08490900769e34124185f01d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/nodeGenerator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "3": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "4": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 65
        }
      },
      "5": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "6": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "7": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "8": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 35,
          column: 14
        }
      },
      "9": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "10": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 80
        }
      },
      "11": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 86
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "13": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 29
        }
      },
      "14": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "15": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "16": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "17": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 122
        }
      },
      "18": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "19": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "20": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "21": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 61
        }
      },
      "22": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "23": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 65
        }
      },
      "24": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 26
        }
      },
      "25": {
        start: {
          line: 102,
          column: 27
        },
        end: {
          line: 102,
          column: 50
        }
      },
      "26": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "27": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "28": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 117,
          column: 14
        }
      },
      "29": {
        start: {
          line: 110,
          column: 50
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "30": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "31": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "32": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "33": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 45
        }
      },
      "34": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 53
        }
      },
      "35": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "36": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 76
        }
      },
      "37": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 44
        }
      },
      "38": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "39": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "40": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 62
        }
      },
      "41": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "42": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 62
        }
      },
      "43": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "44": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 65
        }
      },
      "45": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "46": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 163,
          column: 22
        }
      },
      "47": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "48": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 169,
          column: 22
        }
      },
      "49": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 22
        }
      },
      "50": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "51": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "52": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 22
        }
      },
      "53": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "54": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 185,
          column: 18
        }
      },
      "55": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "56": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 188,
          column: 94
        }
      },
      "57": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 22
        }
      },
      "58": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 39
        }
      },
      "59": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 18
        }
      },
      "60": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "61": {
        start: {
          line: 197,
          column: 38
        },
        end: {
          line: 197,
          column: 67
        }
      },
      "62": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "63": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 200,
          column: 106
        }
      },
      "64": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "65": {
        start: {
          line: 211,
          column: 19
        },
        end: {
          line: 215,
          column: 34
        }
      },
      "66": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 70
        }
      },
      "67": {
        start: {
          line: 217,
          column: 50
        },
        end: {
          line: 217,
          column: 68
        }
      },
      "68": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "69": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 78
        }
      },
      "70": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 20
        }
      },
      "71": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 101
        }
      },
      "72": {
        start: {
          line: 228,
          column: 82
        },
        end: {
          line: 228,
          column: 100
        }
      },
      "73": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "74": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "75": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 27
        }
      },
      "76": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "77": {
        start: {
          line: 238,
          column: 72
        },
        end: {
          line: 238,
          column: 90
        }
      },
      "78": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "79": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 92
        }
      },
      "80": {
        start: {
          line: 245,
          column: 72
        },
        end: {
          line: 245,
          column: 90
        }
      },
      "81": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 29
        }
      },
      "82": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "83": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "84": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 291,
          column: 10
        }
      },
      "85": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 308,
          column: 10
        }
      },
      "86": {
        start: {
          line: 314,
          column: 23
        },
        end: {
          line: 314,
          column: 25
        }
      },
      "87": {
        start: {
          line: 315,
          column: 25
        },
        end: {
          line: 315,
          column: 27
        }
      },
      "88": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "89": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 80
        }
      },
      "90": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "91": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 87
        }
      },
      "92": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "93": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 111
        }
      },
      "94": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "95": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 65
        }
      },
      "96": {
        start: {
          line: 331,
          column: 30
        },
        end: {
          line: 331,
          column: 39
        }
      },
      "97": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "98": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "99": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 69
        }
      },
      "100": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 41
        }
      },
      "101": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "102": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 67
        }
      },
      "103": {
        start: {
          line: 343,
          column: 30
        },
        end: {
          line: 343,
          column: 68
        }
      },
      "104": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "105": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 119
        }
      },
      "106": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 351,
          column: 10
        }
      },
      "107": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 54
        }
      },
      "108": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 77
        }
      },
      "109": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 382,
          column: 10
        }
      },
      "110": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 385,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 76
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 40
          },
          end: {
            line: 110,
            column: 41
          }
        },
        loc: {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 113,
            column: 17
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 139
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 44
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 146
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 39
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 209
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 217,
            column: 37
          },
          end: {
            line: 217,
            column: 38
          }
        },
        loc: {
          start: {
            line: 217,
            column: 50
          },
          end: {
            line: 217,
            column: 68
          }
        },
        line: 217
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 42
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 227
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 228,
            column: 74
          },
          end: {
            line: 228,
            column: 75
          }
        },
        loc: {
          start: {
            line: 228,
            column: 82
          },
          end: {
            line: 228,
            column: 100
          }
        },
        line: 228
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 33
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 237
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 238,
            column: 64
          },
          end: {
            line: 238,
            column: 65
          }
        },
        loc: {
          start: {
            line: 238,
            column: 72
          },
          end: {
            line: 238,
            column: 90
          }
        },
        line: 238
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 28
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 243
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 245,
            column: 64
          },
          end: {
            line: 245,
            column: 65
          }
        },
        loc: {
          start: {
            line: 245,
            column: 72
          },
          end: {
            line: 245,
            column: 90
          }
        },
        line: 245
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 33
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 252
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 260
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 279
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 35
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 296
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 43
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 313
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        loc: {
          start: {
            line: 356,
            column: 35
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 356
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 27
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 364
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 27
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 370
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 32,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 32,
            column: 67
          }
        }, {
          start: {
            line: 32,
            column: 70
          },
          end: {
            line: 32,
            column: 79
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 50
          },
          end: {
            line: 40,
            column: 63
          }
        }, {
          start: {
            line: 40,
            column: 66
          },
          end: {
            line: 40,
            column: 104
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 18
          },
          end: {
            line: 53,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 18
          },
          end: {
            line: 53,
            column: 36
          }
        }, {
          start: {
            line: 53,
            column: 40
          },
          end: {
            line: 53,
            column: 70
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 38
          }
        }, {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 54,
            column: 73
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 69,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 18
          },
          end: {
            line: 68,
            column: 17
          }
        }, {
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 27
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 82
          },
          end: {
            line: 84,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 82
          },
          end: {
            line: 84,
            column: 107
          }
        }, {
          start: {
            line: 84,
            column: 111
          },
          end: {
            line: 84,
            column: 113
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 22
          }
        }, {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 105,
            column: 47
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 55
          },
          end: {
            line: 114,
            column: 68
          }
        }, {
          start: {
            line: 114,
            column: 71
          },
          end: {
            line: 114,
            column: 84
          }
        }],
        line: 114
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 42
          }
        }, {
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 140,
            column: 76
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 31
          }
        }, {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 141,
            column: 43
          }
        }],
        line: 141
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 171,
            column: 22
          }
        }, {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 26
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 22
          }
        }, {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 190,
            column: 22
          }
        }, {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 203,
            column: 22
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "18": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "19": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "20": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "21": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 35
          }
        }, {
          start: {
            line: 158,
            column: 39
          },
          end: {
            line: 158,
            column: 54
          }
        }],
        line: 158
      },
      "22": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "23": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "24": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 47
          }
        }, {
          start: {
            line: 174,
            column: 51
          },
          end: {
            line: 174,
            column: 78
          }
        }],
        line: 174
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 47
          }
        }, {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 53
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "28": {
        loc: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 201,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 201,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "29": {
        loc: {
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 200,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 200,
            column: 51
          }
        }, {
          start: {
            line: 200,
            column: 55
          },
          end: {
            line: 200,
            column: 57
          }
        }],
        line: 200
      },
      "30": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "31": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "32": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "33": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "34": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 317,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 317,
            column: 39
          }
        }, {
          start: {
            line: 317,
            column: 43
          },
          end: {
            line: 317,
            column: 80
          }
        }],
        line: 317
      },
      "35": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "36": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 320,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 320,
            column: 32
          }
        }, {
          start: {
            line: 320,
            column: 36
          },
          end: {
            line: 320,
            column: 87
          }
        }],
        line: 320
      },
      "37": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "38": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 323,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 323,
            column: 39
          }
        }, {
          start: {
            line: 323,
            column: 43
          },
          end: {
            line: 323,
            column: 81
          }
        }],
        line: 323
      },
      "39": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "40": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 38
          }
        }, {
          start: {
            line: 327,
            column: 42
          },
          end: {
            line: 327,
            column: 80
          }
        }],
        line: 327
      },
      "41": {
        loc: {
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 332,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 332,
            column: 52
          }
        }, {
          start: {
            line: 332,
            column: 56
          },
          end: {
            line: 332,
            column: 58
          }
        }],
        line: 332
      },
      "42": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "43": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "44": {
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 63
          }
        }, {
          start: {
            line: 343,
            column: 67
          },
          end: {
            line: 343,
            column: 68
          }
        }],
        line: 343
      },
      "45": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/nodeGenerator.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/utils/nodeGenerator.ts"],
      sourcesContent: ["import {\n  MCPTool,\n  MCPToolProperty,\n  N8nNodeTypeDescription,\n  N8nNodeProperty,\n  N8nPropertyType,\n  MCPConversionConfig,\n  ConversionResult,\n  ConversionContext,\n} from '../types/mcpTypes.js';\n\nexport class N8nNodeGenerator {\n  private readonly defaultConfig: MCPConversionConfig = {\n    nodeNamePrefix: 'MCP',\n    defaultIcon: 'fa:cog',\n    defaultGroup: ['transform'],\n    credentialName: 'mcpServerApi',\n    enableBinaryData: true,\n    enableResourceAccess: true,\n    typeMapping: {\n      string: 'string',\n      number: 'number',\n      integer: 'number',\n      boolean: 'boolean',\n      array: 'json',\n      object: 'json',\n    },\n  };\n\n  /**\n   * Generate n8n node definition from MCP tool\n   */\n  generateNodeDefinition(context: ConversionContext): ConversionResult {\n    const { tool, config } = context;\n    const mergedConfig = { ...this.defaultConfig, ...config };\n\n    try {\n      const nodeDefinition = this.createNodeDefinition(tool, mergedConfig);\n      const validation = this.validateNodeDefinition(nodeDefinition);\n\n      return {\n        success: validation.success,\n        nodeDefinition: validation.success ? nodeDefinition : undefined,\n        errors: validation.errors,\n        warnings: validation.warnings,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        errors: [error instanceof Error ? error.message : 'Unknown error during node generation'],\n      };\n    }\n  }\n\n  /**\n   * Create the complete n8n node definition\n   */\n  private createNodeDefinition(tool: MCPTool, config: MCPConversionConfig): N8nNodeTypeDescription {\n    const nodeName = this.generateNodeName(tool.name, config.nodeNamePrefix);\n    const displayName = this.generateDisplayName(tool.name, config.nodeNamePrefix);\n\n    return {\n      displayName,\n      name: nodeName,\n      icon: config.defaultIcon || this.defaultConfig.defaultIcon!,\n      group: config.defaultGroup || this.defaultConfig.defaultGroup!,\n      version: [1],\n      description: tool.description,\n      defaults: {\n        name: displayName,\n      },\n      inputs: ['main'],\n      outputs: ['main'],\n      credentials: config.credentialName\n        ? [\n            {\n              name: config.credentialName,\n              required: true,\n            },\n          ]\n        : undefined,\n      properties: this.generateNodeProperties(tool, config),\n    };\n  }\n\n  /**\n   * Generate node properties from MCP tool schema\n   */\n  private generateNodeProperties(tool: MCPTool, config: MCPConversionConfig): N8nNodeProperty[] {\n    const properties: N8nNodeProperty[] = [];\n\n    // Add operation selector if there are multiple operations\n    if (this.hasMultipleOperations(tool)) {\n      properties.push(this.createOperationProperty());\n    }\n\n    // Convert MCP tool parameters to n8n properties\n    for (const [paramName, paramDef] of Object.entries(tool.inputSchema.properties)) {\n      const property = this.convertParameterToProperty(\n        paramName,\n        paramDef,\n        tool.inputSchema.required || [],\n        config\n      );\n      if (property) {\n        properties.push(property);\n      }\n    }\n\n    // Add additional options\n    if (config.enableBinaryData) {\n      properties.push(this.createBinaryDataProperty());\n    }\n\n    if (config.enableResourceAccess) {\n      properties.push(this.createResourceAccessProperty());\n    }\n\n    return properties;\n  }\n\n  /**\n   * Convert MCP parameter to n8n property\n   */\n  private convertParameterToProperty(\n    name: string,\n    param: MCPToolProperty,\n    required: string[],\n    config: MCPConversionConfig\n  ): N8nNodeProperty | null {\n    const isRequired = required.includes(name);\n    const displayName = this.formatDisplayName(name);\n\n    // Handle enum types as options\n    if (param.enum && param.enum.length > 0) {\n      return {\n        displayName,\n        name,\n        type: 'options',\n        options: param.enum.map(value => ({\n          name: this.formatOptionName(value),\n          value,\n        })),\n        default: param.default !== undefined ? param.default : param.enum[0],\n        description: param.description,\n        required: isRequired,\n      };\n    }\n\n    // Map MCP types to n8n types\n    const n8nType = this.mapMCPTypeToN8N(param.type, config);\n\n    const property: N8nNodeProperty = {\n      displayName,\n      name,\n      type: n8nType,\n      description: param.description,\n      required: isRequired,\n    };\n\n    // Add default value if provided\n    if (param.default !== undefined) {\n      property.default = param.default;\n    }\n\n    // Add type-specific options\n    this.addTypeSpecificOptions(property, param);\n\n    return property;\n  }\n\n  /**\n   * Map MCP property type to n8n property type\n   */\n  private mapMCPTypeToN8N(\n    mcpType: MCPToolProperty['type'],\n    config: MCPConversionConfig\n  ): N8nPropertyType {\n    const mapping = config.typeMapping || this.defaultConfig.typeMapping!;\n    return (mapping[mcpType] as N8nPropertyType) || 'string';\n  }\n\n  /**\n   * Add type-specific options to n8n property\n   */\n  private addTypeSpecificOptions(property: N8nNodeProperty, param: MCPToolProperty): void {\n    switch (param.type) {\n      case 'string':\n        if (param.format === 'password') {\n          property.typeOptions = { password: true };\n        }\n        if (param.format === 'email') {\n          property.placeholder = 'user@example.com';\n        }\n        if (param.format === 'uri') {\n          property.placeholder = 'https://example.com';\n        }\n        if (param.minLength || param.maxLength) {\n          property.typeOptions = {\n            ...property.typeOptions,\n            minLength: param.minLength,\n            maxLength: param.maxLength,\n          };\n        }\n        if (param.pattern) {\n          property.typeOptions = {\n            ...property.typeOptions,\n            pattern: param.pattern,\n          };\n        }\n        break;\n\n      case 'number':\n      case 'integer':\n        if (param.minimum !== undefined || param.maximum !== undefined) {\n          property.typeOptions = {\n            minValue: param.minimum,\n            maxValue: param.maximum,\n          };\n        }\n        break;\n\n      case 'array':\n        property.type = 'json';\n        property.typeOptions = {\n          rows: 4,\n        };\n        if (param.items) {\n          property.description =\n            `${property.description || ''} (Array of ${param.items.type})`.trim();\n        }\n        break;\n\n      case 'object':\n        property.type = 'json';\n        property.typeOptions = {\n          rows: 6,\n        };\n        if (param.properties) {\n          const propNames = Object.keys(param.properties);\n          if (propNames.length <= 3) {\n            property.description =\n              `${property.description || ''} (Object with: ${propNames.join(', ')})`.trim();\n          }\n        }\n        break;\n    }\n  }\n\n  /**\n   * Generate valid n8n node name\n   */\n  private generateNodeName(toolName: string, prefix?: string): string {\n    // Convert to camelCase and ensure valid identifier\n    let name = toolName\n      .replace(/[^a-zA-Z0-9_-]/g, '_')\n      .replace(/^[0-9]/, 'n$&')\n      .replace(/_+/g, '_')\n      .replace(/^_|_$/g, '');\n\n    // Convert to camelCase\n    name = name.replace(/_(.)/g, (_, char) => char.toUpperCase());\n\n    // Add prefix if provided\n    if (prefix) {\n      name = `${prefix}${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n    }\n\n    return name;\n  }\n\n  /**\n   * Generate display name for node\n   */\n  private generateDisplayName(toolName: string, prefix?: string): string {\n    let displayName = toolName.replace(/[_-]/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\n\n    if (prefix) {\n      displayName = `${prefix} ${displayName}`;\n    }\n\n    return displayName;\n  }\n\n  /**\n   * Format parameter name for display\n   */\n  private formatDisplayName(paramName: string): string {\n    return paramName.replace(/[_-]/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\n  }\n\n  /**\n   * Format option name for display\n   */\n  private formatOptionName(value: unknown): string {\n    if (typeof value === 'string') {\n      return value.replace(/[_-]/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\n    }\n    return String(value);\n  }\n\n  /**\n   * Check if tool has multiple operations (placeholder for future enhancement)\n   */\n  private hasMultipleOperations(_tool: MCPTool): boolean {\n    // For now, assume single operation per tool\n    // In future versions, this could be enhanced to detect operation patterns\n    return false;\n  }\n\n  /**\n   * Create operation selection property\n   */\n  private createOperationProperty(): N8nNodeProperty {\n    return {\n      displayName: 'Operation',\n      name: 'operation',\n      type: 'options',\n      options: [\n        {\n          name: 'Execute',\n          value: 'execute',\n        },\n      ],\n      default: 'execute',\n      description: 'The operation to perform',\n      required: true,\n    };\n  }\n\n  /**\n   * Create binary data handling property\n   */\n  private createBinaryDataProperty(): N8nNodeProperty {\n    return {\n      displayName: 'Binary Data',\n      name: 'binaryData',\n      type: 'boolean',\n      default: false,\n      description: 'Whether to handle binary data in the response',\n      displayOptions: {\n        show: {\n          operation: ['execute'],\n        },\n      },\n    };\n  }\n\n  /**\n   * Create resource access property\n   */\n  private createResourceAccessProperty(): N8nNodeProperty {\n    return {\n      displayName: 'Enable Resource Access',\n      name: 'enableResources',\n      type: 'boolean',\n      default: false,\n      description: 'Allow the tool to access MCP server resources',\n      displayOptions: {\n        show: {\n          operation: ['execute'],\n        },\n      },\n    };\n  }\n\n  /**\n   * Validate generated node definition\n   */\n  private validateNodeDefinition(nodeDefinition: N8nNodeTypeDescription): ConversionResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate required fields\n    if (!nodeDefinition.displayName || nodeDefinition.displayName.length < 3) {\n      errors.push('Node display name must be at least 3 characters long');\n    }\n\n    if (!nodeDefinition.name || !/^[a-zA-Z][a-zA-Z0-9]*$/.test(nodeDefinition.name)) {\n      errors.push('Node name must be a valid identifier starting with a letter');\n    }\n\n    if (!nodeDefinition.description || nodeDefinition.description.length < 10) {\n      warnings.push(\n        'Node description should be at least 10 characters long for better user experience'\n      );\n    }\n\n    // Validate properties\n    if (!nodeDefinition.properties || nodeDefinition.properties.length === 0) {\n      warnings.push('Node has no configurable properties');\n    }\n\n    // Check for property name conflicts\n    const propertyNames = new Set<string>();\n    for (const prop of nodeDefinition.properties || []) {\n      if (propertyNames.has(prop.name)) {\n        errors.push(`Duplicate property name: ${prop.name}`);\n      }\n      propertyNames.add(prop.name);\n\n      // Validate property names\n      if (!/^[a-zA-Z][a-zA-Z0-9_]*$/.test(prop.name)) {\n        errors.push(`Invalid property name: ${prop.name}`);\n      }\n    }\n\n    // Check complexity\n    const propertyCount = nodeDefinition.properties?.length || 0;\n    if (propertyCount > 20) {\n      warnings.push(\n        `Node has ${propertyCount} properties. Consider grouping related properties for better UX.`\n      );\n    }\n\n    return {\n      success: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Generate multiple node definitions for complex tools\n   */\n  generateMultipleNodes(context: ConversionContext): ConversionResult[] {\n    // For complex tools, this could split operations into multiple nodes\n    // For now, return single node generation\n    return [this.generateNodeDefinition(context)];\n  }\n\n  /**\n   * Get supported MCP types\n   */\n  getSupportedMCPTypes(): MCPToolProperty['type'][] {\n    return ['string', 'number', 'integer', 'boolean', 'array', 'object'];\n  }\n\n  /**\n   * Get available n8n property types\n   */\n  getAvailableN8nTypes(): N8nPropertyType[] {\n    return [\n      'string',\n      'number',\n      'boolean',\n      'options',\n      'multiOptions',\n      'json',\n      'dateTime',\n      'collection',\n      'fixedCollection',\n      'resourceLocator',\n    ];\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b1e7a93c41ce3c08490900769e34124185f01d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16n10e6e1o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16n10e6e1o();
cov_16n10e6e1o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_16n10e6e1o().s[1]++;
exports.N8nNodeGenerator = void 0;
class N8nNodeGenerator {
  defaultConfig =
  /* istanbul ignore next */
  (cov_16n10e6e1o().s[2]++, {
    nodeNamePrefix: 'MCP',
    defaultIcon: 'fa:cog',
    defaultGroup: ['transform'],
    credentialName: 'mcpServerApi',
    enableBinaryData: true,
    enableResourceAccess: true,
    typeMapping: {
      string: 'string',
      number: 'number',
      integer: 'number',
      boolean: 'boolean',
      array: 'json',
      object: 'json'
    }
  });
  /**
   * Generate n8n node definition from MCP tool
   */
  generateNodeDefinition(context) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[0]++;
    const {
      tool,
      config
    } =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[3]++, context);
    const mergedConfig =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[4]++, {
      ...this.defaultConfig,
      ...config
    });
    /* istanbul ignore next */
    cov_16n10e6e1o().s[5]++;
    try {
      const nodeDefinition =
      /* istanbul ignore next */
      (cov_16n10e6e1o().s[6]++, this.createNodeDefinition(tool, mergedConfig));
      const validation =
      /* istanbul ignore next */
      (cov_16n10e6e1o().s[7]++, this.validateNodeDefinition(nodeDefinition));
      /* istanbul ignore next */
      cov_16n10e6e1o().s[8]++;
      return {
        success: validation.success,
        nodeDefinition: validation.success ?
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[0][0]++, nodeDefinition) :
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[0][1]++, undefined),
        errors: validation.errors,
        warnings: validation.warnings
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_16n10e6e1o().s[9]++;
      return {
        success: false,
        errors: [error instanceof Error ?
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[1][0]++, error.message) :
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[1][1]++, 'Unknown error during node generation')]
      };
    }
  }
  /**
   * Create the complete n8n node definition
   */
  createNodeDefinition(tool, config) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[1]++;
    const nodeName =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[10]++, this.generateNodeName(tool.name, config.nodeNamePrefix));
    const displayName =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[11]++, this.generateDisplayName(tool.name, config.nodeNamePrefix));
    /* istanbul ignore next */
    cov_16n10e6e1o().s[12]++;
    return {
      displayName,
      name: nodeName,
      icon:
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[2][0]++, config.defaultIcon) ||
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[2][1]++, this.defaultConfig.defaultIcon),
      group:
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[3][0]++, config.defaultGroup) ||
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[3][1]++, this.defaultConfig.defaultGroup),
      version: [1],
      description: tool.description,
      defaults: {
        name: displayName
      },
      inputs: ['main'],
      outputs: ['main'],
      credentials: config.credentialName ?
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[4][0]++, [{
        name: config.credentialName,
        required: true
      }]) :
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[4][1]++, undefined),
      properties: this.generateNodeProperties(tool, config)
    };
  }
  /**
   * Generate node properties from MCP tool schema
   */
  generateNodeProperties(tool, config) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[2]++;
    const properties =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[13]++, []);
    // Add operation selector if there are multiple operations
    /* istanbul ignore next */
    cov_16n10e6e1o().s[14]++;
    if (this.hasMultipleOperations(tool)) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[5][0]++;
      cov_16n10e6e1o().s[15]++;
      properties.push(this.createOperationProperty());
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[5][1]++;
    }
    // Convert MCP tool parameters to n8n properties
    cov_16n10e6e1o().s[16]++;
    for (const [paramName, paramDef] of Object.entries(tool.inputSchema.properties)) {
      const property =
      /* istanbul ignore next */
      (cov_16n10e6e1o().s[17]++, this.convertParameterToProperty(paramName, paramDef,
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[6][0]++, tool.inputSchema.required) ||
      /* istanbul ignore next */
      (cov_16n10e6e1o().b[6][1]++, []), config));
      /* istanbul ignore next */
      cov_16n10e6e1o().s[18]++;
      if (property) {
        /* istanbul ignore next */
        cov_16n10e6e1o().b[7][0]++;
        cov_16n10e6e1o().s[19]++;
        properties.push(property);
      } else
      /* istanbul ignore next */
      {
        cov_16n10e6e1o().b[7][1]++;
      }
    }
    // Add additional options
    /* istanbul ignore next */
    cov_16n10e6e1o().s[20]++;
    if (config.enableBinaryData) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[8][0]++;
      cov_16n10e6e1o().s[21]++;
      properties.push(this.createBinaryDataProperty());
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[8][1]++;
    }
    cov_16n10e6e1o().s[22]++;
    if (config.enableResourceAccess) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[9][0]++;
      cov_16n10e6e1o().s[23]++;
      properties.push(this.createResourceAccessProperty());
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[9][1]++;
    }
    cov_16n10e6e1o().s[24]++;
    return properties;
  }
  /**
   * Convert MCP parameter to n8n property
   */
  convertParameterToProperty(name, param, required, config) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[3]++;
    const isRequired =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[25]++, required.includes(name));
    const displayName =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[26]++, this.formatDisplayName(name));
    // Handle enum types as options
    /* istanbul ignore next */
    cov_16n10e6e1o().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[11][0]++, param.enum) &&
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[11][1]++, param.enum.length > 0)) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[10][0]++;
      cov_16n10e6e1o().s[28]++;
      return {
        displayName,
        name,
        type: 'options',
        options: param.enum.map(value => {
          /* istanbul ignore next */
          cov_16n10e6e1o().f[4]++;
          cov_16n10e6e1o().s[29]++;
          return {
            name: this.formatOptionName(value),
            value
          };
        }),
        default: param.default !== undefined ?
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[12][0]++, param.default) :
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[12][1]++, param.enum[0]),
        description: param.description,
        required: isRequired
      };
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[10][1]++;
    }
    // Map MCP types to n8n types
    const n8nType =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[30]++, this.mapMCPTypeToN8N(param.type, config));
    const property =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[31]++, {
      displayName,
      name,
      type: n8nType,
      description: param.description,
      required: isRequired
    });
    // Add default value if provided
    /* istanbul ignore next */
    cov_16n10e6e1o().s[32]++;
    if (param.default !== undefined) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[13][0]++;
      cov_16n10e6e1o().s[33]++;
      property.default = param.default;
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[13][1]++;
    }
    // Add type-specific options
    cov_16n10e6e1o().s[34]++;
    this.addTypeSpecificOptions(property, param);
    /* istanbul ignore next */
    cov_16n10e6e1o().s[35]++;
    return property;
  }
  /**
   * Map MCP property type to n8n property type
   */
  mapMCPTypeToN8N(mcpType, config) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[5]++;
    const mapping =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[36]++,
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[14][0]++, config.typeMapping) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[14][1]++, this.defaultConfig.typeMapping));
    /* istanbul ignore next */
    cov_16n10e6e1o().s[37]++;
    return /* istanbul ignore next */(cov_16n10e6e1o().b[15][0]++, mapping[mcpType]) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[15][1]++, 'string');
  }
  /**
   * Add type-specific options to n8n property
   */
  addTypeSpecificOptions(property, param) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[6]++;
    cov_16n10e6e1o().s[38]++;
    switch (param.type) {
      case 'string':
        /* istanbul ignore next */
        cov_16n10e6e1o().b[16][0]++;
        cov_16n10e6e1o().s[39]++;
        if (param.format === 'password') {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[17][0]++;
          cov_16n10e6e1o().s[40]++;
          property.typeOptions = {
            password: true
          };
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[17][1]++;
        }
        cov_16n10e6e1o().s[41]++;
        if (param.format === 'email') {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[18][0]++;
          cov_16n10e6e1o().s[42]++;
          property.placeholder = 'user@example.com';
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[18][1]++;
        }
        cov_16n10e6e1o().s[43]++;
        if (param.format === 'uri') {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[19][0]++;
          cov_16n10e6e1o().s[44]++;
          property.placeholder = 'https://example.com';
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[19][1]++;
        }
        cov_16n10e6e1o().s[45]++;
        if (
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[21][0]++, param.minLength) ||
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[21][1]++, param.maxLength)) {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[20][0]++;
          cov_16n10e6e1o().s[46]++;
          property.typeOptions = {
            ...property.typeOptions,
            minLength: param.minLength,
            maxLength: param.maxLength
          };
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[20][1]++;
        }
        cov_16n10e6e1o().s[47]++;
        if (param.pattern) {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[22][0]++;
          cov_16n10e6e1o().s[48]++;
          property.typeOptions = {
            ...property.typeOptions,
            pattern: param.pattern
          };
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[22][1]++;
        }
        cov_16n10e6e1o().s[49]++;
        break;
      case 'number':
        /* istanbul ignore next */
        cov_16n10e6e1o().b[16][1]++;
      case 'integer':
        /* istanbul ignore next */
        cov_16n10e6e1o().b[16][2]++;
        cov_16n10e6e1o().s[50]++;
        if (
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[24][0]++, param.minimum !== undefined) ||
        /* istanbul ignore next */
        (cov_16n10e6e1o().b[24][1]++, param.maximum !== undefined)) {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[23][0]++;
          cov_16n10e6e1o().s[51]++;
          property.typeOptions = {
            minValue: param.minimum,
            maxValue: param.maximum
          };
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[23][1]++;
        }
        cov_16n10e6e1o().s[52]++;
        break;
      case 'array':
        /* istanbul ignore next */
        cov_16n10e6e1o().b[16][3]++;
        cov_16n10e6e1o().s[53]++;
        property.type = 'json';
        /* istanbul ignore next */
        cov_16n10e6e1o().s[54]++;
        property.typeOptions = {
          rows: 4
        };
        /* istanbul ignore next */
        cov_16n10e6e1o().s[55]++;
        if (param.items) {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[25][0]++;
          cov_16n10e6e1o().s[56]++;
          property.description = `${
          /* istanbul ignore next */
          (cov_16n10e6e1o().b[26][0]++, property.description) ||
          /* istanbul ignore next */
          (cov_16n10e6e1o().b[26][1]++, '')} (Array of ${param.items.type})`.trim();
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[25][1]++;
        }
        cov_16n10e6e1o().s[57]++;
        break;
      case 'object':
        /* istanbul ignore next */
        cov_16n10e6e1o().b[16][4]++;
        cov_16n10e6e1o().s[58]++;
        property.type = 'json';
        /* istanbul ignore next */
        cov_16n10e6e1o().s[59]++;
        property.typeOptions = {
          rows: 6
        };
        /* istanbul ignore next */
        cov_16n10e6e1o().s[60]++;
        if (param.properties) {
          /* istanbul ignore next */
          cov_16n10e6e1o().b[27][0]++;
          const propNames =
          /* istanbul ignore next */
          (cov_16n10e6e1o().s[61]++, Object.keys(param.properties));
          /* istanbul ignore next */
          cov_16n10e6e1o().s[62]++;
          if (propNames.length <= 3) {
            /* istanbul ignore next */
            cov_16n10e6e1o().b[28][0]++;
            cov_16n10e6e1o().s[63]++;
            property.description = `${
            /* istanbul ignore next */
            (cov_16n10e6e1o().b[29][0]++, property.description) ||
            /* istanbul ignore next */
            (cov_16n10e6e1o().b[29][1]++, '')} (Object with: ${propNames.join(', ')})`.trim();
          } else
          /* istanbul ignore next */
          {
            cov_16n10e6e1o().b[28][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_16n10e6e1o().b[27][1]++;
        }
        cov_16n10e6e1o().s[64]++;
        break;
    }
  }
  /**
   * Generate valid n8n node name
   */
  generateNodeName(toolName, prefix) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[7]++;
    // Convert to camelCase and ensure valid identifier
    let name =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[65]++, toolName.replace(/[^a-zA-Z0-9_-]/g, '_').replace(/^[0-9]/, 'n$&').replace(/_+/g, '_').replace(/^_|_$/g, ''));
    // Convert to camelCase
    /* istanbul ignore next */
    cov_16n10e6e1o().s[66]++;
    name = name.replace(/_(.)/g, (_, char) => {
      /* istanbul ignore next */
      cov_16n10e6e1o().f[8]++;
      cov_16n10e6e1o().s[67]++;
      return char.toUpperCase();
    });
    // Add prefix if provided
    /* istanbul ignore next */
    cov_16n10e6e1o().s[68]++;
    if (prefix) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[30][0]++;
      cov_16n10e6e1o().s[69]++;
      name = `${prefix}${name.charAt(0).toUpperCase()}${name.slice(1)}`;
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[30][1]++;
    }
    cov_16n10e6e1o().s[70]++;
    return name;
  }
  /**
   * Generate display name for node
   */
  generateDisplayName(toolName, prefix) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[9]++;
    let displayName =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[71]++, toolName.replace(/[_-]/g, ' ').replace(/\b\w/g, char => {
      /* istanbul ignore next */
      cov_16n10e6e1o().f[10]++;
      cov_16n10e6e1o().s[72]++;
      return char.toUpperCase();
    }));
    /* istanbul ignore next */
    cov_16n10e6e1o().s[73]++;
    if (prefix) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[31][0]++;
      cov_16n10e6e1o().s[74]++;
      displayName = `${prefix} ${displayName}`;
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[31][1]++;
    }
    cov_16n10e6e1o().s[75]++;
    return displayName;
  }
  /**
   * Format parameter name for display
   */
  formatDisplayName(paramName) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[11]++;
    cov_16n10e6e1o().s[76]++;
    return paramName.replace(/[_-]/g, ' ').replace(/\b\w/g, char => {
      /* istanbul ignore next */
      cov_16n10e6e1o().f[12]++;
      cov_16n10e6e1o().s[77]++;
      return char.toUpperCase();
    });
  }
  /**
   * Format option name for display
   */
  formatOptionName(value) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[13]++;
    cov_16n10e6e1o().s[78]++;
    if (typeof value === 'string') {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[32][0]++;
      cov_16n10e6e1o().s[79]++;
      return value.replace(/[_-]/g, ' ').replace(/\b\w/g, char => {
        /* istanbul ignore next */
        cov_16n10e6e1o().f[14]++;
        cov_16n10e6e1o().s[80]++;
        return char.toUpperCase();
      });
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[32][1]++;
    }
    cov_16n10e6e1o().s[81]++;
    return String(value);
  }
  /**
   * Check if tool has multiple operations (placeholder for future enhancement)
   */
  hasMultipleOperations(_tool) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[15]++;
    cov_16n10e6e1o().s[82]++;
    // For now, assume single operation per tool
    // In future versions, this could be enhanced to detect operation patterns
    return false;
  }
  /**
   * Create operation selection property
   */
  createOperationProperty() {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[16]++;
    cov_16n10e6e1o().s[83]++;
    return {
      displayName: 'Operation',
      name: 'operation',
      type: 'options',
      options: [{
        name: 'Execute',
        value: 'execute'
      }],
      default: 'execute',
      description: 'The operation to perform',
      required: true
    };
  }
  /**
   * Create binary data handling property
   */
  createBinaryDataProperty() {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[17]++;
    cov_16n10e6e1o().s[84]++;
    return {
      displayName: 'Binary Data',
      name: 'binaryData',
      type: 'boolean',
      default: false,
      description: 'Whether to handle binary data in the response',
      displayOptions: {
        show: {
          operation: ['execute']
        }
      }
    };
  }
  /**
   * Create resource access property
   */
  createResourceAccessProperty() {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[18]++;
    cov_16n10e6e1o().s[85]++;
    return {
      displayName: 'Enable Resource Access',
      name: 'enableResources',
      type: 'boolean',
      default: false,
      description: 'Allow the tool to access MCP server resources',
      displayOptions: {
        show: {
          operation: ['execute']
        }
      }
    };
  }
  /**
   * Validate generated node definition
   */
  validateNodeDefinition(nodeDefinition) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[19]++;
    const errors =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[86]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[87]++, []);
    // Validate required fields
    /* istanbul ignore next */
    cov_16n10e6e1o().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[34][0]++, !nodeDefinition.displayName) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[34][1]++, nodeDefinition.displayName.length < 3)) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[33][0]++;
      cov_16n10e6e1o().s[89]++;
      errors.push('Node display name must be at least 3 characters long');
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[33][1]++;
    }
    cov_16n10e6e1o().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[36][0]++, !nodeDefinition.name) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[36][1]++, !/^[a-zA-Z][a-zA-Z0-9]*$/.test(nodeDefinition.name))) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[35][0]++;
      cov_16n10e6e1o().s[91]++;
      errors.push('Node name must be a valid identifier starting with a letter');
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[35][1]++;
    }
    cov_16n10e6e1o().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[38][0]++, !nodeDefinition.description) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[38][1]++, nodeDefinition.description.length < 10)) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[37][0]++;
      cov_16n10e6e1o().s[93]++;
      warnings.push('Node description should be at least 10 characters long for better user experience');
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[37][1]++;
    }
    // Validate properties
    cov_16n10e6e1o().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[40][0]++, !nodeDefinition.properties) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[40][1]++, nodeDefinition.properties.length === 0)) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[39][0]++;
      cov_16n10e6e1o().s[95]++;
      warnings.push('Node has no configurable properties');
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[39][1]++;
    }
    // Check for property name conflicts
    const propertyNames =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[96]++, new Set());
    /* istanbul ignore next */
    cov_16n10e6e1o().s[97]++;
    for (const prop of
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[41][0]++, nodeDefinition.properties) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[41][1]++, [])) {
      /* istanbul ignore next */
      cov_16n10e6e1o().s[98]++;
      if (propertyNames.has(prop.name)) {
        /* istanbul ignore next */
        cov_16n10e6e1o().b[42][0]++;
        cov_16n10e6e1o().s[99]++;
        errors.push(`Duplicate property name: ${prop.name}`);
      } else
      /* istanbul ignore next */
      {
        cov_16n10e6e1o().b[42][1]++;
      }
      cov_16n10e6e1o().s[100]++;
      propertyNames.add(prop.name);
      // Validate property names
      /* istanbul ignore next */
      cov_16n10e6e1o().s[101]++;
      if (!/^[a-zA-Z][a-zA-Z0-9_]*$/.test(prop.name)) {
        /* istanbul ignore next */
        cov_16n10e6e1o().b[43][0]++;
        cov_16n10e6e1o().s[102]++;
        errors.push(`Invalid property name: ${prop.name}`);
      } else
      /* istanbul ignore next */
      {
        cov_16n10e6e1o().b[43][1]++;
      }
    }
    // Check complexity
    const propertyCount =
    /* istanbul ignore next */
    (cov_16n10e6e1o().s[103]++,
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[44][0]++, nodeDefinition.properties?.length) ||
    /* istanbul ignore next */
    (cov_16n10e6e1o().b[44][1]++, 0));
    /* istanbul ignore next */
    cov_16n10e6e1o().s[104]++;
    if (propertyCount > 20) {
      /* istanbul ignore next */
      cov_16n10e6e1o().b[45][0]++;
      cov_16n10e6e1o().s[105]++;
      warnings.push(`Node has ${propertyCount} properties. Consider grouping related properties for better UX.`);
    } else
    /* istanbul ignore next */
    {
      cov_16n10e6e1o().b[45][1]++;
    }
    cov_16n10e6e1o().s[106]++;
    return {
      success: errors.length === 0,
      errors,
      warnings
    };
  }
  /**
   * Generate multiple node definitions for complex tools
   */
  generateMultipleNodes(context) {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[20]++;
    cov_16n10e6e1o().s[107]++;
    // For complex tools, this could split operations into multiple nodes
    // For now, return single node generation
    return [this.generateNodeDefinition(context)];
  }
  /**
   * Get supported MCP types
   */
  getSupportedMCPTypes() {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[21]++;
    cov_16n10e6e1o().s[108]++;
    return ['string', 'number', 'integer', 'boolean', 'array', 'object'];
  }
  /**
   * Get available n8n property types
   */
  getAvailableN8nTypes() {
    /* istanbul ignore next */
    cov_16n10e6e1o().f[22]++;
    cov_16n10e6e1o().s[109]++;
    return ['string', 'number', 'boolean', 'options', 'multiOptions', 'json', 'dateTime', 'collection', 'fixedCollection', 'resourceLocator'];
  }
}
/* istanbul ignore next */
cov_16n10e6e1o().s[110]++;
exports.N8nNodeGenerator = N8nNodeGenerator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,