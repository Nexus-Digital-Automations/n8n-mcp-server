370c540e5563149aeaa0dce7c7e646af
/* istanbul ignore next */
function cov_17yms1qxbx() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts";
  var hash = "91418955aac3c7f3357f10f52b0de14e94e28bd2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "1": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 91
        }
      },
      "2": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "3": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "4": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "5": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "6": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 87
        }
      },
      "7": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "8": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 47,
          column: 21
        }
      },
      "9": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 70
        }
      },
      "10": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "11": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "12": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "13": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "14": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 28
        }
      },
      "15": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "16": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "17": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "18": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "19": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "20": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "21": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 66
        }
      },
      "22": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 23
        }
      },
      "23": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "24": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 81,
          column: 89
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "26": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 77
        }
      },
      "27": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "28": {
        start: {
          line: 91,
          column: 56
        },
        end: {
          line: 91,
          column: 87
        }
      },
      "29": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 19
        }
      },
      "30": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "31": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "32": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "33": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "34": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 66
        }
      },
      "35": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 23
        }
      },
      "36": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "37": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 96
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 80
        }
      },
      "40": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "41": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "42": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 126,
          column: 61
        }
      },
      "43": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 58
        }
      },
      "44": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 41
        }
      },
      "45": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "46": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 61
        }
      },
      "47": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 65
        }
      },
      "48": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 45
        }
      },
      "49": {
        start: {
          line: 146,
          column: 24
        },
        end: {
          line: 146,
          column: 45
        }
      },
      "50": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "51": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "52": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "53": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 45
        }
      },
      "54": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 182,
          column: 6
        }
      },
      "55": {
        start: {
          line: 175,
          column: 31
        },
        end: {
          line: 175,
          column: 47
        }
      },
      "56": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 180,
          column: 10
        }
      },
      "57": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 73
        }
      },
      "58": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 52
        }
      },
      "59": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 26
        }
      },
      "60": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 200,
          column: 6
        }
      },
      "61": {
        start: {
          line: 193,
          column: 31
        },
        end: {
          line: 193,
          column: 47
        }
      },
      "62": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "63": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 68
        }
      },
      "64": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 52
        }
      },
      "65": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 26
        }
      },
      "66": {
        start: {
          line: 205,
          column: 31
        },
        end: {
          line: 218,
          column: 1
        }
      },
      "67": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 231,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 16
          }
        },
        loc: {
          start: {
            line: 40,
            column: 34
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 45
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 52
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 46
          }
        },
        loc: {
          start: {
            line: 91,
            column: 56
          },
          end: {
            line: 91,
            column: 87
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 34
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 114
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 48
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 134
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        },
        loc: {
          start: {
            line: 135,
            column: 35
          },
          end: {
            line: 139,
            column: 9
          }
        },
        line: 135
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 33
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 144
      },
      "13": {
        name: "createAuthMiddleware",
        decl: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 36
          }
        },
        loc: {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 163
      },
      "14": {
        name: "requireAuth",
        decl: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 27
          }
        },
        loc: {
          start: {
            line: 173,
            column: 38
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 173
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 174,
            column: 12
          }
        },
        loc: {
          start: {
            line: 174,
            column: 54
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 28
          }
        },
        loc: {
          start: {
            line: 176,
            column: 52
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 176
      },
      "17": {
        name: "requirePermission",
        decl: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 33
          }
        },
        loc: {
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 191
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 192,
            column: 11
          },
          end: {
            line: 192,
            column: 12
          }
        },
        loc: {
          start: {
            line: 192,
            column: 54
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 192
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 194,
            column: 28
          }
        },
        loc: {
          start: {
            line: 194,
            column: 52
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 194
      },
      "20": {
        name: "parseAuthConfigFromEnv",
        decl: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 222,
            column: 38
          }
        },
        loc: {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 222
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 47,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 47,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 38
          }
        }, {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 116,
            column: 52
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 36
          }
        }, {
          start: {
            line: 117,
            column: 40
          },
          end: {
            line: 117,
            column: 42
          }
        }],
        line: 117
      },
      "15": {
        loc: {
          start: {
            line: 118,
            column: 22
          },
          end: {
            line: 118,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 22
          },
          end: {
            line: 118,
            column: 38
          }
        }, {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 118,
            column: 44
          }
        }],
        line: 118
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 19
          }
        }, {
          start: {
            line: 147,
            column: 23
          },
          end: {
            line: 147,
            column: 50
          }
        }, {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 69
          }
        }],
        line: 147
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 40
          }
        }, {
          start: {
            line: 150,
            column: 44
          },
          end: {
            line: 150,
            column: 46
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 151,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 151,
            column: 42
          }
        }, {
          start: {
            line: 151,
            column: 46
          },
          end: {
            line: 151,
            column: 48
          }
        }],
        line: 151
      },
      "20": {
        loc: {
          start: {
            line: 226,
            column: 21
          },
          end: {
            line: 226,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 21
          },
          end: {
            line: 226,
            column: 74
          }
        }, {
          start: {
            line: 226,
            column: 78
          },
          end: {
            line: 226,
            column: 87
          }
        }],
        line: 226
      },
      "21": {
        loc: {
          start: {
            line: 227,
            column: 25
          },
          end: {
            line: 227,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 25
          },
          end: {
            line: 227,
            column: 82
          }
        }, {
          start: {
            line: 227,
            column: 86
          },
          end: {
            line: 227,
            column: 95
          }
        }],
        line: 227
      },
      "22": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 60
          }
        }, {
          start: {
            line: 228,
            column: 64
          },
          end: {
            line: 228,
            column: 73
          }
        }],
        line: 228
      },
      "23": {
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 73
          }
        }, {
          start: {
            line: 229,
            column: 77
          },
          end: {
            line: 229,
            column: 86
          }
        }],
        line: 229
      },
      "24": {
        loc: {
          start: {
            line: 230,
            column: 27
          },
          end: {
            line: 230,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 27
          },
          end: {
            line: 230,
            column: 75
          }
        }, {
          start: {
            line: 230,
            column: 79
          },
          end: {
            line: 230,
            column: 88
          }
        }],
        line: 230
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/middleware.ts"],
      sourcesContent: ["/**\n * FastMCP Authentication Middleware\n *\n * Provides authentication middleware for FastMCP server integration.\n * Handles authentication checking and access control for tools and resources.\n */\n\nimport { FastMCP } from 'fastmcp';\nimport { AuthProvider, RequestContext } from './authProvider.js';\n\n/**\n * Authentication middleware configuration\n */\nexport interface AuthMiddlewareConfig {\n  /** Authentication provider to use */\n  authProvider: AuthProvider;\n\n  /** Whether to require authentication for all requests */\n  requireAuth?: boolean;\n\n  /** Tools that bypass authentication (always allowed) */\n  publicTools?: string[];\n\n  /** Resources that bypass authentication (always allowed) */\n  publicResources?: string[];\n\n  /** Custom authentication header name */\n  authHeader?: string;\n\n  /** Error message for authentication failures */\n  authErrorMessage?: string;\n\n  /** Error message for authorization failures */\n  authzErrorMessage?: string;\n}\n\n/**\n * Authentication middleware for FastMCP\n *\n * Integrates with FastMCP server to provide authentication and authorization\n * for tool access and resource access.\n */\nexport class FastMCPAuthMiddleware {\n  private config: Required<AuthMiddlewareConfig>;\n\n  constructor(config: AuthMiddlewareConfig) {\n    this.config = {\n      requireAuth: false,\n      publicTools: ['init-n8n', 'status'],\n      publicResources: [],\n      authHeader: 'authorization',\n      authErrorMessage: 'Authentication required',\n      authzErrorMessage: 'Access denied',\n      ...config,\n    };\n  }\n\n  /**\n   * Apply authentication middleware to FastMCP server\n   */\n  public apply(server: FastMCP): void {\n    // Note: Current FastMCP version doesn't have built-in authentication\n    // Authentication will be handled at the tool level through wrapper functions\n    console.log('\uD83D\uDD10 Authentication middleware configured (tool-level implementation)');\n\n    // Store reference for tool wrapping\n    (server as any)._authMiddleware = this;\n  }\n\n  /**\n   * Create authentication function for FastMCP\n   */\n  private createAuthenticateFunction() {\n    return async (request: any) => {\n      try {\n        const context = this.createRequestContext(request);\n        const authResult = await this.config.authProvider.authenticate(context);\n\n        if (!authResult.success) {\n          if (this.config.requireAuth) {\n            throw new Error(this.config.authErrorMessage);\n          }\n          // Allow anonymous access if auth not required\n          return null;\n        }\n\n        return authResult.user;\n      } catch (error) {\n        if (this.config.requireAuth) {\n          throw error;\n        }\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Check if tool access is allowed\n   */\n  public async checkToolAccess(toolName: string, context: RequestContext): Promise<void> {\n    // Public tools are always allowed\n    if (this.config.publicTools.includes(toolName)) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check tool access permissions\n    const hasAccess = await this.config.authProvider.canAccessTool(toolName, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${toolName}`);\n    }\n  }\n\n  /**\n   * Check if resource access is allowed\n   */\n  public async checkResourceAccess(resourceUri: string, context: RequestContext): Promise<void> {\n    // Public resources are always allowed\n    if (this.config.publicResources.some(pattern => resourceUri.startsWith(pattern))) {\n      return;\n    }\n\n    // Authenticate if not already done\n    if (!context.user) {\n      const authResult = await this.config.authProvider.authenticate(context);\n      if (!authResult.success) {\n        if (this.config.requireAuth) {\n          throw new Error(this.config.authErrorMessage);\n        }\n        return; // Allow anonymous access\n      }\n      context.user = authResult.user;\n    }\n\n    // Check resource access permissions\n    const hasAccess = await this.config.authProvider.canAccessResource(resourceUri, context);\n    if (!hasAccess) {\n      throw new Error(`${this.config.authzErrorMessage}: ${resourceUri}`);\n    }\n  }\n\n  /**\n   * Create request context from FastMCP request\n   */\n  private createRequestContext(request: any): RequestContext {\n    return {\n      clientId: request.clientId || request.id,\n      headers: request.headers || {},\n      metadata: request.metadata || {},\n    };\n  }\n\n  /**\n   * Wrap tool function with authentication\n   */\n  public wrapTool<T extends (...args: any[]) => any>(toolName: string, toolFunction: T): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkToolAccess(toolName, context);\n      return toolFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Wrap resource function with authentication\n   */\n  public wrapResource<T extends (...args: any[]) => any>(\n    resourceUri: string,\n    resourceFunction: T\n  ): T {\n    return (async (...args: any[]) => {\n      const context = this.extractContextFromArgs(args);\n      await this.checkResourceAccess(resourceUri, context);\n      return resourceFunction(...args);\n    }) as T;\n  }\n\n  /**\n   * Extract request context from function arguments\n   */\n  private extractContextFromArgs(args: any[]): RequestContext {\n    // Look for context in arguments (FastMCP typically passes context as last argument)\n    const lastArg = args[args.length - 1];\n    if (lastArg && typeof lastArg === 'object' && lastArg.session) {\n      return {\n        clientId: lastArg.session?.id,\n        headers: lastArg.headers || {},\n        metadata: lastArg.metadata || {},\n      };\n    }\n\n    return {\n      headers: {},\n      metadata: {},\n    };\n  }\n}\n\n/**\n * Create authentication middleware\n */\nexport function createAuthMiddleware(config: AuthMiddlewareConfig): FastMCPAuthMiddleware {\n  return new FastMCPAuthMiddleware(config);\n}\n\n/**\n * Authentication decorator for tools\n *\n * Usage:\n * @requireAuth('tool-name')\n * async function myTool() { ... }\n */\nexport function requireAuth(toolName: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`\uD83D\uDD12 Authentication check for tool: ${toolName}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Authorization decorator for tools with specific permissions\n *\n * Usage:\n * @requirePermission('workflows')\n * async function manageWorkflow() { ... }\n */\nexport function requirePermission(permission: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      // This would be implemented with actual middleware instance\n      console.log(`\uD83D\uDEE1\uFE0F  Permission check for: ${permission}`);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n * Environment variable configuration for authentication middleware\n */\nexport const AUTH_ENV_CONFIG = {\n  /** Whether authentication is required */\n  REQUIRE_AUTH: 'N8N_MCP_REQUIRE_AUTH',\n\n  /** Public tools (comma-separated) */\n  PUBLIC_TOOLS: 'N8N_MCP_PUBLIC_TOOLS',\n\n  /** Public resources (comma-separated) */\n  PUBLIC_RESOURCES: 'N8N_MCP_PUBLIC_RESOURCES',\n\n  /** Custom auth header name */\n  AUTH_HEADER: 'N8N_MCP_AUTH_HEADER',\n\n  /** Custom auth error message */\n  AUTH_ERROR_MESSAGE: 'N8N_MCP_AUTH_ERROR_MESSAGE',\n\n  /** Custom authz error message */\n  AUTHZ_ERROR_MESSAGE: 'N8N_MCP_AUTHZ_ERROR_MESSAGE',\n} as const;\n\n/**\n * Parse authentication middleware configuration from environment\n */\nexport function parseAuthConfigFromEnv(authProvider: AuthProvider): AuthMiddlewareConfig {\n  return {\n    authProvider,\n    requireAuth: process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] === 'true',\n    publicTools: process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS]?.split(',') || undefined,\n    publicResources: process.env[AUTH_ENV_CONFIG.PUBLIC_RESOURCES]?.split(',') || undefined,\n    authHeader: process.env[AUTH_ENV_CONFIG.AUTH_HEADER] || undefined,\n    authErrorMessage: process.env[AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE] || undefined,\n    authzErrorMessage: process.env[AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE] || undefined,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "91418955aac3c7f3357f10f52b0de14e94e28bd2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17yms1qxbx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17yms1qxbx();
/**
 * FastMCP Authentication Middleware
 *
 * Provides authentication middleware for FastMCP server integration.
 * Handles authentication checking and access control for tools and resources.
 */
/**
 * Authentication middleware for FastMCP
 *
 * Integrates with FastMCP server to provide authentication and authorization
 * for tool access and resource access.
 */
export class FastMCPAuthMiddleware {
  config;
  constructor(config) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[0]++;
    cov_17yms1qxbx().s[0]++;
    this.config = {
      requireAuth: false,
      publicTools: ['init-n8n', 'status'],
      publicResources: [],
      authHeader: 'authorization',
      authErrorMessage: 'Authentication required',
      authzErrorMessage: 'Access denied',
      ...config
    };
  }
  /**
   * Apply authentication middleware to FastMCP server
   */
  apply(server) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[1]++;
    cov_17yms1qxbx().s[1]++;
    // Note: Current FastMCP version doesn't have built-in authentication
    // Authentication will be handled at the tool level through wrapper functions
    console.log('🔐 Authentication middleware configured (tool-level implementation)');
    // Store reference for tool wrapping
    /* istanbul ignore next */
    cov_17yms1qxbx().s[2]++;
    server._authMiddleware = this;
  }
  /**
   * Create authentication function for FastMCP
   */
  createAuthenticateFunction() {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[2]++;
    cov_17yms1qxbx().s[3]++;
    return async request => {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[3]++;
      cov_17yms1qxbx().s[4]++;
      try {
        const context =
        /* istanbul ignore next */
        (cov_17yms1qxbx().s[5]++, this.createRequestContext(request));
        const authResult =
        /* istanbul ignore next */
        (cov_17yms1qxbx().s[6]++, await this.config.authProvider.authenticate(context));
        /* istanbul ignore next */
        cov_17yms1qxbx().s[7]++;
        if (!authResult.success) {
          /* istanbul ignore next */
          cov_17yms1qxbx().b[0][0]++;
          cov_17yms1qxbx().s[8]++;
          if (this.config.requireAuth) {
            /* istanbul ignore next */
            cov_17yms1qxbx().b[1][0]++;
            cov_17yms1qxbx().s[9]++;
            throw new Error(this.config.authErrorMessage);
          } else
          /* istanbul ignore next */
          {
            cov_17yms1qxbx().b[1][1]++;
          }
          // Allow anonymous access if auth not required
          cov_17yms1qxbx().s[10]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_17yms1qxbx().b[0][1]++;
        }
        cov_17yms1qxbx().s[11]++;
        return authResult.user;
      } catch (error) {
        /* istanbul ignore next */
        cov_17yms1qxbx().s[12]++;
        if (this.config.requireAuth) {
          /* istanbul ignore next */
          cov_17yms1qxbx().b[2][0]++;
          cov_17yms1qxbx().s[13]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_17yms1qxbx().b[2][1]++;
        }
        cov_17yms1qxbx().s[14]++;
        return null;
      }
    };
  }
  /**
   * Check if tool access is allowed
   */
  async checkToolAccess(toolName, context) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[4]++;
    cov_17yms1qxbx().s[15]++;
    // Public tools are always allowed
    if (this.config.publicTools.includes(toolName)) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[3][0]++;
      cov_17yms1qxbx().s[16]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[3][1]++;
    }
    // Authenticate if not already done
    cov_17yms1qxbx().s[17]++;
    if (!context.user) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[4][0]++;
      const authResult =
      /* istanbul ignore next */
      (cov_17yms1qxbx().s[18]++, await this.config.authProvider.authenticate(context));
      /* istanbul ignore next */
      cov_17yms1qxbx().s[19]++;
      if (!authResult.success) {
        /* istanbul ignore next */
        cov_17yms1qxbx().b[5][0]++;
        cov_17yms1qxbx().s[20]++;
        if (this.config.requireAuth) {
          /* istanbul ignore next */
          cov_17yms1qxbx().b[6][0]++;
          cov_17yms1qxbx().s[21]++;
          throw new Error(this.config.authErrorMessage);
        } else
        /* istanbul ignore next */
        {
          cov_17yms1qxbx().b[6][1]++;
        }
        cov_17yms1qxbx().s[22]++;
        return; // Allow anonymous access
      } else
      /* istanbul ignore next */
      {
        cov_17yms1qxbx().b[5][1]++;
      }
      cov_17yms1qxbx().s[23]++;
      context.user = authResult.user;
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[4][1]++;
    }
    // Check tool access permissions
    const hasAccess =
    /* istanbul ignore next */
    (cov_17yms1qxbx().s[24]++, await this.config.authProvider.canAccessTool(toolName, context));
    /* istanbul ignore next */
    cov_17yms1qxbx().s[25]++;
    if (!hasAccess) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[7][0]++;
      cov_17yms1qxbx().s[26]++;
      throw new Error(`${this.config.authzErrorMessage}: ${toolName}`);
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[7][1]++;
    }
  }
  /**
   * Check if resource access is allowed
   */
  async checkResourceAccess(resourceUri, context) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[5]++;
    cov_17yms1qxbx().s[27]++;
    // Public resources are always allowed
    if (this.config.publicResources.some(pattern => {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[6]++;
      cov_17yms1qxbx().s[28]++;
      return resourceUri.startsWith(pattern);
    })) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[8][0]++;
      cov_17yms1qxbx().s[29]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[8][1]++;
    }
    // Authenticate if not already done
    cov_17yms1qxbx().s[30]++;
    if (!context.user) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[9][0]++;
      const authResult =
      /* istanbul ignore next */
      (cov_17yms1qxbx().s[31]++, await this.config.authProvider.authenticate(context));
      /* istanbul ignore next */
      cov_17yms1qxbx().s[32]++;
      if (!authResult.success) {
        /* istanbul ignore next */
        cov_17yms1qxbx().b[10][0]++;
        cov_17yms1qxbx().s[33]++;
        if (this.config.requireAuth) {
          /* istanbul ignore next */
          cov_17yms1qxbx().b[11][0]++;
          cov_17yms1qxbx().s[34]++;
          throw new Error(this.config.authErrorMessage);
        } else
        /* istanbul ignore next */
        {
          cov_17yms1qxbx().b[11][1]++;
        }
        cov_17yms1qxbx().s[35]++;
        return; // Allow anonymous access
      } else
      /* istanbul ignore next */
      {
        cov_17yms1qxbx().b[10][1]++;
      }
      cov_17yms1qxbx().s[36]++;
      context.user = authResult.user;
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[9][1]++;
    }
    // Check resource access permissions
    const hasAccess =
    /* istanbul ignore next */
    (cov_17yms1qxbx().s[37]++, await this.config.authProvider.canAccessResource(resourceUri, context));
    /* istanbul ignore next */
    cov_17yms1qxbx().s[38]++;
    if (!hasAccess) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[12][0]++;
      cov_17yms1qxbx().s[39]++;
      throw new Error(`${this.config.authzErrorMessage}: ${resourceUri}`);
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[12][1]++;
    }
  }
  /**
   * Create request context from FastMCP request
   */
  createRequestContext(request) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[7]++;
    cov_17yms1qxbx().s[40]++;
    return {
      clientId:
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[13][0]++, request.clientId) ||
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[13][1]++, request.id),
      headers:
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[14][0]++, request.headers) ||
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[14][1]++, {}),
      metadata:
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[15][0]++, request.metadata) ||
      /* istanbul ignore next */
      (cov_17yms1qxbx().b[15][1]++, {})
    };
  }
  /**
   * Wrap tool function with authentication
   */
  wrapTool(toolName, toolFunction) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[8]++;
    cov_17yms1qxbx().s[41]++;
    return async (...args) => {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[9]++;
      const context =
      /* istanbul ignore next */
      (cov_17yms1qxbx().s[42]++, this.extractContextFromArgs(args));
      /* istanbul ignore next */
      cov_17yms1qxbx().s[43]++;
      await this.checkToolAccess(toolName, context);
      /* istanbul ignore next */
      cov_17yms1qxbx().s[44]++;
      return toolFunction(...args);
    };
  }
  /**
   * Wrap resource function with authentication
   */
  wrapResource(resourceUri, resourceFunction) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[10]++;
    cov_17yms1qxbx().s[45]++;
    return async (...args) => {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[11]++;
      const context =
      /* istanbul ignore next */
      (cov_17yms1qxbx().s[46]++, this.extractContextFromArgs(args));
      /* istanbul ignore next */
      cov_17yms1qxbx().s[47]++;
      await this.checkResourceAccess(resourceUri, context);
      /* istanbul ignore next */
      cov_17yms1qxbx().s[48]++;
      return resourceFunction(...args);
    };
  }
  /**
   * Extract request context from function arguments
   */
  extractContextFromArgs(args) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[12]++;
    // Look for context in arguments (FastMCP typically passes context as last argument)
    const lastArg =
    /* istanbul ignore next */
    (cov_17yms1qxbx().s[49]++, args[args.length - 1]);
    /* istanbul ignore next */
    cov_17yms1qxbx().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[17][0]++, lastArg) &&
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[17][1]++, typeof lastArg === 'object') &&
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[17][2]++, lastArg.session)) {
      /* istanbul ignore next */
      cov_17yms1qxbx().b[16][0]++;
      cov_17yms1qxbx().s[51]++;
      return {
        clientId: lastArg.session?.id,
        headers:
        /* istanbul ignore next */
        (cov_17yms1qxbx().b[18][0]++, lastArg.headers) ||
        /* istanbul ignore next */
        (cov_17yms1qxbx().b[18][1]++, {}),
        metadata:
        /* istanbul ignore next */
        (cov_17yms1qxbx().b[19][0]++, lastArg.metadata) ||
        /* istanbul ignore next */
        (cov_17yms1qxbx().b[19][1]++, {})
      };
    } else
    /* istanbul ignore next */
    {
      cov_17yms1qxbx().b[16][1]++;
    }
    cov_17yms1qxbx().s[52]++;
    return {
      headers: {},
      metadata: {}
    };
  }
}
/**
 * Create authentication middleware
 */
export function createAuthMiddleware(config) {
  /* istanbul ignore next */
  cov_17yms1qxbx().f[13]++;
  cov_17yms1qxbx().s[53]++;
  return new FastMCPAuthMiddleware(config);
}
/**
 * Authentication decorator for tools
 *
 * Usage:
 * @requireAuth('tool-name')
 * async function myTool() { ... }
 */
export function requireAuth(toolName) {
  /* istanbul ignore next */
  cov_17yms1qxbx().f[14]++;
  cov_17yms1qxbx().s[54]++;
  return function (target, propertyKey, descriptor) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[15]++;
    const originalMethod =
    /* istanbul ignore next */
    (cov_17yms1qxbx().s[55]++, descriptor.value);
    /* istanbul ignore next */
    cov_17yms1qxbx().s[56]++;
    descriptor.value = async function (...args) {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[16]++;
      cov_17yms1qxbx().s[57]++;
      // This would be implemented with actual middleware instance
      console.log(`🔒 Authentication check for tool: ${toolName}`);
      /* istanbul ignore next */
      cov_17yms1qxbx().s[58]++;
      return originalMethod.apply(this, args);
    };
    /* istanbul ignore next */
    cov_17yms1qxbx().s[59]++;
    return descriptor;
  };
}
/**
 * Authorization decorator for tools with specific permissions
 *
 * Usage:
 * @requirePermission('workflows')
 * async function manageWorkflow() { ... }
 */
export function requirePermission(permission) {
  /* istanbul ignore next */
  cov_17yms1qxbx().f[17]++;
  cov_17yms1qxbx().s[60]++;
  return function (target, propertyKey, descriptor) {
    /* istanbul ignore next */
    cov_17yms1qxbx().f[18]++;
    const originalMethod =
    /* istanbul ignore next */
    (cov_17yms1qxbx().s[61]++, descriptor.value);
    /* istanbul ignore next */
    cov_17yms1qxbx().s[62]++;
    descriptor.value = async function (...args) {
      /* istanbul ignore next */
      cov_17yms1qxbx().f[19]++;
      cov_17yms1qxbx().s[63]++;
      // This would be implemented with actual middleware instance
      console.log(`🛡️  Permission check for: ${permission}`);
      /* istanbul ignore next */
      cov_17yms1qxbx().s[64]++;
      return originalMethod.apply(this, args);
    };
    /* istanbul ignore next */
    cov_17yms1qxbx().s[65]++;
    return descriptor;
  };
}
/**
 * Environment variable configuration for authentication middleware
 */
export const AUTH_ENV_CONFIG =
/* istanbul ignore next */
(cov_17yms1qxbx().s[66]++, {
  /** Whether authentication is required */
  REQUIRE_AUTH: 'N8N_MCP_REQUIRE_AUTH',
  /** Public tools (comma-separated) */
  PUBLIC_TOOLS: 'N8N_MCP_PUBLIC_TOOLS',
  /** Public resources (comma-separated) */
  PUBLIC_RESOURCES: 'N8N_MCP_PUBLIC_RESOURCES',
  /** Custom auth header name */
  AUTH_HEADER: 'N8N_MCP_AUTH_HEADER',
  /** Custom auth error message */
  AUTH_ERROR_MESSAGE: 'N8N_MCP_AUTH_ERROR_MESSAGE',
  /** Custom authz error message */
  AUTHZ_ERROR_MESSAGE: 'N8N_MCP_AUTHZ_ERROR_MESSAGE'
});
/**
 * Parse authentication middleware configuration from environment
 */
export function parseAuthConfigFromEnv(authProvider) {
  /* istanbul ignore next */
  cov_17yms1qxbx().f[20]++;
  cov_17yms1qxbx().s[67]++;
  return {
    authProvider,
    requireAuth: process.env[AUTH_ENV_CONFIG.REQUIRE_AUTH] === 'true',
    publicTools:
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[20][0]++, process.env[AUTH_ENV_CONFIG.PUBLIC_TOOLS]?.split(',')) ||
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[20][1]++, undefined),
    publicResources:
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[21][0]++, process.env[AUTH_ENV_CONFIG.PUBLIC_RESOURCES]?.split(',')) ||
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[21][1]++, undefined),
    authHeader:
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[22][0]++, process.env[AUTH_ENV_CONFIG.AUTH_HEADER]) ||
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[22][1]++, undefined),
    authErrorMessage:
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[23][0]++, process.env[AUTH_ENV_CONFIG.AUTH_ERROR_MESSAGE]) ||
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[23][1]++, undefined),
    authzErrorMessage:
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[24][0]++, process.env[AUTH_ENV_CONFIG.AUTHZ_ERROR_MESSAGE]) ||
    /* istanbul ignore next */
    (cov_17yms1qxbx().b[24][1]++, undefined)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,