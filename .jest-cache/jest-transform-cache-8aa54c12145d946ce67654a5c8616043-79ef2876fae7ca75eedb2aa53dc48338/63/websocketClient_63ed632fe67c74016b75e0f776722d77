519c93885e8a469caafeaddba5576739
/* istanbul ignore next */
function cov_ytm78gmju() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/websocketClient.ts";
  var hash = "a048070dacae0cbdf444fde9929c7fcbd8381f08";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/websocketClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 44
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "1": {
        start: {
          line: 24,
          column: 38
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "2": {
        start: {
          line: 28,
          column: 38
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "3": {
        start: {
          line: 43,
          column: 9
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "4": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "5": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "6": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 33
        }
      },
      "7": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 16
        }
      },
      "8": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "9": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "10": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "11": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 19
        }
      },
      "12": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "13": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "14": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "15": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "16": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 66
        }
      },
      "17": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "18": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 79
        }
      },
      "19": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "20": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "21": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "22": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 84,
          column: 44
        }
      },
      "23": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 74
        }
      },
      "24": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "25": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "26": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 48
        }
      },
      "27": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 59
        }
      },
      "28": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "29": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "30": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "31": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "32": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "33": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 45
        }
      },
      "34": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "35": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 67
        }
      },
      "36": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "37": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 50
        }
      },
      "38": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "39": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 34
        }
      },
      "40": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 111,
          column: 19
        }
      },
      "41": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 58
        }
      },
      "42": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 98
        }
      },
      "43": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 29
        }
      },
      "45": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 35
        }
      },
      "46": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 38
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "48": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "49": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "50": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "51": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 36
        }
      },
      "52": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "53": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "54": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 34
        }
      },
      "55": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "56": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "57": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 145,
          column: 53
        }
      },
      "58": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "59": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "60": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 153,
          column: 17
        }
      },
      "61": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 34
        }
      },
      "62": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 30
        }
      },
      "63": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "64": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "65": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "66": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "67": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 78
        }
      },
      "68": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "69": {
        start: {
          line: 203,
          column: 34
        },
        end: {
          line: 203,
          column: 49
        }
      },
      "70": {
        start: {
          line: 204,
          column: 31
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "71": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 206,
          column: 68
        }
      },
      "72": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 48
        }
      },
      "73": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 42
        }
      },
      "74": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "75": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 56
        }
      },
      "76": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 26
        }
      },
      "77": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 58
        }
      },
      "78": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 52
        }
      },
      "79": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 26
        }
      },
      "80": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 57
        }
      },
      "81": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 45
        }
      },
      "82": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 37
        }
      },
      "83": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 29
        }
      },
      "84": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 38
        }
      },
      "85": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "86": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "87": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 37
        }
      },
      "88": {
        start: {
          line: 241,
          column: 13
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "89": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 53
        }
      },
      "90": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "91": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "92": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "93": {
        start: {
          line: 253,
          column: 22
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "94": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 84
        }
      },
      "95": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 267,
          column: 18
        }
      },
      "96": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 39
        }
      },
      "97": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "98": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "99": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 51
        }
      },
      "100": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "101": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 45
        }
      },
      "102": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "103": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "104": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 281,
          column: 42
        }
      },
      "105": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "106": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 31
        }
      },
      "107": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 94
        }
      },
      "108": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "109": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 47
        }
      },
      "110": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 39
        }
      },
      "111": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "112": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 46
        }
      },
      "113": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 39
        }
      },
      "114": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "115": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 54
        }
      },
      "116": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 47
        }
      },
      "117": {
        start: {
          line: 314,
          column: 40
        },
        end: {
          line: 319,
          column: 1
        }
      },
      "118": {
        start: {
          line: 324,
          column: 19
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "119": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 60
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 64,
            column: 27
          },
          end: {
            line: 64,
            column: 28
          }
        },
        loc: {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 64
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 57
          },
          end: {
            line: 82,
            column: 58
          }
        },
        loc: {
          start: {
            line: 82,
            column: 63
          },
          end: {
            line: 87,
            column: 17
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 36
          }
        },
        loc: {
          start: {
            line: 88,
            column: 41
          },
          end: {
            line: 96,
            column: 17
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 97,
            column: 39
          }
        },
        loc: {
          start: {
            line: 97,
            column: 48
          },
          end: {
            line: 99,
            column: 17
          }
        },
        line: 97
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 37
          }
        },
        loc: {
          start: {
            line: 100,
            column: 54
          },
          end: {
            line: 102,
            column: 17
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 37
          }
        },
        loc: {
          start: {
            line: 103,
            column: 47
          },
          end: {
            line: 107,
            column: 17
          }
        },
        line: 103
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 36
          }
        },
        loc: {
          start: {
            line: 108,
            column: 41
          },
          end: {
            line: 111,
            column: 17
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 141
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 146,
            column: 28
          }
        },
        loc: {
          start: {
            line: 146,
            column: 48
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 146
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 41
          }
        },
        loc: {
          start: {
            line: 147,
            column: 51
          },
          end: {
            line: 154,
            column: 13
          }
        },
        line: 147
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 42
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 160
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 170
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 34
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 180
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 25
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 189
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 18
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 24
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 201
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 232
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 24
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 248
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 42
          }
        },
        loc: {
          start: {
            line: 256,
            column: 53
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 256
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 21
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 272
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 43
          }
        },
        loc: {
          start: {
            line: 276,
            column: 48
          },
          end: {
            line: 281,
            column: 9
          }
        },
        line: 276
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 20
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 286
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 26
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 295
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 29
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 304
      },
      "27": {
        name: "createWebSocketClient",
        decl: {
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 323,
            column: 37
          }
        },
        loc: {
          start: {
            line: 323,
            column: 57
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 323
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 19
          }
        }, {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 60
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 31
          }
        }, {
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 83,
            column: 78
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: 130,
            column: 17
          },
          end: {
            line: 132,
            column: 13
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "9": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 20
          }
        }, {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 61
          }
        }],
        line: 142
      },
      "10": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        }, {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 153,
            column: 17
          }
        }],
        line: 148
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 196,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 196,
            column: 35
          }
        }, {
          start: {
            line: 196,
            column: 39
          },
          end: {
            line: 196,
            column: 77
          }
        }],
        line: 196
      },
      "12": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 48
          }
        }, {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 212,
            column: 50
          }
        }, {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 44
          }
        }, {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 216,
            column: 26
          }
        }, {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 220,
            column: 26
          }
        }, {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 222,
            column: 57
          }
        }],
        line: 210
      },
      "13": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 243,
            column: 9
          }
        }],
        line: 238
      },
      "14": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 25
          }
        }, {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 92
          }
        }],
        line: 238
      },
      "15": {
        loc: {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "16": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "17": {
        loc: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "18": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "19": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "20": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 277,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 277,
            column: 23
          }
        }, {
          start: {
            line: 277,
            column: 27
          },
          end: {
            line: 277,
            column: 64
          }
        }],
        line: 277
      },
      "21": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "22": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "23": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "24": {
        loc: {
          start: {
            line: 323,
            column: 43
          },
          end: {
            line: 323,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 323,
            column: 53
          },
          end: {
            line: 323,
            column: 55
          }
        }],
        line: 323
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/websocketClient.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/websocketClient.ts"],
      sourcesContent: ["/**\n * WebSocket Client for n8n Fork Real-time Communication\n *\n * Provides WebSocket connectivity to n8n fork's real-time push service\n * for workflow execution updates, progress monitoring, and bidirectional communication.\n */\n\nimport WebSocket from 'ws';\nimport { EventEmitter } from 'events';\nimport { z } from 'zod';\n\n// WebSocket message schemas\nexport const WorkflowExecutionEventSchema = z.object({\n  type: z.enum(['workflowExecutionStarted', 'workflowExecutionCompleted', 'nodeExecutionStarted', 'nodeExecutionCompleted']),\n  data: z.object({\n    executionId: z.string(),\n    workflowId: z.string().optional(),\n    nodeId: z.string().optional(),\n    nodeName: z.string().optional(),\n    timestamp: z.string(),\n    status: z.enum(['running', 'success', 'error', 'waiting']).optional(),\n    error: z.string().optional(),\n    data: z.any().optional(),\n  }),\n});\n\nexport const HeartbeatMessageSchema = z.object({\n  type: z.literal('heartbeat'),\n  timestamp: z.string(),\n});\n\nexport const WebSocketMessageSchema = z.union([\n  WorkflowExecutionEventSchema,\n  HeartbeatMessageSchema,\n  z.object({\n    type: z.string(),\n    data: z.any(),\n  }),\n]);\n\nexport type WorkflowExecutionEvent = z.infer<typeof WorkflowExecutionEventSchema>;\nexport type HeartbeatMessage = z.infer<typeof HeartbeatMessageSchema>;\nexport type WebSocketMessage = z.infer<typeof WebSocketMessageSchema>;\n\nexport interface WebSocketConfig {\n  url: string;\n  apiKey?: string;\n  sessionToken?: string;\n  reconnectInterval: number;\n  maxReconnectAttempts: number;\n  heartbeatInterval: number;\n  connectionTimeout: number;\n  headers?: Record<string, string>;\n}\n\nexport interface ConnectionState {\n  connected: boolean;\n  reconnectAttempts: number;\n  lastHeartbeat?: Date;\n  lastMessage?: Date;\n  connectionTime?: Date;\n}\n\n/**\n * WebSocket Client for n8n Fork Integration\n *\n * Handles real-time communication with n8n fork's push service,\n * including automatic reconnection, heartbeat monitoring, and event streaming.\n */\nexport class N8nWebSocketClient extends EventEmitter {\n  private ws: WebSocket | null = null;\n  private config: WebSocketConfig;\n  private state: ConnectionState;\n  private heartbeatTimer: NodeJS.Timeout | null = null;\n  private reconnectTimer: NodeJS.Timeout | null = null;\n  private connectionTimeoutTimer: NodeJS.Timeout | null = null;\n\n  constructor(config: WebSocketConfig) {\n    super();\n    this.config = config;\n    this.state = {\n      connected: false,\n      reconnectAttempts: 0,\n    };\n  }\n\n  /**\n   * Connect to n8n fork WebSocket endpoint\n   */\n  public async connect(): Promise<void> {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers: Record<string, string> = {\n          'User-Agent': 'n8n-mcp-server/2.0.0',\n          ...this.config.headers,\n        };\n\n        // Add authentication headers\n        if (this.config.apiKey) {\n          headers['X-N8N-API-KEY'] = this.config.apiKey;\n        }\n\n        if (this.config.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.config.sessionToken}`;\n        }\n\n        this.ws = new WebSocket(this.config.url, {\n          headers,\n          handshakeTimeout: this.config.connectionTimeout,\n        });\n\n        // Set connection timeout\n        this.connectionTimeoutTimer = setTimeout(() => {\n          if (this.ws && this.ws.readyState === WebSocket.CONNECTING) {\n            this.ws.terminate();\n            reject(new Error('WebSocket connection timeout'));\n          }\n        }, this.config.connectionTimeout);\n\n        this.ws.on('open', () => {\n          this.clearConnectionTimeout();\n          this.state.connected = true;\n          this.state.connectionTime = new Date();\n          this.state.reconnectAttempts = 0;\n          \n          this.startHeartbeat();\n          this.emit('connected');\n          resolve();\n        });\n\n        this.ws.on('message', (data: WebSocket.Data) => {\n          this.handleMessage(data);\n        });\n\n        this.ws.on('close', (code: number, reason: Buffer) => {\n          this.handleDisconnect(code, reason.toString());\n        });\n\n        this.ws.on('error', (error: Error) => {\n          this.clearConnectionTimeout();\n          this.emit('error', error);\n          reject(error);\n        });\n\n        this.ws.on('pong', () => {\n          this.state.lastHeartbeat = new Date();\n          this.emit('heartbeat', { type: 'pong', timestamp: new Date().toISOString() });\n        });\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Disconnect from WebSocket\n   */\n  public async disconnect(): Promise<void> {\n    this.stopHeartbeat();\n    this.clearReconnectTimer();\n    this.clearConnectionTimeout();\n\n    if (this.ws) {\n      this.ws.removeAllListeners();\n      \n      if (this.ws.readyState === WebSocket.OPEN) {\n        this.ws.close(1000, 'Client disconnect');\n      } else {\n        this.ws.terminate();\n      }\n      \n      this.ws = null;\n    }\n\n    this.state.connected = false;\n    this.emit('disconnected');\n  }\n\n  /**\n   * Send message to n8n fork\n   */\n  public async sendMessage(message: any): Promise<void> {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      throw new Error('WebSocket not connected');\n    }\n\n    const messageString = JSON.stringify(message);\n    \n    return new Promise((resolve, reject) => {\n      this.ws!.send(messageString, (error?: Error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * Subscribe to workflow execution updates\n   */\n  public async subscribeToWorkflow(workflowId: string): Promise<void> {\n    await this.sendMessage({\n      type: 'subscribe',\n      resource: 'workflow',\n      id: workflowId,\n    });\n  }\n\n  /**\n   * Unsubscribe from workflow execution updates\n   */\n  public async unsubscribeFromWorkflow(workflowId: string): Promise<void> {\n    await this.sendMessage({\n      type: 'unsubscribe',\n      resource: 'workflow',\n      id: workflowId,\n    });\n  }\n\n  /**\n   * Subscribe to all execution updates\n   */\n  public async subscribeToExecutions(): Promise<void> {\n    await this.sendMessage({\n      type: 'subscribe',\n      resource: 'executions',\n    });\n  }\n\n  /**\n   * Get current connection state\n   */\n  public getConnectionState(): ConnectionState {\n    return { ...this.state };\n  }\n\n  /**\n   * Check if WebSocket is connected\n   */\n  public isConnected(): boolean {\n    return this.state.connected && this.ws?.readyState === WebSocket.OPEN;\n  }\n\n  /**\n   * Handle incoming WebSocket message\n   */\n  private handleMessage(data: WebSocket.Data): void {\n    try {\n      const messageString = data.toString();\n      const rawMessage = JSON.parse(messageString);\n      \n      // Validate message schema\n      const message = WebSocketMessageSchema.parse(rawMessage);\n      \n      this.state.lastMessage = new Date();\n      this.emit('message', message);\n\n      // Handle specific message types\n      switch (message.type) {\n        case 'workflowExecutionStarted':\n        case 'workflowExecutionCompleted':\n        case 'nodeExecutionStarted':\n        case 'nodeExecutionCompleted':\n          this.emit('workflowEvent', message as WorkflowExecutionEvent);\n          break;\n          \n        case 'heartbeat':\n          this.state.lastHeartbeat = new Date();\n          this.emit('heartbeat', message as HeartbeatMessage);\n          break;\n          \n        default:\n          this.emit('unknownMessage', message);\n      }\n\n    } catch (error) {\n      this.emit('messageError', error);\n    }\n  }\n\n  /**\n   * Handle WebSocket disconnect\n   */\n  private handleDisconnect(code: number, reason: string): void {\n    this.state.connected = false;\n    this.stopHeartbeat();\n    this.clearConnectionTimeout();\n\n    this.emit('disconnected', { code, reason });\n\n    // Attempt reconnection if not a clean close\n    if (code !== 1000 && this.state.reconnectAttempts < this.config.maxReconnectAttempts) {\n      this.scheduleReconnect();\n    } else if (this.state.reconnectAttempts >= this.config.maxReconnectAttempts) {\n      this.emit('maxReconnectAttemptsReached');\n    }\n  }\n\n  /**\n   * Schedule reconnection attempt\n   */\n  private scheduleReconnect(): void {\n    if (this.reconnectTimer) {\n      return;\n    }\n\n    this.state.reconnectAttempts++;\n    const delay = Math.min(\n      this.config.reconnectInterval * Math.pow(2, this.state.reconnectAttempts - 1),\n      30000 // Max 30 seconds\n    );\n\n    this.emit('reconnecting', { attempt: this.state.reconnectAttempts, delay });\n\n    this.reconnectTimer = setTimeout(async () => {\n      this.reconnectTimer = null;\n      \n      try {\n        await this.connect();\n      } catch (error) {\n        this.emit('reconnectError', error);\n        \n        if (this.state.reconnectAttempts < this.config.maxReconnectAttempts) {\n          this.scheduleReconnect();\n        }\n      }\n    }, delay);\n  }\n\n  /**\n   * Start heartbeat monitoring\n   */\n  private startHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      return;\n    }\n\n    this.heartbeatTimer = setInterval(() => {\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n        this.ws.ping();\n        this.emit('heartbeat', { type: 'ping', timestamp: new Date().toISOString() });\n      }\n    }, this.config.heartbeatInterval);\n  }\n\n  /**\n   * Stop heartbeat monitoring\n   */\n  private stopHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  /**\n   * Clear reconnection timer\n   */\n  private clearReconnectTimer(): void {\n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n  }\n\n  /**\n   * Clear connection timeout timer\n   */\n  private clearConnectionTimeout(): void {\n    if (this.connectionTimeoutTimer) {\n      clearTimeout(this.connectionTimeoutTimer);\n      this.connectionTimeoutTimer = null;\n    }\n  }\n}\n\n/**\n * Default WebSocket configuration\n */\nexport const DEFAULT_WEBSOCKET_CONFIG: Partial<WebSocketConfig> = {\n  reconnectInterval: 1000,\n  maxReconnectAttempts: 10,\n  heartbeatInterval: 30000,\n  connectionTimeout: 10000,\n};\n\n/**\n * Create WebSocket client with default configuration\n */\nexport function createWebSocketClient(\n  url: string, \n  options: Partial<WebSocketConfig> = {}\n): N8nWebSocketClient {\n  const config: WebSocketConfig = {\n    url,\n    ...DEFAULT_WEBSOCKET_CONFIG,\n    ...options,\n  } as WebSocketConfig;\n\n  return new N8nWebSocketClient(config);\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a048070dacae0cbdf444fde9929c7fcbd8381f08"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ytm78gmju = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ytm78gmju();
/**
 * WebSocket Client for n8n Fork Real-time Communication
 *
 * Provides WebSocket connectivity to n8n fork's real-time push service
 * for workflow execution updates, progress monitoring, and bidirectional communication.
 */
import WebSocket from 'ws';
import { EventEmitter } from 'events';
import { z } from 'zod';
// WebSocket message schemas
export const WorkflowExecutionEventSchema =
/* istanbul ignore next */
(cov_ytm78gmju().s[0]++, z.object({
  type: z.enum(['workflowExecutionStarted', 'workflowExecutionCompleted', 'nodeExecutionStarted', 'nodeExecutionCompleted']),
  data: z.object({
    executionId: z.string(),
    workflowId: z.string().optional(),
    nodeId: z.string().optional(),
    nodeName: z.string().optional(),
    timestamp: z.string(),
    status: z.enum(['running', 'success', 'error', 'waiting']).optional(),
    error: z.string().optional(),
    data: z.any().optional()
  })
}));
export const HeartbeatMessageSchema =
/* istanbul ignore next */
(cov_ytm78gmju().s[1]++, z.object({
  type: z.literal('heartbeat'),
  timestamp: z.string()
}));
export const WebSocketMessageSchema =
/* istanbul ignore next */
(cov_ytm78gmju().s[2]++, z.union([WorkflowExecutionEventSchema, HeartbeatMessageSchema, z.object({
  type: z.string(),
  data: z.any()
})]));
/**
 * WebSocket Client for n8n Fork Integration
 *
 * Handles real-time communication with n8n fork's push service,
 * including automatic reconnection, heartbeat monitoring, and event streaming.
 */
export class N8nWebSocketClient extends EventEmitter {
  ws =
  /* istanbul ignore next */
  (cov_ytm78gmju().s[3]++, null);
  config;
  state;
  heartbeatTimer =
  /* istanbul ignore next */
  (cov_ytm78gmju().s[4]++, null);
  reconnectTimer =
  /* istanbul ignore next */
  (cov_ytm78gmju().s[5]++, null);
  connectionTimeoutTimer =
  /* istanbul ignore next */
  (cov_ytm78gmju().s[6]++, null);
  constructor(config) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[0]++;
    cov_ytm78gmju().s[7]++;
    super();
    /* istanbul ignore next */
    cov_ytm78gmju().s[8]++;
    this.config = config;
    /* istanbul ignore next */
    cov_ytm78gmju().s[9]++;
    this.state = {
      connected: false,
      reconnectAttempts: 0
    };
  }
  /**
   * Connect to n8n fork WebSocket endpoint
   */
  async connect() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[1]++;
    cov_ytm78gmju().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_ytm78gmju().b[1][0]++, this.ws) &&
    /* istanbul ignore next */
    (cov_ytm78gmju().b[1][1]++, this.ws.readyState === WebSocket.OPEN)) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[0][0]++;
      cov_ytm78gmju().s[11]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[0][1]++;
    }
    cov_ytm78gmju().s[12]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_ytm78gmju().f[2]++;
      cov_ytm78gmju().s[13]++;
      try {
        const headers =
        /* istanbul ignore next */
        (cov_ytm78gmju().s[14]++, {
          'User-Agent': 'n8n-mcp-server/2.0.0',
          ...this.config.headers
        });
        // Add authentication headers
        /* istanbul ignore next */
        cov_ytm78gmju().s[15]++;
        if (this.config.apiKey) {
          /* istanbul ignore next */
          cov_ytm78gmju().b[2][0]++;
          cov_ytm78gmju().s[16]++;
          headers['X-N8N-API-KEY'] = this.config.apiKey;
        } else
        /* istanbul ignore next */
        {
          cov_ytm78gmju().b[2][1]++;
        }
        cov_ytm78gmju().s[17]++;
        if (this.config.sessionToken) {
          /* istanbul ignore next */
          cov_ytm78gmju().b[3][0]++;
          cov_ytm78gmju().s[18]++;
          headers['Cookie'] = `n8n-auth=${this.config.sessionToken}`;
        } else
        /* istanbul ignore next */
        {
          cov_ytm78gmju().b[3][1]++;
        }
        cov_ytm78gmju().s[19]++;
        this.ws = new WebSocket(this.config.url, {
          headers,
          handshakeTimeout: this.config.connectionTimeout
        });
        // Set connection timeout
        /* istanbul ignore next */
        cov_ytm78gmju().s[20]++;
        this.connectionTimeoutTimer = setTimeout(() => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[3]++;
          cov_ytm78gmju().s[21]++;
          if (
          /* istanbul ignore next */
          (cov_ytm78gmju().b[5][0]++, this.ws) &&
          /* istanbul ignore next */
          (cov_ytm78gmju().b[5][1]++, this.ws.readyState === WebSocket.CONNECTING)) {
            /* istanbul ignore next */
            cov_ytm78gmju().b[4][0]++;
            cov_ytm78gmju().s[22]++;
            this.ws.terminate();
            /* istanbul ignore next */
            cov_ytm78gmju().s[23]++;
            reject(new Error('WebSocket connection timeout'));
          } else
          /* istanbul ignore next */
          {
            cov_ytm78gmju().b[4][1]++;
          }
        }, this.config.connectionTimeout);
        /* istanbul ignore next */
        cov_ytm78gmju().s[24]++;
        this.ws.on('open', () => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[4]++;
          cov_ytm78gmju().s[25]++;
          this.clearConnectionTimeout();
          /* istanbul ignore next */
          cov_ytm78gmju().s[26]++;
          this.state.connected = true;
          /* istanbul ignore next */
          cov_ytm78gmju().s[27]++;
          this.state.connectionTime = new Date();
          /* istanbul ignore next */
          cov_ytm78gmju().s[28]++;
          this.state.reconnectAttempts = 0;
          /* istanbul ignore next */
          cov_ytm78gmju().s[29]++;
          this.startHeartbeat();
          /* istanbul ignore next */
          cov_ytm78gmju().s[30]++;
          this.emit('connected');
          /* istanbul ignore next */
          cov_ytm78gmju().s[31]++;
          resolve();
        });
        /* istanbul ignore next */
        cov_ytm78gmju().s[32]++;
        this.ws.on('message', data => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[5]++;
          cov_ytm78gmju().s[33]++;
          this.handleMessage(data);
        });
        /* istanbul ignore next */
        cov_ytm78gmju().s[34]++;
        this.ws.on('close', (code, reason) => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[6]++;
          cov_ytm78gmju().s[35]++;
          this.handleDisconnect(code, reason.toString());
        });
        /* istanbul ignore next */
        cov_ytm78gmju().s[36]++;
        this.ws.on('error', error => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[7]++;
          cov_ytm78gmju().s[37]++;
          this.clearConnectionTimeout();
          /* istanbul ignore next */
          cov_ytm78gmju().s[38]++;
          this.emit('error', error);
          /* istanbul ignore next */
          cov_ytm78gmju().s[39]++;
          reject(error);
        });
        /* istanbul ignore next */
        cov_ytm78gmju().s[40]++;
        this.ws.on('pong', () => {
          /* istanbul ignore next */
          cov_ytm78gmju().f[8]++;
          cov_ytm78gmju().s[41]++;
          this.state.lastHeartbeat = new Date();
          /* istanbul ignore next */
          cov_ytm78gmju().s[42]++;
          this.emit('heartbeat', {
            type: 'pong',
            timestamp: new Date().toISOString()
          });
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_ytm78gmju().s[43]++;
        reject(error);
      }
    });
  }
  /**
   * Disconnect from WebSocket
   */
  async disconnect() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[9]++;
    cov_ytm78gmju().s[44]++;
    this.stopHeartbeat();
    /* istanbul ignore next */
    cov_ytm78gmju().s[45]++;
    this.clearReconnectTimer();
    /* istanbul ignore next */
    cov_ytm78gmju().s[46]++;
    this.clearConnectionTimeout();
    /* istanbul ignore next */
    cov_ytm78gmju().s[47]++;
    if (this.ws) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[6][0]++;
      cov_ytm78gmju().s[48]++;
      this.ws.removeAllListeners();
      /* istanbul ignore next */
      cov_ytm78gmju().s[49]++;
      if (this.ws.readyState === WebSocket.OPEN) {
        /* istanbul ignore next */
        cov_ytm78gmju().b[7][0]++;
        cov_ytm78gmju().s[50]++;
        this.ws.close(1000, 'Client disconnect');
      } else {
        /* istanbul ignore next */
        cov_ytm78gmju().b[7][1]++;
        cov_ytm78gmju().s[51]++;
        this.ws.terminate();
      }
      /* istanbul ignore next */
      cov_ytm78gmju().s[52]++;
      this.ws = null;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[6][1]++;
    }
    cov_ytm78gmju().s[53]++;
    this.state.connected = false;
    /* istanbul ignore next */
    cov_ytm78gmju().s[54]++;
    this.emit('disconnected');
  }
  /**
   * Send message to n8n fork
   */
  async sendMessage(message) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[10]++;
    cov_ytm78gmju().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_ytm78gmju().b[9][0]++, !this.ws) ||
    /* istanbul ignore next */
    (cov_ytm78gmju().b[9][1]++, this.ws.readyState !== WebSocket.OPEN)) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[8][0]++;
      cov_ytm78gmju().s[56]++;
      throw new Error('WebSocket not connected');
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[8][1]++;
    }
    const messageString =
    /* istanbul ignore next */
    (cov_ytm78gmju().s[57]++, JSON.stringify(message));
    /* istanbul ignore next */
    cov_ytm78gmju().s[58]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_ytm78gmju().f[11]++;
      cov_ytm78gmju().s[59]++;
      this.ws.send(messageString, error => {
        /* istanbul ignore next */
        cov_ytm78gmju().f[12]++;
        cov_ytm78gmju().s[60]++;
        if (error) {
          /* istanbul ignore next */
          cov_ytm78gmju().b[10][0]++;
          cov_ytm78gmju().s[61]++;
          reject(error);
        } else {
          /* istanbul ignore next */
          cov_ytm78gmju().b[10][1]++;
          cov_ytm78gmju().s[62]++;
          resolve();
        }
      });
    });
  }
  /**
   * Subscribe to workflow execution updates
   */
  async subscribeToWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[13]++;
    cov_ytm78gmju().s[63]++;
    await this.sendMessage({
      type: 'subscribe',
      resource: 'workflow',
      id: workflowId
    });
  }
  /**
   * Unsubscribe from workflow execution updates
   */
  async unsubscribeFromWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[14]++;
    cov_ytm78gmju().s[64]++;
    await this.sendMessage({
      type: 'unsubscribe',
      resource: 'workflow',
      id: workflowId
    });
  }
  /**
   * Subscribe to all execution updates
   */
  async subscribeToExecutions() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[15]++;
    cov_ytm78gmju().s[65]++;
    await this.sendMessage({
      type: 'subscribe',
      resource: 'executions'
    });
  }
  /**
   * Get current connection state
   */
  getConnectionState() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[16]++;
    cov_ytm78gmju().s[66]++;
    return {
      ...this.state
    };
  }
  /**
   * Check if WebSocket is connected
   */
  isConnected() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[17]++;
    cov_ytm78gmju().s[67]++;
    return /* istanbul ignore next */(cov_ytm78gmju().b[11][0]++, this.state.connected) &&
    /* istanbul ignore next */
    (cov_ytm78gmju().b[11][1]++, this.ws?.readyState === WebSocket.OPEN);
  }
  /**
   * Handle incoming WebSocket message
   */
  handleMessage(data) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[18]++;
    cov_ytm78gmju().s[68]++;
    try {
      const messageString =
      /* istanbul ignore next */
      (cov_ytm78gmju().s[69]++, data.toString());
      const rawMessage =
      /* istanbul ignore next */
      (cov_ytm78gmju().s[70]++, JSON.parse(messageString));
      // Validate message schema
      const message =
      /* istanbul ignore next */
      (cov_ytm78gmju().s[71]++, WebSocketMessageSchema.parse(rawMessage));
      /* istanbul ignore next */
      cov_ytm78gmju().s[72]++;
      this.state.lastMessage = new Date();
      /* istanbul ignore next */
      cov_ytm78gmju().s[73]++;
      this.emit('message', message);
      // Handle specific message types
      /* istanbul ignore next */
      cov_ytm78gmju().s[74]++;
      switch (message.type) {
        case 'workflowExecutionStarted':
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][0]++;
        case 'workflowExecutionCompleted':
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][1]++;
        case 'nodeExecutionStarted':
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][2]++;
        case 'nodeExecutionCompleted':
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][3]++;
          cov_ytm78gmju().s[75]++;
          this.emit('workflowEvent', message);
          /* istanbul ignore next */
          cov_ytm78gmju().s[76]++;
          break;
        case 'heartbeat':
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][4]++;
          cov_ytm78gmju().s[77]++;
          this.state.lastHeartbeat = new Date();
          /* istanbul ignore next */
          cov_ytm78gmju().s[78]++;
          this.emit('heartbeat', message);
          /* istanbul ignore next */
          cov_ytm78gmju().s[79]++;
          break;
        default:
          /* istanbul ignore next */
          cov_ytm78gmju().b[12][5]++;
          cov_ytm78gmju().s[80]++;
          this.emit('unknownMessage', message);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_ytm78gmju().s[81]++;
      this.emit('messageError', error);
    }
  }
  /**
   * Handle WebSocket disconnect
   */
  handleDisconnect(code, reason) {
    /* istanbul ignore next */
    cov_ytm78gmju().f[19]++;
    cov_ytm78gmju().s[82]++;
    this.state.connected = false;
    /* istanbul ignore next */
    cov_ytm78gmju().s[83]++;
    this.stopHeartbeat();
    /* istanbul ignore next */
    cov_ytm78gmju().s[84]++;
    this.clearConnectionTimeout();
    /* istanbul ignore next */
    cov_ytm78gmju().s[85]++;
    this.emit('disconnected', {
      code,
      reason
    });
    // Attempt reconnection if not a clean close
    /* istanbul ignore next */
    cov_ytm78gmju().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_ytm78gmju().b[14][0]++, code !== 1000) &&
    /* istanbul ignore next */
    (cov_ytm78gmju().b[14][1]++, this.state.reconnectAttempts < this.config.maxReconnectAttempts)) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[13][0]++;
      cov_ytm78gmju().s[87]++;
      this.scheduleReconnect();
    } else {
      /* istanbul ignore next */
      cov_ytm78gmju().b[13][1]++;
      cov_ytm78gmju().s[88]++;
      if (this.state.reconnectAttempts >= this.config.maxReconnectAttempts) {
        /* istanbul ignore next */
        cov_ytm78gmju().b[15][0]++;
        cov_ytm78gmju().s[89]++;
        this.emit('maxReconnectAttemptsReached');
      } else
      /* istanbul ignore next */
      {
        cov_ytm78gmju().b[15][1]++;
      }
    }
  }
  /**
   * Schedule reconnection attempt
   */
  scheduleReconnect() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[20]++;
    cov_ytm78gmju().s[90]++;
    if (this.reconnectTimer) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[16][0]++;
      cov_ytm78gmju().s[91]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[16][1]++;
    }
    cov_ytm78gmju().s[92]++;
    this.state.reconnectAttempts++;
    const delay =
    /* istanbul ignore next */
    (cov_ytm78gmju().s[93]++, Math.min(this.config.reconnectInterval * Math.pow(2, this.state.reconnectAttempts - 1), 30000 // Max 30 seconds
    ));
    /* istanbul ignore next */
    cov_ytm78gmju().s[94]++;
    this.emit('reconnecting', {
      attempt: this.state.reconnectAttempts,
      delay
    });
    /* istanbul ignore next */
    cov_ytm78gmju().s[95]++;
    this.reconnectTimer = setTimeout(async () => {
      /* istanbul ignore next */
      cov_ytm78gmju().f[21]++;
      cov_ytm78gmju().s[96]++;
      this.reconnectTimer = null;
      /* istanbul ignore next */
      cov_ytm78gmju().s[97]++;
      try {
        /* istanbul ignore next */
        cov_ytm78gmju().s[98]++;
        await this.connect();
      } catch (error) {
        /* istanbul ignore next */
        cov_ytm78gmju().s[99]++;
        this.emit('reconnectError', error);
        /* istanbul ignore next */
        cov_ytm78gmju().s[100]++;
        if (this.state.reconnectAttempts < this.config.maxReconnectAttempts) {
          /* istanbul ignore next */
          cov_ytm78gmju().b[17][0]++;
          cov_ytm78gmju().s[101]++;
          this.scheduleReconnect();
        } else
        /* istanbul ignore next */
        {
          cov_ytm78gmju().b[17][1]++;
        }
      }
    }, delay);
  }
  /**
   * Start heartbeat monitoring
   */
  startHeartbeat() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[22]++;
    cov_ytm78gmju().s[102]++;
    if (this.heartbeatTimer) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[18][0]++;
      cov_ytm78gmju().s[103]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[18][1]++;
    }
    cov_ytm78gmju().s[104]++;
    this.heartbeatTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_ytm78gmju().f[23]++;
      cov_ytm78gmju().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_ytm78gmju().b[20][0]++, this.ws) &&
      /* istanbul ignore next */
      (cov_ytm78gmju().b[20][1]++, this.ws.readyState === WebSocket.OPEN)) {
        /* istanbul ignore next */
        cov_ytm78gmju().b[19][0]++;
        cov_ytm78gmju().s[106]++;
        this.ws.ping();
        /* istanbul ignore next */
        cov_ytm78gmju().s[107]++;
        this.emit('heartbeat', {
          type: 'ping',
          timestamp: new Date().toISOString()
        });
      } else
      /* istanbul ignore next */
      {
        cov_ytm78gmju().b[19][1]++;
      }
    }, this.config.heartbeatInterval);
  }
  /**
   * Stop heartbeat monitoring
   */
  stopHeartbeat() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[24]++;
    cov_ytm78gmju().s[108]++;
    if (this.heartbeatTimer) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[21][0]++;
      cov_ytm78gmju().s[109]++;
      clearInterval(this.heartbeatTimer);
      /* istanbul ignore next */
      cov_ytm78gmju().s[110]++;
      this.heartbeatTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[21][1]++;
    }
  }
  /**
   * Clear reconnection timer
   */
  clearReconnectTimer() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[25]++;
    cov_ytm78gmju().s[111]++;
    if (this.reconnectTimer) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[22][0]++;
      cov_ytm78gmju().s[112]++;
      clearTimeout(this.reconnectTimer);
      /* istanbul ignore next */
      cov_ytm78gmju().s[113]++;
      this.reconnectTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[22][1]++;
    }
  }
  /**
   * Clear connection timeout timer
   */
  clearConnectionTimeout() {
    /* istanbul ignore next */
    cov_ytm78gmju().f[26]++;
    cov_ytm78gmju().s[114]++;
    if (this.connectionTimeoutTimer) {
      /* istanbul ignore next */
      cov_ytm78gmju().b[23][0]++;
      cov_ytm78gmju().s[115]++;
      clearTimeout(this.connectionTimeoutTimer);
      /* istanbul ignore next */
      cov_ytm78gmju().s[116]++;
      this.connectionTimeoutTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_ytm78gmju().b[23][1]++;
    }
  }
}
/**
 * Default WebSocket configuration
 */
export const DEFAULT_WEBSOCKET_CONFIG =
/* istanbul ignore next */
(cov_ytm78gmju().s[117]++, {
  reconnectInterval: 1000,
  maxReconnectAttempts: 10,
  heartbeatInterval: 30000,
  connectionTimeout: 10000
});
/**
 * Create WebSocket client with default configuration
 */
export function createWebSocketClient(url, options =
/* istanbul ignore next */
(cov_ytm78gmju().b[24][0]++, {})) {
  /* istanbul ignore next */
  cov_ytm78gmju().f[27]++;
  const config =
  /* istanbul ignore next */
  (cov_ytm78gmju().s[118]++, {
    url,
    ...DEFAULT_WEBSOCKET_CONFIG,
    ...options
  });
  /* istanbul ignore next */
  cov_ytm78gmju().s[119]++;
  return new N8nWebSocketClient(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,