{"version":3,"names":["cov_ytm78gmju","actualCoverage","WebSocket","EventEmitter","z","WorkflowExecutionEventSchema","s","object","type","enum","data","executionId","string","workflowId","optional","nodeId","nodeName","timestamp","status","error","any","HeartbeatMessageSchema","literal","WebSocketMessageSchema","union","N8nWebSocketClient","ws","config","state","heartbeatTimer","reconnectTimer","connectionTimeoutTimer","constructor","f","connected","reconnectAttempts","connect","b","readyState","OPEN","Promise","resolve","reject","headers","apiKey","sessionToken","url","handshakeTimeout","connectionTimeout","setTimeout","CONNECTING","terminate","Error","on","clearConnectionTimeout","connectionTime","Date","startHeartbeat","emit","handleMessage","code","reason","handleDisconnect","toString","lastHeartbeat","toISOString","disconnect","stopHeartbeat","clearReconnectTimer","removeAllListeners","close","sendMessage","message","messageString","JSON","stringify","send","subscribeToWorkflow","resource","id","unsubscribeFromWorkflow","subscribeToExecutions","getConnectionState","isConnected","rawMessage","parse","lastMessage","maxReconnectAttempts","scheduleReconnect","delay","Math","min","reconnectInterval","pow","attempt","setInterval","ping","heartbeatInterval","clearInterval","clearTimeout","DEFAULT_WEBSOCKET_CONFIG","createWebSocketClient","options"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/websocketClient.ts"],"sourcesContent":["/**\n * WebSocket Client for n8n Fork Real-time Communication\n *\n * Provides WebSocket connectivity to n8n fork's real-time push service\n * for workflow execution updates, progress monitoring, and bidirectional communication.\n */\n\nimport WebSocket from 'ws';\nimport { EventEmitter } from 'events';\nimport { z } from 'zod';\n\n// WebSocket message schemas\nexport const WorkflowExecutionEventSchema = z.object({\n  type: z.enum(['workflowExecutionStarted', 'workflowExecutionCompleted', 'nodeExecutionStarted', 'nodeExecutionCompleted']),\n  data: z.object({\n    executionId: z.string(),\n    workflowId: z.string().optional(),\n    nodeId: z.string().optional(),\n    nodeName: z.string().optional(),\n    timestamp: z.string(),\n    status: z.enum(['running', 'success', 'error', 'waiting']).optional(),\n    error: z.string().optional(),\n    data: z.any().optional(),\n  }),\n});\n\nexport const HeartbeatMessageSchema = z.object({\n  type: z.literal('heartbeat'),\n  timestamp: z.string(),\n});\n\nexport const WebSocketMessageSchema = z.union([\n  WorkflowExecutionEventSchema,\n  HeartbeatMessageSchema,\n  z.object({\n    type: z.string(),\n    data: z.any(),\n  }),\n]);\n\nexport type WorkflowExecutionEvent = z.infer<typeof WorkflowExecutionEventSchema>;\nexport type HeartbeatMessage = z.infer<typeof HeartbeatMessageSchema>;\nexport type WebSocketMessage = z.infer<typeof WebSocketMessageSchema>;\n\nexport interface WebSocketConfig {\n  url: string;\n  apiKey?: string;\n  sessionToken?: string;\n  reconnectInterval: number;\n  maxReconnectAttempts: number;\n  heartbeatInterval: number;\n  connectionTimeout: number;\n  headers?: Record<string, string>;\n}\n\nexport interface ConnectionState {\n  connected: boolean;\n  reconnectAttempts: number;\n  lastHeartbeat?: Date;\n  lastMessage?: Date;\n  connectionTime?: Date;\n}\n\n/**\n * WebSocket Client for n8n Fork Integration\n *\n * Handles real-time communication with n8n fork's push service,\n * including automatic reconnection, heartbeat monitoring, and event streaming.\n */\nexport class N8nWebSocketClient extends EventEmitter {\n  private ws: WebSocket | null = null;\n  private config: WebSocketConfig;\n  private state: ConnectionState;\n  private heartbeatTimer: NodeJS.Timeout | null = null;\n  private reconnectTimer: NodeJS.Timeout | null = null;\n  private connectionTimeoutTimer: NodeJS.Timeout | null = null;\n\n  constructor(config: WebSocketConfig) {\n    super();\n    this.config = config;\n    this.state = {\n      connected: false,\n      reconnectAttempts: 0,\n    };\n  }\n\n  /**\n   * Connect to n8n fork WebSocket endpoint\n   */\n  public async connect(): Promise<void> {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers: Record<string, string> = {\n          'User-Agent': 'n8n-mcp-server/2.0.0',\n          ...this.config.headers,\n        };\n\n        // Add authentication headers\n        if (this.config.apiKey) {\n          headers['X-N8N-API-KEY'] = this.config.apiKey;\n        }\n\n        if (this.config.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.config.sessionToken}`;\n        }\n\n        this.ws = new WebSocket(this.config.url, {\n          headers,\n          handshakeTimeout: this.config.connectionTimeout,\n        });\n\n        // Set connection timeout\n        this.connectionTimeoutTimer = setTimeout(() => {\n          if (this.ws && this.ws.readyState === WebSocket.CONNECTING) {\n            this.ws.terminate();\n            reject(new Error('WebSocket connection timeout'));\n          }\n        }, this.config.connectionTimeout);\n\n        this.ws.on('open', () => {\n          this.clearConnectionTimeout();\n          this.state.connected = true;\n          this.state.connectionTime = new Date();\n          this.state.reconnectAttempts = 0;\n          \n          this.startHeartbeat();\n          this.emit('connected');\n          resolve();\n        });\n\n        this.ws.on('message', (data: WebSocket.Data) => {\n          this.handleMessage(data);\n        });\n\n        this.ws.on('close', (code: number, reason: Buffer) => {\n          this.handleDisconnect(code, reason.toString());\n        });\n\n        this.ws.on('error', (error: Error) => {\n          this.clearConnectionTimeout();\n          this.emit('error', error);\n          reject(error);\n        });\n\n        this.ws.on('pong', () => {\n          this.state.lastHeartbeat = new Date();\n          this.emit('heartbeat', { type: 'pong', timestamp: new Date().toISOString() });\n        });\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Disconnect from WebSocket\n   */\n  public async disconnect(): Promise<void> {\n    this.stopHeartbeat();\n    this.clearReconnectTimer();\n    this.clearConnectionTimeout();\n\n    if (this.ws) {\n      this.ws.removeAllListeners();\n      \n      if (this.ws.readyState === WebSocket.OPEN) {\n        this.ws.close(1000, 'Client disconnect');\n      } else {\n        this.ws.terminate();\n      }\n      \n      this.ws = null;\n    }\n\n    this.state.connected = false;\n    this.emit('disconnected');\n  }\n\n  /**\n   * Send message to n8n fork\n   */\n  public async sendMessage(message: any): Promise<void> {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      throw new Error('WebSocket not connected');\n    }\n\n    const messageString = JSON.stringify(message);\n    \n    return new Promise((resolve, reject) => {\n      this.ws!.send(messageString, (error?: Error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * Subscribe to workflow execution updates\n   */\n  public async subscribeToWorkflow(workflowId: string): Promise<void> {\n    await this.sendMessage({\n      type: 'subscribe',\n      resource: 'workflow',\n      id: workflowId,\n    });\n  }\n\n  /**\n   * Unsubscribe from workflow execution updates\n   */\n  public async unsubscribeFromWorkflow(workflowId: string): Promise<void> {\n    await this.sendMessage({\n      type: 'unsubscribe',\n      resource: 'workflow',\n      id: workflowId,\n    });\n  }\n\n  /**\n   * Subscribe to all execution updates\n   */\n  public async subscribeToExecutions(): Promise<void> {\n    await this.sendMessage({\n      type: 'subscribe',\n      resource: 'executions',\n    });\n  }\n\n  /**\n   * Get current connection state\n   */\n  public getConnectionState(): ConnectionState {\n    return { ...this.state };\n  }\n\n  /**\n   * Check if WebSocket is connected\n   */\n  public isConnected(): boolean {\n    return this.state.connected && this.ws?.readyState === WebSocket.OPEN;\n  }\n\n  /**\n   * Handle incoming WebSocket message\n   */\n  private handleMessage(data: WebSocket.Data): void {\n    try {\n      const messageString = data.toString();\n      const rawMessage = JSON.parse(messageString);\n      \n      // Validate message schema\n      const message = WebSocketMessageSchema.parse(rawMessage);\n      \n      this.state.lastMessage = new Date();\n      this.emit('message', message);\n\n      // Handle specific message types\n      switch (message.type) {\n        case 'workflowExecutionStarted':\n        case 'workflowExecutionCompleted':\n        case 'nodeExecutionStarted':\n        case 'nodeExecutionCompleted':\n          this.emit('workflowEvent', message as WorkflowExecutionEvent);\n          break;\n          \n        case 'heartbeat':\n          this.state.lastHeartbeat = new Date();\n          this.emit('heartbeat', message as HeartbeatMessage);\n          break;\n          \n        default:\n          this.emit('unknownMessage', message);\n      }\n\n    } catch (error) {\n      this.emit('messageError', error);\n    }\n  }\n\n  /**\n   * Handle WebSocket disconnect\n   */\n  private handleDisconnect(code: number, reason: string): void {\n    this.state.connected = false;\n    this.stopHeartbeat();\n    this.clearConnectionTimeout();\n\n    this.emit('disconnected', { code, reason });\n\n    // Attempt reconnection if not a clean close\n    if (code !== 1000 && this.state.reconnectAttempts < this.config.maxReconnectAttempts) {\n      this.scheduleReconnect();\n    } else if (this.state.reconnectAttempts >= this.config.maxReconnectAttempts) {\n      this.emit('maxReconnectAttemptsReached');\n    }\n  }\n\n  /**\n   * Schedule reconnection attempt\n   */\n  private scheduleReconnect(): void {\n    if (this.reconnectTimer) {\n      return;\n    }\n\n    this.state.reconnectAttempts++;\n    const delay = Math.min(\n      this.config.reconnectInterval * Math.pow(2, this.state.reconnectAttempts - 1),\n      30000 // Max 30 seconds\n    );\n\n    this.emit('reconnecting', { attempt: this.state.reconnectAttempts, delay });\n\n    this.reconnectTimer = setTimeout(async () => {\n      this.reconnectTimer = null;\n      \n      try {\n        await this.connect();\n      } catch (error) {\n        this.emit('reconnectError', error);\n        \n        if (this.state.reconnectAttempts < this.config.maxReconnectAttempts) {\n          this.scheduleReconnect();\n        }\n      }\n    }, delay);\n  }\n\n  /**\n   * Start heartbeat monitoring\n   */\n  private startHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      return;\n    }\n\n    this.heartbeatTimer = setInterval(() => {\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n        this.ws.ping();\n        this.emit('heartbeat', { type: 'ping', timestamp: new Date().toISOString() });\n      }\n    }, this.config.heartbeatInterval);\n  }\n\n  /**\n   * Stop heartbeat monitoring\n   */\n  private stopHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  /**\n   * Clear reconnection timer\n   */\n  private clearReconnectTimer(): void {\n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n  }\n\n  /**\n   * Clear connection timeout timer\n   */\n  private clearConnectionTimeout(): void {\n    if (this.connectionTimeoutTimer) {\n      clearTimeout(this.connectionTimeoutTimer);\n      this.connectionTimeoutTimer = null;\n    }\n  }\n}\n\n/**\n * Default WebSocket configuration\n */\nexport const DEFAULT_WEBSOCKET_CONFIG: Partial<WebSocketConfig> = {\n  reconnectInterval: 1000,\n  maxReconnectAttempts: 10,\n  heartbeatInterval: 30000,\n  connectionTimeout: 10000,\n};\n\n/**\n * Create WebSocket client with default configuration\n */\nexport function createWebSocketClient(\n  url: string, \n  options: Partial<WebSocketConfig> = {}\n): N8nWebSocketClient {\n  const config: WebSocketConfig = {\n    url,\n    ...DEFAULT_WEBSOCKET_CONFIG,\n    ...options,\n  } as WebSocketConfig;\n\n  return new N8nWebSocketClient(config);\n}"],"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","ignoreList":[]}