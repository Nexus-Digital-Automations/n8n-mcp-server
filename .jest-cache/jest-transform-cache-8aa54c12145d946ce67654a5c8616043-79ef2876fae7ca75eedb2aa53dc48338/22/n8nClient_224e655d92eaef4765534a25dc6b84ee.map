{"version":3,"names":["cov_1ts539ri58","actualCoverage","fetch","N8nClient","baseUrl","apiKey","authConfig","constructor","f","s","replace","b","type","setAuthConfig","config","getAuthConfig","makeRequest","endpoint","options","url","headers","Accept","sessionToken","credentials","accessToken","response","ok","errorText","text","Error","status","contentType","get","includes","json","error","message","getUsers","params","URLSearchParams","limit","append","toString","cursor","query","getUser","id","createUser","userData","method","body","JSON","stringify","updateUser","deleteUser","getWorkflows","projectId","getWorkflow","createWorkflow","workflowData","updateWorkflow","deleteWorkflow","activateWorkflow","deactivateWorkflow","getExecutions","getExecution","deleteExecution","getCredentials","getCredential","createCredential","credentialData","deleteCredential","getCredentialSchema","credentialType","getProjects","getProject","createProject","projectData","updateProject","deleteProject","getVariables","createVariable","variableData","deleteVariable","getTags","getTag","createTag","tagData","updateTag","deleteTag","getWorkflowTags","workflowId","updateWorkflowTags","tagIds","generateAuditReport","getCommunityPackages","installCommunityPackage","packageData","updateCommunityPackage","packageName","encodeURIComponent","uninstallCommunityPackage","getNodeTypes","getNodeType","nodeType","getCommunityNodeTypes","getCommunityNodeType","name","getDynamicNodeParameters","getResourceLocatorResults","updateUserRole","roleData","getProjectUsers","addUserToProject","updateProjectUser","userId","removeUserFromProject","transferWorkflow","transferData","updateCredential","transferCredential","getVariable","updateVariable","getSourceControlStatus","pullFromRepository","pullData","setBranch","branchData","getCommitHistory","checkSyncStatus","login","loginData","logout","getSessionInfo","refreshSession","generateOAuth2AuthUrl","state","response_type","client_id","clientId","redirect_uri","redirectUri","scope","join","authorizationUrl","exchangeOAuth2Code","code","tokenUrl","grant_type","client_secret","clientSecret","tokenData","access_token","refreshToken","refresh_token","expiresIn","expires_in","tokenType","token_type","refreshOAuth2Token","getAINodes","classifyAINode","getAINodeSuggestions"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts"],"sourcesContent":["import fetch from 'node-fetch';\nimport {\n  N8nUser,\n  N8nWorkflow,\n  N8nExecution,\n  N8nCredential,\n  N8nProject,\n  N8nVariable,\n  N8nTag,\n  N8nAuditReport,\n  N8nCommunityPackage,\n  N8nNodeTypeDescription,\n  ApiResponse,\n  PaginationOptions,\n  CreateUserRequest,\n  UpdateUserRequest,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  CreateCredentialRequest,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  CreateVariableRequest,\n  CreateTagRequest,\n  UpdateTagRequest,\n  CommunityPackageInstallRequest,\n  CommunityPackageUpdateRequest,\n  DynamicNodeOptions,\n  DynamicNodeParameter,\n  ResourceLocatorResult,\n  AINodeClassification,\n  AINodeSuggestion,\n  ProjectUserRequest,\n  ProjectUserResponse,\n  WorkflowTransferRequest,\n  CredentialTransferRequest,\n  UserRoleUpdateRequest,\n  SourceControlStatus,\n  SourceControlCommit,\n  SourceControlPullRequest,\n  SourceControlBranchRequest,\n  AuthenticationConfig,\n  SessionInfo,\n  LoginRequest,\n  LoginResponse,\n  OAuth2Config,\n  OAuth2Token,\n  VariableUpdateRequest,\n} from '../types/n8n.js';\n\nexport class N8nClient {\n  private authConfig: AuthenticationConfig;\n\n  constructor(\n    private baseUrl: string,\n    private apiKey: string,\n    authConfig?: AuthenticationConfig\n  ) {\n    // Remove trailing slash if present\n    this.baseUrl = baseUrl.replace(/\\/$/, '');\n    // Ensure apiKey is properly assigned\n    this.apiKey = apiKey;\n    // Set up authentication configuration\n    this.authConfig = authConfig || { type: 'api-key' };\n  }\n\n  // Method to update authentication configuration\n  setAuthConfig(config: AuthenticationConfig): void {\n    this.authConfig = config;\n  }\n\n  // Method to get current authentication configuration\n  getAuthConfig(): AuthenticationConfig {\n    return this.authConfig;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: Record<string, unknown> = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}/api/v1${endpoint}`;\n    const headers: Record<string, string> = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    // Apply authentication based on configuration\n    switch (this.authConfig.type) {\n      case 'api-key':\n        headers['X-N8N-API-KEY'] = this.apiKey;\n        break;\n      case 'session':\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      case 'oauth2':\n        if (this.authConfig.credentials?.accessToken) {\n          headers['Authorization'] = `Bearer ${this.authConfig.credentials.accessToken}`;\n        }\n        break;\n      case 'saml':\n      case 'oidc':\n      case 'ldap':\n        // These typically use session-based auth after initial login\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      default:\n        // Fallback to API key\n        headers['X-N8N-API-KEY'] = this.apiKey;\n    }\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...((options.headers as Record<string, string>) || {}),\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return (await response.json()) as T;\n      }\n\n      return (await response.text()) as unknown as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`n8n API request failed: ${error.message}`);\n      }\n      throw new Error('n8n API request failed with unknown error');\n    }\n  }\n\n  // User Management\n  async getUsers(options: PaginationOptions = {}): Promise<ApiResponse<N8nUser[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nUser[]>>(`/users${query}`);\n  }\n\n  async getUser(id: string): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`);\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(id: string, userData: UpdateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.makeRequest<void>(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Workflow Management\n  async getWorkflows(options: PaginationOptions = {}): Promise<ApiResponse<N8nWorkflow[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nWorkflow[]>>(`/workflows${query}`);\n  }\n\n  async getWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`);\n  }\n\n  async createWorkflow(workflowData: CreateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>('/workflows', {\n      method: 'POST',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async updateWorkflow(id: string, workflowData: UpdateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async deleteWorkflow(id: string): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async activateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/activate`, {\n      method: 'POST',\n    });\n  }\n\n  async deactivateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/deactivate`, {\n      method: 'POST',\n    });\n  }\n\n  // Execution Management\n  async getExecutions(options: PaginationOptions = {}): Promise<ApiResponse<N8nExecution[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nExecution[]>>(`/executions${query}`);\n  }\n\n  async getExecution(id: string): Promise<N8nExecution> {\n    return this.makeRequest<N8nExecution>(`/executions/${id}`);\n  }\n\n  async deleteExecution(id: string): Promise<void> {\n    await this.makeRequest<void>(`/executions/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Credential Management\n  async getCredentials(options: PaginationOptions = {}): Promise<ApiResponse<N8nCredential[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nCredential[]>>(`/credentials${query}`);\n  }\n\n  async getCredential(id: string): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`);\n  }\n\n  async createCredential(credentialData: CreateCredentialRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>('/credentials', {\n      method: 'POST',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async deleteCredential(id: string): Promise<void> {\n    await this.makeRequest<void>(`/credentials/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getCredentialSchema(credentialType: string): Promise<Record<string, unknown>> {\n    return this.makeRequest<Record<string, unknown>>(`/credentials/schema/${credentialType}`);\n  }\n\n  // Project Management (Enterprise)\n  async getProjects(options: PaginationOptions = {}): Promise<ApiResponse<N8nProject[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nProject[]>>(`/projects${query}`);\n  }\n\n  async getProject(id: string): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`);\n  }\n\n  async createProject(projectData: CreateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>('/projects', {\n      method: 'POST',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async updateProject(id: string, projectData: UpdateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Variable Management (Enterprise)\n  async getVariables(options: PaginationOptions = {}): Promise<ApiResponse<N8nVariable[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nVariable[]>>(`/variables${query}`);\n  }\n\n  async createVariable(variableData: CreateVariableRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>('/variables', {\n      method: 'POST',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  async deleteVariable(id: string): Promise<void> {\n    await this.makeRequest<void>(`/variables/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tag Management\n  async getTags(options: PaginationOptions = {}): Promise<ApiResponse<N8nTag[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nTag[]>>(`/tags${query}`);\n  }\n\n  async getTag(id: string): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`);\n  }\n\n  async createTag(tagData: CreateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>('/tags', {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(id: string, tagData: UpdateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(id: string): Promise<void> {\n    await this.makeRequest<void>(`/tags/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWorkflowTags(workflowId: string): Promise<N8nTag[]> {\n    return this.makeRequest<N8nTag[]>(`/workflows/${workflowId}/tags`);\n  }\n\n  async updateWorkflowTags(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${workflowId}/tags`, {\n      method: 'PUT',\n      body: JSON.stringify({ tagIds }),\n    });\n  }\n\n  // Audit Report\n  async generateAuditReport(): Promise<N8nAuditReport> {\n    return this.makeRequest<N8nAuditReport>('/audit');\n  }\n\n  // Community Package Management\n  async getCommunityPackages(): Promise<ApiResponse<N8nCommunityPackage[]>> {\n    return this.makeRequest<ApiResponse<N8nCommunityPackage[]>>('/community-packages');\n  }\n\n  async installCommunityPackage(packageData: CommunityPackageInstallRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>('/community-packages', {\n      method: 'POST',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async updateCommunityPackage(packageName: string, packageData: CommunityPackageUpdateRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'PATCH',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async uninstallCommunityPackage(packageName: string): Promise<void> {\n    await this.makeRequest<void>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Node Type Management\n  async getNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/node-types');\n  }\n\n  async getNodeType(nodeType: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/node-types/${encodeURIComponent(nodeType)}`);\n  }\n\n  async getCommunityNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/community-node-types');\n  }\n\n  async getCommunityNodeType(name: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/community-node-types/${encodeURIComponent(name)}`);\n  }\n\n  // Dynamic Node Parameters\n  async getDynamicNodeParameters(options: DynamicNodeOptions): Promise<DynamicNodeParameter[]> {\n    return this.makeRequest<DynamicNodeParameter[]>('/dynamic-node-parameters/options', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  async getResourceLocatorResults(options: DynamicNodeOptions): Promise<ResourceLocatorResult[]> {\n    return this.makeRequest<ResourceLocatorResult[]>('/dynamic-node-parameters/resource-locator', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  // Enhanced User Management (n8n fork)\n  async updateUserRole(id: string, roleData: UserRoleUpdateRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}/role`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  // Enhanced Project Management (n8n fork)\n  async getProjectUsers(projectId: string): Promise<ProjectUserResponse[]> {\n    return this.makeRequest<ProjectUserResponse[]>(`/projects/${projectId}/users`);\n  }\n\n  async addUserToProject(projectId: string, userData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users`, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateProjectUser(projectId: string, userId: string, roleData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  async removeUserFromProject(projectId: string, userId: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${projectId}/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Enhanced Workflow Management (n8n fork)\n  async transferWorkflow(id: string, transferData: WorkflowTransferRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Credential Management (n8n fork)  \n  async updateCredential(id: string, credentialData: Partial<CreateCredentialRequest>): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async transferCredential(id: string, transferData: CredentialTransferRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Variable Management (n8n fork)\n  async getVariable(id: string): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`);\n  }\n\n  async updateVariable(id: string, variableData: VariableUpdateRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  // Source Control Integration (Enterprise n8n fork)\n  async getSourceControlStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/repository-status');\n  }\n\n  async pullFromRepository(pullData: SourceControlPullRequest = {}): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/pull', {\n      method: 'POST',\n      body: JSON.stringify(pullData),\n    });\n  }\n\n  async setBranch(branchData: SourceControlBranchRequest): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/set-branch', {\n      method: 'POST',\n      body: JSON.stringify(branchData),\n    });\n  }\n\n  async getCommitHistory(): Promise<SourceControlCommit[]> {\n    return this.makeRequest<SourceControlCommit[]>('/source-control/commit-history');\n  }\n\n  async checkSyncStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/sync-check');\n  }\n\n  // Authentication Methods (n8n fork)\n  async login(loginData: LoginRequest): Promise<LoginResponse> {\n    return this.makeRequest<LoginResponse>('/login', {\n      method: 'POST',\n      body: JSON.stringify(loginData),\n    });\n  }\n\n  async logout(): Promise<void> {\n    await this.makeRequest<void>('/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getSessionInfo(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session');\n  }\n\n  async refreshSession(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session/refresh', {\n      method: 'POST',\n    });\n  }\n\n  // OAuth2 Helper Methods (n8n fork)\n  generateOAuth2AuthUrl(config: OAuth2Config, state?: string): string {\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scope?.join(' ') || '',\n    });\n\n    if (state) {\n      params.append('state', state);\n    }\n\n    return `${config.authorizationUrl}?${params.toString()}`;\n  }\n\n  async exchangeOAuth2Code(config: OAuth2Config, code: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'authorization_code',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      code,\n      redirect_uri: config.redirectUri,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token exchange failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  async refreshOAuth2Token(config: OAuth2Config, refreshToken: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'refresh_token',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      refresh_token: refreshToken,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token refresh failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token || refreshToken, // Keep old refresh token if new one not provided\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  // AI Node Features\n  async getAINodes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/ai-nodes');\n  }\n\n  async classifyAINode(nodeType: string): Promise<AINodeClassification> {\n    return this.makeRequest<AINodeClassification>('/ai-nodes/classify', {\n      method: 'POST',\n      body: JSON.stringify({ nodeType }),\n    });\n  }\n\n  async getAINodeSuggestions(nodeType: string): Promise<AINodeSuggestion[]> {\n    return this.makeRequest<AINodeSuggestion[]>(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);\n  }\n}\n"],"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","ignoreList":[]}