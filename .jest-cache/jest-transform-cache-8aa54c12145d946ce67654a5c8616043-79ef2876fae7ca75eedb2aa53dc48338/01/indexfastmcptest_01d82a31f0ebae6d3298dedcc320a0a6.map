{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/index-fastmcp.test.ts","mappings":"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","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/index-fastmcp.test.ts"],"sourcesContent":["/* eslint-disable no-undef */\nimport { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\n\n// Mock all dependencies before any imports\njest.mock('fastmcp', () => ({\n  FastMCP: jest.fn().mockImplementation(() => ({\n    addTool: jest.fn().mockReturnThis(),\n    start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void),\n    on: jest.fn().mockReturnThis(),\n  })),\n}));\n\n// Using global Zod mock from tests/__mocks__/zod.js\n\njest.mock('../../src/client/n8nClient.js', () => ({\n  N8nClient: jest.fn(),\n}));\n\njest.mock('../../src/tools/workflow.js', () => ({\n  createWorkflowTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/projects.js', () => ({\n  createProjectTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/users.js', () => ({\n  createUserTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/variables.js', () => ({\n  createVariableTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/executions.js', () => ({\n  createExecutionTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/tags.js', () => ({\n  createTagTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/credentials.js', () => ({\n  createCredentialTools: jest.fn(),\n}));\n\njest.mock('../../src/tools/audit.js', () => ({\n  createAuditTools: jest.fn(),\n}));\n\njest.mock('../../src/transport/transportConfig.js', () => ({\n  detectTransportConfig: jest.fn(),\n  validateTransportConfig: jest.fn(),\n  getServerUrl: jest.fn(),\n}));\n\njest.mock('../../src/transport/sseTransport.js', () => ({\n  createSSETransport: jest.fn(),\n  SSEUtils: {\n    validateConfig: jest.fn(),\n  },\n}));\n\n// Mock process methods\nconst originalProcessExit = process.exit;\nconst originalProcessOn = process.on;\n\ndescribe('src/index-fastmcp.ts - FastMCP Server Entry Point', () => {\n  let mockFastMCP: any;\n  let mockN8nClient: any;\n  let mockConsoleLog: any;\n  let mockConsoleError: any;\n\n  beforeEach(() => {\n    // Mock console methods\n    mockConsoleLog = jest.spyOn(console, 'log').mockImplementation(() => {});\n    mockConsoleError = jest.spyOn(console, 'error').mockImplementation(() => {});\n\n    // Mock process methods\n    process.exit = jest.fn() as any;\n    process.on = jest.fn() as any;\n\n    // Reset all mocks\n    jest.clearAllMocks();\n\n    // Get mock instances\n    const { FastMCP } = require('fastmcp');\n    const { N8nClient } = require('../../src/client/n8nClient.js');\n\n    mockFastMCP = {\n      addTool: jest.fn().mockReturnThis(),\n      start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void),\n      on: jest.fn().mockReturnThis(),\n    };\n    FastMCP.mockImplementation(() => mockFastMCP);\n\n    mockN8nClient = {\n      getWorkflows: jest.fn<() => Promise<{ data: any[] }>>().mockResolvedValue({ data: [] }),\n    };\n    N8nClient.mockImplementation(() => mockN8nClient);\n\n    // Set up default mock behaviors\n    const transportConfig = require('../../src/transport/transportConfig.js');\n    const sseTransport = require('../../src/transport/sseTransport.js');\n\n    transportConfig.detectTransportConfig.mockReturnValue({ type: 'stdio' });\n    transportConfig.validateTransportConfig.mockReturnValue({ type: 'stdio' });\n    transportConfig.getServerUrl.mockReturnValue(null);\n\n    sseTransport.createSSETransport.mockReturnValue({\n      start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void),\n      stop: jest.fn(),\n    });\n    sseTransport.SSEUtils.validateConfig.mockReturnValue(true);\n  });\n\n  afterEach(() => {\n    // Restore original functions\n    process.exit = originalProcessExit;\n    process.on = originalProcessOn;\n    mockConsoleLog.mockRestore();\n    mockConsoleError.mockRestore();\n\n    // Clear module cache to ensure fresh imports\n    jest.resetModules();\n  });\n\n  describe('FastMCP Server Initialization', () => {\n    it('should create FastMCP instance with correct configuration', async () => {\n      const { FastMCP } = require('fastmcp');\n\n      // Import the module to trigger initialization\n      await import('../../src/index-fastmcp.js');\n\n      expect(FastMCP).toHaveBeenCalledWith({\n        name: 'n8n-mcp-server',\n        version: '2.0.0',\n        instructions: expect.stringContaining(\n          'This server provides comprehensive access to n8n workflows'\n        ),\n      });\n    });\n\n    it('should include comprehensive instructions in FastMCP config', async () => {\n      const { FastMCP } = require('fastmcp');\n\n      await import('../../src/index-fastmcp.js');\n\n      const config = FastMCP.mock.calls[0][0];\n      expect(config.instructions).toContain('Key Features:');\n      expect(config.instructions).toContain('Complete workflow management');\n      expect(config.instructions).toContain('User and project management');\n      expect(config.instructions).toContain('Execution monitoring');\n      expect(config.instructions).toContain('Getting Started:');\n      expect(config.instructions).toContain('init-n8n');\n    });\n  });\n\n  describe('Tool Registration', () => {\n    it('should register all tool categories', async () => {\n      const toolMocks = {\n        createWorkflowTools: require('../../src/tools/workflow.js').createWorkflowTools,\n        createProjectTools: require('../../src/tools/projects.js').createProjectTools,\n        createUserTools: require('../../src/tools/users.js').createUserTools,\n        createVariableTools: require('../../src/tools/variables.js').createVariableTools,\n        createExecutionTools: require('../../src/tools/executions.js').createExecutionTools,\n        createTagTools: require('../../src/tools/tags.js').createTagTools,\n        createCredentialTools: require('../../src/tools/credentials.js').createCredentialTools,\n        createAuditTools: require('../../src/tools/audit.js').createAuditTools,\n      };\n\n      await import('../../src/index-fastmcp.js');\n\n      Object.values(toolMocks).forEach(mock => {\n        expect(mock).toHaveBeenCalledWith(expect.any(Function), mockFastMCP);\n      });\n    });\n\n    it('should pass client getter function to all tool creators', async () => {\n      const { createWorkflowTools } = require('../../src/tools/workflow.js');\n\n      await import('../../src/index-fastmcp.js');\n\n      // Get the client getter function that was passed\n      const clientGetter = createWorkflowTools.mock.calls[0][0];\n      expect(typeof clientGetter).toBe('function');\n\n      // Initially should return null (no client set)\n      expect(clientGetter()).toBeNull();\n    });\n  });\n\n  describe('Custom Tools Registration', () => {\n    it('should register init-n8n tool', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const initToolCalls = mockFastMCP.addTool.mock.calls.filter(\n        (call: any) => call[0].name === 'init-n8n'\n      );\n\n      expect(initToolCalls).toHaveLength(1);\n\n      const initTool = initToolCalls[0][0];\n      expect(initTool).toHaveProperty('name', 'init-n8n');\n      expect(initTool).toHaveProperty('description');\n      expect(initTool).toHaveProperty('parameters');\n      expect(initTool).toHaveProperty('execute');\n      expect(initTool).toHaveProperty('annotations');\n    });\n\n    it('should register status tool', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const statusToolCalls = mockFastMCP.addTool.mock.calls.filter(\n        (call: any) => call[0].name === 'status'\n      );\n\n      expect(statusToolCalls).toHaveLength(1);\n\n      const statusTool = statusToolCalls[0][0];\n      expect(statusTool).toHaveProperty('name', 'status');\n      expect(statusTool).toHaveProperty('description');\n      expect(statusTool).toHaveProperty('parameters');\n      expect(statusTool).toHaveProperty('execute');\n      expect(statusTool).toHaveProperty('annotations');\n    });\n\n    it('should configure init-n8n tool with proper annotations', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      expect(initTool).toBeDefined();\n      if (initTool) {\n        expect(initTool.annotations).toEqual({\n          title: 'Initialize n8n Connection',\n          readOnlyHint: false,\n          destructiveHint: false,\n          idempotentHint: true,\n          openWorldHint: true,\n        });\n      }\n    });\n\n    it('should configure status tool with proper annotations', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'status'\n      )?.[0];\n\n      expect(statusTool).toBeDefined();\n      if (statusTool) {\n        expect(statusTool.annotations).toEqual({\n          title: 'Check n8n Connection Status',\n          readOnlyHint: true,\n          destructiveHint: false,\n          idempotentHint: true,\n          openWorldHint: true,\n        });\n      }\n    });\n  });\n\n  describe('init-n8n Tool Execution', () => {\n    it('should successfully initialize n8n connection', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      const result = await initTool.execute(args);\n\n      expect(result).toBe('✅ Successfully connected to n8n instance at http://localhost:5678');\n      expect(mockN8nClient.getWorkflows).toHaveBeenCalledWith({ limit: 1 });\n    });\n\n    it('should handle connection errors gracefully', async () => {\n      mockN8nClient.getWorkflows.mockRejectedValueOnce(new Error('Connection failed'));\n\n      await import('../../src/index-fastmcp.js');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      await expect(initTool.execute(args)).rejects.toThrow(\n        'Failed to connect to n8n: Connection failed'\n      );\n    });\n\n    it('should handle unknown connection errors', async () => {\n      mockN8nClient.getWorkflows.mockRejectedValueOnce('Unknown error');\n\n      await import('../../src/index-fastmcp.js');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      const args = {\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      };\n\n      await expect(initTool.execute(args)).rejects.toThrow(\n        'Failed to connect to n8n with unknown error'\n      );\n    });\n  });\n\n  describe('status Tool Execution', () => {\n    it('should return not connected message when no client is set', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'status'\n      )?.[0];\n\n      const result = await statusTool.execute();\n\n      expect(result).toBe(\"❌ Not connected to n8n. Please run 'init-n8n' first.\");\n    });\n\n    it('should return connected status when client is working', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      // First initialize a client\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      await initTool.execute({\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      });\n\n      // Now check status\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'status'\n      )?.[0];\n\n      const result = await statusTool.execute();\n\n      expect(result).toBe('✅ Connected to n8n and ready to use.');\n    });\n\n    it('should return connection error when client fails', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      // Initialize a client first\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      await initTool.execute({\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      });\n\n      // Make subsequent calls fail\n      mockN8nClient.getWorkflows.mockRejectedValueOnce(new Error('API Error'));\n\n      const statusTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'status'\n      )?.[0];\n\n      const result = await statusTool.execute();\n\n      expect(result).toBe('⚠️ Connected but unable to communicate with n8n: API Error');\n    });\n  });\n\n  describe('Server Startup with stdio Transport', () => {\n    it('should start server with stdio transport', async () => {\n      const {\n        detectTransportConfig,\n        validateTransportConfig,\n      } = require('../../src/transport/transportConfig.js');\n\n      detectTransportConfig.mockReturnValue({ type: 'stdio' });\n      validateTransportConfig.mockReturnValue({ type: 'stdio' });\n\n      await import('../../src/index-fastmcp.js');\n\n      // Wait for async operations to complete\n      await new Promise(resolve => setImmediate(resolve));\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('🚀 Starting n8n MCP Server...');\n      expect(mockConsoleLog).toHaveBeenCalledWith('📡 Transport type: stdio');\n      expect(mockFastMCP.start).toHaveBeenCalledWith({ transportType: 'stdio' });\n      expect(mockConsoleLog).toHaveBeenCalledWith('📟 Server started with stdio transport');\n      expect(mockConsoleLog).toHaveBeenCalledWith('✅ n8n MCP Server is ready!');\n    });\n\n    it('should call transport detection and validation', async () => {\n      const {\n        detectTransportConfig,\n        validateTransportConfig,\n      } = require('../../src/transport/transportConfig.js');\n\n      await import('../../src/index-fastmcp.js');\n\n      await new Promise(resolve => setImmediate(resolve));\n\n      expect(detectTransportConfig).toHaveBeenCalled();\n      expect(validateTransportConfig).toHaveBeenCalled();\n    });\n  });\n\n  describe('Server Startup with SSE Transport', () => {\n    it('should start server with SSE transport', async () => {\n      const {\n        detectTransportConfig,\n        validateTransportConfig,\n        getServerUrl,\n      } = require('../../src/transport/transportConfig.js');\n      const { createSSETransport, SSEUtils } = require('../../src/transport/sseTransport.js');\n\n      const mockSSETransport = {\n        start: jest.fn<() => Promise<void>>().mockResolvedValue(undefined as void),\n      };\n\n      detectTransportConfig.mockReturnValue({\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      validateTransportConfig.mockReturnValue({\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      SSEUtils.validateConfig.mockReturnValue(true);\n      createSSETransport.mockReturnValue(mockSSETransport);\n      getServerUrl.mockReturnValue('http://localhost:3000');\n\n      await import('../../src/index-fastmcp.js');\n\n      await new Promise(resolve => setImmediate(resolve));\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('🚀 Starting n8n MCP Server...');\n      expect(mockConsoleLog).toHaveBeenCalledWith('📡 Transport type: sse');\n      expect(SSEUtils.validateConfig).toHaveBeenCalled();\n      expect(createSSETransport).toHaveBeenCalledWith(mockFastMCP, {\n        type: 'sse',\n        port: 3000,\n        host: 'localhost',\n      });\n      expect(mockSSETransport.start).toHaveBeenCalled();\n      expect(mockConsoleLog).toHaveBeenCalledWith('🌐 Server URL: http://localhost:3000');\n      expect(mockConsoleLog).toHaveBeenCalledWith('✅ n8n MCP Server is ready!');\n    });\n\n    it('should handle invalid SSE configuration', async () => {\n      const {\n        detectTransportConfig,\n        validateTransportConfig,\n      } = require('../../src/transport/transportConfig.js');\n      const { SSEUtils } = require('../../src/transport/sseTransport.js');\n\n      detectTransportConfig.mockReturnValue({ type: 'sse', port: 3000 });\n      validateTransportConfig.mockReturnValue({ type: 'sse', port: 3000 });\n      SSEUtils.validateConfig.mockReturnValue(false);\n\n      await import('../../src/index-fastmcp.js');\n\n      await new Promise(resolve => setImmediate(resolve));\n\n      expect(mockConsoleError).toHaveBeenCalledWith('❌ Invalid SSE configuration');\n      expect(process.exit).toHaveBeenCalledWith(1);\n    });\n  });\n\n  describe('Server Startup Error Handling', () => {\n    it('should handle server startup errors', async () => {\n      mockFastMCP.start.mockRejectedValueOnce(new Error('Server startup failed'));\n\n      await import('../../src/index-fastmcp.js');\n\n      await new Promise(resolve => setImmediate(resolve));\n\n      expect(mockConsoleError).toHaveBeenCalledWith(\n        '❌ Failed to start server:',\n        expect.any(Error)\n      );\n      expect(process.exit).toHaveBeenCalledWith(1);\n    });\n  });\n\n  describe('Process Signal Handling', () => {\n    it('should register SIGINT and SIGTERM handlers', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      expect(process.on).toHaveBeenCalledWith('SIGINT', expect.any(Function));\n      expect(process.on).toHaveBeenCalledWith('SIGTERM', expect.any(Function));\n    });\n\n    it('should handle SIGINT gracefully', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const sigintCall = (process.on as jest.Mock).mock.calls.find(call => call[0] === 'SIGINT');\n\n      if (sigintCall) {\n        const sigintHandler = sigintCall[1] as () => void;\n        sigintHandler();\n\n        expect(mockConsoleError).toHaveBeenCalledWith(\n          'Received SIGINT, shutting down gracefully...'\n        );\n        expect(process.exit).toHaveBeenCalledWith(0);\n      }\n    });\n\n    it('should handle SIGTERM gracefully', async () => {\n      await import('../../src/index-fastmcp.js');\n\n      const sigtermCall = (process.on as jest.Mock).mock.calls.find(call => call[0] === 'SIGTERM');\n\n      if (sigtermCall) {\n        const sigtermHandler = sigtermCall[1] as () => void;\n        sigtermHandler();\n\n        expect(mockConsoleError).toHaveBeenCalledWith(\n          'Received SIGTERM, shutting down gracefully...'\n        );\n        expect(process.exit).toHaveBeenCalledWith(0);\n      }\n    });\n  });\n\n  describe('Global Client State Management', () => {\n    it('should start with null client', async () => {\n      const { createWorkflowTools } = require('../../src/tools/workflow.js');\n\n      await import('../../src/index-fastmcp.js');\n\n      const clientGetter = createWorkflowTools.mock.calls[0][0];\n      expect(clientGetter()).toBeNull();\n    });\n\n    it('should update global client after successful init', async () => {\n      const { createWorkflowTools } = require('../../src/tools/workflow.js');\n\n      await import('../../src/index-fastmcp.js');\n\n      const initTool = mockFastMCP.addTool.mock.calls.find(\n        (call: any) => call[0].name === 'init-n8n'\n      )?.[0];\n\n      await initTool.execute({\n        baseUrl: 'http://localhost:5678',\n        apiKey: 'test-api-key',\n      });\n\n      const clientGetter = createWorkflowTools.mock.calls[0][0];\n      expect(clientGetter()).toBe(mockN8nClient);\n    });\n  });\n\n  describe('Parameter Validation', () => {\n    it('should use Zod for tool parameter validation', async () => {\n      const z = require('zod').z;\n\n      // Create spies for the Zod methods\n      const objectSpy = jest.spyOn(z, 'object');\n      const stringSpy = jest.spyOn(z, 'string');\n\n      await import('../../src/index-fastmcp.js');\n\n      // Verify that z.object was called for parameter validation\n      expect(objectSpy).toHaveBeenCalled();\n      expect(stringSpy).toHaveBeenCalled();\n\n      // Clean up spies\n      objectSpy.mockRestore();\n      stringSpy.mockRestore();\n    });\n  });\n});\n"],"version":3}