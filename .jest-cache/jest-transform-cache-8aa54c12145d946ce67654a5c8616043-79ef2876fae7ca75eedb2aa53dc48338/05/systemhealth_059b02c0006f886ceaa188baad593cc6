d16a2536c70db8e27507841ec8c45892
"use strict";

/* istanbul ignore next */
function cov_t564jjl2r() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/system-health.ts";
  var hash = "8838db0c10fe3ee3f6962707c9ad830eca1bc642";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/system-health.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 58
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 6,
          column: 30
        },
        end: {
          line: 6,
          column: 70
        }
      },
      "5": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 12,
          column: 2
        }
      },
      "6": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 18,
          column: 2
        }
      },
      "7": {
        start: {
          line: 19,
          column: 29
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "8": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "9": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "10": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "11": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 27
        }
      },
      "12": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "13": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "14": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 34
        }
      },
      "15": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "16": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 70
        }
      },
      "17": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 93
        }
      },
      "18": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "19": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 95
        }
      },
      "20": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "21": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "22": {
        start: {
          line: 81,
          column: 17
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "23": {
        start: {
          line: 82,
          column: 18
        },
        end: {
          line: 82,
          column: 54
        }
      },
      "24": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 53
        }
      },
      "25": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 85,
          column: 48
        }
      },
      "26": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 48
        }
      },
      "27": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "28": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "29": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "30": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "31": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 92,
          column: 21
        }
      },
      "32": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 21
        }
      },
      "33": {
        start: {
          line: 93,
          column: 14
        },
        end: {
          line: 93,
          column: 18
        }
      },
      "34": {
        start: {
          line: 94,
          column: 18
        },
        end: {
          line: 94,
          column: 47
        }
      },
      "35": {
        start: {
          line: 95,
          column: 14
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "36": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 76
        }
      },
      "37": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 106,
          column: 1
        }
      },
      "38": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "39": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 35
        }
      },
      "40": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 36
        }
      },
      "41": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "42": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 103,
          column: 37
        }
      },
      "43": {
        start: {
          line: 104,
          column: 17
        },
        end: {
          line: 104,
          column: 28
        }
      },
      "44": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 141,
          column: 1
        }
      },
      "45": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 21
        }
      },
      "46": {
        start: {
          line: 109,
          column: 17
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "47": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "48": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 79
        }
      },
      "49": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "50": {
        start: {
          line: 115,
          column: 9
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "51": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 75
        }
      },
      "52": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "53": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "54": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "55": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 86
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 28
        }
      },
      "57": {
        start: {
          line: 125,
          column: 9
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "58": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 82
        }
      },
      "59": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 128,
          column: 31
        }
      },
      "60": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 31
        }
      },
      "61": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "62": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 82
        }
      },
      "63": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 28
        }
      },
      "64": {
        start: {
          line: 135,
          column: 9
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "65": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 78
        }
      },
      "66": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "67": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "68": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "69": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "70": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "71": {
        start: {
          line: 151,
          column: 41
        },
        end: {
          line: 151,
          column: 71
        }
      },
      "72": {
        start: {
          line: 153,
          column: 36
        },
        end: {
          line: 153,
          column: 75
        }
      },
      "73": {
        start: {
          line: 154,
          column: 34
        },
        end: {
          line: 154,
          column: 38
        }
      },
      "74": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "75": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 80
        }
      },
      "76": {
        start: {
          line: 159,
          column: 35
        },
        end: {
          line: 159,
          column: 74
        }
      },
      "77": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 160,
          column: 112
        }
      },
      "78": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 121
        }
      },
      "79": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 124
        }
      },
      "80": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 83
        }
      },
      "81": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "82": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 75
        }
      },
      "83": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "84": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 116
        }
      },
      "85": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "86": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 65
        }
      },
      "87": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 88
        }
      },
      "88": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 128
        }
      },
      "89": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 97
        }
      },
      "90": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 182,
          column: 21
        }
      },
      "91": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 66
        }
      },
      "92": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 181,
          column: 27
        }
      },
      "93": {
        start: {
          line: 180,
          column: 28
        },
        end: {
          line: 180,
          column: 55
        }
      },
      "94": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "95": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "96": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 187,
          column: 27
        }
      },
      "97": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 186,
          column: 53
        }
      },
      "98": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 32
        }
      },
      "99": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 17
        }
      },
      "100": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 32
        }
      },
      "101": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 140
        }
      },
      "102": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "103": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "104": {
        start: {
          line: 207,
          column: 41
        },
        end: {
          line: 207,
          column: 71
        }
      },
      "105": {
        start: {
          line: 208,
          column: 36
        },
        end: {
          line: 208,
          column: 81
        }
      },
      "106": {
        start: {
          line: 209,
          column: 31
        },
        end: {
          line: 209,
          column: 69
        }
      },
      "107": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 99
        }
      },
      "108": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 149
        }
      },
      "109": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 221,
          column: 17
        }
      },
      "110": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 57
        }
      },
      "111": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 133
        }
      },
      "112": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 96
        }
      },
      "113": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 219,
          column: 21
        }
      },
      "114": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 83
        }
      },
      "115": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 37
        }
      },
      "116": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 230,
          column: 17
        }
      },
      "117": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 56
        }
      },
      "118": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 94
        }
      },
      "119": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 84
        }
      },
      "120": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 92
        }
      },
      "121": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 102
        }
      },
      "122": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 37
        }
      },
      "123": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 242,
          column: 17
        }
      },
      "124": {
        start: {
          line: 233,
          column: 38
        },
        end: {
          line: 233,
          column: 59
        }
      },
      "125": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 59
        }
      },
      "126": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 118
        }
      },
      "127": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 183
        }
      },
      "128": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 171
        }
      },
      "129": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 240,
          column: 21
        }
      },
      "130": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 177
        }
      },
      "131": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 37
        }
      },
      "132": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 250,
          column: 17
        }
      },
      "133": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 60
        }
      },
      "134": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "135": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 247,
          column: 51
        }
      },
      "136": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 37
        }
      },
      "137": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "138": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 60
        }
      },
      "139": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 255,
          column: 23
        }
      },
      "140": {
        start: {
          line: 254,
          column: 24
        },
        end: {
          line: 254,
          column: 49
        }
      },
      "141": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 32
        }
      },
      "142": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 262,
          column: 17
        }
      },
      "143": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 32
        }
      },
      "144": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 143
        }
      },
      "145": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 330,
          column: 7
        }
      },
      "146": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "147": {
        start: {
          line: 274,
          column: 41
        },
        end: {
          line: 274,
          column: 71
        }
      },
      "148": {
        start: {
          line: 275,
          column: 36
        },
        end: {
          line: 275,
          column: 98
        }
      },
      "149": {
        start: {
          line: 276,
          column: 35
        },
        end: {
          line: 276,
          column: 81
        }
      },
      "150": {
        start: {
          line: 277,
          column: 31
        },
        end: {
          line: 277,
          column: 99
        }
      },
      "151": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 87
        }
      },
      "152": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 101
        }
      },
      "153": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 282,
          column: 17
        }
      },
      "154": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 129
        }
      },
      "155": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 289,
          column: 17
        }
      },
      "156": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 53
        }
      },
      "157": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 288,
          column: 23
        }
      },
      "158": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 51
        }
      },
      "159": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "160": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 62
        }
      },
      "161": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 295,
          column: 23
        }
      },
      "162": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 49
        }
      },
      "163": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 307,
          column: 17
        }
      },
      "164": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 148
        }
      },
      "165": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 306,
          column: 23
        }
      },
      "166": {
        start: {
          line: 303,
          column: 40
        },
        end: {
          line: 303,
          column: 117
        }
      },
      "167": {
        start: {
          line: 304,
          column: 44
        },
        end: {
          line: 304,
          column: 114
        }
      },
      "168": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 129
        }
      },
      "169": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 320,
          column: 17
        }
      },
      "170": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 96
        }
      },
      "171": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 319,
          column: 23
        }
      },
      "172": {
        start: {
          line: 312,
          column: 43
        },
        end: {
          line: 312,
          column: 78
        }
      },
      "173": {
        start: {
          line: 313,
          column: 24
        },
        end: {
          line: 313,
          column: 88
        }
      },
      "174": {
        start: {
          line: 314,
          column: 24
        },
        end: {
          line: 318,
          column: 25
        }
      },
      "175": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 317,
          column: 31
        }
      },
      "176": {
        start: {
          line: 316,
          column: 32
        },
        end: {
          line: 316,
          column: 61
        }
      },
      "177": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 32
        }
      },
      "178": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 326,
          column: 17
        }
      },
      "179": {
        start: {
          line: 325,
          column: 20
        },
        end: {
          line: 325,
          column: 32
        }
      },
      "180": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 142
        }
      },
      "181": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 387,
          column: 7
        }
      },
      "182": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "183": {
        start: {
          line: 338,
          column: 41
        },
        end: {
          line: 338,
          column: 71
        }
      },
      "184": {
        start: {
          line: 339,
          column: 30
        },
        end: {
          line: 339,
          column: 32
        }
      },
      "185": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 347,
          column: 17
        }
      },
      "186": {
        start: {
          line: 340,
          column: 29
        },
        end: {
          line: 340,
          column: 30
        }
      },
      "187": {
        start: {
          line: 341,
          column: 35
        },
        end: {
          line: 341,
          column: 76
        }
      },
      "188": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 39
        }
      },
      "189": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 346,
          column: 21
        }
      },
      "190": {
        start: {
          line: 345,
          column: 24
        },
        end: {
          line: 345,
          column: 80
        }
      },
      "191": {
        start: {
          line: 345,
          column: 53
        },
        end: {
          line: 345,
          column: 78
        }
      },
      "192": {
        start: {
          line: 348,
          column: 40
        },
        end: {
          line: 348,
          column: 68
        }
      },
      "193": {
        start: {
          line: 348,
          column: 58
        },
        end: {
          line: 348,
          column: 67
        }
      },
      "194": {
        start: {
          line: 349,
          column: 36
        },
        end: {
          line: 349,
          column: 65
        }
      },
      "195": {
        start: {
          line: 349,
          column: 54
        },
        end: {
          line: 349,
          column: 64
        }
      },
      "196": {
        start: {
          line: 350,
          column: 31
        },
        end: {
          line: 350,
          column: 69
        }
      },
      "197": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 128
        }
      },
      "198": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 371,
          column: 17
        }
      },
      "199": {
        start: {
          line: 353,
          column: 44
        },
        end: {
          line: 353,
          column: 134
        }
      },
      "200": {
        start: {
          line: 353,
          column: 82
        },
        end: {
          line: 353,
          column: 105
        }
      },
      "201": {
        start: {
          line: 354,
          column: 44
        },
        end: {
          line: 354,
          column: 97
        }
      },
      "202": {
        start: {
          line: 354,
          column: 81
        },
        end: {
          line: 354,
          column: 95
        }
      },
      "203": {
        start: {
          line: 355,
          column: 44
        },
        end: {
          line: 355,
          column: 97
        }
      },
      "204": {
        start: {
          line: 355,
          column: 81
        },
        end: {
          line: 355,
          column: 95
        }
      },
      "205": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 115
        }
      },
      "206": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 357,
          column: 56
        }
      },
      "207": {
        start: {
          line: 358,
          column: 20
        },
        end: {
          line: 358,
          column: 79
        }
      },
      "208": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 64
        }
      },
      "209": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 64
        }
      },
      "210": {
        start: {
          line: 362,
          column: 20
        },
        end: {
          line: 370,
          column: 21
        }
      },
      "211": {
        start: {
          line: 363,
          column: 24
        },
        end: {
          line: 363,
          column: 126
        }
      },
      "212": {
        start: {
          line: 365,
          column: 25
        },
        end: {
          line: 370,
          column: 21
        }
      },
      "213": {
        start: {
          line: 366,
          column: 24
        },
        end: {
          line: 366,
          column: 92
        }
      },
      "214": {
        start: {
          line: 369,
          column: 24
        },
        end: {
          line: 369,
          column: 66
        }
      },
      "215": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 377,
          column: 17
        }
      },
      "216": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 58
        }
      },
      "217": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 376,
          column: 23
        }
      },
      "218": {
        start: {
          line: 375,
          column: 24
        },
        end: {
          line: 375,
          column: 75
        }
      },
      "219": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 32
        }
      },
      "220": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 383,
          column: 17
        }
      },
      "221": {
        start: {
          line: 382,
          column: 20
        },
        end: {
          line: 382,
          column: 32
        }
      },
      "222": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 138
        }
      },
      "223": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 444,
          column: 7
        }
      },
      "224": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 442,
          column: 13
        }
      },
      "225": {
        start: {
          line: 395,
          column: 41
        },
        end: {
          line: 395,
          column: 71
        }
      },
      "226": {
        start: {
          line: 396,
          column: 36
        },
        end: {
          line: 396,
          column: 77
        }
      },
      "227": {
        start: {
          line: 398,
          column: 35
        },
        end: {
          line: 405,
          column: 17
        }
      },
      "228": {
        start: {
          line: 407,
          column: 35
        },
        end: {
          line: 407,
          column: 86
        }
      },
      "229": {
        start: {
          line: 408,
          column: 31
        },
        end: {
          line: 408,
          column: 70
        }
      },
      "230": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 129
        }
      },
      "231": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 101
        }
      },
      "232": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 412,
          column: 54
        }
      },
      "233": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 118
        }
      },
      "234": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 414,
          column: 185
        }
      },
      "235": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 164
        }
      },
      "236": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 418,
          column: 17
        }
      },
      "237": {
        start: {
          line: 417,
          column: 20
        },
        end: {
          line: 417,
          column: 179
        }
      },
      "238": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 78
        }
      },
      "239": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 64
        }
      },
      "240": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 422,
          column: 100
        }
      },
      "241": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 109
        }
      },
      "242": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 103
        }
      },
      "243": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 434,
          column: 17
        }
      },
      "244": {
        start: {
          line: 427,
          column: 20
        },
        end: {
          line: 427,
          column: 60
        }
      },
      "245": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 430,
          column: 23
        }
      },
      "246": {
        start: {
          line: 429,
          column: 24
        },
        end: {
          line: 429,
          column: 51
        }
      },
      "247": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 433,
          column: 80
        }
      },
      "248": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 32
        }
      },
      "249": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 440,
          column: 17
        }
      },
      "250": {
        start: {
          line: 439,
          column: 20
        },
        end: {
          line: 439,
          column: 32
        }
      },
      "251": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 441,
          column: 138
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 66,
            column: 29
          }
        },
        loc: {
          start: {
            line: 66,
            column: 43
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 66
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 22
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 21
          }
        },
        loc: {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 90
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 98,
            column: 28
          },
          end: {
            line: 98,
            column: 29
          }
        },
        loc: {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 98
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 36
          }
        },
        loc: {
          start: {
            line: 107,
            column: 58
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 107
      },
      "5": {
        name: "createSystemHealthTools",
        decl: {
          start: {
            line: 143,
            column: 9
          },
          end: {
            line: 143,
            column: 32
          }
        },
        loc: {
          start: {
            line: 143,
            column: 52
          },
          end: {
            line: 445,
            column: 1
          }
        },
        line: 143
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 149,
            column: 18
          }
        },
        loc: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 149
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 179,
            column: 59
          },
          end: {
            line: 179,
            column: 60
          }
        },
        loc: {
          start: {
            line: 179,
            column: 68
          },
          end: {
            line: 181,
            column: 25
          }
        },
        line: 179
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 68
          },
          end: {
            line: 185,
            column: 69
          }
        },
        loc: {
          start: {
            line: 185,
            column: 75
          },
          end: {
            line: 187,
            column: 25
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 205,
            column: 17
          },
          end: {
            line: 205,
            column: 18
          }
        },
        loc: {
          start: {
            line: 205,
            column: 33
          },
          end: {
            line: 265,
            column: 9
          }
        },
        line: 205
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 246,
            column: 55
          },
          end: {
            line: 246,
            column: 56
          }
        },
        loc: {
          start: {
            line: 246,
            column: 64
          },
          end: {
            line: 248,
            column: 21
          }
        },
        line: 246
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 253,
            column: 64
          },
          end: {
            line: 253,
            column: 65
          }
        },
        loc: {
          start: {
            line: 253,
            column: 71
          },
          end: {
            line: 255,
            column: 21
          }
        },
        line: 253
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 272,
            column: 17
          },
          end: {
            line: 272,
            column: 18
          }
        },
        loc: {
          start: {
            line: 272,
            column: 33
          },
          end: {
            line: 329,
            column: 9
          }
        },
        line: 272
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 286,
            column: 54
          },
          end: {
            line: 286,
            column: 55
          }
        },
        loc: {
          start: {
            line: 286,
            column: 63
          },
          end: {
            line: 288,
            column: 21
          }
        },
        line: 286
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 293,
            column: 63
          },
          end: {
            line: 293,
            column: 64
          }
        },
        loc: {
          start: {
            line: 293,
            column: 70
          },
          end: {
            line: 295,
            column: 21
          }
        },
        line: 293
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 302,
            column: 33
          },
          end: {
            line: 302,
            column: 34
          }
        },
        loc: {
          start: {
            line: 302,
            column: 41
          },
          end: {
            line: 306,
            column: 21
          }
        },
        line: 302
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 311,
            column: 46
          },
          end: {
            line: 311,
            column: 47
          }
        },
        loc: {
          start: {
            line: 311,
            column: 54
          },
          end: {
            line: 319,
            column: 21
          }
        },
        line: 311
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 315,
            column: 48
          },
          end: {
            line: 315,
            column: 49
          }
        },
        loc: {
          start: {
            line: 315,
            column: 57
          },
          end: {
            line: 317,
            column: 29
          }
        },
        line: 315
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 336,
            column: 17
          },
          end: {
            line: 336,
            column: 18
          }
        },
        loc: {
          start: {
            line: 336,
            column: 33
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 336
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 345,
            column: 42
          },
          end: {
            line: 345,
            column: 43
          }
        },
        loc: {
          start: {
            line: 345,
            column: 53
          },
          end: {
            line: 345,
            column: 78
          }
        },
        line: 345
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 348,
            column: 53
          },
          end: {
            line: 348,
            column: 54
          }
        },
        loc: {
          start: {
            line: 348,
            column: 58
          },
          end: {
            line: 348,
            column: 67
          }
        },
        line: 348
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 349,
            column: 49
          },
          end: {
            line: 349,
            column: 50
          }
        },
        loc: {
          start: {
            line: 349,
            column: 54
          },
          end: {
            line: 349,
            column: 64
          }
        },
        line: 349
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 353,
            column: 67
          },
          end: {
            line: 353,
            column: 68
          }
        },
        loc: {
          start: {
            line: 353,
            column: 82
          },
          end: {
            line: 353,
            column: 105
          }
        },
        line: 353
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 354,
            column: 76
          },
          end: {
            line: 354,
            column: 77
          }
        },
        loc: {
          start: {
            line: 354,
            column: 81
          },
          end: {
            line: 354,
            column: 95
          }
        },
        line: 354
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 355,
            column: 76
          },
          end: {
            line: 355,
            column: 77
          }
        },
        loc: {
          start: {
            line: 355,
            column: 81
          },
          end: {
            line: 355,
            column: 95
          }
        },
        line: 355
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 374,
            column: 40
          },
          end: {
            line: 374,
            column: 41
          }
        },
        loc: {
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 376,
            column: 21
          }
        },
        line: 374
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 393,
            column: 17
          },
          end: {
            line: 393,
            column: 18
          }
        },
        loc: {
          start: {
            line: 393,
            column: 33
          },
          end: {
            line: 443,
            column: 9
          }
        },
        line: 393
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 428,
            column: 46
          },
          end: {
            line: 428,
            column: 47
          }
        },
        loc: {
          start: {
            line: 428,
            column: 55
          },
          end: {
            line: 430,
            column: 21
          }
        },
        line: 428
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 38
          }
        }, {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 73,
            column: 66
          }
        }, {
          start: {
            line: 73,
            column: 70
          },
          end: {
            line: 73,
            column: 93
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 36
          }
        }, {
          start: {
            line: 74,
            column: 40
          },
          end: {
            line: 74,
            column: 63
          }
        }, {
          start: {
            line: 74,
            column: 67
          },
          end: {
            line: 74,
            column: 69
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 85,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 85,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 87,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 87,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 92,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 92,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "7": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 35
          }
        }, {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 101,
            column: 36
          }
        }, {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 37
          }
        }, {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 37
          }
        }, {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 28
          }
        }],
        line: 99
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: 115,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 118,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 118,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 129,
            column: 5
          }
        }],
        line: 121
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 128,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 128,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: 135,
            column: 9
          },
          end: {
            line: 139,
            column: 5
          }
        }],
        line: 131
      },
      "15": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 31
          }
        }, {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 131,
            column: 85
          }
        }],
        line: 131
      },
      "16": {
        loc: {
          start: {
            line: 135,
            column: 9
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 9
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 135,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 135,
            column: 36
          }
        }, {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 89
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 138,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 138,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "19": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 39
          }
        }, {
          start: {
            line: 165,
            column: 43
          },
          end: {
            line: 165,
            column: 76
          }
        }],
        line: 165
      },
      "22": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "23": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "24": {
        loc: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 31
          }
        }, {
          start: {
            line: 172,
            column: 35
          },
          end: {
            line: 172,
            column: 54
          }
        }],
        line: 172
      },
      "25": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 188,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 188,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 183,
            column: 24
          },
          end: {
            line: 183,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 24
          },
          end: {
            line: 183,
            column: 51
          }
        }, {
          start: {
            line: 183,
            column: 55
          },
          end: {
            line: 183,
            column: 101
          }
        }],
        line: 183
      },
      "28": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "29": {
        loc: {
          start: {
            line: 196,
            column: 80
          },
          end: {
            line: 196,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 105
          },
          end: {
            line: 196,
            column: 118
          }
        }, {
          start: {
            line: 196,
            column: 121
          },
          end: {
            line: 196,
            column: 136
          }
        }],
        line: 196
      },
      "30": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "31": {
        loc: {
          start: {
            line: 215,
            column: 53
          },
          end: {
            line: 215,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 96
          },
          end: {
            line: 215,
            column: 109
          }
        }, {
          start: {
            line: 215,
            column: 112
          },
          end: {
            line: 215,
            column: 128
          }
        }],
        line: 215
      },
      "32": {
        loc: {
          start: {
            line: 217,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "33": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "34": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "35": {
        loc: {
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "36": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 250,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 250,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "37": {
        loc: {
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "38": {
        loc: {
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 262,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 262,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "39": {
        loc: {
          start: {
            line: 263,
            column: 83
          },
          end: {
            line: 263,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 108
          },
          end: {
            line: 263,
            column: 121
          }
        }, {
          start: {
            line: 263,
            column: 124
          },
          end: {
            line: 263,
            column: 139
          }
        }],
        line: 263
      },
      "40": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 282,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 282,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "41": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 289,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 289,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "42": {
        loc: {
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 296,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 296,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "43": {
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "44": {
        loc: {
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 298,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 298,
            column: 48
          }
        }, {
          start: {
            line: 298,
            column: 52
          },
          end: {
            line: 298,
            column: 103
          }
        }],
        line: 298
      },
      "45": {
        loc: {
          start: {
            line: 303,
            column: 40
          },
          end: {
            line: 303,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 65
          },
          end: {
            line: 303,
            column: 112
          }
        }, {
          start: {
            line: 303,
            column: 115
          },
          end: {
            line: 303,
            column: 117
          }
        }],
        line: 303
      },
      "46": {
        loc: {
          start: {
            line: 304,
            column: 44
          },
          end: {
            line: 304,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 304,
            column: 72
          },
          end: {
            line: 304,
            column: 75
          }
        }, {
          start: {
            line: 304,
            column: 78
          },
          end: {
            line: 304,
            column: 114
          }
        }],
        line: 304
      },
      "47": {
        loc: {
          start: {
            line: 304,
            column: 78
          },
          end: {
            line: 304,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 304,
            column: 105
          },
          end: {
            line: 304,
            column: 108
          }
        }, {
          start: {
            line: 304,
            column: 111
          },
          end: {
            line: 304,
            column: 114
          }
        }],
        line: 304
      },
      "48": {
        loc: {
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "49": {
        loc: {
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 309,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 309,
            column: 37
          }
        }, {
          start: {
            line: 309,
            column: 41
          },
          end: {
            line: 309,
            column: 69
          }
        }],
        line: 309
      },
      "50": {
        loc: {
          start: {
            line: 312,
            column: 43
          },
          end: {
            line: 312,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 68
          },
          end: {
            line: 312,
            column: 72
          }
        }, {
          start: {
            line: 312,
            column: 75
          },
          end: {
            line: 312,
            column: 78
          }
        }],
        line: 312
      },
      "51": {
        loc: {
          start: {
            line: 314,
            column: 24
          },
          end: {
            line: 318,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 24
          },
          end: {
            line: 318,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "52": {
        loc: {
          start: {
            line: 324,
            column: 16
          },
          end: {
            line: 326,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 16
          },
          end: {
            line: 326,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "53": {
        loc: {
          start: {
            line: 327,
            column: 82
          },
          end: {
            line: 327,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 107
          },
          end: {
            line: 327,
            column: 120
          }
        }, {
          start: {
            line: 327,
            column: 123
          },
          end: {
            line: 327,
            column: 138
          }
        }],
        line: 327
      },
      "54": {
        loc: {
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 346,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 346,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "55": {
        loc: {
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 40
          }
        }, {
          start: {
            line: 343,
            column: 44
          },
          end: {
            line: 343,
            column: 59
          }
        }],
        line: 343
      },
      "56": {
        loc: {
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "57": {
        loc: {
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 370,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 370,
            column: 21
          }
        }, {
          start: {
            line: 365,
            column: 25
          },
          end: {
            line: 370,
            column: 21
          }
        }],
        line: 362
      },
      "58": {
        loc: {
          start: {
            line: 365,
            column: 25
          },
          end: {
            line: 370,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 25
          },
          end: {
            line: 370,
            column: 21
          }
        }, {
          start: {
            line: 368,
            column: 25
          },
          end: {
            line: 370,
            column: 21
          }
        }],
        line: 365
      },
      "59": {
        loc: {
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 377,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 377,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "60": {
        loc: {
          start: {
            line: 381,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "61": {
        loc: {
          start: {
            line: 384,
            column: 78
          },
          end: {
            line: 384,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 103
          },
          end: {
            line: 384,
            column: 116
          }
        }, {
          start: {
            line: 384,
            column: 119
          },
          end: {
            line: 384,
            column: 134
          }
        }],
        line: 384
      },
      "62": {
        loc: {
          start: {
            line: 399,
            column: 25
          },
          end: {
            line: 399,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 25
          },
          end: {
            line: 399,
            column: 33
          }
        }, {
          start: {
            line: 399,
            column: 37
          },
          end: {
            line: 399,
            column: 66
          }
        }],
        line: 399
      },
      "63": {
        loc: {
          start: {
            line: 400,
            column: 28
          },
          end: {
            line: 400,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 28
          },
          end: {
            line: 400,
            column: 39
          }
        }, {
          start: {
            line: 400,
            column: 43
          },
          end: {
            line: 400,
            column: 72
          }
        }],
        line: 400
      },
      "64": {
        loc: {
          start: {
            line: 401,
            column: 26
          },
          end: {
            line: 401,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 26
          },
          end: {
            line: 401,
            column: 35
          }
        }, {
          start: {
            line: 401,
            column: 39
          },
          end: {
            line: 401,
            column: 68
          }
        }],
        line: 401
      },
      "65": {
        loc: {
          start: {
            line: 402,
            column: 35
          },
          end: {
            line: 402,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 35
          },
          end: {
            line: 402,
            column: 53
          }
        }, {
          start: {
            line: 402,
            column: 57
          },
          end: {
            line: 402,
            column: 93
          }
        }],
        line: 402
      },
      "66": {
        loc: {
          start: {
            line: 403,
            column: 31
          },
          end: {
            line: 403,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 31
          },
          end: {
            line: 403,
            column: 45
          }
        }, {
          start: {
            line: 403,
            column: 49
          },
          end: {
            line: 403,
            column: 77
          }
        }],
        line: 403
      },
      "67": {
        loc: {
          start: {
            line: 404,
            column: 34
          },
          end: {
            line: 404,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 34
          },
          end: {
            line: 404,
            column: 51
          }
        }, {
          start: {
            line: 404,
            column: 55
          },
          end: {
            line: 404,
            column: 88
          }
        }],
        line: 404
      },
      "68": {
        loc: {
          start: {
            line: 416,
            column: 16
          },
          end: {
            line: 418,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 16
          },
          end: {
            line: 418,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "69": {
        loc: {
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 434,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 434,
            column: 17
          }
        }, {
          start: {
            line: 432,
            column: 21
          },
          end: {
            line: 434,
            column: 17
          }
        }],
        line: 426
      },
      "70": {
        loc: {
          start: {
            line: 438,
            column: 16
          },
          end: {
            line: 440,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 16
          },
          end: {
            line: 440,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "71": {
        loc: {
          start: {
            line: 441,
            column: 78
          },
          end: {
            line: 441,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 441,
            column: 103
          },
          end: {
            line: 441,
            column: 116
          }
        }, {
          start: {
            line: 441,
            column: 119
          },
          end: {
            line: 441,
            column: 134
          }
        }],
        line: 441
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/system-health.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/system-health.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { MonitoringClient } from '../client/monitoringClient.js';\nimport {\n  InstanceHealthMetrics,\n  SystemDiagnostics,\n  PerformanceAlert,\n  ResourceThresholds,\n} from '../types/monitoringTypes.js';\n\n// Zod schemas for validation\nconst HealthCheckSchema = z.object({\n  includeDetails: z.boolean().default(true),\n  includeDiagnostics: z.boolean().default(false),\n  includeRecommendations: z.boolean().default(true),\n});\n\nconst DiagnosticsSchema = z.object({\n  includeEnvironment: z.boolean().default(true),\n  includeConnectivity: z.boolean().default(true),\n  includeResources: z.boolean().default(true),\n  verbose: z.boolean().default(false),\n});\n\nconst WorkflowHealthSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  includeNodes: z.boolean().default(true),\n  includeRecentExecutions: z.boolean().default(true),\n  executionLimit: z.number().min(1).max(100).default(10),\n});\n\nconst ResourceThresholdSchema = z.object({\n  cpu: z.object({\n    warning: z.number().min(0).max(100).default(75),\n    critical: z.number().min(0).max(100).default(90),\n  }).optional(),\n  memory: z.object({\n    warning: z.number().min(0).max(100).default(80),\n    critical: z.number().min(0).max(100).default(95),\n  }).optional(),\n  disk: z.object({\n    warning: z.number().min(0).max(100).default(85),\n    critical: z.number().min(0).max(100).default(95),\n  }).optional(),\n  executionTime: z.object({\n    warning: z.number().min(0).default(30000), // 30 seconds\n    critical: z.number().min(0).default(120000), // 2 minutes\n  }).optional(),\n  errorRate: z.object({\n    warning: z.number().min(0).max(100).default(5),\n    critical: z.number().min(0).max(100).default(15),\n  }).optional(),\n  responseTime: z.object({\n    warning: z.number().min(0).default(1000), // 1 second\n    critical: z.number().min(0).default(3000), // 3 seconds\n  }).optional(),\n});\n\nconst AlertsQuerySchema = z.object({\n  severity: z.enum(['low', 'medium', 'high', 'critical']).optional(),\n  resolved: z.boolean().optional(),\n  workflowId: z.string().optional(),\n  limit: z.number().min(1).max(100).default(50),\n  timeRange: z.enum(['1h', '6h', '24h', '7d', '30d']).default('24h'),\n});\n\nconst ConnectivityTestSchema = z.object({\n  includeLatency: z.boolean().default(true),\n  timeout: z.number().min(1000).max(30000).default(5000), // 5 second default timeout\n  retries: z.number().min(0).max(5).default(1),\n});\n\n// Global monitoring client instance\nlet monitoringClient: MonitoringClient | null = null;\n\n// Initialize monitoring client\nconst getMonitoringClient = (getClient: () => N8nClient | null): MonitoringClient => {\n  if (!monitoringClient) {\n    const client = getClient();\n    if (!client) {\n      throw new UserError('N8n client not available');\n    }\n    // Extract baseUrl and apiKey from client\n    const baseUrl = (client as any).baseUrl || process.env.N8N_BASE_URL || 'http://localhost:5678';\n    const apiKey = (client as any).apiKey || process.env.N8N_API_KEY || '';\n    \n    monitoringClient = new MonitoringClient(client, baseUrl, apiKey);\n  }\n  return monitoringClient;\n};\n\n// Helper functions\nconst formatUptime = (seconds: number): string => {\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (days > 0) return `${days}d ${hours}h ${minutes}m`;\n  if (hours > 0) return `${hours}h ${minutes}m`;\n  return `${minutes}m`;\n};\n\nconst formatBytes = (bytes: number): string => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nconst getHealthStatusIcon = (status: string): string => {\n  switch (status) {\n    case 'healthy': return '\u2705';\n    case 'warning': return '\u26A0\uFE0F';\n    case 'critical': return '\uD83D\uDD34';\n    case 'degraded': return '\uD83D\uDFE1';\n    default: return '\u2753';\n  }\n};\n\nconst evaluateResourceThresholds = (\n  usage: any, \n  thresholds: ResourceThresholds\n): { status: 'healthy' | 'warning' | 'critical'; alerts: string[] } => {\n  const alerts: string[] = [];\n  let status: 'healthy' | 'warning' | 'critical' = 'healthy';\n\n  // Check CPU\n  if (usage.cpu?.totalUsage >= thresholds.cpu.critical) {\n    alerts.push(`Critical CPU usage: ${usage.cpu.totalUsage.toFixed(1)}%`);\n    status = 'critical';\n  } else if (usage.cpu?.totalUsage >= thresholds.cpu.warning) {\n    alerts.push(`High CPU usage: ${usage.cpu.totalUsage.toFixed(1)}%`);\n    if (status === 'healthy') status = 'warning';\n  }\n\n  // Check Memory\n  if (usage.memory?.utilization >= thresholds.memory.critical) {\n    alerts.push(`Critical memory usage: ${usage.memory.utilization.toFixed(1)}%`);\n    status = 'critical';\n  } else if (usage.memory?.utilization >= thresholds.memory.warning) {\n    alerts.push(`High memory usage: ${usage.memory.utilization.toFixed(1)}%`);\n    if (status === 'healthy') status = 'warning';\n  }\n\n  // Check Disk (if available)\n  if (usage.disk?.utilization && usage.disk.utilization >= thresholds.disk.critical) {\n    alerts.push(`Critical disk usage: ${usage.disk.utilization.toFixed(1)}%`);\n    status = 'critical';\n  } else if (usage.disk?.utilization && usage.disk.utilization >= thresholds.disk.warning) {\n    alerts.push(`High disk usage: ${usage.disk.utilization.toFixed(1)}%`);\n    if (status === 'healthy') status = 'warning';\n  }\n\n  return { status, alerts };\n};\n\n// Tool registration function\nexport function createSystemHealthTools(getClient: () => N8nClient | null, server: any) {\n  // System health check tool\n  server.addTool({\n    name: 'check-system-health',\n    description: 'Perform comprehensive system health check of the n8n instance',\n    parameters: HealthCheckSchema,\n    handler: async (args: z.infer<typeof HealthCheckSchema>) => {\n      try {\n        const monitoringClient = getMonitoringClient(getClient);\n\n        // Get health check data\n        const healthCheck = await monitoringClient.getHealthCheck();\n        \n        let diagnostics = null;\n        if (args.includeDiagnostics) {\n          diagnostics = await monitoringClient.getSystemDiagnostics();\n        }\n\n        // Format response\n        const statusIcon = getHealthStatusIcon(healthCheck.status);\n        let response = `${statusIcon} **System Health Status: ${healthCheck.status.toUpperCase()}**\\n\\n`;\n\n        // Basic health information\n        response += `**\uD83D\uDD17 Database:** ${healthCheck.database.status} (${healthCheck.database.responseTime}ms)\\n`;\n        response += `**\uD83D\uDCC1 Filesystem:** ${healthCheck.filesystem.status} (${healthCheck.filesystem.permissions})\\n`;\n        response += `**\u23F1\uFE0F Uptime:** ${formatUptime(healthCheck.uptime)}\\n`;\n        \n        if (healthCheck.version && healthCheck.version !== 'unknown') {\n          response += `**\uD83D\uDCE6 Version:** ${healthCheck.version}\\n`;\n        }\n\n        if (healthCheck.redis) {\n          response += `**\uD83D\uDCCA Redis:** ${healthCheck.redis.status} (${healthCheck.redis.responseTime}ms)\\n`;\n        }\n\n        // Include diagnostics if requested\n        if (diagnostics && args.includeDetails) {\n          response += `\\n**\uD83D\uDD0D System Diagnostics:**\\n`;\n          response += `**Node.js:** ${diagnostics.environment.nodeVersion}\\n`;\n          response += `**Platform:** ${diagnostics.environment.platform} (${diagnostics.environment.architecture})\\n`;\n          response += `**API Response:** ${diagnostics.connectivity.responseTime}ms\\n`;\n\n          if (diagnostics.overall.issues.length > 0) {\n            response += `\\n**\u26A0\uFE0F Issues Detected:**\\n`;\n            diagnostics.overall.issues.forEach(issue => {\n              response += `\u2022 ${issue}\\n`;\n            });\n          }\n\n          if (args.includeRecommendations && diagnostics.overall.recommendations.length > 0) {\n            response += `\\n**\uD83D\uDCA1 Recommendations:**\\n`;\n            diagnostics.overall.recommendations.forEach(rec => {\n              response += `\u2022 ${rec}\\n`;\n            });\n          }\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to check system health: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // System diagnostics tool\n  server.addTool({\n    name: 'get-system-diagnostics',\n    description: 'Get detailed system diagnostics for troubleshooting',\n    parameters: DiagnosticsSchema,\n    handler: async (args: z.infer<typeof DiagnosticsSchema>) => {\n      try {\n        const monitoringClient = getMonitoringClient(getClient);\n        const diagnostics = await monitoringClient.getSystemDiagnostics();\n\n        let response = `\uD83D\uDD0D **System Diagnostics Report**\\n\\n`;\n        response += `**Generated:** ${new Date(diagnostics.timestamp).toLocaleString()}\\n`;\n        response += `**Overall Status:** ${getHealthStatusIcon(diagnostics.overall.status)} ${diagnostics.overall.status.toUpperCase()}\\n\\n`;\n\n        // Connectivity information\n        if (args.includeConnectivity) {\n          response += `**\uD83C\uDF10 Connectivity:**\\n`;\n          response += `\u2022 API Connection: ${diagnostics.connectivity.apiConnectivity ? '\u2705 Connected' : '\u274C Disconnected'}\\n`;\n          response += `\u2022 Response Time: ${diagnostics.connectivity.responseTime}ms\\n`;\n          if (diagnostics.connectivity.error) {\n            response += `\u2022 Error: ${diagnostics.connectivity.error}\\n`;\n          }\n          response += `\\n`;\n        }\n\n        // Environment information\n        if (args.includeEnvironment) {\n          response += `**\uD83D\uDCBB Environment:**\\n`;\n          response += `\u2022 Node.js Version: ${diagnostics.environment.nodeVersion}\\n`;\n          response += `\u2022 Platform: ${diagnostics.environment.platform}\\n`;\n          response += `\u2022 Architecture: ${diagnostics.environment.architecture}\\n`;\n          response += `\u2022 Process Uptime: ${formatUptime(diagnostics.environment.uptime)}\\n`;\n          response += `\\n`;\n        }\n\n        // Resource usage\n        if (args.includeResources) {\n          const resources = diagnostics.resources;\n          response += `**\uD83D\uDCCA Resource Usage:**\\n`;\n          response += `\u2022 CPU: ${resources.cpu.totalUsage.toFixed(1)}% (${resources.cpu.coreCount} cores)\\n`;\n          response += `\u2022 Memory: ${formatBytes(resources.memory.usedMemory)} / ${formatBytes(resources.memory.totalMemory)} (${resources.memory.utilization.toFixed(1)}%)\\n`;\n          response += `\u2022 Process Memory: ${formatBytes(resources.memory.processMemory.rss)} RSS, ${formatBytes(resources.memory.processMemory.heapUsed)} heap\\n`;\n          \n          if (resources.disk.totalSpace > 0) {\n            response += `\u2022 Disk: ${formatBytes(resources.disk.usedSpace)} / ${formatBytes(resources.disk.totalSpace)} (${resources.disk.utilization.toFixed(1)}%)\\n`;\n          }\n          response += `\\n`;\n        }\n\n        // Issues and recommendations\n        if (diagnostics.overall.issues.length > 0) {\n          response += `**\u26A0\uFE0F Issues Detected:**\\n`;\n          diagnostics.overall.issues.forEach(issue => {\n            response += `\u2022 ${issue}\\n`;\n          });\n          response += `\\n`;\n        }\n\n        if (diagnostics.overall.recommendations.length > 0) {\n          response += `**\uD83D\uDCA1 Recommendations:**\\n`;\n          diagnostics.overall.recommendations.forEach(rec => {\n            response += `\u2022 ${rec}\\n`;\n          });\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to get system diagnostics: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Workflow health check tool\n  server.addTool({\n    name: 'check-workflow-health',\n    description: 'Check the health and performance of a specific workflow',\n    parameters: WorkflowHealthSchema,\n    handler: async (args: z.infer<typeof WorkflowHealthSchema>) => {\n      try {\n        const monitoringClient = getMonitoringClient(getClient);\n        const diagnostics = await monitoringClient.getWorkflowDiagnostics(args.workflowId);\n\n        const statusIcon = getHealthStatusIcon(diagnostics.health.status);\n        let response = `${statusIcon} **Workflow Health: ${diagnostics.workflowName}**\\n\\n`;\n        response += `**Status:** ${diagnostics.health.status.toUpperCase()}\\n`;\n        response += `**Success Rate:** ${diagnostics.performance.successRate.toFixed(1)}%\\n`;\n        \n        if (diagnostics.performance.averageExecutionTime > 0) {\n          response += `**Avg Execution Time:** ${(diagnostics.performance.averageExecutionTime / 1000).toFixed(2)}s\\n`;\n        }\n\n        // Health issues\n        if (diagnostics.health.issues.length > 0) {\n          response += `\\n**\u26A0\uFE0F Issues:**\\n`;\n          diagnostics.health.issues.forEach(issue => {\n            response += `\u2022 ${issue}\\n`;\n          });\n        }\n\n        // Recommendations\n        if (diagnostics.health.recommendations.length > 0) {\n          response += `\\n**\uD83D\uDCA1 Recommendations:**\\n`;\n          diagnostics.health.recommendations.forEach(rec => {\n            response += `\u2022 ${rec}\\n`;\n          });\n        }\n\n        // Recent executions\n        if (args.includeRecentExecutions && diagnostics.performance.recentExecutions.length > 0) {\n          response += `\\n**\uD83D\uDCC8 Recent Executions (${Math.min(diagnostics.performance.recentExecutions.length, args.executionLimit)}):**\\n`;\n          diagnostics.performance.recentExecutions\n            .slice(0, args.executionLimit)\n            .forEach(exec => {\n              const timeStr = exec.executionTime > 0 ? ` (${(exec.executionTime / 1000).toFixed(2)}s)` : '';\n              const statusEmoji = exec.status === 'success' ? '\u2705' : exec.status === 'failed' ? '\u274C' : '\u23F3';\n              response += `\u2022 ${statusEmoji} ${exec.status}${timeStr} - ${new Date(exec.timestamp).toLocaleString()}\\n`;\n            });\n        }\n\n        // Node analysis\n        if (args.includeNodes && diagnostics.nodes.length > 0) {\n          response += `\\n**\uD83D\uDD27 Node Analysis (${diagnostics.nodes.length} nodes):**\\n`;\n          diagnostics.nodes.forEach(node => {\n            const nodeStatus = node.issues.length > 0 ? '\u26A0\uFE0F' : '\u2705';\n            response += `\u2022 ${nodeStatus} **${node.name}** (${node.type})\\n`;\n            if (node.issues.length > 0) {\n              node.issues.forEach(issue => {\n                response += `  - ${issue}\\n`;\n              });\n            }\n          });\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to check workflow health: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Test connectivity tool\n  server.addTool({\n    name: 'test-connectivity',\n    description: 'Test connectivity to n8n instance and measure response times',\n    parameters: ConnectivityTestSchema,\n    handler: async (args: z.infer<typeof ConnectivityTestSchema>) => {\n      try {\n        const monitoringClient = getMonitoringClient(getClient);\n        \n        const tests = [];\n        for (let i = 0; i <= args.retries; i++) {\n          const result = await monitoringClient.testConnectivity();\n          tests.push(result);\n          \n          if (i < args.retries && !result.success) {\n            // Wait before retry\n            await new Promise(resolve => setTimeout(resolve, 1000));\n          }\n        }\n\n        const successfulTests = tests.filter(t => t.success);\n        const failedTests = tests.filter(t => !t.success);\n        \n        let response = `\uD83C\uDF10 **Connectivity Test Results**\\n\\n`;\n        response += `**Tests:** ${tests.length} (${successfulTests.length} successful, ${failedTests.length} failed)\\n`;\n\n        if (successfulTests.length > 0) {\n          const avgResponseTime = successfulTests.reduce((sum, test) => sum + test.responseTime, 0) / successfulTests.length;\n          const minResponseTime = Math.min(...successfulTests.map(t => t.responseTime));\n          const maxResponseTime = Math.max(...successfulTests.map(t => t.responseTime));\n          \n          response += `**Success Rate:** ${(successfulTests.length / tests.length * 100).toFixed(1)}%\\n`;\n          response += `**Response Times:**\\n`;\n          response += `\u2022 Average: ${avgResponseTime.toFixed(0)}ms\\n`;\n          response += `\u2022 Min: ${minResponseTime}ms\\n`;\n          response += `\u2022 Max: ${maxResponseTime}ms\\n`;\n          \n          // Assess response time\n          if (avgResponseTime > 3000) {\n            response += `\u26A0\uFE0F **High response times detected - consider checking network or server performance**\\n`;\n          } else if (avgResponseTime > 1000) {\n            response += `\uD83D\uDFE1 **Moderate response times - monitor for trends**\\n`;\n          } else {\n            response += `\u2705 **Good response times**\\n`;\n          }\n        }\n\n        if (failedTests.length > 0) {\n          response += `\\n**\u274C Failed Tests:**\\n`;\n          failedTests.forEach((test, index) => {\n            response += `\u2022 Test ${index + 1}: ${test.error}\\n`;\n          });\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to test connectivity: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Resource monitoring tool\n  server.addTool({\n    name: 'monitor-resources',\n    description: 'Monitor system resources with configurable thresholds and alerts',\n    parameters: ResourceThresholdSchema,\n    handler: async (args: z.infer<typeof ResourceThresholdSchema>) => {\n      try {\n        const monitoringClient = getMonitoringClient(getClient);\n        const systemUsage = monitoringClient.getSystemResourceUsage();\n\n        // Default thresholds\n        const thresholds: ResourceThresholds = {\n          cpu: args.cpu || { warning: 75, critical: 90 },\n          memory: args.memory || { warning: 80, critical: 95 },\n          disk: args.disk || { warning: 85, critical: 95 },\n          executionTime: args.executionTime || { warning: 30000, critical: 120000 },\n          errorRate: args.errorRate || { warning: 5, critical: 15 },\n          responseTime: args.responseTime || { warning: 1000, critical: 3000 },\n        };\n\n        // Evaluate resource usage against thresholds\n        const evaluation = evaluateResourceThresholds(systemUsage, thresholds);\n\n        let response = `\uD83D\uDCCA **Resource Monitoring Report**\\n\\n`;\n        response += `**Overall Status:** ${getHealthStatusIcon(evaluation.status)} ${evaluation.status.toUpperCase()}\\n`;\n        response += `**Timestamp:** ${new Date(systemUsage.timestamp).toLocaleString()}\\n\\n`;\n\n        // Current resource usage\n        response += `**\uD83D\uDCBB Current Usage:**\\n`;\n        response += `\u2022 CPU: ${systemUsage.cpu.totalUsage.toFixed(1)}% (${systemUsage.cpu.coreCount} cores)\\n`;\n        response += `\u2022 Memory: ${systemUsage.memory.utilization.toFixed(1)}% (${formatBytes(systemUsage.memory.usedMemory)} / ${formatBytes(systemUsage.memory.totalMemory)})\\n`;\n        response += `\u2022 Process: ${formatBytes(systemUsage.memory.processMemory.rss)} RSS, ${formatBytes(systemUsage.memory.processMemory.heapUsed)} heap\\n`;\n        \n        if (systemUsage.disk.totalSpace > 0) {\n          response += `\u2022 Disk: ${systemUsage.disk.utilization.toFixed(1)}% (${formatBytes(systemUsage.disk.usedSpace)} / ${formatBytes(systemUsage.disk.totalSpace)})\\n`;\n        }\n        response += `\u2022 Uptime: ${formatUptime(systemUsage.uptime)}\\n`;\n\n        // Configured thresholds\n        response += `\\n**\u2699\uFE0F Configured Thresholds:**\\n`;\n        response += `\u2022 CPU: \u26A0\uFE0F${thresholds.cpu.warning}% / \uD83D\uDD34${thresholds.cpu.critical}%\\n`;\n        response += `\u2022 Memory: \u26A0\uFE0F${thresholds.memory.warning}% / \uD83D\uDD34${thresholds.memory.critical}%\\n`;\n        response += `\u2022 Disk: \u26A0\uFE0F${thresholds.disk.warning}% / \uD83D\uDD34${thresholds.disk.critical}%\\n`;\n\n        // Alerts\n        if (evaluation.alerts.length > 0) {\n          response += `\\n**\uD83D\uDEA8 Active Alerts:**\\n`;\n          evaluation.alerts.forEach(alert => {\n            response += `\u2022 ${alert}\\n`;\n          });\n        } else {\n          response += `\\n\u2705 **No resource alerts currently active**\\n`;\n        }\n\n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to monitor resources: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8838db0c10fe3ee3f6962707c9ad830eca1bc642"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t564jjl2r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t564jjl2r();
cov_t564jjl2r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_t564jjl2r().s[1]++;
exports.createSystemHealthTools = createSystemHealthTools;
const zod_1 =
/* istanbul ignore next */
(cov_t564jjl2r().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_t564jjl2r().s[3]++, require("fastmcp"));
const monitoringClient_js_1 =
/* istanbul ignore next */
(cov_t564jjl2r().s[4]++, require("../client/monitoringClient.js"));
// Zod schemas for validation
const HealthCheckSchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[5]++, zod_1.z.object({
  includeDetails: zod_1.z.boolean().default(true),
  includeDiagnostics: zod_1.z.boolean().default(false),
  includeRecommendations: zod_1.z.boolean().default(true)
}));
const DiagnosticsSchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[6]++, zod_1.z.object({
  includeEnvironment: zod_1.z.boolean().default(true),
  includeConnectivity: zod_1.z.boolean().default(true),
  includeResources: zod_1.z.boolean().default(true),
  verbose: zod_1.z.boolean().default(false)
}));
const WorkflowHealthSchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[7]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  includeNodes: zod_1.z.boolean().default(true),
  includeRecentExecutions: zod_1.z.boolean().default(true),
  executionLimit: zod_1.z.number().min(1).max(100).default(10)
}));
const ResourceThresholdSchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[8]++, zod_1.z.object({
  cpu: zod_1.z.object({
    warning: zod_1.z.number().min(0).max(100).default(75),
    critical: zod_1.z.number().min(0).max(100).default(90)
  }).optional(),
  memory: zod_1.z.object({
    warning: zod_1.z.number().min(0).max(100).default(80),
    critical: zod_1.z.number().min(0).max(100).default(95)
  }).optional(),
  disk: zod_1.z.object({
    warning: zod_1.z.number().min(0).max(100).default(85),
    critical: zod_1.z.number().min(0).max(100).default(95)
  }).optional(),
  executionTime: zod_1.z.object({
    warning: zod_1.z.number().min(0).default(30000),
    // 30 seconds
    critical: zod_1.z.number().min(0).default(120000) // 2 minutes
  }).optional(),
  errorRate: zod_1.z.object({
    warning: zod_1.z.number().min(0).max(100).default(5),
    critical: zod_1.z.number().min(0).max(100).default(15)
  }).optional(),
  responseTime: zod_1.z.object({
    warning: zod_1.z.number().min(0).default(1000),
    // 1 second
    critical: zod_1.z.number().min(0).default(3000) // 3 seconds
  }).optional()
}));
const AlertsQuerySchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[9]++, zod_1.z.object({
  severity: zod_1.z.enum(['low', 'medium', 'high', 'critical']).optional(),
  resolved: zod_1.z.boolean().optional(),
  workflowId: zod_1.z.string().optional(),
  limit: zod_1.z.number().min(1).max(100).default(50),
  timeRange: zod_1.z.enum(['1h', '6h', '24h', '7d', '30d']).default('24h')
}));
const ConnectivityTestSchema =
/* istanbul ignore next */
(cov_t564jjl2r().s[10]++, zod_1.z.object({
  includeLatency: zod_1.z.boolean().default(true),
  timeout: zod_1.z.number().min(1000).max(30000).default(5000),
  // 5 second default timeout
  retries: zod_1.z.number().min(0).max(5).default(1)
}));
// Global monitoring client instance
let monitoringClient =
/* istanbul ignore next */
(cov_t564jjl2r().s[11]++, null);
// Initialize monitoring client
/* istanbul ignore next */
cov_t564jjl2r().s[12]++;
const getMonitoringClient = getClient => {
  /* istanbul ignore next */
  cov_t564jjl2r().f[0]++;
  cov_t564jjl2r().s[13]++;
  if (!monitoringClient) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[0][0]++;
    const client =
    /* istanbul ignore next */
    (cov_t564jjl2r().s[14]++, getClient());
    /* istanbul ignore next */
    cov_t564jjl2r().s[15]++;
    if (!client) {
      /* istanbul ignore next */
      cov_t564jjl2r().b[1][0]++;
      cov_t564jjl2r().s[16]++;
      throw new fastmcp_1.UserError('N8n client not available');
    } else
    /* istanbul ignore next */
    {
      cov_t564jjl2r().b[1][1]++;
    }
    // Extract baseUrl and apiKey from client
    const baseUrl =
    /* istanbul ignore next */
    (cov_t564jjl2r().s[17]++,
    /* istanbul ignore next */
    (cov_t564jjl2r().b[2][0]++, client.baseUrl) ||
    /* istanbul ignore next */
    (cov_t564jjl2r().b[2][1]++, process.env.N8N_BASE_URL) ||
    /* istanbul ignore next */
    (cov_t564jjl2r().b[2][2]++, 'http://localhost:5678'));
    const apiKey =
    /* istanbul ignore next */
    (cov_t564jjl2r().s[18]++,
    /* istanbul ignore next */
    (cov_t564jjl2r().b[3][0]++, client.apiKey) ||
    /* istanbul ignore next */
    (cov_t564jjl2r().b[3][1]++, process.env.N8N_API_KEY) ||
    /* istanbul ignore next */
    (cov_t564jjl2r().b[3][2]++, ''));
    /* istanbul ignore next */
    cov_t564jjl2r().s[19]++;
    monitoringClient = new monitoringClient_js_1.MonitoringClient(client, baseUrl, apiKey);
  } else
  /* istanbul ignore next */
  {
    cov_t564jjl2r().b[0][1]++;
  }
  cov_t564jjl2r().s[20]++;
  return monitoringClient;
};
// Helper functions
/* istanbul ignore next */
cov_t564jjl2r().s[21]++;
const formatUptime = seconds => {
  /* istanbul ignore next */
  cov_t564jjl2r().f[1]++;
  const days =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[22]++, Math.floor(seconds / 86400));
  const hours =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[23]++, Math.floor(seconds % 86400 / 3600));
  const minutes =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[24]++, Math.floor(seconds % 3600 / 60));
  /* istanbul ignore next */
  cov_t564jjl2r().s[25]++;
  if (days > 0) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[4][0]++;
    cov_t564jjl2r().s[26]++;
    return `${days}d ${hours}h ${minutes}m`;
  } else
  /* istanbul ignore next */
  {
    cov_t564jjl2r().b[4][1]++;
  }
  cov_t564jjl2r().s[27]++;
  if (hours > 0) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[5][0]++;
    cov_t564jjl2r().s[28]++;
    return `${hours}h ${minutes}m`;
  } else
  /* istanbul ignore next */
  {
    cov_t564jjl2r().b[5][1]++;
  }
  cov_t564jjl2r().s[29]++;
  return `${minutes}m`;
};
/* istanbul ignore next */
cov_t564jjl2r().s[30]++;
const formatBytes = bytes => {
  /* istanbul ignore next */
  cov_t564jjl2r().f[2]++;
  cov_t564jjl2r().s[31]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[6][0]++;
    cov_t564jjl2r().s[32]++;
    return '0 B';
  } else
  /* istanbul ignore next */
  {
    cov_t564jjl2r().b[6][1]++;
  }
  const k =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[33]++, 1024);
  const sizes =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[34]++, ['B', 'KB', 'MB', 'GB', 'TB']);
  const i =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[35]++, Math.floor(Math.log(bytes) / Math.log(k)));
  /* istanbul ignore next */
  cov_t564jjl2r().s[36]++;
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
};
/* istanbul ignore next */
cov_t564jjl2r().s[37]++;
const getHealthStatusIcon = status => {
  /* istanbul ignore next */
  cov_t564jjl2r().f[3]++;
  cov_t564jjl2r().s[38]++;
  switch (status) {
    case 'healthy':
      /* istanbul ignore next */
      cov_t564jjl2r().b[7][0]++;
      cov_t564jjl2r().s[39]++;
      return '✅';
    case 'warning':
      /* istanbul ignore next */
      cov_t564jjl2r().b[7][1]++;
      cov_t564jjl2r().s[40]++;
      return '⚠️';
    case 'critical':
      /* istanbul ignore next */
      cov_t564jjl2r().b[7][2]++;
      cov_t564jjl2r().s[41]++;
      return '🔴';
    case 'degraded':
      /* istanbul ignore next */
      cov_t564jjl2r().b[7][3]++;
      cov_t564jjl2r().s[42]++;
      return '🟡';
    default:
      /* istanbul ignore next */
      cov_t564jjl2r().b[7][4]++;
      cov_t564jjl2r().s[43]++;
      return '❓';
  }
};
/* istanbul ignore next */
cov_t564jjl2r().s[44]++;
const evaluateResourceThresholds = (usage, thresholds) => {
  /* istanbul ignore next */
  cov_t564jjl2r().f[4]++;
  const alerts =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[45]++, []);
  let status =
  /* istanbul ignore next */
  (cov_t564jjl2r().s[46]++, 'healthy');
  // Check CPU
  /* istanbul ignore next */
  cov_t564jjl2r().s[47]++;
  if (usage.cpu?.totalUsage >= thresholds.cpu.critical) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[8][0]++;
    cov_t564jjl2r().s[48]++;
    alerts.push(`Critical CPU usage: ${usage.cpu.totalUsage.toFixed(1)}%`);
    /* istanbul ignore next */
    cov_t564jjl2r().s[49]++;
    status = 'critical';
  } else {
    /* istanbul ignore next */
    cov_t564jjl2r().b[8][1]++;
    cov_t564jjl2r().s[50]++;
    if (usage.cpu?.totalUsage >= thresholds.cpu.warning) {
      /* istanbul ignore next */
      cov_t564jjl2r().b[9][0]++;
      cov_t564jjl2r().s[51]++;
      alerts.push(`High CPU usage: ${usage.cpu.totalUsage.toFixed(1)}%`);
      /* istanbul ignore next */
      cov_t564jjl2r().s[52]++;
      if (status === 'healthy') {
        /* istanbul ignore next */
        cov_t564jjl2r().b[10][0]++;
        cov_t564jjl2r().s[53]++;
        status = 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_t564jjl2r().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_t564jjl2r().b[9][1]++;
    }
  }
  // Check Memory
  /* istanbul ignore next */
  cov_t564jjl2r().s[54]++;
  if (usage.memory?.utilization >= thresholds.memory.critical) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[11][0]++;
    cov_t564jjl2r().s[55]++;
    alerts.push(`Critical memory usage: ${usage.memory.utilization.toFixed(1)}%`);
    /* istanbul ignore next */
    cov_t564jjl2r().s[56]++;
    status = 'critical';
  } else {
    /* istanbul ignore next */
    cov_t564jjl2r().b[11][1]++;
    cov_t564jjl2r().s[57]++;
    if (usage.memory?.utilization >= thresholds.memory.warning) {
      /* istanbul ignore next */
      cov_t564jjl2r().b[12][0]++;
      cov_t564jjl2r().s[58]++;
      alerts.push(`High memory usage: ${usage.memory.utilization.toFixed(1)}%`);
      /* istanbul ignore next */
      cov_t564jjl2r().s[59]++;
      if (status === 'healthy') {
        /* istanbul ignore next */
        cov_t564jjl2r().b[13][0]++;
        cov_t564jjl2r().s[60]++;
        status = 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_t564jjl2r().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_t564jjl2r().b[12][1]++;
    }
  }
  // Check Disk (if available)
  /* istanbul ignore next */
  cov_t564jjl2r().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_t564jjl2r().b[15][0]++, usage.disk?.utilization) &&
  /* istanbul ignore next */
  (cov_t564jjl2r().b[15][1]++, usage.disk.utilization >= thresholds.disk.critical)) {
    /* istanbul ignore next */
    cov_t564jjl2r().b[14][0]++;
    cov_t564jjl2r().s[62]++;
    alerts.push(`Critical disk usage: ${usage.disk.utilization.toFixed(1)}%`);
    /* istanbul ignore next */
    cov_t564jjl2r().s[63]++;
    status = 'critical';
  } else {
    /* istanbul ignore next */
    cov_t564jjl2r().b[14][1]++;
    cov_t564jjl2r().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_t564jjl2r().b[17][0]++, usage.disk?.utilization) &&
    /* istanbul ignore next */
    (cov_t564jjl2r().b[17][1]++, usage.disk.utilization >= thresholds.disk.warning)) {
      /* istanbul ignore next */
      cov_t564jjl2r().b[16][0]++;
      cov_t564jjl2r().s[65]++;
      alerts.push(`High disk usage: ${usage.disk.utilization.toFixed(1)}%`);
      /* istanbul ignore next */
      cov_t564jjl2r().s[66]++;
      if (status === 'healthy') {
        /* istanbul ignore next */
        cov_t564jjl2r().b[18][0]++;
        cov_t564jjl2r().s[67]++;
        status = 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_t564jjl2r().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_t564jjl2r().b[16][1]++;
    }
  }
  /* istanbul ignore next */
  cov_t564jjl2r().s[68]++;
  return {
    status,
    alerts
  };
};
// Tool registration function
function createSystemHealthTools(getClient, server) {
  /* istanbul ignore next */
  cov_t564jjl2r().f[5]++;
  cov_t564jjl2r().s[69]++;
  // System health check tool
  server.addTool({
    name: 'check-system-health',
    description: 'Perform comprehensive system health check of the n8n instance',
    parameters: HealthCheckSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_t564jjl2r().f[6]++;
      cov_t564jjl2r().s[70]++;
      try {
        const monitoringClient =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[71]++, getMonitoringClient(getClient));
        // Get health check data
        const healthCheck =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[72]++, await monitoringClient.getHealthCheck());
        let diagnostics =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[73]++, null);
        /* istanbul ignore next */
        cov_t564jjl2r().s[74]++;
        if (args.includeDiagnostics) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[19][0]++;
          cov_t564jjl2r().s[75]++;
          diagnostics = await monitoringClient.getSystemDiagnostics();
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[19][1]++;
        }
        // Format response
        const statusIcon =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[76]++, getHealthStatusIcon(healthCheck.status));
        let response =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[77]++, `${statusIcon} **System Health Status: ${healthCheck.status.toUpperCase()}**\n\n`);
        // Basic health information
        /* istanbul ignore next */
        cov_t564jjl2r().s[78]++;
        response += `**🔗 Database:** ${healthCheck.database.status} (${healthCheck.database.responseTime}ms)\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[79]++;
        response += `**📁 Filesystem:** ${healthCheck.filesystem.status} (${healthCheck.filesystem.permissions})\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[80]++;
        response += `**⏱️ Uptime:** ${formatUptime(healthCheck.uptime)}\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[81]++;
        if (
        /* istanbul ignore next */
        (cov_t564jjl2r().b[21][0]++, healthCheck.version) &&
        /* istanbul ignore next */
        (cov_t564jjl2r().b[21][1]++, healthCheck.version !== 'unknown')) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[20][0]++;
          cov_t564jjl2r().s[82]++;
          response += `**📦 Version:** ${healthCheck.version}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[20][1]++;
        }
        cov_t564jjl2r().s[83]++;
        if (healthCheck.redis) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[22][0]++;
          cov_t564jjl2r().s[84]++;
          response += `**📊 Redis:** ${healthCheck.redis.status} (${healthCheck.redis.responseTime}ms)\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[22][1]++;
        }
        // Include diagnostics if requested
        cov_t564jjl2r().s[85]++;
        if (
        /* istanbul ignore next */
        (cov_t564jjl2r().b[24][0]++, diagnostics) &&
        /* istanbul ignore next */
        (cov_t564jjl2r().b[24][1]++, args.includeDetails)) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[23][0]++;
          cov_t564jjl2r().s[86]++;
          response += `\n**🔍 System Diagnostics:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[87]++;
          response += `**Node.js:** ${diagnostics.environment.nodeVersion}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[88]++;
          response += `**Platform:** ${diagnostics.environment.platform} (${diagnostics.environment.architecture})\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[89]++;
          response += `**API Response:** ${diagnostics.connectivity.responseTime}ms\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[90]++;
          if (diagnostics.overall.issues.length > 0) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[25][0]++;
            cov_t564jjl2r().s[91]++;
            response += `\n**⚠️ Issues Detected:**\n`;
            /* istanbul ignore next */
            cov_t564jjl2r().s[92]++;
            diagnostics.overall.issues.forEach(issue => {
              /* istanbul ignore next */
              cov_t564jjl2r().f[7]++;
              cov_t564jjl2r().s[93]++;
              response += `• ${issue}\n`;
            });
          } else
          /* istanbul ignore next */
          {
            cov_t564jjl2r().b[25][1]++;
          }
          cov_t564jjl2r().s[94]++;
          if (
          /* istanbul ignore next */
          (cov_t564jjl2r().b[27][0]++, args.includeRecommendations) &&
          /* istanbul ignore next */
          (cov_t564jjl2r().b[27][1]++, diagnostics.overall.recommendations.length > 0)) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[26][0]++;
            cov_t564jjl2r().s[95]++;
            response += `\n**💡 Recommendations:**\n`;
            /* istanbul ignore next */
            cov_t564jjl2r().s[96]++;
            diagnostics.overall.recommendations.forEach(rec => {
              /* istanbul ignore next */
              cov_t564jjl2r().f[8]++;
              cov_t564jjl2r().s[97]++;
              response += `• ${rec}\n`;
            });
          } else
          /* istanbul ignore next */
          {
            cov_t564jjl2r().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[23][1]++;
        }
        cov_t564jjl2r().s[98]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_t564jjl2r().s[99]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[28][0]++;
          cov_t564jjl2r().s[100]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[28][1]++;
        }
        cov_t564jjl2r().s[101]++;
        throw new fastmcp_1.UserError(`Failed to check system health: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_t564jjl2r().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_t564jjl2r().b[29][1]++, 'Unknown error')}`);
      }
    }
  });
  // System diagnostics tool
  /* istanbul ignore next */
  cov_t564jjl2r().s[102]++;
  server.addTool({
    name: 'get-system-diagnostics',
    description: 'Get detailed system diagnostics for troubleshooting',
    parameters: DiagnosticsSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_t564jjl2r().f[9]++;
      cov_t564jjl2r().s[103]++;
      try {
        const monitoringClient =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[104]++, getMonitoringClient(getClient));
        const diagnostics =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[105]++, await monitoringClient.getSystemDiagnostics());
        let response =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[106]++, `🔍 **System Diagnostics Report**\n\n`);
        /* istanbul ignore next */
        cov_t564jjl2r().s[107]++;
        response += `**Generated:** ${new Date(diagnostics.timestamp).toLocaleString()}\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[108]++;
        response += `**Overall Status:** ${getHealthStatusIcon(diagnostics.overall.status)} ${diagnostics.overall.status.toUpperCase()}\n\n`;
        // Connectivity information
        /* istanbul ignore next */
        cov_t564jjl2r().s[109]++;
        if (args.includeConnectivity) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[30][0]++;
          cov_t564jjl2r().s[110]++;
          response += `**🌐 Connectivity:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[111]++;
          response += `• API Connection: ${diagnostics.connectivity.apiConnectivity ?
          /* istanbul ignore next */
          (cov_t564jjl2r().b[31][0]++, '✅ Connected') :
          /* istanbul ignore next */
          (cov_t564jjl2r().b[31][1]++, '❌ Disconnected')}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[112]++;
          response += `• Response Time: ${diagnostics.connectivity.responseTime}ms\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[113]++;
          if (diagnostics.connectivity.error) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[32][0]++;
            cov_t564jjl2r().s[114]++;
            response += `• Error: ${diagnostics.connectivity.error}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_t564jjl2r().b[32][1]++;
          }
          cov_t564jjl2r().s[115]++;
          response += `\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[30][1]++;
        }
        // Environment information
        cov_t564jjl2r().s[116]++;
        if (args.includeEnvironment) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[33][0]++;
          cov_t564jjl2r().s[117]++;
          response += `**💻 Environment:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[118]++;
          response += `• Node.js Version: ${diagnostics.environment.nodeVersion}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[119]++;
          response += `• Platform: ${diagnostics.environment.platform}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[120]++;
          response += `• Architecture: ${diagnostics.environment.architecture}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[121]++;
          response += `• Process Uptime: ${formatUptime(diagnostics.environment.uptime)}\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[122]++;
          response += `\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[33][1]++;
        }
        // Resource usage
        cov_t564jjl2r().s[123]++;
        if (args.includeResources) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[34][0]++;
          const resources =
          /* istanbul ignore next */
          (cov_t564jjl2r().s[124]++, diagnostics.resources);
          /* istanbul ignore next */
          cov_t564jjl2r().s[125]++;
          response += `**📊 Resource Usage:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[126]++;
          response += `• CPU: ${resources.cpu.totalUsage.toFixed(1)}% (${resources.cpu.coreCount} cores)\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[127]++;
          response += `• Memory: ${formatBytes(resources.memory.usedMemory)} / ${formatBytes(resources.memory.totalMemory)} (${resources.memory.utilization.toFixed(1)}%)\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[128]++;
          response += `• Process Memory: ${formatBytes(resources.memory.processMemory.rss)} RSS, ${formatBytes(resources.memory.processMemory.heapUsed)} heap\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[129]++;
          if (resources.disk.totalSpace > 0) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[35][0]++;
            cov_t564jjl2r().s[130]++;
            response += `• Disk: ${formatBytes(resources.disk.usedSpace)} / ${formatBytes(resources.disk.totalSpace)} (${resources.disk.utilization.toFixed(1)}%)\n`;
          } else
          /* istanbul ignore next */
          {
            cov_t564jjl2r().b[35][1]++;
          }
          cov_t564jjl2r().s[131]++;
          response += `\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[34][1]++;
        }
        // Issues and recommendations
        cov_t564jjl2r().s[132]++;
        if (diagnostics.overall.issues.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[36][0]++;
          cov_t564jjl2r().s[133]++;
          response += `**⚠️ Issues Detected:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[134]++;
          diagnostics.overall.issues.forEach(issue => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[10]++;
            cov_t564jjl2r().s[135]++;
            response += `• ${issue}\n`;
          });
          /* istanbul ignore next */
          cov_t564jjl2r().s[136]++;
          response += `\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[36][1]++;
        }
        cov_t564jjl2r().s[137]++;
        if (diagnostics.overall.recommendations.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[37][0]++;
          cov_t564jjl2r().s[138]++;
          response += `**💡 Recommendations:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[139]++;
          diagnostics.overall.recommendations.forEach(rec => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[11]++;
            cov_t564jjl2r().s[140]++;
            response += `• ${rec}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[37][1]++;
        }
        cov_t564jjl2r().s[141]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_t564jjl2r().s[142]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[38][0]++;
          cov_t564jjl2r().s[143]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[38][1]++;
        }
        cov_t564jjl2r().s[144]++;
        throw new fastmcp_1.UserError(`Failed to get system diagnostics: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_t564jjl2r().b[39][0]++, error.message) :
        /* istanbul ignore next */
        (cov_t564jjl2r().b[39][1]++, 'Unknown error')}`);
      }
    }
  });
  // Workflow health check tool
  /* istanbul ignore next */
  cov_t564jjl2r().s[145]++;
  server.addTool({
    name: 'check-workflow-health',
    description: 'Check the health and performance of a specific workflow',
    parameters: WorkflowHealthSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_t564jjl2r().f[12]++;
      cov_t564jjl2r().s[146]++;
      try {
        const monitoringClient =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[147]++, getMonitoringClient(getClient));
        const diagnostics =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[148]++, await monitoringClient.getWorkflowDiagnostics(args.workflowId));
        const statusIcon =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[149]++, getHealthStatusIcon(diagnostics.health.status));
        let response =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[150]++, `${statusIcon} **Workflow Health: ${diagnostics.workflowName}**\n\n`);
        /* istanbul ignore next */
        cov_t564jjl2r().s[151]++;
        response += `**Status:** ${diagnostics.health.status.toUpperCase()}\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[152]++;
        response += `**Success Rate:** ${diagnostics.performance.successRate.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[153]++;
        if (diagnostics.performance.averageExecutionTime > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[40][0]++;
          cov_t564jjl2r().s[154]++;
          response += `**Avg Execution Time:** ${(diagnostics.performance.averageExecutionTime / 1000).toFixed(2)}s\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[40][1]++;
        }
        // Health issues
        cov_t564jjl2r().s[155]++;
        if (diagnostics.health.issues.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[41][0]++;
          cov_t564jjl2r().s[156]++;
          response += `\n**⚠️ Issues:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[157]++;
          diagnostics.health.issues.forEach(issue => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[13]++;
            cov_t564jjl2r().s[158]++;
            response += `• ${issue}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[41][1]++;
        }
        // Recommendations
        cov_t564jjl2r().s[159]++;
        if (diagnostics.health.recommendations.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[42][0]++;
          cov_t564jjl2r().s[160]++;
          response += `\n**💡 Recommendations:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[161]++;
          diagnostics.health.recommendations.forEach(rec => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[14]++;
            cov_t564jjl2r().s[162]++;
            response += `• ${rec}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[42][1]++;
        }
        // Recent executions
        cov_t564jjl2r().s[163]++;
        if (
        /* istanbul ignore next */
        (cov_t564jjl2r().b[44][0]++, args.includeRecentExecutions) &&
        /* istanbul ignore next */
        (cov_t564jjl2r().b[44][1]++, diagnostics.performance.recentExecutions.length > 0)) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[43][0]++;
          cov_t564jjl2r().s[164]++;
          response += `\n**📈 Recent Executions (${Math.min(diagnostics.performance.recentExecutions.length, args.executionLimit)}):**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[165]++;
          diagnostics.performance.recentExecutions.slice(0, args.executionLimit).forEach(exec => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[15]++;
            const timeStr =
            /* istanbul ignore next */
            (cov_t564jjl2r().s[166]++, exec.executionTime > 0 ?
            /* istanbul ignore next */
            (cov_t564jjl2r().b[45][0]++, ` (${(exec.executionTime / 1000).toFixed(2)}s)`) :
            /* istanbul ignore next */
            (cov_t564jjl2r().b[45][1]++, ''));
            const statusEmoji =
            /* istanbul ignore next */
            (cov_t564jjl2r().s[167]++, exec.status === 'success' ?
            /* istanbul ignore next */
            (cov_t564jjl2r().b[46][0]++, '✅') :
            /* istanbul ignore next */
            (cov_t564jjl2r().b[46][1]++, exec.status === 'failed' ?
            /* istanbul ignore next */
            (cov_t564jjl2r().b[47][0]++, '❌') :
            /* istanbul ignore next */
            (cov_t564jjl2r().b[47][1]++, '⏳')));
            /* istanbul ignore next */
            cov_t564jjl2r().s[168]++;
            response += `• ${statusEmoji} ${exec.status}${timeStr} - ${new Date(exec.timestamp).toLocaleString()}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[43][1]++;
        }
        // Node analysis
        cov_t564jjl2r().s[169]++;
        if (
        /* istanbul ignore next */
        (cov_t564jjl2r().b[49][0]++, args.includeNodes) &&
        /* istanbul ignore next */
        (cov_t564jjl2r().b[49][1]++, diagnostics.nodes.length > 0)) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[48][0]++;
          cov_t564jjl2r().s[170]++;
          response += `\n**🔧 Node Analysis (${diagnostics.nodes.length} nodes):**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[171]++;
          diagnostics.nodes.forEach(node => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[16]++;
            const nodeStatus =
            /* istanbul ignore next */
            (cov_t564jjl2r().s[172]++, node.issues.length > 0 ?
            /* istanbul ignore next */
            (cov_t564jjl2r().b[50][0]++, '⚠️') :
            /* istanbul ignore next */
            (cov_t564jjl2r().b[50][1]++, '✅'));
            /* istanbul ignore next */
            cov_t564jjl2r().s[173]++;
            response += `• ${nodeStatus} **${node.name}** (${node.type})\n`;
            /* istanbul ignore next */
            cov_t564jjl2r().s[174]++;
            if (node.issues.length > 0) {
              /* istanbul ignore next */
              cov_t564jjl2r().b[51][0]++;
              cov_t564jjl2r().s[175]++;
              node.issues.forEach(issue => {
                /* istanbul ignore next */
                cov_t564jjl2r().f[17]++;
                cov_t564jjl2r().s[176]++;
                response += `  - ${issue}\n`;
              });
            } else
            /* istanbul ignore next */
            {
              cov_t564jjl2r().b[51][1]++;
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[48][1]++;
        }
        cov_t564jjl2r().s[177]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_t564jjl2r().s[178]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[52][0]++;
          cov_t564jjl2r().s[179]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[52][1]++;
        }
        cov_t564jjl2r().s[180]++;
        throw new fastmcp_1.UserError(`Failed to check workflow health: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_t564jjl2r().b[53][0]++, error.message) :
        /* istanbul ignore next */
        (cov_t564jjl2r().b[53][1]++, 'Unknown error')}`);
      }
    }
  });
  // Test connectivity tool
  /* istanbul ignore next */
  cov_t564jjl2r().s[181]++;
  server.addTool({
    name: 'test-connectivity',
    description: 'Test connectivity to n8n instance and measure response times',
    parameters: ConnectivityTestSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_t564jjl2r().f[18]++;
      cov_t564jjl2r().s[182]++;
      try {
        const monitoringClient =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[183]++, getMonitoringClient(getClient));
        const tests =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[184]++, []);
        /* istanbul ignore next */
        cov_t564jjl2r().s[185]++;
        for (let i =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[186]++, 0); i <= args.retries; i++) {
          const result =
          /* istanbul ignore next */
          (cov_t564jjl2r().s[187]++, await monitoringClient.testConnectivity());
          /* istanbul ignore next */
          cov_t564jjl2r().s[188]++;
          tests.push(result);
          /* istanbul ignore next */
          cov_t564jjl2r().s[189]++;
          if (
          /* istanbul ignore next */
          (cov_t564jjl2r().b[55][0]++, i < args.retries) &&
          /* istanbul ignore next */
          (cov_t564jjl2r().b[55][1]++, !result.success)) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[54][0]++;
            cov_t564jjl2r().s[190]++;
            // Wait before retry
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_t564jjl2r().f[19]++;
              cov_t564jjl2r().s[191]++;
              return setTimeout(resolve, 1000);
            });
          } else
          /* istanbul ignore next */
          {
            cov_t564jjl2r().b[54][1]++;
          }
        }
        const successfulTests =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[192]++, tests.filter(t => {
          /* istanbul ignore next */
          cov_t564jjl2r().f[20]++;
          cov_t564jjl2r().s[193]++;
          return t.success;
        }));
        const failedTests =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[194]++, tests.filter(t => {
          /* istanbul ignore next */
          cov_t564jjl2r().f[21]++;
          cov_t564jjl2r().s[195]++;
          return !t.success;
        }));
        let response =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[196]++, `🌐 **Connectivity Test Results**\n\n`);
        /* istanbul ignore next */
        cov_t564jjl2r().s[197]++;
        response += `**Tests:** ${tests.length} (${successfulTests.length} successful, ${failedTests.length} failed)\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[198]++;
        if (successfulTests.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[56][0]++;
          const avgResponseTime =
          /* istanbul ignore next */
          (cov_t564jjl2r().s[199]++, successfulTests.reduce((sum, test) => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[22]++;
            cov_t564jjl2r().s[200]++;
            return sum + test.responseTime;
          }, 0) / successfulTests.length);
          const minResponseTime =
          /* istanbul ignore next */
          (cov_t564jjl2r().s[201]++, Math.min(...successfulTests.map(t => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[23]++;
            cov_t564jjl2r().s[202]++;
            return t.responseTime;
          })));
          const maxResponseTime =
          /* istanbul ignore next */
          (cov_t564jjl2r().s[203]++, Math.max(...successfulTests.map(t => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[24]++;
            cov_t564jjl2r().s[204]++;
            return t.responseTime;
          })));
          /* istanbul ignore next */
          cov_t564jjl2r().s[205]++;
          response += `**Success Rate:** ${(successfulTests.length / tests.length * 100).toFixed(1)}%\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[206]++;
          response += `**Response Times:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[207]++;
          response += `• Average: ${avgResponseTime.toFixed(0)}ms\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[208]++;
          response += `• Min: ${minResponseTime}ms\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[209]++;
          response += `• Max: ${maxResponseTime}ms\n`;
          // Assess response time
          /* istanbul ignore next */
          cov_t564jjl2r().s[210]++;
          if (avgResponseTime > 3000) {
            /* istanbul ignore next */
            cov_t564jjl2r().b[57][0]++;
            cov_t564jjl2r().s[211]++;
            response += `⚠️ **High response times detected - consider checking network or server performance**\n`;
          } else {
            /* istanbul ignore next */
            cov_t564jjl2r().b[57][1]++;
            cov_t564jjl2r().s[212]++;
            if (avgResponseTime > 1000) {
              /* istanbul ignore next */
              cov_t564jjl2r().b[58][0]++;
              cov_t564jjl2r().s[213]++;
              response += `🟡 **Moderate response times - monitor for trends**\n`;
            } else {
              /* istanbul ignore next */
              cov_t564jjl2r().b[58][1]++;
              cov_t564jjl2r().s[214]++;
              response += `✅ **Good response times**\n`;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[56][1]++;
        }
        cov_t564jjl2r().s[215]++;
        if (failedTests.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[59][0]++;
          cov_t564jjl2r().s[216]++;
          response += `\n**❌ Failed Tests:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[217]++;
          failedTests.forEach((test, index) => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[25]++;
            cov_t564jjl2r().s[218]++;
            response += `• Test ${index + 1}: ${test.error}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[59][1]++;
        }
        cov_t564jjl2r().s[219]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_t564jjl2r().s[220]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[60][0]++;
          cov_t564jjl2r().s[221]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[60][1]++;
        }
        cov_t564jjl2r().s[222]++;
        throw new fastmcp_1.UserError(`Failed to test connectivity: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_t564jjl2r().b[61][0]++, error.message) :
        /* istanbul ignore next */
        (cov_t564jjl2r().b[61][1]++, 'Unknown error')}`);
      }
    }
  });
  // Resource monitoring tool
  /* istanbul ignore next */
  cov_t564jjl2r().s[223]++;
  server.addTool({
    name: 'monitor-resources',
    description: 'Monitor system resources with configurable thresholds and alerts',
    parameters: ResourceThresholdSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_t564jjl2r().f[26]++;
      cov_t564jjl2r().s[224]++;
      try {
        const monitoringClient =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[225]++, getMonitoringClient(getClient));
        const systemUsage =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[226]++, monitoringClient.getSystemResourceUsage());
        // Default thresholds
        const thresholds =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[227]++, {
          cpu:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[62][0]++, args.cpu) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[62][1]++, {
            warning: 75,
            critical: 90
          }),
          memory:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[63][0]++, args.memory) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[63][1]++, {
            warning: 80,
            critical: 95
          }),
          disk:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[64][0]++, args.disk) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[64][1]++, {
            warning: 85,
            critical: 95
          }),
          executionTime:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[65][0]++, args.executionTime) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[65][1]++, {
            warning: 30000,
            critical: 120000
          }),
          errorRate:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[66][0]++, args.errorRate) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[66][1]++, {
            warning: 5,
            critical: 15
          }),
          responseTime:
          /* istanbul ignore next */
          (cov_t564jjl2r().b[67][0]++, args.responseTime) ||
          /* istanbul ignore next */
          (cov_t564jjl2r().b[67][1]++, {
            warning: 1000,
            critical: 3000
          })
        });
        // Evaluate resource usage against thresholds
        const evaluation =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[228]++, evaluateResourceThresholds(systemUsage, thresholds));
        let response =
        /* istanbul ignore next */
        (cov_t564jjl2r().s[229]++, `📊 **Resource Monitoring Report**\n\n`);
        /* istanbul ignore next */
        cov_t564jjl2r().s[230]++;
        response += `**Overall Status:** ${getHealthStatusIcon(evaluation.status)} ${evaluation.status.toUpperCase()}\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[231]++;
        response += `**Timestamp:** ${new Date(systemUsage.timestamp).toLocaleString()}\n\n`;
        // Current resource usage
        /* istanbul ignore next */
        cov_t564jjl2r().s[232]++;
        response += `**💻 Current Usage:**\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[233]++;
        response += `• CPU: ${systemUsage.cpu.totalUsage.toFixed(1)}% (${systemUsage.cpu.coreCount} cores)\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[234]++;
        response += `• Memory: ${systemUsage.memory.utilization.toFixed(1)}% (${formatBytes(systemUsage.memory.usedMemory)} / ${formatBytes(systemUsage.memory.totalMemory)})\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[235]++;
        response += `• Process: ${formatBytes(systemUsage.memory.processMemory.rss)} RSS, ${formatBytes(systemUsage.memory.processMemory.heapUsed)} heap\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[236]++;
        if (systemUsage.disk.totalSpace > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[68][0]++;
          cov_t564jjl2r().s[237]++;
          response += `• Disk: ${systemUsage.disk.utilization.toFixed(1)}% (${formatBytes(systemUsage.disk.usedSpace)} / ${formatBytes(systemUsage.disk.totalSpace)})\n`;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[68][1]++;
        }
        cov_t564jjl2r().s[238]++;
        response += `• Uptime: ${formatUptime(systemUsage.uptime)}\n`;
        // Configured thresholds
        /* istanbul ignore next */
        cov_t564jjl2r().s[239]++;
        response += `\n**⚙️ Configured Thresholds:**\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[240]++;
        response += `• CPU: ⚠️${thresholds.cpu.warning}% / 🔴${thresholds.cpu.critical}%\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[241]++;
        response += `• Memory: ⚠️${thresholds.memory.warning}% / 🔴${thresholds.memory.critical}%\n`;
        /* istanbul ignore next */
        cov_t564jjl2r().s[242]++;
        response += `• Disk: ⚠️${thresholds.disk.warning}% / 🔴${thresholds.disk.critical}%\n`;
        // Alerts
        /* istanbul ignore next */
        cov_t564jjl2r().s[243]++;
        if (evaluation.alerts.length > 0) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[69][0]++;
          cov_t564jjl2r().s[244]++;
          response += `\n**🚨 Active Alerts:**\n`;
          /* istanbul ignore next */
          cov_t564jjl2r().s[245]++;
          evaluation.alerts.forEach(alert => {
            /* istanbul ignore next */
            cov_t564jjl2r().f[27]++;
            cov_t564jjl2r().s[246]++;
            response += `• ${alert}\n`;
          });
        } else {
          /* istanbul ignore next */
          cov_t564jjl2r().b[69][1]++;
          cov_t564jjl2r().s[247]++;
          response += `\n✅ **No resource alerts currently active**\n`;
        }
        /* istanbul ignore next */
        cov_t564jjl2r().s[248]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_t564jjl2r().s[249]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_t564jjl2r().b[70][0]++;
          cov_t564jjl2r().s[250]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_t564jjl2r().b[70][1]++;
        }
        cov_t564jjl2r().s[251]++;
        throw new fastmcp_1.UserError(`Failed to monitor resources: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_t564jjl2r().b[71][0]++, error.message) :
        /* istanbul ignore next */
        (cov_t564jjl2r().b[71][1]++, 'Unknown error')}`);
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,