{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow.ts","mappings":"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","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  N8nWorkflow,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  PaginationOptions,\n} from '../types/n8n.js';\n\n// Zod schemas for validation\nconst WorkflowIdSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n});\n\nconst ListWorkflowsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateWorkflowSchema = z.object({\n  name: z.string().min(1, 'Workflow name is required'),\n  nodes: z.array(z.record(z.unknown())).min(1, 'At least one node is required'),\n  connections: z.record(z.unknown()),\n  active: z.boolean().optional().default(false),\n  settings: z.record(z.unknown()).optional(),\n  tags: z.array(z.string()).optional(),\n});\n\nconst UpdateWorkflowSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  name: z.string().min(1).optional(),\n  nodes: z.array(z.record(z.unknown())).optional(),\n  connections: z.record(z.unknown()).optional(),\n  active: z.boolean().optional(),\n  settings: z.record(z.unknown()).optional(),\n  tags: z.array(z.string()).optional(),\n});\n\n// Tool registration function\nexport function createWorkflowTools(getClient: () => N8nClient | null, server: any) {\n  // List workflows tool\n  server.addTool({\n    name: 'list-workflows',\n    description: 'List all workflows in the n8n instance with pagination support',\n    parameters: ListWorkflowsSchema,\n    annotations: {\n      title: 'List n8n Workflows',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListWorkflowsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getWorkflows(options);\n\n        if (response.data.length === 0) {\n          return 'No workflows found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} workflow(s):\\n\\n`;\n\n        response.data.forEach((workflow: N8nWorkflow, index: number) => {\n          result += `${index + 1}. **${workflow.name}**\\n`;\n          result += `   - ID: ${workflow.id}\\n`;\n          result += `   - Status: ${workflow.active ? '🟢 Active' : '🔴 Inactive'}\\n`;\n          result += `   - Nodes: ${workflow.nodes?.length || 0}\\n`;\n          if (workflow.tags && workflow.tags.length > 0) {\n            result += `   - Tags: ${workflow.tags.join(', ')}\\n`;\n          }\n          if (workflow.createdAt) {\n            result += `   - Created: ${new Date(workflow.createdAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\n📄 Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to list workflows: ${error.message}`);\n        }\n        throw new UserError('Failed to list workflows with unknown error');\n      }\n    },\n  });\n\n  // Get workflow tool\n  server.addTool({\n    name: 'get-workflow',\n    description: 'Get detailed information about a specific workflow by ID',\n    parameters: WorkflowIdSchema,\n    annotations: {\n      title: 'Get Workflow Details',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof WorkflowIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const workflow = await client.getWorkflow(args.workflowId);\n\n        let result = `# Workflow: ${workflow.name}\\n\\n`;\n        result += `**ID:** ${workflow.id}\\n`;\n        result += `**Status:** ${workflow.active ? '🟢 Active' : '🔴 Inactive'}\\n`;\n        result += `**Nodes:** ${workflow.nodes?.length || 0}\\n`;\n\n        if (workflow.tags && workflow.tags.length > 0) {\n          result += `**Tags:** ${workflow.tags.join(', ')}\\n`;\n        }\n\n        if (workflow.createdAt) {\n          result += `**Created:** ${new Date(workflow.createdAt).toLocaleString()}\\n`;\n        }\n\n        if (workflow.updatedAt) {\n          result += `**Updated:** ${new Date(workflow.updatedAt).toLocaleString()}\\n`;\n        }\n\n        // List nodes\n        if (workflow.nodes && workflow.nodes.length > 0) {\n          result += '\\n## Nodes:\\n';\n          workflow.nodes.forEach((node, index) => {\n            result += `${index + 1}. **${node.name || 'Unnamed Node'}** (${node.type || 'Unknown Type'})\\n`;\n          });\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to get workflow with unknown error');\n      }\n    },\n  });\n\n  // Create workflow tool\n  server.addTool({\n    name: 'create-workflow',\n    description: 'Create a new workflow in n8n with nodes and connections',\n    parameters: CreateWorkflowSchema,\n    annotations: {\n      title: 'Create New Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateWorkflowSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const workflowData: CreateWorkflowRequest = {\n          name: args.name,\n          nodes: args.nodes,\n          connections: args.connections,\n          active: args.active,\n          settings: args.settings,\n          tags: args.tags,\n        };\n\n        const workflow = await client.createWorkflow(workflowData);\n\n        return (\n          `✅ Successfully created workflow \"${workflow.name}\" with ID: ${workflow.id}\\n` +\n          `Status: ${workflow.active ? '🟢 Active' : '🔴 Inactive'}\\n` +\n          `Nodes: ${workflow.nodes?.length || 0}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to create workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to create workflow with unknown error');\n      }\n    },\n  });\n\n  // Update workflow tool\n  server.addTool({\n    name: 'update-workflow',\n    description: \"Update an existing workflow's properties, nodes, or connections\",\n    parameters: UpdateWorkflowSchema,\n    annotations: {\n      title: 'Update Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateWorkflowSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { workflowId, ...updateData } = args;\n        const workflowData: UpdateWorkflowRequest = updateData;\n\n        const workflow = await client.updateWorkflow(workflowId, workflowData);\n\n        return (\n          `✅ Successfully updated workflow \"${workflow.name}\" (ID: ${workflow.id})\\n` +\n          `Status: ${workflow.active ? '🟢 Active' : '🔴 Inactive'}\\n` +\n          `Nodes: ${workflow.nodes?.length || 0}`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to update workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to update workflow with unknown error');\n      }\n    },\n  });\n\n  // Delete workflow tool\n  server.addTool({\n    name: 'delete-workflow',\n    description: 'Delete a workflow from n8n permanently',\n    parameters: WorkflowIdSchema,\n    annotations: {\n      title: 'Delete Workflow',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof WorkflowIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteWorkflow(args.workflowId);\n        return `✅ Successfully deleted workflow with ID: ${args.workflowId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to delete workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to delete workflow with unknown error');\n      }\n    },\n  });\n\n  // Activate workflow tool\n  server.addTool({\n    name: 'activate-workflow',\n    description: 'Activate a workflow to start receiving trigger events',\n    parameters: WorkflowIdSchema,\n    annotations: {\n      title: 'Activate Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof WorkflowIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const workflow = await client.activateWorkflow(args.workflowId);\n\n        return (\n          `✅ Successfully activated workflow \"${workflow.name}\" (ID: ${workflow.id})\\n` +\n          `Status: 🟢 Active`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to activate workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to activate workflow with unknown error');\n      }\n    },\n  });\n\n  // Deactivate workflow tool\n  server.addTool({\n    name: 'deactivate-workflow',\n    description: 'Deactivate a workflow to stop receiving trigger events',\n    parameters: WorkflowIdSchema,\n    annotations: {\n      title: 'Deactivate Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof WorkflowIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const workflow = await client.deactivateWorkflow(args.workflowId);\n\n        return (\n          `✅ Successfully deactivated workflow \"${workflow.name}\" (ID: ${workflow.id})\\n` +\n          `Status: 🔴 Inactive`\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to deactivate workflow: ${error.message}`);\n        }\n        throw new UserError('Failed to deactivate workflow with unknown error');\n      }\n    },\n  });\n}\n"],"version":3}