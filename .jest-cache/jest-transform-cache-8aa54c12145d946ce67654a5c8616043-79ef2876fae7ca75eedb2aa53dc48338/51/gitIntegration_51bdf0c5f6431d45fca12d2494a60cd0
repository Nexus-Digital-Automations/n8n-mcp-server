2c69512a9a79ffd87cc9cd7ba2bfc45e
"use strict";

/**
 * Git Integration Client for n8n MCP Server
 *
 * Provides integration with Git hosting services (GitHub, GitLab, Bitbucket)
 * for workflow and configuration management operations.
 */
/* istanbul ignore next */
function cov_ri4cij7mu() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/gitIntegration.ts";
  var hash = "badbeba5fb05fd41f965a4c8823dd3ed1712c9fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/gitIntegration.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 59
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "6": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "7": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "8": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 14
        }
      },
      "9": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "10": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "11": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "12": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 14
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 134
        }
      },
      "14": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "15": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "16": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "17": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 110
        }
      },
      "18": {
        start: {
          line: 62,
          column: 22
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "19": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 55
        }
      },
      "20": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "21": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "22": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "23": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "24": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 71
        }
      },
      "25": {
        start: {
          line: 80,
          column: 17
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "26": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "27": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "28": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 71
        }
      },
      "29": {
        start: {
          line: 87,
          column: 13
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "30": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 88,
          column: 94
        }
      },
      "31": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "32": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 57
        }
      },
      "33": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "34": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "35": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "36": {
        start: {
          line: 98,
          column: 34
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "37": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 116
        }
      },
      "38": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "39": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "40": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 90
        }
      },
      "41": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 87
        }
      },
      "42": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "43": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "44": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 98
        }
      },
      "45": {
        start: {
          line: 119,
          column: 13
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "46": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "47": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 96
        }
      },
      "48": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 57
        }
      },
      "49": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 135,
          column: 12
        }
      },
      "50": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "51": {
        start: {
          line: 141,
          column: 32
        },
        end: {
          line: 141,
          column: 70
        }
      },
      "52": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "53": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 102
        }
      },
      "54": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 96
        }
      },
      "55": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 57
        }
      },
      "56": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "57": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 76
        }
      },
      "58": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "59": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 72
        }
      },
      "60": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "61": {
        start: {
          line: 162,
          column: 32
        },
        end: {
          line: 162,
          column: 70
        }
      },
      "62": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "63": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 96
        }
      },
      "64": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "65": {
        start: {
          line: 169,
          column: 29
        },
        end: {
          line: 169,
          column: 107
        }
      },
      "66": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 170,
          column: 61
        }
      },
      "67": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "68": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 89
        }
      },
      "69": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "70": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "71": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "72": {
        start: {
          line: 200,
          column: 36
        },
        end: {
          line: 200,
          column: 74
        }
      },
      "73": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "74": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 71
        }
      },
      "75": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 100
        }
      },
      "76": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 45
        }
      },
      "77": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 24
        }
      },
      "78": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 25
        }
      },
      "79": {
        start: {
          line: 219,
          column: 32
        },
        end: {
          line: 219,
          column: 70
        }
      },
      "80": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "81": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 96
        }
      },
      "82": {
        start: {
          line: 223,
          column: 25
        },
        end: {
          line: 223,
          column: 68
        }
      },
      "83": {
        start: {
          line: 224,
          column: 25
        },
        end: {
          line: 224,
          column: 57
        }
      },
      "84": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "85": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "86": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 46
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 66
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 127,
            column: 29
          }
        },
        loc: {
          start: {
            line: 127,
            column: 37
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 140
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 95
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 161
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 40
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 198
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 43
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 218
      },
      "10": {
        name: "createGitClient",
        decl: {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 240,
            column: 24
          }
        },
        loc: {
          start: {
            line: 240,
            column: 51
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 240
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 40
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 44
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: 87,
            column: 13
          },
          end: {
            line: 90,
            column: 9
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: 80,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 13
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 13
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 35
          }
        }, {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 57
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 113,
            column: 47
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 113,
            column: 49
          },
          end: {
            line: 113,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 113,
            column: 58
          },
          end: {
            line: 113,
            column: 64
          }
        }],
        line: 113
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: 119,
            column: 13
          },
          end: {
            line: 125,
            column: 9
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 119,
            column: 13
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 13
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 125,
            column: 9
          }
        }],
        line: 119
      },
      "18": {
        loc: {
          start: {
            line: 130,
            column: 18
          },
          end: {
            line: 130,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 40
          },
          end: {
            line: 130,
            column: 51
          }
        }, {
          start: {
            line: 130,
            column: 54
          },
          end: {
            line: 130,
            column: 60
          }
        }],
        line: 130
      },
      "19": {
        loc: {
          start: {
            line: 140,
            column: 50
          },
          end: {
            line: 140,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 140,
            column: 59
          },
          end: {
            line: 140,
            column: 65
          }
        }],
        line: 140
      },
      "20": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: 146,
            column: 13
          },
          end: {
            line: 148,
            column: 9
          }
        }],
        line: 143
      },
      "21": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "22": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "23": {
        loc: {
          start: {
            line: 161,
            column: 78
          },
          end: {
            line: 161,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 161,
            column: 87
          },
          end: {
            line: 161,
            column: 93
          }
        }],
        line: 161
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 26
          }
        }, {
          start: {
            line: 182,
            column: 30
          },
          end: {
            line: 182,
            column: 49
          }
        }],
        line: 182
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 36
          }
        }, {
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 188,
            column: 13
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: 205,
            column: 17
          },
          end: {
            line: 207,
            column: 13
          }
        }],
        line: 202
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 240,
            column: 40
          },
          end: {
            line: 240,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 49
          }
        }],
        line: 240
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/gitIntegration.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/gitIntegration.ts"],
      sourcesContent: ["/**\n * Git Integration Client for n8n MCP Server\n * \n * Provides integration with Git hosting services (GitHub, GitLab, Bitbucket)\n * for workflow and configuration management operations.\n */\n\nimport { UserError } from 'fastmcp';\n\nexport interface GitAuthOptions {\n  token?: string;\n  username?: string;\n  password?: string;\n}\n\nexport interface RepositoryContent {\n  name: string;\n  path: string;\n  type: 'file' | 'directory';\n  size?: number;\n  content?: string;\n  sha?: string;\n  downloadUrl?: string;\n}\n\nexport interface GitCommitOptions {\n  message: string;\n  branch?: string;\n  author?: {\n    name: string;\n    email: string;\n  };\n}\n\nexport interface GitProvider {\n  name: string;\n  baseUrl: string;\n  apiPath: string;\n}\n\n/**\n * Git Integration Client\n * \n * Handles operations with various Git hosting providers.\n * Currently supports GitHub API with plans for GitLab and Bitbucket.\n */\nexport class GitIntegrationClient {\n  private provider: GitProvider;\n  private auth: GitAuthOptions;\n\n  constructor(repositoryUrl: string, auth: GitAuthOptions = {}) {\n    this.provider = this.detectProvider(repositoryUrl);\n    this.auth = auth;\n  }\n\n  /**\n   * Detect Git provider from repository URL\n   */\n  private detectProvider(repositoryUrl: string): GitProvider {\n    const url = new globalThis.URL(repositoryUrl);\n    \n    if (url.hostname === 'github.com') {\n      return {\n        name: 'github',\n        baseUrl: 'https://api.github.com',\n        apiPath: '/repos',\n      };\n    }\n    \n    if (url.hostname === 'gitlab.com') {\n      return {\n        name: 'gitlab',\n        baseUrl: 'https://gitlab.com/api/v4',\n        apiPath: '/projects',\n      };\n    }\n    \n    if (url.hostname.includes('bitbucket')) {\n      return {\n        name: 'bitbucket',\n        baseUrl: 'https://api.bitbucket.org/2.0',\n        apiPath: '/repositories',\n      };\n    }\n    \n    throw new UserError(`Unsupported Git provider: ${url.hostname}. Currently supports GitHub, GitLab, and Bitbucket.`);\n  }\n\n  /**\n   * Extract owner and repo from repository URL\n   */\n  private parseRepositoryUrl(repositoryUrl: string): { owner: string; repo: string } {\n    const url = new globalThis.URL(repositoryUrl);\n    const pathParts = url.pathname.split('/').filter(Boolean);\n    \n    if (pathParts.length < 2) {\n      throw new UserError('Invalid repository URL format. Expected: https://host/owner/repo');\n    }\n    \n    const owner = pathParts[0];\n    const repo = pathParts[1].replace(/\\.git$/, ''); // Remove .git suffix if present\n    \n    return { owner, repo };\n  }\n\n  /**\n   * Make authenticated request to Git API\n   */\n  private async makeRequest<T>(endpoint: string, options: globalThis.RequestInit = {}): Promise<T> {\n    const headers: Record<string, string> = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': 'n8n-mcp-server/1.0.0',\n    };\n\n    // Add authentication headers based on provider\n    if (this.auth.token) {\n      if (this.provider.name === 'github') {\n        headers['Authorization'] = `Bearer ${this.auth.token}`;\n      } else if (this.provider.name === 'gitlab') {\n        headers['PRIVATE-TOKEN'] = this.auth.token;\n      } else if (this.provider.name === 'bitbucket') {\n        headers['Authorization'] = `Bearer ${this.auth.token}`;\n      }\n    } else if (this.auth.username && this.auth.password) {\n      const credentials = globalThis.btoa(`${this.auth.username}:${this.auth.password}`);\n      headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    const url = `${this.provider.baseUrl}${endpoint}`;\n    \n    try {\n      const response = await globalThis.fetch(url, {\n        ...options,\n        headers: { ...headers, ...options.headers },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`${this.provider.name.toUpperCase()} API error: ${response.status} - ${errorText}`);\n      }\n\n      return await response.json() as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new UserError(`Git API request failed: ${error.message}`);\n      }\n      throw new UserError('Git API request failed with unknown error');\n    }\n  }\n\n  /**\n   * List contents of a repository directory\n   */\n  async listContents(\n    repositoryUrl: string,\n    path: string = '',\n    branch: string = 'main'\n  ): Promise<RepositoryContent[]> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    let endpoint: string;\n\n    if (this.provider.name === 'github') {\n      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${path}?ref=${branch}`;\n    } else if (this.provider.name === 'gitlab') {\n      // GitLab uses project ID, would need additional lookup\n      throw new UserError('GitLab integration not yet implemented');\n    } else {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    interface GitHubContent {\n      name: string;\n      path: string;\n      type: string;\n      size?: number;\n      content?: string;\n      sha: string;\n      download_url?: string;\n    }\n\n    const response = await this.makeRequest<GitHubContent[]>(endpoint);\n    \n    return response.map(item => ({\n      name: item.name,\n      path: item.path,\n      type: item.type === 'dir' ? 'directory' : 'file',\n      size: item.size,\n      content: item.content,\n      sha: item.sha,\n      downloadUrl: item.download_url,\n    }));\n  }\n\n  /**\n   * Fetch file content from repository\n   */\n  async getFileContent(\n    repositoryUrl: string,\n    filePath: string,\n    branch: string = 'main'\n  ): Promise<string> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    let endpoint: string;\n\n    if (this.provider.name === 'github') {\n      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n    } else {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    interface GitHubFileContent {\n      content: string;\n      encoding: string;\n      type: string;\n    }\n\n    const response = await this.makeRequest<GitHubFileContent>(endpoint);\n    \n    if (response.type !== 'file') {\n      throw new UserError(`Path ${filePath} is not a file`);\n    }\n\n    if (response.encoding === 'base64') {\n      return globalThis.atob(response.content.replace(/\\s/g, ''));\n    }\n    \n    return response.content;\n  }\n\n  /**\n   * Create or update file in repository\n   */\n  async createOrUpdateFile(\n    repositoryUrl: string,\n    filePath: string,\n    content: string,\n    commitOptions: GitCommitOptions,\n    branch: string = 'main'\n  ): Promise<void> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    \n    if (this.provider.name !== 'github') {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    // First, try to get the current file to get its SHA (required for updates)\n    let currentSha: string | undefined;\n    try {\n      const endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n      const response = await this.makeRequest<{ sha: string }>(endpoint);\n      currentSha = response.sha;\n    } catch {\n      // File doesn't exist, that's okay for creation\n    }\n\n    // Create or update the file\n    const endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}`;\n    const requestBody = {\n      message: commitOptions.message,\n      content: globalThis.btoa(content), // GitHub expects base64 encoded content\n      branch: branch,\n      ...(currentSha && { sha: currentSha }), // Include SHA for updates\n      ...(commitOptions.author && { \n        author: {\n          name: commitOptions.author.name,\n          email: commitOptions.author.email,\n        }\n      }),\n    };\n\n    await this.makeRequest(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(requestBody),\n    });\n  }\n\n  /**\n   * Validate repository access\n   */\n  async validateAccess(repositoryUrl: string): Promise<boolean> {\n    try {\n      const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n      let endpoint: string;\n\n      if (this.provider.name === 'github') {\n        endpoint = `${this.provider.apiPath}/${owner}/${repo}`;\n      } else {\n        throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n      }\n\n      await this.makeRequest(endpoint);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get repository information\n   */\n  async getRepositoryInfo(repositoryUrl: string) {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    \n    if (this.provider.name !== 'github') {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    const endpoint = `${this.provider.apiPath}/${owner}/${repo}`;\n    \n    interface GitHubRepo {\n      name: string;\n      full_name: string;\n      description: string;\n      default_branch: string;\n      private: boolean;\n      size: number;\n      language: string;\n    }\n\n    const response = await this.makeRequest<GitHubRepo>(endpoint);\n    \n    return {\n      name: response.name,\n      fullName: response.full_name,\n      description: response.description,\n      defaultBranch: response.default_branch,\n      isPrivate: response.private,\n      size: response.size,\n      primaryLanguage: response.language,\n    };\n  }\n}\n\n/**\n * Helper function to create Git integration client\n */\nexport function createGitClient(repositoryUrl: string, auth: GitAuthOptions = {}): GitIntegrationClient {\n  return new GitIntegrationClient(repositoryUrl, auth);\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "badbeba5fb05fd41f965a4c8823dd3ed1712c9fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ri4cij7mu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ri4cij7mu();
cov_ri4cij7mu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ri4cij7mu().s[1]++;
exports.GitIntegrationClient = void 0;
/* istanbul ignore next */
cov_ri4cij7mu().s[2]++;
exports.createGitClient = createGitClient;
const fastmcp_1 =
/* istanbul ignore next */
(cov_ri4cij7mu().s[3]++, require("fastmcp"));
/**
 * Git Integration Client
 *
 * Handles operations with various Git hosting providers.
 * Currently supports GitHub API with plans for GitLab and Bitbucket.
 */
class GitIntegrationClient {
  provider;
  auth;
  constructor(repositoryUrl, auth =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[0]++;
    cov_ri4cij7mu().s[4]++;
    this.provider = this.detectProvider(repositoryUrl);
    /* istanbul ignore next */
    cov_ri4cij7mu().s[5]++;
    this.auth = auth;
  }
  /**
   * Detect Git provider from repository URL
   */
  detectProvider(repositoryUrl) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[1]++;
    const url =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[6]++, new globalThis.URL(repositoryUrl));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[7]++;
    if (url.hostname === 'github.com') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[1][0]++;
      cov_ri4cij7mu().s[8]++;
      return {
        name: 'github',
        baseUrl: 'https://api.github.com',
        apiPath: '/repos'
      };
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[1][1]++;
    }
    cov_ri4cij7mu().s[9]++;
    if (url.hostname === 'gitlab.com') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[2][0]++;
      cov_ri4cij7mu().s[10]++;
      return {
        name: 'gitlab',
        baseUrl: 'https://gitlab.com/api/v4',
        apiPath: '/projects'
      };
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[2][1]++;
    }
    cov_ri4cij7mu().s[11]++;
    if (url.hostname.includes('bitbucket')) {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[3][0]++;
      cov_ri4cij7mu().s[12]++;
      return {
        name: 'bitbucket',
        baseUrl: 'https://api.bitbucket.org/2.0',
        apiPath: '/repositories'
      };
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[3][1]++;
    }
    cov_ri4cij7mu().s[13]++;
    throw new fastmcp_1.UserError(`Unsupported Git provider: ${url.hostname}. Currently supports GitHub, GitLab, and Bitbucket.`);
  }
  /**
   * Extract owner and repo from repository URL
   */
  parseRepositoryUrl(repositoryUrl) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[2]++;
    const url =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[14]++, new globalThis.URL(repositoryUrl));
    const pathParts =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[15]++, url.pathname.split('/').filter(Boolean));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[16]++;
    if (pathParts.length < 2) {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[4][0]++;
      cov_ri4cij7mu().s[17]++;
      throw new fastmcp_1.UserError('Invalid repository URL format. Expected: https://host/owner/repo');
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[4][1]++;
    }
    const owner =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[18]++, pathParts[0]);
    const repo =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[19]++, pathParts[1].replace(/\.git$/, '')); // Remove .git suffix if present
    /* istanbul ignore next */
    cov_ri4cij7mu().s[20]++;
    return {
      owner,
      repo
    };
  }
  /**
   * Make authenticated request to Git API
   */
  async makeRequest(endpoint, options =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[3]++;
    const headers =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[21]++, {
      'Accept': 'application/json',
      'Content-Type': 'application/json',
      'User-Agent': 'n8n-mcp-server/1.0.0'
    });
    // Add authentication headers based on provider
    /* istanbul ignore next */
    cov_ri4cij7mu().s[22]++;
    if (this.auth.token) {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[6][0]++;
      cov_ri4cij7mu().s[23]++;
      if (this.provider.name === 'github') {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[7][0]++;
        cov_ri4cij7mu().s[24]++;
        headers['Authorization'] = `Bearer ${this.auth.token}`;
      } else {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[7][1]++;
        cov_ri4cij7mu().s[25]++;
        if (this.provider.name === 'gitlab') {
          /* istanbul ignore next */
          cov_ri4cij7mu().b[8][0]++;
          cov_ri4cij7mu().s[26]++;
          headers['PRIVATE-TOKEN'] = this.auth.token;
        } else {
          /* istanbul ignore next */
          cov_ri4cij7mu().b[8][1]++;
          cov_ri4cij7mu().s[27]++;
          if (this.provider.name === 'bitbucket') {
            /* istanbul ignore next */
            cov_ri4cij7mu().b[9][0]++;
            cov_ri4cij7mu().s[28]++;
            headers['Authorization'] = `Bearer ${this.auth.token}`;
          } else
          /* istanbul ignore next */
          {
            cov_ri4cij7mu().b[9][1]++;
          }
        }
      }
    } else {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[6][1]++;
      cov_ri4cij7mu().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[11][0]++, this.auth.username) &&
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[11][1]++, this.auth.password)) {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[10][0]++;
        const credentials =
        /* istanbul ignore next */
        (cov_ri4cij7mu().s[30]++, globalThis.btoa(`${this.auth.username}:${this.auth.password}`));
        /* istanbul ignore next */
        cov_ri4cij7mu().s[31]++;
        headers['Authorization'] = `Basic ${credentials}`;
      } else
      /* istanbul ignore next */
      {
        cov_ri4cij7mu().b[10][1]++;
      }
    }
    const url =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[32]++, `${this.provider.baseUrl}${endpoint}`);
    /* istanbul ignore next */
    cov_ri4cij7mu().s[33]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_ri4cij7mu().s[34]++, await globalThis.fetch(url, {
        ...options,
        headers: {
          ...headers,
          ...options.headers
        }
      }));
      /* istanbul ignore next */
      cov_ri4cij7mu().s[35]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[12][0]++;
        const errorText =
        /* istanbul ignore next */
        (cov_ri4cij7mu().s[36]++, await response.text());
        /* istanbul ignore next */
        cov_ri4cij7mu().s[37]++;
        throw new Error(`${this.provider.name.toUpperCase()} API error: ${response.status} - ${errorText}`);
      } else
      /* istanbul ignore next */
      {
        cov_ri4cij7mu().b[12][1]++;
      }
      cov_ri4cij7mu().s[38]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_ri4cij7mu().s[39]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[13][0]++;
        cov_ri4cij7mu().s[40]++;
        throw new fastmcp_1.UserError(`Git API request failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_ri4cij7mu().b[13][1]++;
      }
      cov_ri4cij7mu().s[41]++;
      throw new fastmcp_1.UserError('Git API request failed with unknown error');
    }
  }
  /**
   * List contents of a repository directory
   */
  async listContents(repositoryUrl, path =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[14][0]++, ''), branch =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[15][0]++, 'main')) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[4]++;
    const {
      owner,
      repo
    } =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[42]++, this.parseRepositoryUrl(repositoryUrl));
    let endpoint;
    /* istanbul ignore next */
    cov_ri4cij7mu().s[43]++;
    if (this.provider.name === 'github') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[16][0]++;
      cov_ri4cij7mu().s[44]++;
      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${path}?ref=${branch}`;
    } else {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[16][1]++;
      cov_ri4cij7mu().s[45]++;
      if (this.provider.name === 'gitlab') {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[17][0]++;
        cov_ri4cij7mu().s[46]++;
        // GitLab uses project ID, would need additional lookup
        throw new fastmcp_1.UserError('GitLab integration not yet implemented');
      } else {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[17][1]++;
        cov_ri4cij7mu().s[47]++;
        throw new fastmcp_1.UserError(`Provider ${this.provider.name} not yet implemented`);
      }
    }
    const response =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[48]++, await this.makeRequest(endpoint));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[49]++;
    return response.map(item => {
      /* istanbul ignore next */
      cov_ri4cij7mu().f[5]++;
      cov_ri4cij7mu().s[50]++;
      return {
        name: item.name,
        path: item.path,
        type: item.type === 'dir' ?
        /* istanbul ignore next */
        (cov_ri4cij7mu().b[18][0]++, 'directory') :
        /* istanbul ignore next */
        (cov_ri4cij7mu().b[18][1]++, 'file'),
        size: item.size,
        content: item.content,
        sha: item.sha,
        downloadUrl: item.download_url
      };
    });
  }
  /**
   * Fetch file content from repository
   */
  async getFileContent(repositoryUrl, filePath, branch =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[19][0]++, 'main')) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[6]++;
    const {
      owner,
      repo
    } =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[51]++, this.parseRepositoryUrl(repositoryUrl));
    let endpoint;
    /* istanbul ignore next */
    cov_ri4cij7mu().s[52]++;
    if (this.provider.name === 'github') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[20][0]++;
      cov_ri4cij7mu().s[53]++;
      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`;
    } else {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[20][1]++;
      cov_ri4cij7mu().s[54]++;
      throw new fastmcp_1.UserError(`Provider ${this.provider.name} not yet implemented`);
    }
    const response =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[55]++, await this.makeRequest(endpoint));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[56]++;
    if (response.type !== 'file') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[21][0]++;
      cov_ri4cij7mu().s[57]++;
      throw new fastmcp_1.UserError(`Path ${filePath} is not a file`);
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[21][1]++;
    }
    cov_ri4cij7mu().s[58]++;
    if (response.encoding === 'base64') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[22][0]++;
      cov_ri4cij7mu().s[59]++;
      return globalThis.atob(response.content.replace(/\s/g, ''));
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[22][1]++;
    }
    cov_ri4cij7mu().s[60]++;
    return response.content;
  }
  /**
   * Create or update file in repository
   */
  async createOrUpdateFile(repositoryUrl, filePath, content, commitOptions, branch =
  /* istanbul ignore next */
  (cov_ri4cij7mu().b[23][0]++, 'main')) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[7]++;
    const {
      owner,
      repo
    } =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[61]++, this.parseRepositoryUrl(repositoryUrl));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[62]++;
    if (this.provider.name !== 'github') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[24][0]++;
      cov_ri4cij7mu().s[63]++;
      throw new fastmcp_1.UserError(`Provider ${this.provider.name} not yet implemented`);
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[24][1]++;
    }
    // First, try to get the current file to get its SHA (required for updates)
    let currentSha;
    /* istanbul ignore next */
    cov_ri4cij7mu().s[64]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_ri4cij7mu().s[65]++, `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`);
      const response =
      /* istanbul ignore next */
      (cov_ri4cij7mu().s[66]++, await this.makeRequest(endpoint));
      /* istanbul ignore next */
      cov_ri4cij7mu().s[67]++;
      currentSha = response.sha;
    } catch {
      // File doesn't exist, that's okay for creation
    }
    // Create or update the file
    const endpoint =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[68]++, `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}`);
    const requestBody =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[69]++, {
      message: commitOptions.message,
      content: globalThis.btoa(content),
      // GitHub expects base64 encoded content
      branch: branch,
      ...(
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[25][0]++, currentSha) &&
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[25][1]++, {
        sha: currentSha
      })),
      // Include SHA for updates
      ...(
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[26][0]++, commitOptions.author) &&
      /* istanbul ignore next */
      (cov_ri4cij7mu().b[26][1]++, {
        author: {
          name: commitOptions.author.name,
          email: commitOptions.author.email
        }
      }))
    });
    /* istanbul ignore next */
    cov_ri4cij7mu().s[70]++;
    await this.makeRequest(endpoint, {
      method: 'PUT',
      body: JSON.stringify(requestBody)
    });
  }
  /**
   * Validate repository access
   */
  async validateAccess(repositoryUrl) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[8]++;
    cov_ri4cij7mu().s[71]++;
    try {
      const {
        owner,
        repo
      } =
      /* istanbul ignore next */
      (cov_ri4cij7mu().s[72]++, this.parseRepositoryUrl(repositoryUrl));
      let endpoint;
      /* istanbul ignore next */
      cov_ri4cij7mu().s[73]++;
      if (this.provider.name === 'github') {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[27][0]++;
        cov_ri4cij7mu().s[74]++;
        endpoint = `${this.provider.apiPath}/${owner}/${repo}`;
      } else {
        /* istanbul ignore next */
        cov_ri4cij7mu().b[27][1]++;
        cov_ri4cij7mu().s[75]++;
        throw new fastmcp_1.UserError(`Provider ${this.provider.name} not yet implemented`);
      }
      /* istanbul ignore next */
      cov_ri4cij7mu().s[76]++;
      await this.makeRequest(endpoint);
      /* istanbul ignore next */
      cov_ri4cij7mu().s[77]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_ri4cij7mu().s[78]++;
      return false;
    }
  }
  /**
   * Get repository information
   */
  async getRepositoryInfo(repositoryUrl) {
    /* istanbul ignore next */
    cov_ri4cij7mu().f[9]++;
    const {
      owner,
      repo
    } =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[79]++, this.parseRepositoryUrl(repositoryUrl));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[80]++;
    if (this.provider.name !== 'github') {
      /* istanbul ignore next */
      cov_ri4cij7mu().b[28][0]++;
      cov_ri4cij7mu().s[81]++;
      throw new fastmcp_1.UserError(`Provider ${this.provider.name} not yet implemented`);
    } else
    /* istanbul ignore next */
    {
      cov_ri4cij7mu().b[28][1]++;
    }
    const endpoint =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[82]++, `${this.provider.apiPath}/${owner}/${repo}`);
    const response =
    /* istanbul ignore next */
    (cov_ri4cij7mu().s[83]++, await this.makeRequest(endpoint));
    /* istanbul ignore next */
    cov_ri4cij7mu().s[84]++;
    return {
      name: response.name,
      fullName: response.full_name,
      description: response.description,
      defaultBranch: response.default_branch,
      isPrivate: response.private,
      size: response.size,
      primaryLanguage: response.language
    };
  }
}
/* istanbul ignore next */
cov_ri4cij7mu().s[85]++;
exports.GitIntegrationClient = GitIntegrationClient;
/**
 * Helper function to create Git integration client
 */
function createGitClient(repositoryUrl, auth =
/* istanbul ignore next */
(cov_ri4cij7mu().b[29][0]++, {})) {
  /* istanbul ignore next */
  cov_ri4cij7mu().f[10]++;
  cov_ri4cij7mu().s[86]++;
  return new GitIntegrationClient(repositoryUrl, auth);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,