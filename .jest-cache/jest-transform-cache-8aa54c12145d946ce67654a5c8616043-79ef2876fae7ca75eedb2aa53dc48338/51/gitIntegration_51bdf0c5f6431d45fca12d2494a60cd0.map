{"version":3,"names":["cov_ri4cij7mu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createGitClient","fastmcp_1","require","GitIntegrationClient","provider","auth","constructor","repositoryUrl","detectProvider","url","globalThis","URL","hostname","baseUrl","apiPath","includes","UserError","parseRepositoryUrl","pathParts","pathname","split","filter","Boolean","length","owner","repo","replace","makeRequest","endpoint","options","headers","token","username","password","credentials","btoa","response","fetch","ok","errorText","text","Error","toUpperCase","status","json","error","message","listContents","branch","map","item","size","content","sha","downloadUrl","download_url","getFileContent","filePath","encoding","atob","createOrUpdateFile","commitOptions","currentSha","requestBody","author","email","method","body","JSON","stringify","validateAccess","getRepositoryInfo","fullName","full_name","description","defaultBranch","default_branch","isPrivate","private","primaryLanguage","language"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/gitIntegration.ts"],"sourcesContent":["/**\n * Git Integration Client for n8n MCP Server\n * \n * Provides integration with Git hosting services (GitHub, GitLab, Bitbucket)\n * for workflow and configuration management operations.\n */\n\nimport { UserError } from 'fastmcp';\n\nexport interface GitAuthOptions {\n  token?: string;\n  username?: string;\n  password?: string;\n}\n\nexport interface RepositoryContent {\n  name: string;\n  path: string;\n  type: 'file' | 'directory';\n  size?: number;\n  content?: string;\n  sha?: string;\n  downloadUrl?: string;\n}\n\nexport interface GitCommitOptions {\n  message: string;\n  branch?: string;\n  author?: {\n    name: string;\n    email: string;\n  };\n}\n\nexport interface GitProvider {\n  name: string;\n  baseUrl: string;\n  apiPath: string;\n}\n\n/**\n * Git Integration Client\n * \n * Handles operations with various Git hosting providers.\n * Currently supports GitHub API with plans for GitLab and Bitbucket.\n */\nexport class GitIntegrationClient {\n  private provider: GitProvider;\n  private auth: GitAuthOptions;\n\n  constructor(repositoryUrl: string, auth: GitAuthOptions = {}) {\n    this.provider = this.detectProvider(repositoryUrl);\n    this.auth = auth;\n  }\n\n  /**\n   * Detect Git provider from repository URL\n   */\n  private detectProvider(repositoryUrl: string): GitProvider {\n    const url = new globalThis.URL(repositoryUrl);\n    \n    if (url.hostname === 'github.com') {\n      return {\n        name: 'github',\n        baseUrl: 'https://api.github.com',\n        apiPath: '/repos',\n      };\n    }\n    \n    if (url.hostname === 'gitlab.com') {\n      return {\n        name: 'gitlab',\n        baseUrl: 'https://gitlab.com/api/v4',\n        apiPath: '/projects',\n      };\n    }\n    \n    if (url.hostname.includes('bitbucket')) {\n      return {\n        name: 'bitbucket',\n        baseUrl: 'https://api.bitbucket.org/2.0',\n        apiPath: '/repositories',\n      };\n    }\n    \n    throw new UserError(`Unsupported Git provider: ${url.hostname}. Currently supports GitHub, GitLab, and Bitbucket.`);\n  }\n\n  /**\n   * Extract owner and repo from repository URL\n   */\n  private parseRepositoryUrl(repositoryUrl: string): { owner: string; repo: string } {\n    const url = new globalThis.URL(repositoryUrl);\n    const pathParts = url.pathname.split('/').filter(Boolean);\n    \n    if (pathParts.length < 2) {\n      throw new UserError('Invalid repository URL format. Expected: https://host/owner/repo');\n    }\n    \n    const owner = pathParts[0];\n    const repo = pathParts[1].replace(/\\.git$/, ''); // Remove .git suffix if present\n    \n    return { owner, repo };\n  }\n\n  /**\n   * Make authenticated request to Git API\n   */\n  private async makeRequest<T>(endpoint: string, options: globalThis.RequestInit = {}): Promise<T> {\n    const headers: Record<string, string> = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': 'n8n-mcp-server/1.0.0',\n    };\n\n    // Add authentication headers based on provider\n    if (this.auth.token) {\n      if (this.provider.name === 'github') {\n        headers['Authorization'] = `Bearer ${this.auth.token}`;\n      } else if (this.provider.name === 'gitlab') {\n        headers['PRIVATE-TOKEN'] = this.auth.token;\n      } else if (this.provider.name === 'bitbucket') {\n        headers['Authorization'] = `Bearer ${this.auth.token}`;\n      }\n    } else if (this.auth.username && this.auth.password) {\n      const credentials = globalThis.btoa(`${this.auth.username}:${this.auth.password}`);\n      headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    const url = `${this.provider.baseUrl}${endpoint}`;\n    \n    try {\n      const response = await globalThis.fetch(url, {\n        ...options,\n        headers: { ...headers, ...options.headers },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`${this.provider.name.toUpperCase()} API error: ${response.status} - ${errorText}`);\n      }\n\n      return await response.json() as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new UserError(`Git API request failed: ${error.message}`);\n      }\n      throw new UserError('Git API request failed with unknown error');\n    }\n  }\n\n  /**\n   * List contents of a repository directory\n   */\n  async listContents(\n    repositoryUrl: string,\n    path: string = '',\n    branch: string = 'main'\n  ): Promise<RepositoryContent[]> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    let endpoint: string;\n\n    if (this.provider.name === 'github') {\n      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${path}?ref=${branch}`;\n    } else if (this.provider.name === 'gitlab') {\n      // GitLab uses project ID, would need additional lookup\n      throw new UserError('GitLab integration not yet implemented');\n    } else {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    interface GitHubContent {\n      name: string;\n      path: string;\n      type: string;\n      size?: number;\n      content?: string;\n      sha: string;\n      download_url?: string;\n    }\n\n    const response = await this.makeRequest<GitHubContent[]>(endpoint);\n    \n    return response.map(item => ({\n      name: item.name,\n      path: item.path,\n      type: item.type === 'dir' ? 'directory' : 'file',\n      size: item.size,\n      content: item.content,\n      sha: item.sha,\n      downloadUrl: item.download_url,\n    }));\n  }\n\n  /**\n   * Fetch file content from repository\n   */\n  async getFileContent(\n    repositoryUrl: string,\n    filePath: string,\n    branch: string = 'main'\n  ): Promise<string> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    let endpoint: string;\n\n    if (this.provider.name === 'github') {\n      endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n    } else {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    interface GitHubFileContent {\n      content: string;\n      encoding: string;\n      type: string;\n    }\n\n    const response = await this.makeRequest<GitHubFileContent>(endpoint);\n    \n    if (response.type !== 'file') {\n      throw new UserError(`Path ${filePath} is not a file`);\n    }\n\n    if (response.encoding === 'base64') {\n      return globalThis.atob(response.content.replace(/\\s/g, ''));\n    }\n    \n    return response.content;\n  }\n\n  /**\n   * Create or update file in repository\n   */\n  async createOrUpdateFile(\n    repositoryUrl: string,\n    filePath: string,\n    content: string,\n    commitOptions: GitCommitOptions,\n    branch: string = 'main'\n  ): Promise<void> {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    \n    if (this.provider.name !== 'github') {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    // First, try to get the current file to get its SHA (required for updates)\n    let currentSha: string | undefined;\n    try {\n      const endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}?ref=${branch}`;\n      const response = await this.makeRequest<{ sha: string }>(endpoint);\n      currentSha = response.sha;\n    } catch {\n      // File doesn't exist, that's okay for creation\n    }\n\n    // Create or update the file\n    const endpoint = `${this.provider.apiPath}/${owner}/${repo}/contents/${filePath}`;\n    const requestBody = {\n      message: commitOptions.message,\n      content: globalThis.btoa(content), // GitHub expects base64 encoded content\n      branch: branch,\n      ...(currentSha && { sha: currentSha }), // Include SHA for updates\n      ...(commitOptions.author && { \n        author: {\n          name: commitOptions.author.name,\n          email: commitOptions.author.email,\n        }\n      }),\n    };\n\n    await this.makeRequest(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(requestBody),\n    });\n  }\n\n  /**\n   * Validate repository access\n   */\n  async validateAccess(repositoryUrl: string): Promise<boolean> {\n    try {\n      const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n      let endpoint: string;\n\n      if (this.provider.name === 'github') {\n        endpoint = `${this.provider.apiPath}/${owner}/${repo}`;\n      } else {\n        throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n      }\n\n      await this.makeRequest(endpoint);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get repository information\n   */\n  async getRepositoryInfo(repositoryUrl: string) {\n    const { owner, repo } = this.parseRepositoryUrl(repositoryUrl);\n    \n    if (this.provider.name !== 'github') {\n      throw new UserError(`Provider ${this.provider.name} not yet implemented`);\n    }\n\n    const endpoint = `${this.provider.apiPath}/${owner}/${repo}`;\n    \n    interface GitHubRepo {\n      name: string;\n      full_name: string;\n      description: string;\n      default_branch: string;\n      private: boolean;\n      size: number;\n      language: string;\n    }\n\n    const response = await this.makeRequest<GitHubRepo>(endpoint);\n    \n    return {\n      name: response.name,\n      fullName: response.full_name,\n      description: response.description,\n      defaultBranch: response.default_branch,\n      isPrivate: response.private,\n      size: response.size,\n      primaryLanguage: response.language,\n    };\n  }\n}\n\n/**\n * Helper function to create Git integration client\n */\nexport function createGitClient(repositoryUrl: string, auth: GitAuthOptions = {}): GitIntegrationClient {\n  return new GitIntegrationClient(repositoryUrl, auth);\n}"],"mappings":"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","ignoreList":[]}