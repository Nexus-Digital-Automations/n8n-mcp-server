{"file":"/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/resources/workflowResources.test.ts","mappings":"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","names":[],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/tests/unit/resources/workflowResources.test.ts"],"sourcesContent":["import { describe, it, expect, beforeEach, jest, afterEach } from '@jest/globals';\nimport { FastMCP } from 'fastmcp';\nimport {\n  WorkflowResourceManager,\n  createWorkflowResources,\n} from '../../../src/resources/workflowResources';\nimport { N8nClient } from '../../../src/client/n8nClient';\n\n// Mock dependencies\njest.mock('fastmcp');\njest.mock('../../../src/client/n8nClient');\n\n// Mock console methods to avoid test output pollution\nconst mockConsoleLog = jest.fn();\njest.spyOn(console, 'log').mockImplementation(mockConsoleLog);\n\ndescribe('WorkflowResourceManager', () => {\n  let workflowManager: WorkflowResourceManager;\n  let mockServer: jest.Mocked<FastMCP>;\n  let mockClient: jest.Mocked<N8nClient>;\n  let getClientFn: () => N8nClient | null;\n\n  // Mock workflow data\n  const mockWorkflow = {\n    id: 'workflow-123',\n    name: 'Test Workflow',\n    active: true,\n    tags: ['test', 'automation'],\n    createdAt: '2023-01-01T10:00:00Z',\n    updatedAt: '2023-01-01T12:00:00Z',\n    nodes: [\n      { id: 'node1', type: 'n8n-nodes-base.httpRequest', name: 'HTTP Request' },\n      { id: 'node2', type: 'n8n-nodes-base.code', name: 'Code' },\n    ] as Array<Record<string, unknown>>,\n    connections: {\n      'HTTP Request': {\n        main: [\n          [\n            {\n              node: 'Code',\n              type: 'main',\n              index: 0,\n            },\n          ],\n        ],\n      },\n    },\n  };\n\n  const mockInactiveWorkflow = {\n    id: 'workflow-456',\n    name: 'Inactive Workflow',\n    active: false,\n    tags: ['draft'],\n    createdAt: '2023-01-02T10:00:00Z',\n    updatedAt: '2023-01-02T11:00:00Z',\n    nodes: [{ id: 'node3', type: 'n8n-nodes-base.webhook', name: 'Webhook' }] as Array<\n      Record<string, unknown>\n    >,\n    connections: {},\n  };\n\n  beforeEach(() => {\n    // Create mock instances\n    mockServer = {\n      addResource: jest.fn(),\n      addResourceTemplate: jest.fn(),\n    } as unknown as jest.Mocked<FastMCP>;\n\n    mockClient = {\n      getWorkflow: jest.fn(),\n      getWorkflows: jest.fn(),\n    } as unknown as jest.Mocked<N8nClient>;\n\n    getClientFn = jest.fn().mockReturnValue(mockClient) as () => N8nClient | null;\n\n    // Clear all mocks\n    jest.clearAllMocks();\n    mockConsoleLog.mockClear();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Constructor and Configuration', () => {\n    it('should initialize with default configuration', () => {\n      workflowManager = new WorkflowResourceManager();\n      expect(workflowManager).toBeInstanceOf(WorkflowResourceManager);\n    });\n\n    it('should initialize with custom configuration', () => {\n      const config = {\n        baseUri: 'custom://workflows',\n        maxWorkflows: 25,\n        includeInactive: false,\n        includeExecutions: true,\n        cacheDuration: 10000,\n      };\n\n      workflowManager = new WorkflowResourceManager(config);\n      expect(workflowManager).toBeInstanceOf(WorkflowResourceManager);\n    });\n\n    it('should merge custom config with defaults', () => {\n      const config = {\n        maxWorkflows: 200,\n        includeExecutions: true,\n      };\n\n      workflowManager = new WorkflowResourceManager(config);\n      expect(workflowManager).toBeInstanceOf(WorkflowResourceManager);\n    });\n  });\n\n  describe('Resource Registration', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n    });\n\n    it('should register all workflow resources', () => {\n      workflowManager.register(mockServer, getClientFn);\n\n      expect(mockServer.addResourceTemplate).toHaveBeenCalledWith(\n        expect.objectContaining({\n          uriTemplate: 'n8n://workflows/{id}',\n          name: 'n8n Workflow',\n          mimeType: 'application/json',\n        })\n      );\n\n      expect(mockServer.addResourceTemplate).toHaveBeenCalledWith(\n        expect.objectContaining({\n          uriTemplate: 'n8n://workflows/{workflowId}',\n          name: 'n8n Workflow by ID',\n          mimeType: 'application/json',\n        })\n      );\n\n      expect(mockServer.addResource).toHaveBeenCalledWith(\n        expect.objectContaining({\n          uri: 'n8n://workflows/list',\n          name: 'n8n Workflow List',\n          mimeType: 'application/json',\n        })\n      );\n\n      expect(mockServer.addResource).toHaveBeenCalledWith(\n        expect.objectContaining({\n          uri: 'n8n://workflows/active',\n          name: 'n8n Active Workflows',\n          mimeType: 'application/json',\n        })\n      );\n\n      expect(mockServer.addResource).toHaveBeenCalledWith(\n        expect.objectContaining({\n          uri: 'n8n://workflows/stats',\n          name: 'n8n Workflow Statistics',\n          mimeType: 'application/json',\n        })\n      );\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('📄 Workflow resources registered');\n    });\n\n    it('should register workflow template with correct arguments', () => {\n      workflowManager.register(mockServer, getClientFn);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      expect(templateCall).toBeDefined();\n      if (!templateCall) throw new Error('Template call not found');\n\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      expect(template.arguments).toHaveLength(1);\n      expect(template.arguments[0]).toEqual({\n        name: 'id',\n        description: 'The ID of the n8n workflow',\n        required: true,\n      });\n    });\n\n    it('should register duplicate workflow template with workflowId parameter', () => {\n      workflowManager.register(mockServer, getClientFn);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{workflowId}'\n      );\n      expect(templateCall).toBeDefined();\n      if (!templateCall) throw new Error('Template call not found');\n\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      expect(template.arguments).toHaveLength(1);\n      expect(template.arguments[0]).toEqual({\n        name: 'workflowId',\n        description: 'The ID of the n8n workflow',\n        required: true,\n      });\n    });\n  });\n\n  describe('Individual Workflow Resource', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should load workflow resource successfully', async () => {\n      mockClient.getWorkflow.mockResolvedValue(mockWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      expect(templateCall).toBeDefined();\n      if (!templateCall) throw new Error('Template call not found');\n\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ id: 'workflow-123' });\n\n      expect((result as any).text).toBeDefined();\n      const data = JSON.parse((result as any).text);\n      expect(data.id).toBe('workflow-123');\n      expect(data.name).toBe('Test Workflow');\n      expect(data.active).toBe(true);\n      expect(data.metadata).toBeDefined();\n      expect(data.metadata.id).toBe('workflow-123');\n      expect(data.metadata.nodeCount).toBe(2);\n      expect(data.metadata.connectionCount).toBe(1);\n      expect(data.resourceInfo).toBeDefined();\n      expect(data.resourceInfo.type).toBe('n8n-workflow');\n    });\n\n    it('should handle workflow with no nodes or connections', async () => {\n      const emptyWorkflow = {\n        ...mockWorkflow,\n        nodes: [] as Array<Record<string, unknown>>,\n        connections: {},\n      };\n      mockClient.getWorkflow.mockResolvedValue(emptyWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ id: 'workflow-123' });\n\n      const data = JSON.parse((result as any).text);\n      expect(data.metadata.nodeCount).toBe(0);\n      expect(data.metadata.connectionCount).toBe(0);\n    });\n\n    it('should load workflow using workflowId template', async () => {\n      mockClient.getWorkflow.mockResolvedValue(mockWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{workflowId}'\n      );\n      expect(templateCall).toBeDefined();\n      if (!templateCall) throw new Error('Template call not found');\n\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ workflowId: 'workflow-123' });\n\n      expect((result as any).text).toBeDefined();\n      const data = JSON.parse((result as any).text);\n      expect(data.id).toBe('workflow-123');\n    });\n\n    it('should throw error when client not initialized', async () => {\n      getClientFn = jest.fn().mockReturnValue(null) as () => N8nClient | null;\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      await expect(template.load({ id: 'workflow-123' })).rejects.toThrow(\n        'n8n client not initialized. Run init-n8n first.'\n      );\n    });\n\n    it('should handle API errors', async () => {\n      mockClient.getWorkflow.mockRejectedValue(new Error('Workflow not found'));\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      await expect(template.load({ id: 'workflow-123' })).rejects.toThrow(\n        'Failed to load workflow workflow-123: Workflow not found'\n      );\n    });\n\n    it('should handle workflow with no tags', async () => {\n      const workflowWithoutTags = {\n        ...mockWorkflow,\n        tags: [],\n      };\n      mockClient.getWorkflow.mockResolvedValue(workflowWithoutTags);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ id: 'workflow-123' });\n\n      const data = JSON.parse((result as any).text);\n      expect(data.metadata.tags).toEqual([]);\n    });\n  });\n\n  describe('Workflow List Resource', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should load workflow list successfully', async () => {\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [mockWorkflow, mockInactiveWorkflow],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      expect(resourceCall).toBeDefined();\n      if (!resourceCall) throw new Error('Resource call not found');\n\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      expect((result as any).text).toBeDefined();\n      const data = JSON.parse((result as any).text);\n      expect(data.workflows).toHaveLength(2);\n      expect(data.workflows[0].id).toBe('workflow-123');\n      expect(data.workflows[0].name).toBe('Test Workflow');\n      expect(data.workflows[0].active).toBe(true);\n      expect(data.workflows[0].uri).toBe('n8n://workflows/workflow-123');\n      expect(data.workflows[1].id).toBe('workflow-456');\n      expect(data.workflows[1].active).toBe(false);\n      expect(data.metadata.total).toBe(2);\n      expect(data.resourceInfo.type).toBe('n8n-workflow-list');\n    });\n\n    it('should handle empty workflow list', async () => {\n      mockClient.getWorkflows.mockResolvedValue({ data: [] });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.workflows).toHaveLength(0);\n      expect(data.metadata.total).toBe(0);\n    });\n\n    it('should handle workflow list API errors', async () => {\n      mockClient.getWorkflows.mockRejectedValue(new Error('List API Error'));\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n\n      await expect(resource.load()).rejects.toThrow('Failed to load workflow list: List API Error');\n    });\n\n    it('should handle workflows with missing tags', async () => {\n      const workflowsWithMixedTags = [\n        { ...mockWorkflow, tags: undefined },\n        { ...mockInactiveWorkflow, tags: undefined },\n      ];\n      mockClient.getWorkflows.mockResolvedValue({ data: workflowsWithMixedTags });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.workflows[0].tags).toEqual([]);\n      expect(data.workflows[1].tags).toEqual([]);\n    });\n  });\n\n  describe('Active Workflows Resource', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should load active workflows successfully', async () => {\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [mockWorkflow, mockInactiveWorkflow],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/active'\n      );\n      expect(resourceCall).toBeDefined();\n      if (!resourceCall) throw new Error('Resource call not found');\n\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      expect((result as any).text).toBeDefined();\n      const data = JSON.parse((result as any).text);\n      expect(data.activeWorkflows).toHaveLength(1); // Only active workflow\n      expect(data.activeWorkflows[0].id).toBe('workflow-123');\n      expect(data.activeWorkflows[0].name).toBe('Test Workflow');\n      expect(data.activeWorkflows[0].lastExecution).toBe('2023-01-01T12:00:00Z');\n      expect(data.metadata.total).toBe(1);\n      expect(data.metadata.activeOnly).toBe(true);\n      expect(data.resourceInfo.type).toBe('n8n-active-workflows');\n    });\n\n    it('should handle no active workflows', async () => {\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [mockInactiveWorkflow], // Only inactive workflow\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/active'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.activeWorkflows).toHaveLength(0);\n      expect(data.metadata.total).toBe(0);\n    });\n\n    it('should handle active workflows API errors', async () => {\n      mockClient.getWorkflows.mockRejectedValue(new Error('Active API Error'));\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/active'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n\n      await expect(resource.load()).rejects.toThrow(\n        'Failed to load active workflows: Active API Error'\n      );\n    });\n  });\n\n  describe('Workflow Statistics Resource', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should load workflow statistics successfully', async () => {\n      const recentWorkflow = {\n        ...mockWorkflow,\n        id: 'workflow-789',\n        createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 day ago\n        updatedAt: new Date(Date.now() - 60 * 60 * 1000).toISOString(), // 1 hour ago\n        tags: ['test', 'recent'],\n      };\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [mockWorkflow, mockInactiveWorkflow, recentWorkflow],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      expect(resourceCall).toBeDefined();\n      if (!resourceCall) throw new Error('Resource call not found');\n\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      expect((result as any).text).toBeDefined();\n      const data = JSON.parse((result as any).text);\n      expect(data.totalWorkflows).toBe(3);\n      expect(data.activeWorkflows).toBe(2); // mockWorkflow and recentWorkflow are active\n      expect(data.inactiveWorkflows).toBe(1);\n      expect(data.tagUsage).toBeDefined();\n      expect(data.tagUsage.test).toBe(2); // Present in mockWorkflow and recentWorkflow\n      expect(data.tagUsage.automation).toBe(1);\n      expect(data.tagUsage.draft).toBe(1);\n      expect(data.tagUsage.recent).toBe(1);\n      expect(data.creationStats).toBeDefined();\n      expect(data.creationStats.createdLastWeek).toBeGreaterThanOrEqual(0);\n      expect(data.creationStats.updatedLastWeek).toBeGreaterThanOrEqual(0);\n      expect(data.resourceInfo.type).toBe('n8n-workflow-stats');\n    });\n\n    it('should handle empty workflows for statistics', async () => {\n      mockClient.getWorkflows.mockResolvedValue({ data: [] });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.totalWorkflows).toBe(0);\n      expect(data.activeWorkflows).toBe(0);\n      expect(data.inactiveWorkflows).toBe(0);\n      expect(data.tagUsage).toEqual({});\n    });\n\n    it('should handle stats API errors', async () => {\n      mockClient.getWorkflows.mockRejectedValue(new Error('Stats API Error'));\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n\n      await expect(resource.load()).rejects.toThrow(\n        'Failed to load workflow statistics: Stats API Error'\n      );\n    });\n\n    it('should handle workflows with string tags', async () => {\n      const workflowWithStringTags = {\n        ...mockWorkflow,\n        tags: ['string-tag-1', 'string-tag-2'],\n      };\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [workflowWithStringTags],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.tagUsage['string-tag-1']).toBe(1);\n      expect(data.tagUsage['string-tag-2']).toBe(1);\n    });\n\n    it('should handle workflows with mixed tag formats', async () => {\n      const workflowWithMixedTags = {\n        ...mockWorkflow,\n        tags: ['object-tag', 'string-tag'],\n      };\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [workflowWithMixedTags],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.tagUsage['object-tag']).toBe(1);\n      expect(data.tagUsage['string-tag']).toBe(1);\n    });\n  });\n\n  describe('Cache Management', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager({ cacheDuration: 1000 });\n    });\n\n    it('should cache workflow data', async () => {\n      workflowManager.register(mockServer, getClientFn);\n      mockClient.getWorkflow.mockResolvedValue(mockWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      // First call\n      await template.load({ id: 'workflow-123' });\n      expect(mockClient.getWorkflow).toHaveBeenCalledTimes(1);\n\n      // Second call should use cache\n      await template.load({ id: 'workflow-123' });\n      expect(mockClient.getWorkflow).toHaveBeenCalledTimes(1);\n    });\n\n    it('should cache workflow list data', async () => {\n      workflowManager.register(mockServer, getClientFn);\n      mockClient.getWorkflows.mockResolvedValue({\n        data: [mockWorkflow],\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n\n      // First call\n      await resource.load();\n      expect(mockClient.getWorkflows).toHaveBeenCalledTimes(1);\n\n      // Second call should use cache\n      await resource.load();\n      expect(mockClient.getWorkflows).toHaveBeenCalledTimes(1);\n    });\n\n    it('should clear cache', () => {\n      workflowManager.clearCache();\n      // Should not throw\n    });\n\n    it('should get cache statistics', () => {\n      const stats = workflowManager.getCacheStats();\n      expect(stats).toBeDefined();\n      expect(typeof stats.size).toBe('number');\n      expect(Array.isArray(stats.keys)).toBe(true);\n    });\n\n    it('should not cache when duration is 0', () => {\n      workflowManager = new WorkflowResourceManager({ cacheDuration: 0 });\n      workflowManager.register(mockServer, getClientFn);\n      mockClient.getWorkflow.mockResolvedValue(mockWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      return template\n        .load({ id: 'workflow-123' })\n        .then(() => {\n          return template.load({ id: 'workflow-123' });\n        })\n        .then(() => {\n          expect(mockClient.getWorkflow).toHaveBeenCalledTimes(2);\n        });\n    });\n\n    it('should handle cache expiration', async () => {\n      jest.useFakeTimers();\n\n      workflowManager = new WorkflowResourceManager({ cacheDuration: 1 }); // 1ms cache\n      workflowManager.register(mockServer, getClientFn);\n      mockClient.getWorkflow.mockResolvedValue(mockWorkflow);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      // First call\n      await template.load({ id: 'workflow-123' });\n      expect(mockClient.getWorkflow).toHaveBeenCalledTimes(1);\n\n      // Fast-forward time to expire cache\n      jest.advanceTimersByTime(10);\n\n      // Second call should not use expired cache\n      await template.load({ id: 'workflow-123' });\n      expect(mockClient.getWorkflow).toHaveBeenCalledTimes(2);\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('Factory Function', () => {\n    it('should create workflow resource manager with factory function', () => {\n      const manager = createWorkflowResources();\n      expect(manager).toBeInstanceOf(WorkflowResourceManager);\n    });\n\n    it('should create workflow resource manager with config via factory', () => {\n      const config = { maxWorkflows: 50, includeInactive: false };\n      const manager = createWorkflowResources(config);\n      expect(manager).toBeInstanceOf(WorkflowResourceManager);\n    });\n  });\n\n  describe('Tag Usage Calculation', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should calculate tag usage correctly with object tags', async () => {\n      const workflowsWithObjectTags = [\n        {\n          ...mockWorkflow,\n          tags: ['production', 'api'],\n        },\n        {\n          ...mockInactiveWorkflow,\n          tags: ['production', 'webhook'],\n        },\n      ];\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: workflowsWithObjectTags,\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.tagUsage.production).toBe(2);\n      expect(data.tagUsage.api).toBe(1);\n      expect(data.tagUsage.webhook).toBe(1);\n    });\n\n    it('should handle workflows with no tags gracefully', async () => {\n      const workflowsWithNoTags = [\n        { ...mockWorkflow, tags: undefined },\n        { ...mockInactiveWorkflow, tags: undefined },\n        { ...mockWorkflow, id: 'workflow-789', tags: [] },\n      ];\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: workflowsWithNoTags,\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.tagUsage).toEqual({});\n    });\n\n    it('should handle workflows with non-array tags', async () => {\n      const workflowsWithInvalidTags = [\n        { ...mockWorkflow, tags: 'invalid' as any },\n        { ...mockInactiveWorkflow, tags: { invalid: true } as any },\n      ];\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: workflowsWithInvalidTags,\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.tagUsage).toEqual({});\n    });\n  });\n\n  describe('Creation Statistics', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should calculate creation statistics correctly', async () => {\n      const now = new Date();\n      const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n      const oneWeekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const oneMonthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      const workflowsWithDifferentDates = [\n        {\n          ...mockWorkflow,\n          createdAt: oneDayAgo.toISOString(),\n          updatedAt: oneDayAgo.toISOString(),\n        },\n        {\n          ...mockInactiveWorkflow,\n          createdAt: oneWeekAgo.toISOString(),\n          updatedAt: oneDayAgo.toISOString(),\n        },\n        {\n          ...mockWorkflow,\n          id: 'workflow-789',\n          createdAt: oneMonthAgo.toISOString(),\n          updatedAt: oneMonthAgo.toISOString(),\n        },\n      ];\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: workflowsWithDifferentDates,\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.creationStats.createdLastWeek).toBeGreaterThanOrEqual(1);\n      expect(data.creationStats.createdLastMonth).toBeGreaterThanOrEqual(1);\n      expect(data.creationStats.updatedLastWeek).toBeGreaterThanOrEqual(2);\n      expect(data.creationStats.updatedLastMonth).toBeGreaterThanOrEqual(2);\n    });\n\n    it('should handle invalid date formats', async () => {\n      const workflowsWithInvalidDates = [\n        {\n          ...mockWorkflow,\n          createdAt: 'invalid-date',\n          updatedAt: undefined,\n        },\n      ];\n\n      mockClient.getWorkflows.mockResolvedValue({\n        data: workflowsWithInvalidDates,\n      });\n\n      const resourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!resourceCall) throw new Error('Resource call not found');\n      const resource = resourceCall[0];\n      const result = await resource.load();\n\n      const data = JSON.parse((result as any).text);\n      expect(data.creationStats.createdLastWeek).toBe(0);\n      expect(data.creationStats.updatedLastWeek).toBe(0);\n    });\n  });\n\n  describe('Edge Cases and Error Handling', () => {\n    beforeEach(() => {\n      workflowManager = new WorkflowResourceManager();\n      workflowManager.register(mockServer, getClientFn);\n    });\n\n    it('should handle non-Error exceptions', async () => {\n      mockClient.getWorkflow.mockRejectedValue('String error');\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n\n      await expect(template.load({ id: 'workflow-123' })).rejects.toThrow(\n        'Failed to load workflow workflow-123: String error'\n      );\n    });\n\n    it('should handle malformed workflow data', async () => {\n      const malformedWorkflow = {\n        id: 'workflow-123',\n        // Missing required fields\n        name: undefined,\n        active: undefined,\n        nodes: [] as Array<Record<string, unknown>>,\n        connections: {},\n      };\n      mockClient.getWorkflow.mockResolvedValue(malformedWorkflow as any);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ id: 'workflow-123' });\n\n      const data = JSON.parse((result as any).text);\n      expect(data.id).toBe('workflow-123');\n      expect(data.metadata.tags).toEqual([]);\n    });\n\n    it('should handle workflows with complex connection objects', async () => {\n      const workflowWithComplexConnections = {\n        ...mockWorkflow,\n        connections: {\n          'HTTP Request': {\n            main: [\n              [\n                { node: 'Code', type: 'main', index: 0 },\n                { node: 'Another Node', type: 'main', index: 1 },\n              ],\n            ],\n            secondary: [[{ node: 'Error Handler', type: 'main', index: 0 }]],\n          },\n          Code: {\n            main: [[{ node: 'Final Node', type: 'main', index: 0 }]],\n          },\n        },\n      };\n      mockClient.getWorkflow.mockResolvedValue(workflowWithComplexConnections);\n\n      const templateCall = mockServer.addResourceTemplate.mock.calls.find(\n        call => call[0].uriTemplate === 'n8n://workflows/{id}'\n      );\n      if (!templateCall) throw new Error('Template call not found');\n      const template = templateCall[0];\n      const result = await template.load({ id: 'workflow-123' });\n\n      const data = JSON.parse((result as any).text);\n      expect(data.metadata.connectionCount).toBe(2); // HTTP Request and Code have connections\n    });\n\n    it('should handle empty workflow list gracefully in all resources', async () => {\n      mockClient.getWorkflows.mockResolvedValue({ data: [] });\n\n      // Test list resource\n      const listResourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/list'\n      );\n      if (!listResourceCall) throw new Error('List resource call not found');\n      const listResource = listResourceCall[0];\n      const listResult = await listResource.load();\n      const listData = JSON.parse((listResult as any).text);\n      expect(listData.workflows).toHaveLength(0);\n\n      // Test active resource\n      const activeResourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/active'\n      );\n      if (!activeResourceCall) throw new Error('Active resource call not found');\n      const activeResource = activeResourceCall[0];\n      const activeResult = await activeResource.load();\n      const activeData = JSON.parse((activeResult as any).text);\n      expect(activeData.activeWorkflows).toHaveLength(0);\n\n      // Test stats resource\n      const statsResourceCall = mockServer.addResource.mock.calls.find(\n        call => call[0].uri === 'n8n://workflows/stats'\n      );\n      if (!statsResourceCall) throw new Error('Stats resource call not found');\n      const statsResource = statsResourceCall[0];\n      const statsResult = await statsResource.load();\n      const statsData = JSON.parse((statsResult as any).text);\n      expect(statsData.totalWorkflows).toBe(0);\n    });\n  });\n});\n"],"version":3}