{"version":3,"names":["cov_2jz21e4ydh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createOAuth2Handler","crypto","__importStar","require","events_1","authProvider_js_1","OAuth2Handler","EventEmitter","configs","Map","sessions","tokens","n8nClient","constructor","setupTokenRefreshTimer","setN8nClient","client","registerProvider","config","set","provider","generateAuthUrl","options","get","Error","sessionId","generateSessionId","state","generateState","session","createdAt","Date","now","expiresAt","metadata","pkce","enabled","codeVerifier","generateCodeVerifier","codeChallenge","generateCodeChallenge","challengeMethod","params","URLSearchParams","response_type","client_id","clientId","redirect_uri","redirectUri","scope","scopes","join","extraParams","url","authUrl","toString","handleCallback","callbackParams","error","result","success","error_description","errorDetails","code","description","uri","error_uri","emit","findSessionByState","exchangeCodeForTokens","userInfo","getUserInfo","tokenKey","getTokenKey","id","delete","errorMessage","message","getTokens","userId","refreshTokens","currentTokens","refreshToken","grant_type","refresh_token","client_secret","clientSecret","response","fetch","tokenUrl","method","headers","body","ok","status","statusText","tokenData","json","newTokens","accessToken","access_token","tokenType","token_type","expires_in","split","refreshedAt","console","revokeTokens","revokeUrl","replace","areTokensValid","bufferSeconds","bufferMs","getActiveSessions","activeSessions","entries","push","cleanup","timeToExpiry","Math","floor","errorText","text","acquiredAt","userInfoUrl","userData","sub","user_id","email","display_name","username","avatar","avatar_url","picture","raw","values","randomBytes","verifier","createHash","update","digest","setInterval","autoRefreshTokens","refreshSettings","autoRefresh","refreshBuffer","OAuth2AuthProvider","BaseAuthProvider","oauth2Handler","authenticate","context","extractTokensFromContext","user","createUserFromTokens","authType","String","refresh","authHeader","authorization","Authorization","startsWith","substring","roles","permissions","createPermissions","handler","providers","process","env","toUpperCase","getProviderConfig","baseUrl","OAUTH2_REDIRECT_BASE_URL","google","github","microsoft","discord","defaultOAuth2Handler"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/auth/oauth2Handler.ts"],"sourcesContent":["/**\n * OAuth2 Handler for n8n MCP Server\n *\n * Provides OAuth2 authentication flows, token management, and callback handling\n * for enhanced security and integration with OAuth2-enabled services.\n */\n\nimport * as crypto from 'crypto';\nimport { EventEmitter } from 'events';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  AuthProvider,\n  BaseAuthProvider,\n  RequestContext,\n  AuthResult,\n  AuthenticatedUser,\n} from './authProvider.js';\n\n/**\n * OAuth2 configuration for different providers\n */\nexport interface OAuth2Config {\n  /** OAuth2 provider name (e.g., 'google', 'github', 'microsoft') */\n  provider: string;\n\n  /** Client ID from OAuth2 provider */\n  clientId: string;\n\n  /** Client secret from OAuth2 provider */\n  clientSecret: string;\n\n  /** OAuth2 authorization endpoint URL */\n  authUrl: string;\n\n  /** OAuth2 token endpoint URL */\n  tokenUrl: string;\n\n  /** OAuth2 user info endpoint URL (optional) */\n  userInfoUrl?: string;\n\n  /** Redirect URI for OAuth2 callback */\n  redirectUri: string;\n\n  /** OAuth2 scopes to request */\n  scopes: string[];\n\n  /** Additional parameters for authorization request */\n  extraParams?: Record<string, string>;\n\n  /** Token refresh settings */\n  refreshSettings?: {\n    /** Whether to automatically refresh tokens */\n    autoRefresh: boolean;\n\n    /** Buffer time before expiry to refresh (seconds) */\n    refreshBuffer: number;\n  };\n\n  /** PKCE settings for enhanced security */\n  pkce?: {\n    /** Whether to use PKCE (Proof Key for Code Exchange) */\n    enabled: boolean;\n\n    /** Code challenge method */\n    challengeMethod: 'S256' | 'plain';\n  };\n}\n\n/**\n * OAuth2 token information\n */\nexport interface OAuth2Token {\n  /** Access token */\n  accessToken: string;\n\n  /** Refresh token (if available) */\n  refreshToken?: string;\n\n  /** Token type (usually 'Bearer') */\n  tokenType: string;\n\n  /** Token expiry timestamp */\n  expiresAt?: number;\n\n  /** OAuth2 scopes granted */\n  scopes: string[];\n\n  /** Additional token metadata */\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * OAuth2 authorization session\n */\nexport interface OAuth2Session {\n  /** Session ID */\n  sessionId: string;\n\n  /** OAuth2 provider */\n  provider: string;\n\n  /** Authorization state parameter */\n  state: string;\n\n  /** PKCE code verifier (if using PKCE) */\n  codeVerifier?: string;\n\n  /** PKCE code challenge (if using PKCE) */\n  codeChallenge?: string;\n\n  /** Session creation timestamp */\n  createdAt: number;\n\n  /** Session expiry timestamp */\n  expiresAt: number;\n\n  /** Additional session metadata */\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * OAuth2 callback result\n */\nexport interface OAuth2CallbackResult {\n  /** Whether the callback was successful */\n  success: boolean;\n\n  /** OAuth2 tokens (if successful) */\n  tokens?: OAuth2Token;\n\n  /** User information from OAuth2 provider */\n  userInfo?: OAuth2UserInfo;\n\n  /** Error message (if failed) */\n  error?: string;\n\n  /** Error details */\n  errorDetails?: {\n    code?: string;\n    description?: string;\n    uri?: string;\n  };\n}\n\n/**\n * User information from OAuth2 provider\n */\nexport interface OAuth2UserInfo {\n  /** User ID from provider */\n  id: string;\n\n  /** User email */\n  email?: string;\n\n  /** User display name */\n  name?: string;\n\n  /** User avatar URL */\n  avatar?: string;\n\n  /** Additional user data from provider */\n  raw?: Record<string, unknown>;\n}\n\n/**\n * OAuth2 authentication provider events\n */\nexport interface OAuth2Events {\n  /** Token refresh event */\n  tokenRefresh: (provider: string, userId: string, tokens: OAuth2Token) => void;\n\n  /** Token expiry warning */\n  tokenExpiring: (provider: string, userId: string, expiresIn: number) => void;\n\n  /** Authentication success */\n  authSuccess: (provider: string, userInfo: OAuth2UserInfo) => void;\n\n  /** Authentication failure */\n  authFailure: (provider: string, error: string) => void;\n}\n\n/**\n * OAuth2 Handler class\n *\n * Manages OAuth2 authentication flows, token storage, and callback processing.\n */\nexport class OAuth2Handler extends EventEmitter {\n  private configs = new Map<string, OAuth2Config>();\n  private sessions = new Map<string, OAuth2Session>();\n  private tokens = new Map<string, OAuth2Token>();\n  private n8nClient: N8nClient | null = null;\n\n  constructor() {\n    super();\n    this.setupTokenRefreshTimer();\n  }\n\n  /**\n   * Set n8n client for enhanced integration\n   */\n  setN8nClient(client: N8nClient): void {\n    this.n8nClient = client;\n  }\n\n  /**\n   * Register OAuth2 provider configuration\n   */\n  registerProvider(config: OAuth2Config): void {\n    this.configs.set(config.provider, config);\n  }\n\n  /**\n   * Generate OAuth2 authorization URL\n   */\n  generateAuthUrl(provider: string, options: {\n    sessionId?: string;\n    extraParams?: Record<string, string>;\n    metadata?: Record<string, unknown>;\n  } = {}): { url: string; session: OAuth2Session } {\n    const config = this.configs.get(provider);\n    if (!config) {\n      throw new Error(`OAuth2 provider '${provider}' not configured`);\n    }\n\n    // Generate session\n    const sessionId = options.sessionId || this.generateSessionId();\n    const state = this.generateState();\n    const session: OAuth2Session = {\n      sessionId,\n      provider,\n      state,\n      createdAt: Date.now(),\n      expiresAt: Date.now() + (15 * 60 * 1000), // 15 minutes\n      metadata: options.metadata,\n    };\n\n    // Generate PKCE parameters if enabled\n    if (config.pkce?.enabled) {\n      const codeVerifier = this.generateCodeVerifier();\n      const codeChallenge = this.generateCodeChallenge(codeVerifier, config.pkce.challengeMethod);\n      session.codeVerifier = codeVerifier;\n      session.codeChallenge = codeChallenge;\n    }\n\n    this.sessions.set(sessionId, session);\n\n    // Build authorization URL\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scopes.join(' '),\n      state,\n      ...config.extraParams,\n      ...options.extraParams,\n    });\n\n    // Add PKCE parameters\n    if (session.codeChallenge) {\n      params.set('code_challenge', session.codeChallenge);\n      params.set('code_challenge_method', config.pkce!.challengeMethod);\n    }\n\n    const url = `${config.authUrl}?${params.toString()}`;\n\n    return { url, session };\n  }\n\n  /**\n   * Handle OAuth2 callback\n   */\n  async handleCallback(\n    provider: string,\n    callbackParams: {\n      code?: string;\n      state?: string;\n      error?: string;\n      error_description?: string;\n      error_uri?: string;\n    }\n  ): Promise<OAuth2CallbackResult> {\n    try {\n      const config = this.configs.get(provider);\n      if (!config) {\n        throw new Error(`OAuth2 provider '${provider}' not configured`);\n      }\n\n      // Handle error response\n      if (callbackParams.error) {\n        const result: OAuth2CallbackResult = {\n          success: false,\n          error: callbackParams.error_description || callbackParams.error,\n          errorDetails: {\n            code: callbackParams.error,\n            description: callbackParams.error_description,\n            uri: callbackParams.error_uri,\n          },\n        };\n        this.emit('authFailure', provider, result.error!);\n        return result;\n      }\n\n      // Validate required parameters\n      if (!callbackParams.code || !callbackParams.state) {\n        throw new Error('Missing required callback parameters (code or state)');\n      }\n\n      // Find and validate session\n      const session = this.findSessionByState(callbackParams.state);\n      if (!session) {\n        throw new Error('Invalid or expired OAuth2 state parameter');\n      }\n\n      if (session.provider !== provider) {\n        throw new Error('OAuth2 provider mismatch in callback');\n      }\n\n      if (session.expiresAt < Date.now()) {\n        throw new Error('OAuth2 session has expired');\n      }\n\n      // Exchange code for tokens\n      const tokens = await this.exchangeCodeForTokens(config, callbackParams.code, session);\n\n      // Get user information\n      const userInfo = await this.getUserInfo(config, tokens);\n\n      // Store tokens\n      const tokenKey = this.getTokenKey(provider, userInfo.id);\n      this.tokens.set(tokenKey, tokens);\n\n      // Clean up session\n      this.sessions.delete(session.sessionId);\n\n      const result: OAuth2CallbackResult = {\n        success: true,\n        tokens,\n        userInfo,\n      };\n\n      this.emit('authSuccess', provider, userInfo);\n      return result;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown OAuth2 callback error';\n      const result: OAuth2CallbackResult = {\n        success: false,\n        error: errorMessage,\n      };\n      this.emit('authFailure', provider, errorMessage);\n      return result;\n    }\n  }\n\n  /**\n   * Get stored tokens for user\n   */\n  getTokens(provider: string, userId: string): OAuth2Token | null {\n    const tokenKey = this.getTokenKey(provider, userId);\n    return this.tokens.get(tokenKey) || null;\n  }\n\n  /**\n   * Refresh OAuth2 tokens\n   */\n  async refreshTokens(provider: string, userId: string): Promise<OAuth2Token | null> {\n    try {\n      const config = this.configs.get(provider);\n      if (!config) {\n        throw new Error(`OAuth2 provider '${provider}' not configured`);\n      }\n\n      const tokenKey = this.getTokenKey(provider, userId);\n      const currentTokens = this.tokens.get(tokenKey);\n      if (!currentTokens?.refreshToken) {\n        throw new Error('No refresh token available');\n      }\n\n      const params = new URLSearchParams({\n        grant_type: 'refresh_token',\n        refresh_token: currentTokens.refreshToken,\n        client_id: config.clientId,\n        client_secret: config.clientSecret,\n      });\n\n      const response = await fetch(config.tokenUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json',\n        },\n        body: params.toString(),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Token refresh failed: ${response.status} ${response.statusText}`);\n      }\n\n      const tokenData = await response.json();\n      const newTokens: OAuth2Token = {\n        accessToken: tokenData.access_token,\n        refreshToken: tokenData.refresh_token || currentTokens.refreshToken,\n        tokenType: tokenData.token_type || 'Bearer',\n        expiresAt: tokenData.expires_in ? Date.now() + (tokenData.expires_in * 1000) : undefined,\n        scopes: tokenData.scope ? tokenData.scope.split(' ') : currentTokens.scopes,\n        metadata: { ...currentTokens.metadata, refreshedAt: Date.now() },\n      };\n\n      this.tokens.set(tokenKey, newTokens);\n      this.emit('tokenRefresh', provider, userId, newTokens);\n\n      return newTokens;\n    } catch (error) {\n      console.error(`Failed to refresh tokens for ${provider}:${userId}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Revoke OAuth2 tokens\n   */\n  async revokeTokens(provider: string, userId: string): Promise<boolean> {\n    try {\n      const config = this.configs.get(provider);\n      const tokenKey = this.getTokenKey(provider, userId);\n      const tokens = this.tokens.get(tokenKey);\n\n      if (tokens) {\n        // Attempt to revoke token with provider (if supported)\n        // This is provider-specific and may not be supported by all providers\n        try {\n          if (config && tokens.accessToken) {\n            // Basic revocation attempt - providers may have different endpoints\n            const revokeUrl = `${config.tokenUrl.replace('/token', '/revoke')}`;\n            await fetch(revokeUrl, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Bearer ${tokens.accessToken}`,\n              },\n              body: `token=${tokens.accessToken}`,\n            });\n          }\n        } catch {\n          // Ignore revocation errors - we'll still remove locally\n        }\n\n        this.tokens.delete(tokenKey);\n      }\n\n      return true;\n    } catch (error) {\n      console.error(`Failed to revoke tokens for ${provider}:${userId}:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if tokens are valid and not expired\n   */\n  areTokensValid(tokens: OAuth2Token, bufferSeconds: number = 300): boolean {\n    if (!tokens.accessToken) {\n      return false;\n    }\n\n    if (tokens.expiresAt) {\n      const now = Date.now();\n      const bufferMs = bufferSeconds * 1000;\n      return tokens.expiresAt > (now + bufferMs);\n    }\n\n    // If no expiry time, assume valid\n    return true;\n  }\n\n  /**\n   * Get all active sessions\n   */\n  getActiveSessions(): OAuth2Session[] {\n    const now = Date.now();\n    const activeSessions: OAuth2Session[] = [];\n\n    for (const [sessionId, session] of this.sessions.entries()) {\n      if (session.expiresAt > now) {\n        activeSessions.push(session);\n      } else {\n        // Clean up expired session\n        this.sessions.delete(sessionId);\n      }\n    }\n\n    return activeSessions;\n  }\n\n  /**\n   * Clean up expired sessions and tokens\n   */\n  cleanup(): void {\n    const now = Date.now();\n\n    // Clean up expired sessions\n    for (const [sessionId, session] of this.sessions.entries()) {\n      if (session.expiresAt <= now) {\n        this.sessions.delete(sessionId);\n      }\n    }\n\n    // Check for expiring tokens\n    for (const [tokenKey, tokens] of this.tokens.entries()) {\n      if (tokens.expiresAt) {\n        const timeToExpiry = tokens.expiresAt - now;\n        const [provider, userId] = tokenKey.split(':');\n\n        if (timeToExpiry <= 0) {\n          // Token expired, remove it\n          this.tokens.delete(tokenKey);\n        } else if (timeToExpiry <= 300000) { // 5 minutes\n          // Token expiring soon, emit warning\n          this.emit('tokenExpiring', provider, userId, Math.floor(timeToExpiry / 1000));\n        }\n      }\n    }\n  }\n\n  /**\n   * Exchange authorization code for tokens\n   */\n  private async exchangeCodeForTokens(\n    config: OAuth2Config,\n    code: string,\n    session: OAuth2Session\n  ): Promise<OAuth2Token> {\n    const params = new URLSearchParams({\n      grant_type: 'authorization_code',\n      code,\n      redirect_uri: config.redirectUri,\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n    });\n\n    // Add PKCE code verifier if used\n    if (session.codeVerifier) {\n      params.set('code_verifier', session.codeVerifier);\n    }\n\n    const response = await fetch(config.tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Token exchange failed: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const tokenData = await response.json();\n\n    if (tokenData.error) {\n      throw new Error(`Token exchange error: ${tokenData.error_description || tokenData.error}`);\n    }\n\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      tokenType: tokenData.token_type || 'Bearer',\n      expiresAt: tokenData.expires_in ? Date.now() + (tokenData.expires_in * 1000) : undefined,\n      scopes: tokenData.scope ? tokenData.scope.split(' ') : config.scopes,\n      metadata: { acquiredAt: Date.now() },\n    };\n  }\n\n  /**\n   * Get user information from OAuth2 provider\n   */\n  private async getUserInfo(config: OAuth2Config, tokens: OAuth2Token): Promise<OAuth2UserInfo> {\n    if (!config.userInfoUrl) {\n      // If no user info URL, create basic user info from token\n      return {\n        id: 'unknown',\n        name: 'OAuth2 User',\n      };\n    }\n\n    const response = await fetch(config.userInfoUrl, {\n      headers: {\n        'Authorization': `${tokens.tokenType} ${tokens.accessToken}`,\n        'Accept': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to get user info: ${response.status} ${response.statusText}`);\n    }\n\n    const userData = await response.json();\n\n    return {\n      id: userData.id || userData.sub || userData.user_id || 'unknown',\n      email: userData.email,\n      name: userData.name || userData.display_name || userData.username,\n      avatar: userData.avatar_url || userData.picture,\n      raw: userData,\n    };\n  }\n\n  /**\n   * Find session by state parameter\n   */\n  private findSessionByState(state: string): OAuth2Session | null {\n    for (const session of this.sessions.values()) {\n      if (session.state === state) {\n        return session;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Generate unique session ID\n   */\n  private generateSessionId(): string {\n    return `oauth2_${Date.now()}_${crypto.randomBytes(8).toString('hex')}`;\n  }\n\n  /**\n   * Generate OAuth2 state parameter\n   */\n  private generateState(): string {\n    return crypto.randomBytes(32).toString('base64url');\n  }\n\n  /**\n   * Generate PKCE code verifier\n   */\n  private generateCodeVerifier(): string {\n    return crypto.randomBytes(32).toString('base64url');\n  }\n\n  /**\n   * Generate PKCE code challenge\n   */\n  private generateCodeChallenge(verifier: string, method: 'S256' | 'plain'): string {\n    if (method === 'plain') {\n      return verifier;\n    }\n\n    return crypto.createHash('sha256').update(verifier).digest('base64url');\n  }\n\n  /**\n   * Get token storage key\n   */\n  private getTokenKey(provider: string, userId: string): string {\n    return `${provider}:${userId}`;\n  }\n\n  /**\n   * Setup automatic token refresh timer\n   */\n  private setupTokenRefreshTimer(): void {\n    setInterval(() => {\n      this.cleanup();\n      this.autoRefreshTokens();\n    }, 60000); // Check every minute\n  }\n\n  /**\n   * Automatically refresh tokens that are about to expire\n   */\n  private async autoRefreshTokens(): Promise<void> {\n    for (const [tokenKey, tokens] of this.tokens.entries()) {\n      const [provider, userId] = tokenKey.split(':');\n      const config = this.configs.get(provider);\n\n      if (config?.refreshSettings?.autoRefresh && tokens.refreshToken) {\n        const bufferSeconds = config.refreshSettings.refreshBuffer || 300;\n        \n        if (!this.areTokensValid(tokens, bufferSeconds)) {\n          try {\n            await this.refreshTokens(provider, userId);\n          } catch (error) {\n            console.error(`Auto-refresh failed for ${provider}:${userId}:`, error);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * OAuth2 Authentication Provider\n *\n * Integrates OAuth2Handler with the authentication provider interface.\n */\nexport class OAuth2AuthProvider extends BaseAuthProvider {\n  private oauth2Handler: OAuth2Handler;\n\n  constructor(oauth2Handler: OAuth2Handler) {\n    super();\n    this.oauth2Handler = oauth2Handler;\n  }\n\n  async authenticate(context: RequestContext): Promise<AuthResult> {\n    try {\n      // Extract OAuth2 tokens from context\n      const tokens = this.extractTokensFromContext(context);\n      if (!tokens) {\n        return {\n          success: false,\n          error: 'No OAuth2 tokens found in request context',\n        };\n      }\n\n      // Validate tokens\n      if (!this.oauth2Handler.areTokensValid(tokens)) {\n        return {\n          success: false,\n          error: 'OAuth2 tokens are invalid or expired',\n        };\n      }\n\n      // Create authenticated user\n      const user = this.createUserFromTokens(tokens, context);\n\n      return {\n        success: true,\n        user,\n        context: {\n          authType: 'oauth2',\n          tokenType: tokens.tokenType,\n          scopes: tokens.scopes,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `OAuth2 authentication failed: ${error instanceof Error ? error.message : String(error)}`,\n      };\n    }\n  }\n\n  async refresh(context: RequestContext): Promise<AuthResult> {\n    // OAuth2 refresh logic would be implemented here\n    // For now, re-authenticate\n    return this.authenticate(context);\n  }\n\n  /**\n   * Extract OAuth2 tokens from request context\n   */\n  private extractTokensFromContext(context: RequestContext): OAuth2Token | null {\n    const headers = context.headers || {};\n    \n    // Look for Bearer token in Authorization header\n    const authHeader = headers.authorization || headers.Authorization;\n    if (authHeader?.startsWith('Bearer ')) {\n      const accessToken = authHeader.substring(7);\n      return {\n        accessToken,\n        tokenType: 'Bearer',\n        scopes: [], // Would need to be populated from stored token data\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Create authenticated user from OAuth2 tokens\n   */\n  private createUserFromTokens(tokens: OAuth2Token, context: RequestContext): AuthenticatedUser {\n    return {\n      id: `oauth2_${crypto.createHash('sha256').update(tokens.accessToken).digest('hex').substring(0, 16)}`,\n      name: 'OAuth2 User',\n      roles: ['oauth2-user'],\n      permissions: this.createPermissions(['oauth2-user']),\n    };\n  }\n}\n\n/**\n * Create default OAuth2 handler with common provider configurations\n */\nexport function createOAuth2Handler(): OAuth2Handler {\n  const handler = new OAuth2Handler();\n\n  // Add common OAuth2 providers (can be configured via environment variables)\n  const providers = ['google', 'github', 'microsoft', 'discord'];\n  \n  for (const provider of providers) {\n    const clientId = process.env[`OAUTH2_${provider.toUpperCase()}_CLIENT_ID`];\n    const clientSecret = process.env[`OAUTH2_${provider.toUpperCase()}_CLIENT_SECRET`];\n    \n    if (clientId && clientSecret) {\n      const config = getProviderConfig(provider, clientId, clientSecret);\n      if (config) {\n        handler.registerProvider(config);\n      }\n    }\n  }\n\n  return handler;\n}\n\n/**\n * Get OAuth2 configuration for common providers\n */\nfunction getProviderConfig(provider: string, clientId: string, clientSecret: string): OAuth2Config | null {\n  const baseUrl = process.env.OAUTH2_REDIRECT_BASE_URL || 'http://localhost:3000';\n  \n  const configs: Record<string, Omit<OAuth2Config, 'clientId' | 'clientSecret'>> = {\n    google: {\n      provider: 'google',\n      authUrl: 'https://accounts.google.com/o/oauth2/v2/auth',\n      tokenUrl: 'https://oauth2.googleapis.com/token',\n      userInfoUrl: 'https://www.googleapis.com/oauth2/v2/userinfo',\n      redirectUri: `${baseUrl}/auth/oauth2/callback/google`,\n      scopes: ['openid', 'email', 'profile'],\n      pkce: { enabled: true, challengeMethod: 'S256' },\n      refreshSettings: { autoRefresh: true, refreshBuffer: 300 },\n    },\n    github: {\n      provider: 'github',\n      authUrl: 'https://github.com/login/oauth/authorize',\n      tokenUrl: 'https://github.com/login/oauth/access_token',\n      userInfoUrl: 'https://api.github.com/user',\n      redirectUri: `${baseUrl}/auth/oauth2/callback/github`,\n      scopes: ['user:email'],\n      refreshSettings: { autoRefresh: false, refreshBuffer: 300 },\n    },\n    microsoft: {\n      provider: 'microsoft',\n      authUrl: 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize',\n      tokenUrl: 'https://login.microsoftonline.com/common/oauth2/v2.0/token',\n      userInfoUrl: 'https://graph.microsoft.com/v1.0/me',\n      redirectUri: `${baseUrl}/auth/oauth2/callback/microsoft`,\n      scopes: ['openid', 'email', 'profile'],\n      pkce: { enabled: true, challengeMethod: 'S256' },\n      refreshSettings: { autoRefresh: true, refreshBuffer: 300 },\n    },\n    discord: {\n      provider: 'discord',\n      authUrl: 'https://discord.com/api/oauth2/authorize',\n      tokenUrl: 'https://discord.com/api/oauth2/token',\n      userInfoUrl: 'https://discord.com/api/users/@me',\n      redirectUri: `${baseUrl}/auth/oauth2/callback/discord`,\n      scopes: ['identify', 'email'],\n      refreshSettings: { autoRefresh: true, refreshBuffer: 300 },\n    },\n  };\n\n  const config = configs[provider];\n  if (!config) {\n    return null;\n  }\n\n  return {\n    ...config,\n    clientId,\n    clientSecret,\n  };\n}\n\n/**\n * Default OAuth2 handler instance\n */\nexport const defaultOAuth2Handler = createOAuth2Handler();"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkxBAgC,OAAA,CAAAC,mBAAA,GAAAA,mBAAA;AA3wBA,MAAAC,MAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAoB,CAAA,QAAAgB,YAAA,CAAAC,OAAA;AACA,MAAAC,QAAA;AAAA;AAAA,CAAAtC,cAAA,GAAAoB,CAAA,QAAAiB,OAAA;AAEA,MAAAE,iBAAA;AAAA;AAAA,CAAAvC,cAAA,GAAAoB,CAAA,QAAAiB,OAAA;AA2KA;;;;;AAKA,MAAaG,aAAc;AAAA;AAAA,CAAQF,QAAA,CAAAG,YAAY;EACrCC,OAAO;EAAA;EAAA,CAAA1C,cAAA,GAAAoB,CAAA,QAAG,IAAIuB,GAAG,EAAwB;EACzCC,QAAQ;EAAA;EAAA,CAAA5C,cAAA,GAAAoB,CAAA,QAAG,IAAIuB,GAAG,EAAyB;EAC3CE,MAAM;EAAA;EAAA,CAAA7C,cAAA,GAAAoB,CAAA,QAAG,IAAIuB,GAAG,EAAuB;EACvCG,SAAS;EAAA;EAAA,CAAA9C,cAAA,GAAAoB,CAAA,QAAqB,IAAI;EAE1C2B,YAAA;IAAA;IAAA/C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACE,KAAK,EAAE;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IACR,IAAI,CAAC4B,sBAAsB,EAAE;EAC/B;EAEA;;;EAGAC,YAAYA,CAACC,MAAiB;IAAA;IAAAlD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC5B,IAAI,CAAC0B,SAAS,GAAGI,MAAM;EACzB;EAEA;;;EAGAC,gBAAgBA,CAACC,MAAoB;IAAA;IAAApD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACnC,IAAI,CAACsB,OAAO,CAACW,GAAG,CAACD,MAAM,CAACE,QAAQ,EAAEF,MAAM,CAAC;EAC3C;EAEA;;;EAGAG,eAAeA,CAACD,QAAgB,EAAEE,OAAA;EAAA;EAAA,CAAAxD,cAAA,GAAAsB,CAAA,WAI9B,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IACJ,MAAM+B,MAAM;IAAA;IAAA,CAAApD,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsB,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC;IAAC;IAAAtD,cAAA,GAAAoB,CAAA;IAC1C,IAAI,CAACgC,MAAM,EAAE;MAAA;MAAApD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACX,MAAM,IAAIsC,KAAK,CAAC,oBAAoBJ,QAAQ,kBAAkB,CAAC;IACjE,CAAC;IAAA;IAAA;MAAAtD,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAMqC,SAAS;IAAA;IAAA,CAAA3D,cAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAkC,OAAO,CAACG,SAAS;IAAA;IAAA,CAAA3D,cAAA,GAAAsB,CAAA,WAAI,IAAI,CAACsC,iBAAiB,EAAE;IAC/D,MAAMC,KAAK;IAAA;IAAA,CAAA7D,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC0C,aAAa,EAAE;IAClC,MAAMC,OAAO;IAAA;IAAA,CAAA/D,cAAA,GAAAoB,CAAA,QAAkB;MAC7BuC,SAAS;MACTL,QAAQ;MACRO,KAAK;MACLG,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;MACrBC,SAAS,EAAEF,IAAI,CAACC,GAAG,EAAE,GAAI,EAAE,GAAG,EAAE,GAAG,IAAK;MAAE;MAC1CE,QAAQ,EAAEZ,OAAO,CAACY;KACnB;IAED;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IACA,IAAIgC,MAAM,CAACiB,IAAI,EAAEC,OAAO,EAAE;MAAA;MAAAtE,cAAA,GAAAsB,CAAA;MACxB,MAAMiD,YAAY;MAAA;MAAA,CAAAvE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACoD,oBAAoB,EAAE;MAChD,MAAMC,aAAa;MAAA;MAAA,CAAAzE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsD,qBAAqB,CAACH,YAAY,EAAEnB,MAAM,CAACiB,IAAI,CAACM,eAAe,CAAC;MAAC;MAAA3E,cAAA,GAAAoB,CAAA;MAC5F2C,OAAO,CAACQ,YAAY,GAAGA,YAAY;MAAC;MAAAvE,cAAA,GAAAoB,CAAA;MACpC2C,OAAO,CAACU,aAAa,GAAGA,aAAa;IACvC,CAAC;IAAA;IAAA;MAAAzE,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAI,CAACwB,QAAQ,CAACS,GAAG,CAACM,SAAS,EAAEI,OAAO,CAAC;IAErC;IACA,MAAMa,MAAM;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAG,IAAIyD,eAAe,CAAC;MACjCC,aAAa,EAAE,MAAM;MACrBC,SAAS,EAAE3B,MAAM,CAAC4B,QAAQ;MAC1BC,YAAY,EAAE7B,MAAM,CAAC8B,WAAW;MAChCC,KAAK,EAAE/B,MAAM,CAACgC,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;MAC9BxB,KAAK;MACL,GAAGT,MAAM,CAACkC,WAAW;MACrB,GAAG9B,OAAO,CAAC8B;KACZ,CAAC;IAEF;IAAA;IAAAtF,cAAA,GAAAoB,CAAA;IACA,IAAI2C,OAAO,CAACU,aAAa,EAAE;MAAA;MAAAzE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzBwD,MAAM,CAACvB,GAAG,CAAC,gBAAgB,EAAEU,OAAO,CAACU,aAAa,CAAC;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACpDwD,MAAM,CAACvB,GAAG,CAAC,uBAAuB,EAAED,MAAM,CAACiB,IAAK,CAACM,eAAe,CAAC;IACnE,CAAC;IAAA;IAAA;MAAA3E,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAMiE,GAAG;IAAA;IAAA,CAAAvF,cAAA,GAAAoB,CAAA,QAAG,GAAGgC,MAAM,CAACoC,OAAO,IAAIZ,MAAM,CAACa,QAAQ,EAAE,EAAE;IAAC;IAAAzF,cAAA,GAAAoB,CAAA;IAErD,OAAO;MAAEmE,GAAG;MAAExB;IAAO,CAAE;EACzB;EAEA;;;EAGA,MAAM2B,cAAcA,CAClBpC,QAAgB,EAChBqC,cAMC;IAAA;IAAA3F,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAED,IAAI;MACF,MAAMgC,MAAM;MAAA;MAAA,CAAApD,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsB,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC;MAAC;MAAAtD,cAAA,GAAAoB,CAAA;MAC1C,IAAI,CAACgC,MAAM,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACX,MAAM,IAAIsC,KAAK,CAAC,oBAAoBJ,QAAQ,kBAAkB,CAAC;MACjE,CAAC;MAAA;MAAA;QAAAtD,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA,IAAIuE,cAAc,CAACC,KAAK,EAAE;QAAA;QAAA5F,cAAA,GAAAsB,CAAA;QACxB,MAAMuE,MAAM;QAAA;QAAA,CAAA7F,cAAA,GAAAoB,CAAA,QAAyB;UACnC0E,OAAO,EAAE,KAAK;UACdF,KAAK;UAAE;UAAA,CAAA5F,cAAA,GAAAsB,CAAA,WAAAqE,cAAc,CAACI,iBAAiB;UAAA;UAAA,CAAA/F,cAAA,GAAAsB,CAAA,WAAIqE,cAAc,CAACC,KAAK;UAC/DI,YAAY,EAAE;YACZC,IAAI,EAAEN,cAAc,CAACC,KAAK;YAC1BM,WAAW,EAAEP,cAAc,CAACI,iBAAiB;YAC7CI,GAAG,EAAER,cAAc,CAACS;;SAEvB;QAAC;QAAApG,cAAA,GAAAoB,CAAA;QACF,IAAI,CAACiF,IAAI,CAAC,aAAa,EAAE/C,QAAQ,EAAEuC,MAAM,CAACD,KAAM,CAAC;QAAC;QAAA5F,cAAA,GAAAoB,CAAA;QAClD,OAAOyE,MAAM;MACf,CAAC;MAAA;MAAA;QAAA7F,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,YAACqE,cAAc,CAACM,IAAI;MAAA;MAAA,CAAAjG,cAAA,GAAAsB,CAAA,WAAI,CAACqE,cAAc,CAAC9B,KAAK,GAAE;QAAA;QAAA7D,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjD,MAAM,IAAIsC,KAAK,CAAC,sDAAsD,CAAC;MACzE,CAAC;MAAA;MAAA;QAAA1D,cAAA,GAAAsB,CAAA;MAAA;MAED;MACA,MAAMyC,OAAO;MAAA;MAAA,CAAA/D,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACkF,kBAAkB,CAACX,cAAc,CAAC9B,KAAK,CAAC;MAAC;MAAA7D,cAAA,GAAAoB,CAAA;MAC9D,IAAI,CAAC2C,OAAO,EAAE;QAAA;QAAA/D,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACZ,MAAM,IAAIsC,KAAK,CAAC,2CAA2C,CAAC;MAC9D,CAAC;MAAA;MAAA;QAAA1D,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAI2C,OAAO,CAACT,QAAQ,KAAKA,QAAQ,EAAE;QAAA;QAAAtD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjC,MAAM,IAAIsC,KAAK,CAAC,sCAAsC,CAAC;MACzD,CAAC;MAAA;MAAA;QAAA1D,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAI2C,OAAO,CAACI,SAAS,GAAGF,IAAI,CAACC,GAAG,EAAE,EAAE;QAAA;QAAAlE,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAClC,MAAM,IAAIsC,KAAK,CAAC,4BAA4B,CAAC;MAC/C,CAAC;MAAA;MAAA;QAAA1D,cAAA,GAAAsB,CAAA;MAAA;MAED;MACA,MAAMuB,MAAM;MAAA;MAAA,CAAA7C,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmF,qBAAqB,CAACnD,MAAM,EAAEuC,cAAc,CAACM,IAAI,EAAElC,OAAO,CAAC;MAErF;MACA,MAAMyC,QAAQ;MAAA;MAAA,CAAAxG,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACqF,WAAW,CAACrD,MAAM,EAAEP,MAAM,CAAC;MAEvD;MACA,MAAM6D,QAAQ;MAAA;MAAA,CAAA1G,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACuF,WAAW,CAACrD,QAAQ,EAAEkD,QAAQ,CAACI,EAAE,CAAC;MAAC;MAAA5G,cAAA,GAAAoB,CAAA;MACzD,IAAI,CAACyB,MAAM,CAACQ,GAAG,CAACqD,QAAQ,EAAE7D,MAAM,CAAC;MAEjC;MAAA;MAAA7C,cAAA,GAAAoB,CAAA;MACA,IAAI,CAACwB,QAAQ,CAACiE,MAAM,CAAC9C,OAAO,CAACJ,SAAS,CAAC;MAEvC,MAAMkC,MAAM;MAAA;MAAA,CAAA7F,cAAA,GAAAoB,CAAA,QAAyB;QACnC0E,OAAO,EAAE,IAAI;QACbjD,MAAM;QACN2D;OACD;MAAC;MAAAxG,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACiF,IAAI,CAAC,aAAa,EAAE/C,QAAQ,EAAEkD,QAAQ,CAAC;MAAC;MAAAxG,cAAA,GAAAoB,CAAA;MAC7C,OAAOyE,MAAM;IACf,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd,MAAMkB,YAAY;MAAA;MAAA,CAAA9G,cAAA,GAAAoB,CAAA,QAAGwE,KAAK,YAAYlC,KAAK;MAAA;MAAA,CAAA1D,cAAA,GAAAsB,CAAA,WAAGsE,KAAK,CAACmB,OAAO;MAAA;MAAA,CAAA/G,cAAA,GAAAsB,CAAA,WAAG,+BAA+B;MAC7F,MAAMuE,MAAM;MAAA;MAAA,CAAA7F,cAAA,GAAAoB,CAAA,QAAyB;QACnC0E,OAAO,EAAE,KAAK;QACdF,KAAK,EAAEkB;OACR;MAAC;MAAA9G,cAAA,GAAAoB,CAAA;MACF,IAAI,CAACiF,IAAI,CAAC,aAAa,EAAE/C,QAAQ,EAAEwD,YAAY,CAAC;MAAC;MAAA9G,cAAA,GAAAoB,CAAA;MACjD,OAAOyE,MAAM;IACf;EACF;EAEA;;;EAGAmB,SAASA,CAAC1D,QAAgB,EAAE2D,MAAc;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IACxC,MAAMqF,QAAQ;IAAA;IAAA,CAAA1G,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACuF,WAAW,CAACrD,QAAQ,EAAE2D,MAAM,CAAC;IAAC;IAAAjH,cAAA,GAAAoB,CAAA;IACpD,OAAO,2BAAApB,cAAA,GAAAsB,CAAA,eAAI,CAACuB,MAAM,CAACY,GAAG,CAACiD,QAAQ,CAAC;IAAA;IAAA,CAAA1G,cAAA,GAAAsB,CAAA,WAAI,IAAI;EAC1C;EAEA;;;EAGA,MAAM4F,aAAaA,CAAC5D,QAAgB,EAAE2D,MAAc;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClD,IAAI;MACF,MAAMgC,MAAM;MAAA;MAAA,CAAApD,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsB,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC;MAAC;MAAAtD,cAAA,GAAAoB,CAAA;MAC1C,IAAI,CAACgC,MAAM,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACX,MAAM,IAAIsC,KAAK,CAAC,oBAAoBJ,QAAQ,kBAAkB,CAAC;MACjE,CAAC;MAAA;MAAA;QAAAtD,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMoF,QAAQ;MAAA;MAAA,CAAA1G,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACuF,WAAW,CAACrD,QAAQ,EAAE2D,MAAM,CAAC;MACnD,MAAME,aAAa;MAAA;MAAA,CAAAnH,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACyB,MAAM,CAACY,GAAG,CAACiD,QAAQ,CAAC;MAAC;MAAA1G,cAAA,GAAAoB,CAAA;MAChD,IAAI,CAAC+F,aAAa,EAAEC,YAAY,EAAE;QAAA;QAAApH,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChC,MAAM,IAAIsC,KAAK,CAAC,4BAA4B,CAAC;MAC/C,CAAC;MAAA;MAAA;QAAA1D,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMsD,MAAM;MAAA;MAAA,CAAA5E,cAAA,GAAAoB,CAAA,SAAG,IAAIyD,eAAe,CAAC;QACjCwC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAEH,aAAa,CAACC,YAAY;QACzCrC,SAAS,EAAE3B,MAAM,CAAC4B,QAAQ;QAC1BuC,aAAa,EAAEnE,MAAM,CAACoE;OACvB,CAAC;MAEF,MAAMC,QAAQ;MAAA;MAAA,CAAAzH,cAAA,GAAAoB,CAAA,SAAG,MAAMsG,KAAK,CAACtE,MAAM,CAACuE,QAAQ,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,mCAAmC;UACnD,QAAQ,EAAE;SACX;QACDC,IAAI,EAAElD,MAAM,CAACa,QAAQ;OACtB,CAAC;MAAC;MAAAzF,cAAA,GAAAoB,CAAA;MAEH,IAAI,CAACqG,QAAQ,CAACM,EAAE,EAAE;QAAA;QAAA/H,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIsC,KAAK,CAAC,yBAAyB+D,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,UAAU,EAAE,CAAC;MACpF,CAAC;MAAA;MAAA;QAAAjI,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAM4G,SAAS;MAAA;MAAA,CAAAlI,cAAA,GAAAoB,CAAA,SAAG,MAAMqG,QAAQ,CAACU,IAAI,EAAE;MACvC,MAAMC,SAAS;MAAA;MAAA,CAAApI,cAAA,GAAAoB,CAAA,SAAgB;QAC7BiH,WAAW,EAAEH,SAAS,CAACI,YAAY;QACnClB,YAAY;QAAE;QAAA,CAAApH,cAAA,GAAAsB,CAAA,WAAA4G,SAAS,CAACZ,aAAa;QAAA;QAAA,CAAAtH,cAAA,GAAAsB,CAAA,WAAI6F,aAAa,CAACC,YAAY;QACnEmB,SAAS;QAAE;QAAA,CAAAvI,cAAA,GAAAsB,CAAA,WAAA4G,SAAS,CAACM,UAAU;QAAA;QAAA,CAAAxI,cAAA,GAAAsB,CAAA,WAAI,QAAQ;QAC3C6C,SAAS,EAAE+D,SAAS,CAACO,UAAU;QAAA;QAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAAG2C,IAAI,CAACC,GAAG,EAAE,GAAIgE,SAAS,CAACO,UAAU,GAAG,IAAK;QAAA;QAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAAGH,SAAS;QACxFiE,MAAM,EAAE8C,SAAS,CAAC/C,KAAK;QAAA;QAAA,CAAAnF,cAAA,GAAAsB,CAAA,WAAG4G,SAAS,CAAC/C,KAAK,CAACuD,KAAK,CAAC,GAAG,CAAC;QAAA;QAAA,CAAA1I,cAAA,GAAAsB,CAAA,WAAG6F,aAAa,CAAC/B,MAAM;QAC3EhB,QAAQ,EAAE;UAAE,GAAG+C,aAAa,CAAC/C,QAAQ;UAAEuE,WAAW,EAAE1E,IAAI,CAACC,GAAG;QAAE;OAC/D;MAAC;MAAAlE,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACyB,MAAM,CAACQ,GAAG,CAACqD,QAAQ,EAAE0B,SAAS,CAAC;MAAC;MAAApI,cAAA,GAAAoB,CAAA;MACrC,IAAI,CAACiF,IAAI,CAAC,cAAc,EAAE/C,QAAQ,EAAE2D,MAAM,EAAEmB,SAAS,CAAC;MAAC;MAAApI,cAAA,GAAAoB,CAAA;MAEvD,OAAOgH,SAAS;IAClB,CAAC,CAAC,OAAOxC,KAAK,EAAE;MAAA;MAAA5F,cAAA,GAAAoB,CAAA;MACdwH,OAAO,CAAChD,KAAK,CAAC,gCAAgCtC,QAAQ,IAAI2D,MAAM,GAAG,EAAErB,KAAK,CAAC;MAAC;MAAA5F,cAAA,GAAAoB,CAAA;MAC5E,OAAO,IAAI;IACb;EACF;EAEA;;;EAGA,MAAMyH,YAAYA,CAACvF,QAAgB,EAAE2D,MAAc;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjD,IAAI;MACF,MAAMgC,MAAM;MAAA;MAAA,CAAApD,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsB,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC;MACzC,MAAMoD,QAAQ;MAAA;MAAA,CAAA1G,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACuF,WAAW,CAACrD,QAAQ,EAAE2D,MAAM,CAAC;MACnD,MAAMpE,MAAM;MAAA;MAAA,CAAA7C,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACyB,MAAM,CAACY,GAAG,CAACiD,QAAQ,CAAC;MAAC;MAAA1G,cAAA,GAAAoB,CAAA;MAEzC,IAAIyB,MAAM,EAAE;QAAA;QAAA7C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACV;QACA;QACA,IAAI;UAAA;UAAApB,cAAA,GAAAoB,CAAA;UACF;UAAI;UAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA8B,MAAM;UAAA;UAAA,CAAApD,cAAA,GAAAsB,CAAA,WAAIuB,MAAM,CAACwF,WAAW,GAAE;YAAA;YAAArI,cAAA,GAAAsB,CAAA;YAChC;YACA,MAAMwH,SAAS;YAAA;YAAA,CAAA9I,cAAA,GAAAoB,CAAA,SAAG,GAAGgC,MAAM,CAACuE,QAAQ,CAACoB,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;YAAC;YAAA/I,cAAA,GAAAoB,CAAA;YACpE,MAAMsG,KAAK,CAACoB,SAAS,EAAE;cACrBlB,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,mCAAmC;gBACnD,eAAe,EAAE,UAAUhF,MAAM,CAACwF,WAAW;eAC9C;cACDP,IAAI,EAAE,SAASjF,MAAM,CAACwF,WAAW;aAClC,CAAC;UACJ,CAAC;UAAA;UAAA;YAAArI,cAAA,GAAAsB,CAAA;UAAA;QACH,CAAC,CAAC,MAAM;UACN;QAAA;QACD;QAAAtB,cAAA,GAAAoB,CAAA;QAED,IAAI,CAACyB,MAAM,CAACgE,MAAM,CAACH,QAAQ,CAAC;MAC9B,CAAC;MAAA;MAAA;QAAA1G,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAO,IAAI;IACb,CAAC,CAAC,OAAOwE,KAAK,EAAE;MAAA;MAAA5F,cAAA,GAAAoB,CAAA;MACdwH,OAAO,CAAChD,KAAK,CAAC,+BAA+BtC,QAAQ,IAAI2D,MAAM,GAAG,EAAErB,KAAK,CAAC;MAAC;MAAA5F,cAAA,GAAAoB,CAAA;MAC3E,OAAO,KAAK;IACd;EACF;EAEA;;;EAGA4H,cAAcA,CAACnG,MAAmB,EAAEoG,aAAA;EAAA;EAAA,CAAAjJ,cAAA,GAAAsB,CAAA,WAAwB,GAAG;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7D,IAAI,CAACyB,MAAM,CAACwF,WAAW,EAAE;MAAA;MAAArI,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACvB,OAAO,KAAK;IACd,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAIyB,MAAM,CAACsB,SAAS,EAAE;MAAA;MAAAnE,cAAA,GAAAsB,CAAA;MACpB,MAAM4C,GAAG;MAAA;MAAA,CAAAlE,cAAA,GAAAoB,CAAA,SAAG6C,IAAI,CAACC,GAAG,EAAE;MACtB,MAAMgF,QAAQ;MAAA;MAAA,CAAAlJ,cAAA,GAAAoB,CAAA,SAAG6H,aAAa,GAAG,IAAI;MAAC;MAAAjJ,cAAA,GAAAoB,CAAA;MACtC,OAAOyB,MAAM,CAACsB,SAAS,GAAID,GAAG,GAAGgF,QAAS;IAC5C,CAAC;IAAA;IAAA;MAAAlJ,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,OAAO,IAAI;EACb;EAEA;;;EAGA+H,iBAAiBA,CAAA;IAAA;IAAAnJ,cAAA,GAAAqB,CAAA;IACf,MAAM6C,GAAG;IAAA;IAAA,CAAAlE,cAAA,GAAAoB,CAAA,SAAG6C,IAAI,CAACC,GAAG,EAAE;IACtB,MAAMkF,cAAc;IAAA;IAAA,CAAApJ,cAAA,GAAAoB,CAAA,SAAoB,EAAE;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IAE3C,KAAK,MAAM,CAACuC,SAAS,EAAEI,OAAO,CAAC,IAAI,IAAI,CAACnB,QAAQ,CAACyG,OAAO,EAAE,EAAE;MAAA;MAAArJ,cAAA,GAAAoB,CAAA;MAC1D,IAAI2C,OAAO,CAACI,SAAS,GAAGD,GAAG,EAAE;QAAA;QAAAlE,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC3BgI,cAAc,CAACE,IAAI,CAACvF,OAAO,CAAC;MAC9B,CAAC,MAAM;QAAA;QAAA/D,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL;QACA,IAAI,CAACwB,QAAQ,CAACiE,MAAM,CAAClD,SAAS,CAAC;MACjC;IACF;IAAC;IAAA3D,cAAA,GAAAoB,CAAA;IAED,OAAOgI,cAAc;EACvB;EAEA;;;EAGAG,OAAOA,CAAA;IAAA;IAAAvJ,cAAA,GAAAqB,CAAA;IACL,MAAM6C,GAAG;IAAA;IAAA,CAAAlE,cAAA,GAAAoB,CAAA,SAAG6C,IAAI,CAACC,GAAG,EAAE;IAEtB;IAAA;IAAAlE,cAAA,GAAAoB,CAAA;IACA,KAAK,MAAM,CAACuC,SAAS,EAAEI,OAAO,CAAC,IAAI,IAAI,CAACnB,QAAQ,CAACyG,OAAO,EAAE,EAAE;MAAA;MAAArJ,cAAA,GAAAoB,CAAA;MAC1D,IAAI2C,OAAO,CAACI,SAAS,IAAID,GAAG,EAAE;QAAA;QAAAlE,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC5B,IAAI,CAACwB,QAAQ,CAACiE,MAAM,CAAClD,SAAS,CAAC;MACjC,CAAC;MAAA;MAAA;QAAA3D,cAAA,GAAAsB,CAAA;MAAA;IACH;IAEA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACA,KAAK,MAAM,CAACsF,QAAQ,EAAE7D,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,CAACwG,OAAO,EAAE,EAAE;MAAA;MAAArJ,cAAA,GAAAoB,CAAA;MACtD,IAAIyB,MAAM,CAACsB,SAAS,EAAE;QAAA;QAAAnE,cAAA,GAAAsB,CAAA;QACpB,MAAMkI,YAAY;QAAA;QAAA,CAAAxJ,cAAA,GAAAoB,CAAA,SAAGyB,MAAM,CAACsB,SAAS,GAAGD,GAAG;QAC3C,MAAM,CAACZ,QAAQ,EAAE2D,MAAM,CAAC;QAAA;QAAA,CAAAjH,cAAA,GAAAoB,CAAA,SAAGsF,QAAQ,CAACgC,KAAK,CAAC,GAAG,CAAC;QAAC;QAAA1I,cAAA,GAAAoB,CAAA;QAE/C,IAAIoI,YAAY,IAAI,CAAC,EAAE;UAAA;UAAAxJ,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACrB;UACA,IAAI,CAACyB,MAAM,CAACgE,MAAM,CAACH,QAAQ,CAAC;QAC9B,CAAC,MAAM;UAAA;UAAA1G,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAAA,IAAIoI,YAAY,IAAI,MAAM,EAAE;YAAA;YAAAxJ,cAAA,GAAAsB,CAAA;YAAAtB,cAAA,GAAAoB,CAAA;YAAE;YACnC;YACA,IAAI,CAACiF,IAAI,CAAC,eAAe,EAAE/C,QAAQ,EAAE2D,MAAM,EAAEwC,IAAI,CAACC,KAAK,CAACF,YAAY,GAAG,IAAI,CAAC,CAAC;UAC/E,CAAC;UAAA;UAAA;YAAAxJ,cAAA,GAAAsB,CAAA;UAAA;QAAD;MACF,CAAC;MAAA;MAAA;QAAAtB,cAAA,GAAAsB,CAAA;MAAA;IACH;EACF;EAEA;;;EAGQ,MAAMiF,qBAAqBA,CACjCnD,MAAoB,EACpB6C,IAAY,EACZlC,OAAsB;IAAA;IAAA/D,cAAA,GAAAqB,CAAA;IAEtB,MAAMuD,MAAM;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,SAAG,IAAIyD,eAAe,CAAC;MACjCwC,UAAU,EAAE,oBAAoB;MAChCpB,IAAI;MACJhB,YAAY,EAAE7B,MAAM,CAAC8B,WAAW;MAChCH,SAAS,EAAE3B,MAAM,CAAC4B,QAAQ;MAC1BuC,aAAa,EAAEnE,MAAM,CAACoE;KACvB,CAAC;IAEF;IAAA;IAAAxH,cAAA,GAAAoB,CAAA;IACA,IAAI2C,OAAO,CAACQ,YAAY,EAAE;MAAA;MAAAvE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACxBwD,MAAM,CAACvB,GAAG,CAAC,eAAe,EAAEU,OAAO,CAACQ,YAAY,CAAC;IACnD,CAAC;IAAA;IAAA;MAAAvE,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAMmG,QAAQ;IAAA;IAAA,CAAAzH,cAAA,GAAAoB,CAAA,SAAG,MAAMsG,KAAK,CAACtE,MAAM,CAACuE,QAAQ,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,mCAAmC;QACnD,QAAQ,EAAE;OACX;MACDC,IAAI,EAAElD,MAAM,CAACa,QAAQ;KACtB,CAAC;IAAC;IAAAzF,cAAA,GAAAoB,CAAA;IAEH,IAAI,CAACqG,QAAQ,CAACM,EAAE,EAAE;MAAA;MAAA/H,cAAA,GAAAsB,CAAA;MAChB,MAAMqI,SAAS;MAAA;MAAA,CAAA3J,cAAA,GAAAoB,CAAA,SAAG,MAAMqG,QAAQ,CAACmC,IAAI,EAAE;MAAC;MAAA5J,cAAA,GAAAoB,CAAA;MACxC,MAAM,IAAIsC,KAAK,CAAC,0BAA0B+D,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,UAAU,MAAM0B,SAAS,EAAE,CAAC;IACpG,CAAC;IAAA;IAAA;MAAA3J,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAM4G,SAAS;IAAA;IAAA,CAAAlI,cAAA,GAAAoB,CAAA,SAAG,MAAMqG,QAAQ,CAACU,IAAI,EAAE;IAAC;IAAAnI,cAAA,GAAAoB,CAAA;IAExC,IAAI8G,SAAS,CAACtC,KAAK,EAAE;MAAA;MAAA5F,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACnB,MAAM,IAAIsC,KAAK,CAAC;MAAyB;MAAA,CAAA1D,cAAA,GAAAsB,CAAA,WAAA4G,SAAS,CAACnC,iBAAiB;MAAA;MAAA,CAAA/F,cAAA,GAAAsB,CAAA,WAAI4G,SAAS,CAACtC,KAAK,GAAE,CAAC;IAC5F,CAAC;IAAA;IAAA;MAAA5F,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAO;MACLiH,WAAW,EAAEH,SAAS,CAACI,YAAY;MACnClB,YAAY,EAAEc,SAAS,CAACZ,aAAa;MACrCiB,SAAS;MAAE;MAAA,CAAAvI,cAAA,GAAAsB,CAAA,WAAA4G,SAAS,CAACM,UAAU;MAAA;MAAA,CAAAxI,cAAA,GAAAsB,CAAA,WAAI,QAAQ;MAC3C6C,SAAS,EAAE+D,SAAS,CAACO,UAAU;MAAA;MAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAAG2C,IAAI,CAACC,GAAG,EAAE,GAAIgE,SAAS,CAACO,UAAU,GAAG,IAAK;MAAA;MAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAAGH,SAAS;MACxFiE,MAAM,EAAE8C,SAAS,CAAC/C,KAAK;MAAA;MAAA,CAAAnF,cAAA,GAAAsB,CAAA,WAAG4G,SAAS,CAAC/C,KAAK,CAACuD,KAAK,CAAC,GAAG,CAAC;MAAA;MAAA,CAAA1I,cAAA,GAAAsB,CAAA,WAAG8B,MAAM,CAACgC,MAAM;MACpEhB,QAAQ,EAAE;QAAEyF,UAAU,EAAE5F,IAAI,CAACC,GAAG;MAAE;KACnC;EACH;EAEA;;;EAGQ,MAAMuC,WAAWA,CAACrD,MAAoB,EAAEP,MAAmB;IAAA;IAAA7C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjE,IAAI,CAACgC,MAAM,CAAC0G,WAAW,EAAE;MAAA;MAAA9J,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACvB;MACA,OAAO;QACLwF,EAAE,EAAE,SAAS;QACb/F,IAAI,EAAE;OACP;IACH,CAAC;IAAA;IAAA;MAAAb,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAMmG,QAAQ;IAAA;IAAA,CAAAzH,cAAA,GAAAoB,CAAA,SAAG,MAAMsG,KAAK,CAACtE,MAAM,CAAC0G,WAAW,EAAE;MAC/CjC,OAAO,EAAE;QACP,eAAe,EAAE,GAAGhF,MAAM,CAAC0F,SAAS,IAAI1F,MAAM,CAACwF,WAAW,EAAE;QAC5D,QAAQ,EAAE;;KAEb,CAAC;IAAC;IAAArI,cAAA,GAAAoB,CAAA;IAEH,IAAI,CAACqG,QAAQ,CAACM,EAAE,EAAE;MAAA;MAAA/H,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChB,MAAM,IAAIsC,KAAK,CAAC,4BAA4B+D,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,UAAU,EAAE,CAAC;IACvF,CAAC;IAAA;IAAA;MAAAjI,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAMyI,QAAQ;IAAA;IAAA,CAAA/J,cAAA,GAAAoB,CAAA,SAAG,MAAMqG,QAAQ,CAACU,IAAI,EAAE;IAAC;IAAAnI,cAAA,GAAAoB,CAAA;IAEvC,OAAO;MACLwF,EAAE;MAAE;MAAA,CAAA5G,cAAA,GAAAsB,CAAA,WAAAyI,QAAQ,CAACnD,EAAE;MAAA;MAAA,CAAA5G,cAAA,GAAAsB,CAAA,WAAIyI,QAAQ,CAACC,GAAG;MAAA;MAAA,CAAAhK,cAAA,GAAAsB,CAAA,WAAIyI,QAAQ,CAACE,OAAO;MAAA;MAAA,CAAAjK,cAAA,GAAAsB,CAAA,WAAI,SAAS;MAChE4I,KAAK,EAAEH,QAAQ,CAACG,KAAK;MACrBrJ,IAAI;MAAE;MAAA,CAAAb,cAAA,GAAAsB,CAAA,WAAAyI,QAAQ,CAAClJ,IAAI;MAAA;MAAA,CAAAb,cAAA,GAAAsB,CAAA,WAAIyI,QAAQ,CAACI,YAAY;MAAA;MAAA,CAAAnK,cAAA,GAAAsB,CAAA,WAAIyI,QAAQ,CAACK,QAAQ;MACjEC,MAAM;MAAE;MAAA,CAAArK,cAAA,GAAAsB,CAAA,WAAAyI,QAAQ,CAACO,UAAU;MAAA;MAAA,CAAAtK,cAAA,GAAAsB,CAAA,WAAIyI,QAAQ,CAACQ,OAAO;MAC/CC,GAAG,EAAET;KACN;EACH;EAEA;;;EAGQzD,kBAAkBA,CAACzC,KAAa;IAAA;IAAA7D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtC,KAAK,MAAM2C,OAAO,IAAI,IAAI,CAACnB,QAAQ,CAAC6H,MAAM,EAAE,EAAE;MAAA;MAAAzK,cAAA,GAAAoB,CAAA;MAC5C,IAAI2C,OAAO,CAACF,KAAK,KAAKA,KAAK,EAAE;QAAA;QAAA7D,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC3B,OAAO2C,OAAO;MAChB,CAAC;MAAA;MAAA;QAAA/D,cAAA,GAAAsB,CAAA;MAAA;IACH;IAAC;IAAAtB,cAAA,GAAAoB,CAAA;IACD,OAAO,IAAI;EACb;EAEA;;;EAGQwC,iBAAiBA,CAAA;IAAA;IAAA5D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvB,OAAO,UAAU6C,IAAI,CAACC,GAAG,EAAE,IAAI/B,MAAM,CAACuI,WAAW,CAAC,CAAC,CAAC,CAACjF,QAAQ,CAAC,KAAK,CAAC,EAAE;EACxE;EAEA;;;EAGQ3B,aAAaA,CAAA;IAAA;IAAA9D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACnB,OAAOe,MAAM,CAACuI,WAAW,CAAC,EAAE,CAAC,CAACjF,QAAQ,CAAC,WAAW,CAAC;EACrD;EAEA;;;EAGQjB,oBAAoBA,CAAA;IAAA;IAAAxE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1B,OAAOe,MAAM,CAACuI,WAAW,CAAC,EAAE,CAAC,CAACjF,QAAQ,CAAC,WAAW,CAAC;EACrD;EAEA;;;EAGQf,qBAAqBA,CAACiG,QAAgB,EAAE/C,MAAwB;IAAA;IAAA5H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtE,IAAIwG,MAAM,KAAK,OAAO,EAAE;MAAA;MAAA5H,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACtB,OAAOuJ,QAAQ;IACjB,CAAC;IAAA;IAAA;MAAA3K,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAOe,MAAM,CAACyI,UAAU,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACF,QAAQ,CAAC,CAACG,MAAM,CAAC,WAAW,CAAC;EACzE;EAEA;;;EAGQnE,WAAWA,CAACrD,QAAgB,EAAE2D,MAAc;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClD,OAAO,GAAGkC,QAAQ,IAAI2D,MAAM,EAAE;EAChC;EAEA;;;EAGQjE,sBAAsBA,CAAA;IAAA;IAAAhD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC5B2J,WAAW,CAAC,MAAK;MAAA;MAAA/K,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACf,IAAI,CAACmI,OAAO,EAAE;MAAC;MAAAvJ,cAAA,GAAAoB,CAAA;MACf,IAAI,CAAC4J,iBAAiB,EAAE;IAC1B,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACb;EAEA;;;EAGQ,MAAMA,iBAAiBA,CAAA;IAAA;IAAAhL,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7B,KAAK,MAAM,CAACsF,QAAQ,EAAE7D,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,CAACwG,OAAO,EAAE,EAAE;MACtD,MAAM,CAAC/F,QAAQ,EAAE2D,MAAM,CAAC;MAAA;MAAA,CAAAjH,cAAA,GAAAoB,CAAA,SAAGsF,QAAQ,CAACgC,KAAK,CAAC,GAAG,CAAC;MAC9C,MAAMtF,MAAM;MAAA;MAAA,CAAApD,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsB,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC;MAAC;MAAAtD,cAAA,GAAAoB,CAAA;MAE1C;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA8B,MAAM,EAAE6H,eAAe,EAAEC,WAAW;MAAA;MAAA,CAAAlL,cAAA,GAAAsB,CAAA,WAAIuB,MAAM,CAACuE,YAAY,GAAE;QAAA;QAAApH,cAAA,GAAAsB,CAAA;QAC/D,MAAM2H,aAAa;QAAA;QAAA,CAAAjJ,cAAA,GAAAoB,CAAA;QAAG;QAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA8B,MAAM,CAAC6H,eAAe,CAACE,aAAa;QAAA;QAAA,CAAAnL,cAAA,GAAAsB,CAAA,WAAI,GAAG;QAAC;QAAAtB,cAAA,GAAAoB,CAAA;QAElE,IAAI,CAAC,IAAI,CAAC4H,cAAc,CAACnG,MAAM,EAAEoG,aAAa,CAAC,EAAE;UAAA;UAAAjJ,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAC/C,IAAI;YAAA;YAAApB,cAAA,GAAAoB,CAAA;YACF,MAAM,IAAI,CAAC8F,aAAa,CAAC5D,QAAQ,EAAE2D,MAAM,CAAC;UAC5C,CAAC,CAAC,OAAOrB,KAAK,EAAE;YAAA;YAAA5F,cAAA,GAAAoB,CAAA;YACdwH,OAAO,CAAChD,KAAK,CAAC,2BAA2BtC,QAAQ,IAAI2D,MAAM,GAAG,EAAErB,KAAK,CAAC;UACxE;QACF,CAAC;QAAA;QAAA;UAAA5F,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC;MAAA;MAAA;QAAAtB,cAAA,GAAAsB,CAAA;MAAA;IACH;EACF;;AACD;AAAAtB,cAAA,GAAAoB,CAAA;AAxfDa,OAAA,CAAAO,aAAA,GAAAA,aAAA;AA0fA;;;;;AAKA,MAAa4I,kBAAmB;AAAA;AAAA,CAAQ7I,iBAAA,CAAA8I,gBAAgB;EAC9CC,aAAa;EAErBvI,YAAYuI,aAA4B;IAAA;IAAAtL,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtC,KAAK,EAAE;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IACR,IAAI,CAACkK,aAAa,GAAGA,aAAa;EACpC;EAEA,MAAMC,YAAYA,CAACC,OAAuB;IAAA;IAAAxL,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACxC,IAAI;MACF;MACA,MAAMyB,MAAM;MAAA;MAAA,CAAA7C,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACqK,wBAAwB,CAACD,OAAO,CAAC;MAAC;MAAAxL,cAAA,GAAAoB,CAAA;MACtD,IAAI,CAACyB,MAAM,EAAE;QAAA;QAAA7C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACX,OAAO;UACL0E,OAAO,EAAE,KAAK;UACdF,KAAK,EAAE;SACR;MACH,CAAC;MAAA;MAAA;QAAA5F,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA,IAAI,CAAC,IAAI,CAACkK,aAAa,CAACtC,cAAc,CAACnG,MAAM,CAAC,EAAE;QAAA;QAAA7C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC9C,OAAO;UACL0E,OAAO,EAAE,KAAK;UACdF,KAAK,EAAE;SACR;MACH,CAAC;MAAA;MAAA;QAAA5F,cAAA,GAAAsB,CAAA;MAAA;MAED;MACA,MAAMoK,IAAI;MAAA;MAAA,CAAA1L,cAAA,GAAAoB,CAAA,SAAG,IAAI,CAACuK,oBAAoB,CAAC9I,MAAM,EAAE2I,OAAO,CAAC;MAAC;MAAAxL,cAAA,GAAAoB,CAAA;MAExD,OAAO;QACL0E,OAAO,EAAE,IAAI;QACb4F,IAAI;QACJF,OAAO,EAAE;UACPI,QAAQ,EAAE,QAAQ;UAClBrD,SAAS,EAAE1F,MAAM,CAAC0F,SAAS;UAC3BnD,MAAM,EAAEvC,MAAM,CAACuC;;OAElB;IACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA;MAAA5F,cAAA,GAAAoB,CAAA;MACd,OAAO;QACL0E,OAAO,EAAE,KAAK;QACdF,KAAK,EAAE,iCAAiCA,KAAK,YAAYlC,KAAK;QAAA;QAAA,CAAA1D,cAAA,GAAAsB,CAAA,WAAGsE,KAAK,CAACmB,OAAO;QAAA;QAAA,CAAA/G,cAAA,GAAAsB,CAAA,WAAGuK,MAAM,CAACjG,KAAK,CAAC;OAC/F;IACH;EACF;EAEA,MAAMkG,OAAOA,CAACN,OAAuB;IAAA;IAAAxL,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACnC;IACA;IACA,OAAO,IAAI,CAACmK,YAAY,CAACC,OAAO,CAAC;EACnC;EAEA;;;EAGQC,wBAAwBA,CAACD,OAAuB;IAAA;IAAAxL,cAAA,GAAAqB,CAAA;IACtD,MAAMwG,OAAO;IAAA;IAAA,CAAA7H,cAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAkK,OAAO,CAAC3D,OAAO;IAAA;IAAA,CAAA7H,cAAA,GAAAsB,CAAA,WAAI,EAAE;IAErC;IACA,MAAMyK,UAAU;IAAA;IAAA,CAAA/L,cAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAuG,OAAO,CAACmE,aAAa;IAAA;IAAA,CAAAhM,cAAA,GAAAsB,CAAA,WAAIuG,OAAO,CAACoE,aAAa;IAAC;IAAAjM,cAAA,GAAAoB,CAAA;IAClE,IAAI2K,UAAU,EAAEG,UAAU,CAAC,SAAS,CAAC,EAAE;MAAA;MAAAlM,cAAA,GAAAsB,CAAA;MACrC,MAAM+G,WAAW;MAAA;MAAA,CAAArI,cAAA,GAAAoB,CAAA,SAAG2K,UAAU,CAACI,SAAS,CAAC,CAAC,CAAC;MAAC;MAAAnM,cAAA,GAAAoB,CAAA;MAC5C,OAAO;QACLiH,WAAW;QACXE,SAAS,EAAE,QAAQ;QACnBnD,MAAM,EAAE,EAAE,CAAE;OACb;IACH,CAAC;IAAA;IAAA;MAAApF,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAO,IAAI;EACb;EAEA;;;EAGQuK,oBAAoBA,CAAC9I,MAAmB,EAAE2I,OAAuB;IAAA;IAAAxL,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvE,OAAO;MACLwF,EAAE,EAAE,UAAUzE,MAAM,CAACyI,UAAU,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAChI,MAAM,CAACwF,WAAW,CAAC,CAACyC,MAAM,CAAC,KAAK,CAAC,CAACqB,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MACrGtL,IAAI,EAAE,aAAa;MACnBuL,KAAK,EAAE,CAAC,aAAa,CAAC;MACtBC,WAAW,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC,aAAa,CAAC;KACpD;EACH;;AACD;AAAAtM,cAAA,GAAAoB,CAAA;AApFDa,OAAA,CAAAmJ,kBAAA,GAAAA,kBAAA;AAsFA;;;AAGA,SAAgBlJ,mBAAmBA,CAAA;EAAA;EAAAlC,cAAA,GAAAqB,CAAA;EACjC,MAAMkL,OAAO;EAAA;EAAA,CAAAvM,cAAA,GAAAoB,CAAA,SAAG,IAAIoB,aAAa,EAAE;EAEnC;EACA,MAAMgK,SAAS;EAAA;EAAA,CAAAxM,cAAA,GAAAoB,CAAA,SAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC;EAAC;EAAApB,cAAA,GAAAoB,CAAA;EAE/D,KAAK,MAAMkC,QAAQ,IAAIkJ,SAAS,EAAE;IAChC,MAAMxH,QAAQ;IAAA;IAAA,CAAAhF,cAAA,GAAAoB,CAAA,SAAGqL,OAAO,CAACC,GAAG,CAAC,UAAUpJ,QAAQ,CAACqJ,WAAW,EAAE,YAAY,CAAC;IAC1E,MAAMnF,YAAY;IAAA;IAAA,CAAAxH,cAAA,GAAAoB,CAAA,SAAGqL,OAAO,CAACC,GAAG,CAAC,UAAUpJ,QAAQ,CAACqJ,WAAW,EAAE,gBAAgB,CAAC;IAAC;IAAA3M,cAAA,GAAAoB,CAAA;IAEnF;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA0D,QAAQ;IAAA;IAAA,CAAAhF,cAAA,GAAAsB,CAAA,WAAIkG,YAAY,GAAE;MAAA;MAAAxH,cAAA,GAAAsB,CAAA;MAC5B,MAAM8B,MAAM;MAAA;MAAA,CAAApD,cAAA,GAAAoB,CAAA,SAAGwL,iBAAiB,CAACtJ,QAAQ,EAAE0B,QAAQ,EAAEwC,YAAY,CAAC;MAAC;MAAAxH,cAAA,GAAAoB,CAAA;MACnE,IAAIgC,MAAM,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACVmL,OAAO,CAACpJ,gBAAgB,CAACC,MAAM,CAAC;MAClC,CAAC;MAAA;MAAA;QAAApD,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,cAAA,GAAAsB,CAAA;IAAA;EACH;EAAC;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAOmL,OAAO;AAChB;AAEA;;;AAGA,SAASK,iBAAiBA,CAACtJ,QAAgB,EAAE0B,QAAgB,EAAEwC,YAAoB;EAAA;EAAAxH,cAAA,GAAAqB,CAAA;EACjF,MAAMwL,OAAO;EAAA;EAAA,CAAA7M,cAAA,GAAAoB,CAAA;EAAG;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAmL,OAAO,CAACC,GAAG,CAACI,wBAAwB;EAAA;EAAA,CAAA9M,cAAA,GAAAsB,CAAA,WAAI,uBAAuB;EAE/E,MAAMoB,OAAO;EAAA;EAAA,CAAA1C,cAAA,GAAAoB,CAAA,SAAoE;IAC/E2L,MAAM,EAAE;MACNzJ,QAAQ,EAAE,QAAQ;MAClBkC,OAAO,EAAE,8CAA8C;MACvDmC,QAAQ,EAAE,qCAAqC;MAC/CmC,WAAW,EAAE,+CAA+C;MAC5D5E,WAAW,EAAE,GAAG2H,OAAO,8BAA8B;MACrDzH,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;MACtCf,IAAI,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEK,eAAe,EAAE;MAAM,CAAE;MAChDsG,eAAe,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAG;KACzD;IACD6B,MAAM,EAAE;MACN1J,QAAQ,EAAE,QAAQ;MAClBkC,OAAO,EAAE,0CAA0C;MACnDmC,QAAQ,EAAE,6CAA6C;MACvDmC,WAAW,EAAE,6BAA6B;MAC1C5E,WAAW,EAAE,GAAG2H,OAAO,8BAA8B;MACrDzH,MAAM,EAAE,CAAC,YAAY,CAAC;MACtB6F,eAAe,EAAE;QAAEC,WAAW,EAAE,KAAK;QAAEC,aAAa,EAAE;MAAG;KAC1D;IACD8B,SAAS,EAAE;MACT3J,QAAQ,EAAE,WAAW;MACrBkC,OAAO,EAAE,gEAAgE;MACzEmC,QAAQ,EAAE,4DAA4D;MACtEmC,WAAW,EAAE,qCAAqC;MAClD5E,WAAW,EAAE,GAAG2H,OAAO,iCAAiC;MACxDzH,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;MACtCf,IAAI,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEK,eAAe,EAAE;MAAM,CAAE;MAChDsG,eAAe,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAG;KACzD;IACD+B,OAAO,EAAE;MACP5J,QAAQ,EAAE,SAAS;MACnBkC,OAAO,EAAE,0CAA0C;MACnDmC,QAAQ,EAAE,sCAAsC;MAChDmC,WAAW,EAAE,mCAAmC;MAChD5E,WAAW,EAAE,GAAG2H,OAAO,+BAA+B;MACtDzH,MAAM,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;MAC7B6F,eAAe,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAG;;GAE3D;EAED,MAAM/H,MAAM;EAAA;EAAA,CAAApD,cAAA,GAAAoB,CAAA,SAAGsB,OAAO,CAACY,QAAQ,CAAC;EAAC;EAAAtD,cAAA,GAAAoB,CAAA;EACjC,IAAI,CAACgC,MAAM,EAAE;IAAA;IAAApD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACX,OAAO,IAAI;EACb,CAAC;EAAA;EAAA;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAO;IACL,GAAGgC,MAAM;IACT4B,QAAQ;IACRwC;GACD;AACH;AAEA;;;AAAA;AAAAxH,cAAA,GAAAoB,CAAA;AAGaa,OAAA,CAAAkL,oBAAoB,GAAGjL,mBAAmB,EAAE","ignoreList":[]}