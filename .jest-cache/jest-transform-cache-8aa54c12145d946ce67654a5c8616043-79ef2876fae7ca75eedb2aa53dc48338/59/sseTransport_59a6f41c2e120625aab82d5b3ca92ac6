35e95d9337d415b1e74d09385c2dd059
/* istanbul ignore next */
function cov_2lqwwbml3a() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/sseTransport.ts";
  var hash = "45a467151d7f7f5c1b2a9ae21ece5db5a591e5da";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/sseTransport.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "2": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "3": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "4": {
        start: {
          line: 27,
          column: 54
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "5": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "6": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 89
        }
      },
      "7": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "8": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "9": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 29
        }
      },
      "11": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "12": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "13": {
        start: {
          line: 50,
          column: 31
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "14": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 67
        }
      },
      "15": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "16": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "17": {
        start: {
          line: 61,
          column: 47
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "18": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 50
        }
      },
      "19": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 62
        }
      },
      "20": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 73
        }
      },
      "24": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "25": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 74
        }
      },
      "26": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 91
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "29": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 96
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "31": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "32": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "33": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 44
        }
      },
      "34": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "35": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 50
        }
      },
      "36": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 81
        }
      },
      "37": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 62
        }
      },
      "39": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 65
        }
      },
      "40": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "41": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "42": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "43": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "44": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 28
        }
      },
      "45": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 24
        }
      },
      "46": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 59
        }
      },
      "47": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 51
        }
      },
      "48": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 166,
          column: 1
        }
      },
      "49": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 115,
          column: 25
        }
      },
      "50": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 25
        }
      },
      "51": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 117,
          column: 25
        }
      },
      "52": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 25
        }
      },
      "53": {
        start: {
          line: 118,
          column: 35
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "54": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "55": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 81
        }
      },
      "56": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 25
        }
      },
      "57": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "58": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 82
        }
      },
      "59": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 25
        }
      },
      "60": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "61": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "62": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "63": {
        start: {
          line: 137,
          column: 41
        },
        end: {
          line: 137,
          column: 51
        }
      },
      "64": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "65": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 58
        }
      },
      "66": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 49
        }
      },
      "67": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 147,
          column: 24
        }
      },
      "68": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 24
        }
      },
      "69": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "70": {
        start: {
          line: 170,
          column: 34
        },
        end: {
          line: 183,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 95
      },
      "5": {
        name: "createSSETransport",
        decl: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 34
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 134
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 41
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 144
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 42
          },
          end: {
            line: 24,
            column: 58
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 47
          },
          end: {
            line: 67,
            column: 56
          }
        }, {
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 69
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 70,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 62
          },
          end: {
            line: 70,
            column: 71
          }
        }, {
          start: {
            line: 70,
            column: 74
          },
          end: {
            line: 70,
            column: 87
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 115,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 115,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 23
          }
        }, {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 120,
            column: 39
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 33
          }
        }, {
          start: {
            line: 135,
            column: 37
          },
          end: {
            line: 135,
            column: 48
          }
        }],
        line: 135
      },
      "15": {
        loc: {
          start: {
            line: 138,
            column: 25
          },
          end: {
            line: 138,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 138,
            column: 47
          }
        }, {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 56
          }
        }],
        line: 138
      },
      "16": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 147,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/sseTransport.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/transport/sseTransport.ts"],
      sourcesContent: ["/**\n * SSE Transport Implementation for n8n MCP Server\n *\n * Provides Server-Sent Events (SSE) transport capability for remote access to the n8n MCP server.\n * Enables web-based clients to connect and use n8n tools through HTTP/SSE protocol.\n */\n\nimport { FastMCP } from 'fastmcp';\nimport type { TransportConfig } from './transportConfig.js';\n\n/**\n * SSE Transport Manager\n *\n * Handles SSE server configuration, health checks, and connection management\n * for the n8n MCP server.\n */\nexport class SSETransportManager {\n  private server: FastMCP;\n  private config: TransportConfig;\n\n  constructor(server: FastMCP, config: TransportConfig) {\n    this.server = server;\n    this.config = config;\n  }\n\n  /**\n   * Start the SSE transport server\n   */\n  public async start(): Promise<void> {\n    if (this.config.type !== 'sse' || !this.config.sse) {\n      throw new Error('SSE transport not configured');\n    }\n\n    const { port, endpoint, host, healthCheck } = this.config.sse;\n\n    console.log(`\uD83D\uDE80 Starting n8n MCP Server with SSE transport`);\n    console.log(`\uD83D\uDCE1 Server will be available at: http://${host}:${port}${endpoint}`);\n\n    // Configure FastMCP server for SSE transport\n    await this.server.start({\n      transportType: 'httpStream',\n      httpStream: {\n        port,\n        endpoint: endpoint as `/${string}`,\n      },\n    });\n\n    // Add health check endpoint if enabled\n    if (healthCheck?.enabled) {\n      this.setupHealthCheck();\n    }\n\n    this.logServerInfo();\n  }\n\n  /**\n   * Setup health check endpoint\n   */\n  private setupHealthCheck(): void {\n    if (!this.config.sse?.healthCheck) return;\n\n    const healthEndpoint = this.config.sse.healthCheck.endpoint;\n\n    // Note: FastMCP automatically handles health checks\n    // This is a placeholder for custom health check logic if needed\n    console.log(`\uD83D\uDC9A Health check endpoint: ${healthEndpoint}`);\n  }\n\n  /**\n   * Log server information and connection details\n   */\n  private logServerInfo(): void {\n    if (!this.config.sse) return;\n\n    const { port, endpoint, host, cors } = this.config.sse;\n\n    console.log('\\n\uD83D\uDCCB Server Configuration:');\n    console.log(`   Transport: SSE (Server-Sent Events)`);\n    console.log(`   Host: ${host}`);\n    console.log(`   Port: ${port}`);\n    console.log(`   Endpoint: ${endpoint}`);\n    console.log(`   CORS: ${cors.enabled ? 'Enabled' : 'Disabled'}`);\n\n    if (cors.enabled) {\n      console.log(`   Allowed Origins: ${cors.origins.join(', ')}`);\n      console.log(`   Credentials: ${cors.credentials ? 'Allowed' : 'Not allowed'}`);\n    }\n\n    console.log('\\n\uD83D\uDD0C Connection Instructions:');\n    console.log('   For MCP Inspector:');\n    console.log(`   npx @modelcontextprotocol/inspector http://${host}:${port}${endpoint}`);\n    console.log('');\n    console.log('   For Claude Desktop (claude_desktop_config.json):');\n    console.log('   {');\n    console.log('     \"mcpServers\": {');\n    console.log('       \"n8n\": {');\n    console.log(`         \"command\": \"npx\",`);\n    console.log(`         \"args\": [\"@illuminaresolutions/n8n-mcp-server\"],`);\n    console.log(`         \"env\": {`);\n    console.log(`           \"N8N_MCP_TRANSPORT\": \"sse\",`);\n    console.log(`           \"N8N_MCP_SSE_PORT\": \"${port}\",`);\n    console.log(`           \"N8N_MCP_SSE_HOST\": \"${host}\"`);\n    console.log(`         }`);\n    console.log('       }');\n    console.log('     }');\n    console.log('   }');\n    console.log('');\n  }\n\n  /**\n   * Stop the server (cleanup)\n   */\n  public async stop(): Promise<void> {\n    console.log('\uD83D\uDED1 Stopping SSE transport server...');\n    // FastMCP handles cleanup automatically\n  }\n}\n\n/**\n * Create and configure SSE transport for FastMCP server\n */\nexport function createSSETransport(server: FastMCP, config: TransportConfig): SSETransportManager {\n  return new SSETransportManager(server, config);\n}\n\n/**\n * SSE-specific utilities and helpers\n */\nexport const SSEUtils = {\n  /**\n   * Validate SSE configuration\n   */\n  validateConfig(config: TransportConfig): boolean {\n    if (config.type !== 'sse') return false;\n    if (!config.sse) return false;\n\n    const { port, endpoint } = config.sse;\n\n    // Port validation\n    if (port < 1024 || port > 65535) {\n      console.error(`\u274C Invalid port: ${port}. Must be between 1024-65535`);\n      return false;\n    }\n\n    // Endpoint validation\n    if (!endpoint.startsWith('/')) {\n      console.error(`\u274C Invalid endpoint: ${endpoint}. Must start with '/'`);\n      return false;\n    }\n\n    return true;\n  },\n\n  /**\n   * Get connection URL for the SSE server\n   */\n  getConnectionUrl(config: TransportConfig): string | null {\n    if (config.type !== 'sse' || !config.sse) return null;\n\n    const { host, port, endpoint } = config.sse;\n    const protocol = port === 443 ? 'https' : 'http';\n    return `${protocol}://${host}:${port}${endpoint}`;\n  },\n\n  /**\n   * Format connection instructions for different clients\n   */\n  formatConnectionInstructions(config: TransportConfig): {\n    inspector: string;\n    claudeDesktop: object;\n    curl: string;\n  } | null {\n    const url = this.getConnectionUrl(config);\n    if (!url) return null;\n\n    return {\n      inspector: `npx @modelcontextprotocol/inspector ${url}`,\n      claudeDesktop: {\n        mcpServers: {\n          n8n: {\n            command: 'npx',\n            args: ['@illuminaresolutions/n8n-mcp-server'],\n            env: {\n              N8N_MCP_TRANSPORT: 'sse',\n              N8N_MCP_SSE_PORT: config.sse?.port.toString(),\n              N8N_MCP_SSE_HOST: config.sse?.host,\n            },\n          },\n        },\n      },\n      curl: `curl -N -H \"Accept: text/event-stream\" ${url}`,\n    };\n  },\n};\n\n/**\n * Default SSE server configuration\n */\nexport const DEFAULT_SSE_CONFIG = {\n  port: 8080,\n  endpoint: '/sse',\n  host: 'localhost',\n  cors: {\n    enabled: true,\n    origins: ['*'],\n    credentials: false,\n  },\n  healthCheck: {\n    enabled: true,\n    endpoint: '/health',\n  },\n} as const;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "45a467151d7f7f5c1b2a9ae21ece5db5a591e5da"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lqwwbml3a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lqwwbml3a();
/**
 * SSE Transport Implementation for n8n MCP Server
 *
 * Provides Server-Sent Events (SSE) transport capability for remote access to the n8n MCP server.
 * Enables web-based clients to connect and use n8n tools through HTTP/SSE protocol.
 */
/**
 * SSE Transport Manager
 *
 * Handles SSE server configuration, health checks, and connection management
 * for the n8n MCP server.
 */
export class SSETransportManager {
  server;
  config;
  constructor(server, config) {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[0]++;
    cov_2lqwwbml3a().s[0]++;
    this.server = server;
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[1]++;
    this.config = config;
  }
  /**
   * Start the SSE transport server
   */
  async start() {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[1]++;
    cov_2lqwwbml3a().s[2]++;
    if (
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[1][0]++, this.config.type !== 'sse') ||
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[1][1]++, !this.config.sse)) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[0][0]++;
      cov_2lqwwbml3a().s[3]++;
      throw new Error('SSE transport not configured');
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[0][1]++;
    }
    const {
      port,
      endpoint,
      host,
      healthCheck
    } =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[4]++, this.config.sse);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[5]++;
    console.log(`🚀 Starting n8n MCP Server with SSE transport`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[6]++;
    console.log(`📡 Server will be available at: http://${host}:${port}${endpoint}`);
    // Configure FastMCP server for SSE transport
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[7]++;
    await this.server.start({
      transportType: 'httpStream',
      httpStream: {
        port,
        endpoint: endpoint
      }
    });
    // Add health check endpoint if enabled
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[8]++;
    if (healthCheck?.enabled) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[2][0]++;
      cov_2lqwwbml3a().s[9]++;
      this.setupHealthCheck();
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[2][1]++;
    }
    cov_2lqwwbml3a().s[10]++;
    this.logServerInfo();
  }
  /**
   * Setup health check endpoint
   */
  setupHealthCheck() {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[2]++;
    cov_2lqwwbml3a().s[11]++;
    if (!this.config.sse?.healthCheck) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[3][0]++;
      cov_2lqwwbml3a().s[12]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[3][1]++;
    }
    const healthEndpoint =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[13]++, this.config.sse.healthCheck.endpoint);
    // Note: FastMCP automatically handles health checks
    // This is a placeholder for custom health check logic if needed
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[14]++;
    console.log(`💚 Health check endpoint: ${healthEndpoint}`);
  }
  /**
   * Log server information and connection details
   */
  logServerInfo() {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[3]++;
    cov_2lqwwbml3a().s[15]++;
    if (!this.config.sse) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[4][0]++;
      cov_2lqwwbml3a().s[16]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[4][1]++;
    }
    const {
      port,
      endpoint,
      host,
      cors
    } =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[17]++, this.config.sse);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[18]++;
    console.log('\n📋 Server Configuration:');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[19]++;
    console.log(`   Transport: SSE (Server-Sent Events)`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[20]++;
    console.log(`   Host: ${host}`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[21]++;
    console.log(`   Port: ${port}`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[22]++;
    console.log(`   Endpoint: ${endpoint}`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[23]++;
    console.log(`   CORS: ${cors.enabled ?
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[5][0]++, 'Enabled') :
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[5][1]++, 'Disabled')}`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[24]++;
    if (cors.enabled) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[6][0]++;
      cov_2lqwwbml3a().s[25]++;
      console.log(`   Allowed Origins: ${cors.origins.join(', ')}`);
      /* istanbul ignore next */
      cov_2lqwwbml3a().s[26]++;
      console.log(`   Credentials: ${cors.credentials ?
      /* istanbul ignore next */
      (cov_2lqwwbml3a().b[7][0]++, 'Allowed') :
      /* istanbul ignore next */
      (cov_2lqwwbml3a().b[7][1]++, 'Not allowed')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[6][1]++;
    }
    cov_2lqwwbml3a().s[27]++;
    console.log('\n🔌 Connection Instructions:');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[28]++;
    console.log('   For MCP Inspector:');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[29]++;
    console.log(`   npx @modelcontextprotocol/inspector http://${host}:${port}${endpoint}`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[30]++;
    console.log('');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[31]++;
    console.log('   For Claude Desktop (claude_desktop_config.json):');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[32]++;
    console.log('   {');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[33]++;
    console.log('     "mcpServers": {');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[34]++;
    console.log('       "n8n": {');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[35]++;
    console.log(`         "command": "npx",`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[36]++;
    console.log(`         "args": ["@illuminaresolutions/n8n-mcp-server"],`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[37]++;
    console.log(`         "env": {`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[38]++;
    console.log(`           "N8N_MCP_TRANSPORT": "sse",`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[39]++;
    console.log(`           "N8N_MCP_SSE_PORT": "${port}",`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[40]++;
    console.log(`           "N8N_MCP_SSE_HOST": "${host}"`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[41]++;
    console.log(`         }`);
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[42]++;
    console.log('       }');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[43]++;
    console.log('     }');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[44]++;
    console.log('   }');
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[45]++;
    console.log('');
  }
  /**
   * Stop the server (cleanup)
   */
  async stop() {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[4]++;
    cov_2lqwwbml3a().s[46]++;
    console.log('🛑 Stopping SSE transport server...');
    // FastMCP handles cleanup automatically
  }
}
/**
 * Create and configure SSE transport for FastMCP server
 */
export function createSSETransport(server, config) {
  /* istanbul ignore next */
  cov_2lqwwbml3a().f[5]++;
  cov_2lqwwbml3a().s[47]++;
  return new SSETransportManager(server, config);
}
/**
 * SSE-specific utilities and helpers
 */
export const SSEUtils =
/* istanbul ignore next */
(cov_2lqwwbml3a().s[48]++, {
  /**
   * Validate SSE configuration
   */
  validateConfig(config) {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[6]++;
    cov_2lqwwbml3a().s[49]++;
    if (config.type !== 'sse') {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[8][0]++;
      cov_2lqwwbml3a().s[50]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[8][1]++;
    }
    cov_2lqwwbml3a().s[51]++;
    if (!config.sse) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[9][0]++;
      cov_2lqwwbml3a().s[52]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[9][1]++;
    }
    const {
      port,
      endpoint
    } =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[53]++, config.sse);
    // Port validation
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[11][0]++, port < 1024) ||
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[11][1]++, port > 65535)) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[10][0]++;
      cov_2lqwwbml3a().s[55]++;
      console.error(`❌ Invalid port: ${port}. Must be between 1024-65535`);
      /* istanbul ignore next */
      cov_2lqwwbml3a().s[56]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[10][1]++;
    }
    // Endpoint validation
    cov_2lqwwbml3a().s[57]++;
    if (!endpoint.startsWith('/')) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[12][0]++;
      cov_2lqwwbml3a().s[58]++;
      console.error(`❌ Invalid endpoint: ${endpoint}. Must start with '/'`);
      /* istanbul ignore next */
      cov_2lqwwbml3a().s[59]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[12][1]++;
    }
    cov_2lqwwbml3a().s[60]++;
    return true;
  },
  /**
   * Get connection URL for the SSE server
   */
  getConnectionUrl(config) {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[7]++;
    cov_2lqwwbml3a().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[14][0]++, config.type !== 'sse') ||
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[14][1]++, !config.sse)) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[13][0]++;
      cov_2lqwwbml3a().s[62]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[13][1]++;
    }
    const {
      host,
      port,
      endpoint
    } =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[63]++, config.sse);
    const protocol =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[64]++, port === 443 ?
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[15][0]++, 'https') :
    /* istanbul ignore next */
    (cov_2lqwwbml3a().b[15][1]++, 'http'));
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[65]++;
    return `${protocol}://${host}:${port}${endpoint}`;
  },
  /**
   * Format connection instructions for different clients
   */
  formatConnectionInstructions(config) {
    /* istanbul ignore next */
    cov_2lqwwbml3a().f[8]++;
    const url =
    /* istanbul ignore next */
    (cov_2lqwwbml3a().s[66]++, this.getConnectionUrl(config));
    /* istanbul ignore next */
    cov_2lqwwbml3a().s[67]++;
    if (!url) {
      /* istanbul ignore next */
      cov_2lqwwbml3a().b[16][0]++;
      cov_2lqwwbml3a().s[68]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2lqwwbml3a().b[16][1]++;
    }
    cov_2lqwwbml3a().s[69]++;
    return {
      inspector: `npx @modelcontextprotocol/inspector ${url}`,
      claudeDesktop: {
        mcpServers: {
          n8n: {
            command: 'npx',
            args: ['@illuminaresolutions/n8n-mcp-server'],
            env: {
              N8N_MCP_TRANSPORT: 'sse',
              N8N_MCP_SSE_PORT: config.sse?.port.toString(),
              N8N_MCP_SSE_HOST: config.sse?.host
            }
          }
        }
      },
      curl: `curl -N -H "Accept: text/event-stream" ${url}`
    };
  }
});
/**
 * Default SSE server configuration
 */
export const DEFAULT_SSE_CONFIG =
/* istanbul ignore next */
(cov_2lqwwbml3a().s[70]++, {
  port: 8080,
  endpoint: '/sse',
  host: 'localhost',
  cors: {
    enabled: true,
    origins: ['*'],
    credentials: false
  },
  healthCheck: {
    enabled: true,
    endpoint: '/health'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,