0943c180f16cd938fcef7d888a41d2ad
"use strict";

/* istanbul ignore next */
function cov_y8xrsz6ie() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/instance-monitoring.ts";
  var hash = "1866b7d7316417ef95f6e989305110dcf108fc91";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/instance-monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 70
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 11,
          column: 2
        }
      },
      "6": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "9": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "10": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 69
        }
      },
      "13": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 42
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 27
        }
      },
      "15": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "16": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "17": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 84
        }
      },
      "18": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 76
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 96
        }
      },
      "22": {
        start: {
          line: 50,
          column: 68
        },
        end: {
          line: 50,
          column: 80
        }
      },
      "23": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "26": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "27": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 111
        }
      },
      "28": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 144
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 83
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 22
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 34
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 68
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 106
        }
      },
      "35": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 66
        }
      },
      "36": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 22
        }
      },
      "37": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 37
        }
      },
      "38": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 83
        }
      },
      "39": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 75
        }
      },
      "40": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "41": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "42": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "43": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "44": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 51
        }
      },
      "45": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 23
        }
      },
      "46": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 82
        }
      },
      "47": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "48": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "49": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 74
        }
      },
      "50": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 78
        }
      },
      "51": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 55
        }
      },
      "52": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 98
        }
      },
      "53": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 120
        }
      },
      "54": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 171
        }
      },
      "55": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 138
        }
      },
      "56": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 96
        }
      },
      "57": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 26
        }
      },
      "58": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 31
        }
      },
      "59": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 23
        }
      },
      "60": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "61": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 53
        }
      },
      "62": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 118
        }
      },
      "63": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 69
        }
      },
      "64": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "65": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "66": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "67": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 48
        }
      },
      "68": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 26
        }
      },
      "69": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "70": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "71": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "72": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 46
        }
      },
      "73": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "74": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "75": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 79
        }
      },
      "76": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 83
        }
      },
      "77": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 68
        }
      },
      "78": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 73
        }
      },
      "79": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 22
        }
      },
      "80": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "81": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 95
        }
      },
      "82": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 93
        }
      },
      "83": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 100
        }
      },
      "84": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 77
        }
      },
      "85": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 22
        }
      },
      "86": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "87": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 46
        }
      },
      "88": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "89": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 132,
          column: 102
        }
      },
      "90": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 123
        }
      },
      "91": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 26
        }
      },
      "92": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "93": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 73
        }
      },
      "94": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "95": {
        start: {
          line: 140,
          column: 34
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "96": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 89
        }
      },
      "97": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "98": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 79
        }
      },
      "99": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 31
        }
      },
      "100": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "101": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 34
        }
      },
      "102": {
        start: {
          line: 158,
          column: 21
        },
        end: {
          line: 158,
          column: 23
        }
      },
      "103": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 68
        }
      },
      "104": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "105": {
        start: {
          line: 161,
          column: 30
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "106": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 68
        }
      },
      "107": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "108": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 103
        }
      },
      "109": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 48
        }
      },
      "110": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 62
        }
      },
      "111": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 87
        }
      },
      "112": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "113": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 89
        }
      },
      "114": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "115": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 71
        }
      },
      "116": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "117": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 110
        }
      },
      "118": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 26
        }
      },
      "119": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 31
        }
      },
      "120": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "121": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "122": {
        start: {
          line: 189,
          column: 14
        },
        end: {
          line: 189,
          column: 18
        }
      },
      "123": {
        start: {
          line: 190,
          column: 18
        },
        end: {
          line: 190,
          column: 47
        }
      },
      "124": {
        start: {
          line: 191,
          column: 14
        },
        end: {
          line: 191,
          column: 55
        }
      },
      "125": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 76
        }
      },
      "126": {
        start: {
          line: 195,
          column: 18
        },
        end: {
          line: 195,
          column: 44
        }
      },
      "127": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 53
        }
      },
      "128": {
        start: {
          line: 197,
          column: 17
        },
        end: {
          line: 197,
          column: 41
        }
      },
      "129": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "130": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 48
        }
      },
      "131": {
        start: {
          line: 201,
          column: 9
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "132": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 38
        }
      },
      "133": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "134": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 234,
          column: 7
        }
      },
      "135": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "136": {
        start: {
          line: 223,
          column: 32
        },
        end: {
          line: 223,
          column: 52
        }
      },
      "137": {
        start: {
          line: 224,
          column: 36
        },
        end: {
          line: 224,
          column: 74
        }
      },
      "138": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 54
        }
      },
      "139": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 230,
          column: 17
        }
      },
      "140": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 102
        }
      },
      "141": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 99
        }
      },
      "142": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "143": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 38
        }
      },
      "144": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "145": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 104
        }
      },
      "146": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "147": {
        start: {
          line: 253,
          column: 32
        },
        end: {
          line: 253,
          column: 52
        }
      },
      "148": {
        start: {
          line: 254,
          column: 39
        },
        end: {
          line: 254,
          column: 41
        }
      },
      "149": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 268,
          column: 17
        }
      },
      "150": {
        start: {
          line: 257,
          column: 37
        },
        end: {
          line: 257,
          column: 78
        }
      },
      "151": {
        start: {
          line: 258,
          column: 34
        },
        end: {
          line: 258,
          column: 117
        }
      },
      "152": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 47
        }
      },
      "153": {
        start: {
          line: 263,
          column: 46
        },
        end: {
          line: 263,
          column: 86
        }
      },
      "154": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 267,
          column: 21
        }
      },
      "155": {
        start: {
          line: 265,
          column: 38
        },
        end: {
          line: 265,
          column: 121
        }
      },
      "156": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 266,
          column: 51
        }
      },
      "157": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 59
        }
      },
      "158": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 274,
          column: 17
        }
      },
      "159": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 104
        }
      },
      "160": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 101
        }
      },
      "161": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 304,
          column: 7
        }
      },
      "162": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "163": {
        start: {
          line: 293,
          column: 32
        },
        end: {
          line: 293,
          column: 52
        }
      },
      "164": {
        start: {
          line: 294,
          column: 38
        },
        end: {
          line: 294,
          column: 78
        }
      },
      "165": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "166": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "167": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 103
        }
      },
      "168": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 100
        }
      },
      "169": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "170": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "171": {
        start: {
          line: 319,
          column: 32
        },
        end: {
          line: 319,
          column: 52
        }
      },
      "172": {
        start: {
          line: 320,
          column: 31
        },
        end: {
          line: 320,
          column: 78
        }
      },
      "173": {
        start: {
          line: 321,
          column: 38
        },
        end: {
          line: 321,
          column: 65
        }
      },
      "174": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 51
        }
      },
      "175": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 327,
          column: 17
        }
      },
      "176": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 104
        }
      },
      "177": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 101
        }
      },
      "178": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 364,
          column: 7
        }
      },
      "179": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "180": {
        start: {
          line: 348,
          column: 32
        },
        end: {
          line: 348,
          column: 52
        }
      },
      "181": {
        start: {
          line: 349,
          column: 33
        },
        end: {
          line: 349,
          column: 67
        }
      },
      "182": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 355,
          column: 17
        }
      },
      "183": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 82
        }
      },
      "184": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 84
        }
      },
      "185": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 360,
          column: 17
        }
      },
      "186": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 95
        }
      },
      "187": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 92
        }
      },
      "188": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 413,
          column: 7
        }
      },
      "189": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "190": {
        start: {
          line: 382,
          column: 32
        },
        end: {
          line: 382,
          column: 52
        }
      },
      "191": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 404,
          column: 17
        }
      },
      "192": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 385,
          column: 56
        }
      },
      "193": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 77
        }
      },
      "194": {
        start: {
          line: 388,
          column: 24
        },
        end: {
          line: 388,
          column: 49
        }
      },
      "195": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 389,
          column: 65
        }
      },
      "196": {
        start: {
          line: 391,
          column: 24
        },
        end: {
          line: 391,
          column: 49
        }
      },
      "197": {
        start: {
          line: 392,
          column: 24
        },
        end: {
          line: 396,
          column: 25
        }
      },
      "198": {
        start: {
          line: 393,
          column: 28
        },
        end: {
          line: 395,
          column: 31
        }
      },
      "199": {
        start: {
          line: 397,
          column: 24
        },
        end: {
          line: 397,
          column: 56
        }
      },
      "200": {
        start: {
          line: 398,
          column: 24
        },
        end: {
          line: 398,
          column: 80
        }
      },
      "201": {
        start: {
          line: 400,
          column: 39
        },
        end: {
          line: 400,
          column: 58
        }
      },
      "202": {
        start: {
          line: 401,
          column: 24
        },
        end: {
          line: 401,
          column: 325
        }
      },
      "203": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 403,
          column: 88
        }
      },
      "204": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 409,
          column: 17
        }
      },
      "205": {
        start: {
          line: 408,
          column: 20
        },
        end: {
          line: 408,
          column: 100
        }
      },
      "206": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 97
        }
      },
      "207": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 443,
          column: 7
        }
      },
      "208": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 441,
          column: 13
        }
      },
      "209": {
        start: {
          line: 432,
          column: 32
        },
        end: {
          line: 432,
          column: 52
        }
      },
      "210": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 94
        }
      },
      "211": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 434,
          column: 149
        }
      },
      "212": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 439,
          column: 17
        }
      },
      "213": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 438,
          column: 106
        }
      },
      "214": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 440,
          column: 103
        }
      }
    },
    fnMap: {
      "0": {
        name: "getResourceMonitor",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 35
      },
      "1": {
        name: "formatSystemUsage",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 26
          }
        },
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 63
          },
          end: {
            line: 50,
            column: 64
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 50,
            column: 80
          }
        },
        line: 50
      },
      "3": {
        name: "formatWorkflowUsage",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 28
          }
        },
        loc: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 72
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 19
          }
        },
        loc: {
          start: {
            line: 78,
            column: 39
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 78
      },
      "5": {
        name: "formatHealthMetrics",
        decl: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 28
          }
        },
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 92
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 105,
            column: 38
          },
          end: {
            line: 105,
            column: 39
          }
        },
        loc: {
          start: {
            line: 105,
            column: 52
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 105
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 47
          },
          end: {
            line: 112,
            column: 48
          }
        },
        loc: {
          start: {
            line: 112,
            column: 59
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 131,
            column: 36
          },
          end: {
            line: 131,
            column: 37
          }
        },
        loc: {
          start: {
            line: 131,
            column: 43
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 139,
            column: 42
          },
          end: {
            line: 139,
            column: 43
          }
        },
        loc: {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 139
      },
      "10": {
        name: "formatAlerts",
        decl: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 154,
            column: 21
          }
        },
        loc: {
          start: {
            line: 154,
            column: 30
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 160,
            column: 19
          },
          end: {
            line: 160,
            column: 20
          }
        },
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 160
      },
      "12": {
        name: "formatBytes",
        decl: {
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 186,
            column: 20
          }
        },
        loc: {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 186
      },
      "13": {
        name: "formatDuration",
        decl: {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 194,
            column: 23
          }
        },
        loc: {
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 194
      },
      "14": {
        name: "createInstanceMonitoringTools",
        decl: {
          start: {
            line: 208,
            column: 9
          },
          end: {
            line: 208,
            column: 38
          }
        },
        loc: {
          start: {
            line: 208,
            column: 58
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 208
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 221,
            column: 17
          },
          end: {
            line: 221,
            column: 18
          }
        },
        loc: {
          start: {
            line: 221,
            column: 29
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 221
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 247,
            column: 17
          },
          end: {
            line: 247,
            column: 18
          }
        },
        loc: {
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 277,
            column: 9
          }
        },
        line: 247
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 291,
            column: 17
          },
          end: {
            line: 291,
            column: 18
          }
        },
        loc: {
          start: {
            line: 291,
            column: 33
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 291
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 317,
            column: 17
          },
          end: {
            line: 317,
            column: 18
          }
        },
        loc: {
          start: {
            line: 317,
            column: 33
          },
          end: {
            line: 330,
            column: 9
          }
        },
        line: 317
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 346,
            column: 17
          },
          end: {
            line: 346,
            column: 18
          }
        },
        loc: {
          start: {
            line: 346,
            column: 33
          },
          end: {
            line: 363,
            column: 9
          }
        },
        line: 346
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 380,
            column: 17
          },
          end: {
            line: 380,
            column: 18
          }
        },
        loc: {
          start: {
            line: 380,
            column: 33
          },
          end: {
            line: 412,
            column: 9
          }
        },
        line: 380
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 430,
            column: 17
          },
          end: {
            line: 430,
            column: 18
          }
        },
        loc: {
          start: {
            line: 430,
            column: 33
          },
          end: {
            line: 442,
            column: 9
          }
        },
        line: 430
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "2": {
        loc: {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 79,
            column: 53
          }
        }, {
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 69
          }
        }],
        line: 79
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "5": {
        loc: {
          start: {
            line: 124,
            column: 40
          },
          end: {
            line: 124,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 74
          },
          end: {
            line: 124,
            column: 82
          }
        }, {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 124,
            column: 91
          }
        }],
        line: 124
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 125,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 72
          },
          end: {
            line: 125,
            column: 80
          }
        }, {
          start: {
            line: 125,
            column: 83
          },
          end: {
            line: 125,
            column: 89
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 43
          },
          end: {
            line: 126,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 79
          },
          end: {
            line: 126,
            column: 87
          }
        }, {
          start: {
            line: 126,
            column: 90
          },
          end: {
            line: 126,
            column: 96
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 58
          },
          end: {
            line: 132,
            column: 61
          }
        }, {
          start: {
            line: 132,
            column: 64
          },
          end: {
            line: 132,
            column: 102
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 132,
            column: 64
          },
          end: {
            line: 132,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 92
          },
          end: {
            line: 132,
            column: 96
          }
        }, {
          start: {
            line: 132,
            column: 99
          },
          end: {
            line: 132,
            column: 102
          }
        }],
        line: 132
      },
      "11": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "12": {
        loc: {
          start: {
            line: 146,
            column: 31
          },
          end: {
            line: 146,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 31
          },
          end: {
            line: 146,
            column: 60
          }
        }, {
          start: {
            line: 146,
            column: 64
          },
          end: {
            line: 146,
            column: 68
          }
        }],
        line: 146
      },
      "13": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 167,
            column: 54
          }
        }, {
          start: {
            line: 167,
            column: 57
          },
          end: {
            line: 167,
            column: 68
          }
        }],
        line: 167
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 36
          }
        }, {
          start: {
            line: 179,
            column: 40
          },
          end: {
            line: 179,
            column: 66
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 188,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 188,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "21": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: 201,
            column: 9
          },
          end: {
            line: 206,
            column: 5
          }
        }],
        line: 198
      },
      "22": {
        loc: {
          start: {
            line: 201,
            column: 9
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 9
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: 204,
            column: 9
          },
          end: {
            line: 206,
            column: 5
          }
        }],
        line: 201
      },
      "23": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 268,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 268,
            column: 17
          }
        }, {
          start: {
            line: 261,
            column: 21
          },
          end: {
            line: 268,
            column: 17
          }
        }],
        line: 255
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "28": {
        loc: {
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "29": {
        loc: {
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 355,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 355,
            column: 17
          }
        }, {
          start: {
            line: 353,
            column: 21
          },
          end: {
            line: 355,
            column: 17
          }
        }],
        line: 350
      },
      "30": {
        loc: {
          start: {
            line: 358,
            column: 16
          },
          end: {
            line: 360,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 16
          },
          end: {
            line: 360,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "31": {
        loc: {
          start: {
            line: 383,
            column: 16
          },
          end: {
            line: 404,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 384,
            column: 20
          },
          end: {
            line: 386,
            column: 77
          }
        }, {
          start: {
            line: 387,
            column: 20
          },
          end: {
            line: 389,
            column: 65
          }
        }, {
          start: {
            line: 390,
            column: 20
          },
          end: {
            line: 398,
            column: 80
          }
        }, {
          start: {
            line: 399,
            column: 20
          },
          end: {
            line: 401,
            column: 325
          }
        }, {
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 403,
            column: 88
          }
        }],
        line: 383
      },
      "32": {
        loc: {
          start: {
            line: 392,
            column: 24
          },
          end: {
            line: 396,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 24
          },
          end: {
            line: 396,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "33": {
        loc: {
          start: {
            line: 401,
            column: 71
          },
          end: {
            line: 401,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 99
          },
          end: {
            line: 401,
            column: 106
          }
        }, {
          start: {
            line: 401,
            column: 109
          },
          end: {
            line: 401,
            column: 115
          }
        }],
        line: 401
      },
      "34": {
        loc: {
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "35": {
        loc: {
          start: {
            line: 434,
            column: 109
          },
          end: {
            line: 434,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 124
          },
          end: {
            line: 434,
            column: 133
          }
        }, {
          start: {
            line: 434,
            column: 136
          },
          end: {
            line: 434,
            column: 145
          }
        }],
        line: 434
      },
      "36": {
        loc: {
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 439,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 439,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/instance-monitoring.ts",
      mappings: ";;AA4PA,sEA4PC;AAxfD,6BAAwB;AACxB,qCAAoC;AAEpC,oEAA8D;AAS9D,qBAAqB;AACrB,MAAM,sBAAsB,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,mBAAmB;IAC7E,eAAe,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CACvD,CAAC,CAAC;AAEH,MAAM,wBAAwB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,kBAAkB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IACxD,SAAS,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CAC9E,CAAC,CAAC;AAEH,MAAM,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IACrC,QAAQ,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE;IAClE,QAAQ,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAChC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;CACzD,CAAC,CAAC;AAEH,MAAM,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACjC,sBAAsB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC5D,aAAa,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IACnD,mBAAmB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;CAC1D,CAAC,CAAC;AAEH,MAAM,sBAAsB,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,SAAS,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IAC7E,gBAAgB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IACtD,sBAAsB,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC5D,MAAM,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;CACnF,CAAC,CAAC;AAEH,mCAAmC;AACnC,IAAI,eAAe,GAA2B,IAAI,CAAC;AAEnD,SAAS,kBAAkB;IACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QACrB,eAAe,GAAG,IAAI,oCAAe,EAAE,CAAC;QACxC,eAAe,CAAC,eAAe,EAAE,CAAC;IACpC,CAAC;IACD,OAAO,eAAe,CAAC;AACzB,CAAC;AAED,mBAAmB;AACnB,SAAS,iBAAiB,CAAC,KAA0B;IACnD,MAAM,QAAQ,GAAG,EAAE,CAAC;IAEpB,QAAQ,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IACjD,QAAQ,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAEhF,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7B,QAAQ,CAAC,IAAI,CAAC,kBAAkB,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACpE,QAAQ,CAAC,IAAI,CAAC,oBAAoB,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACxE,QAAQ,CAAC,IAAI,CAAC,mBAAmB,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5F,QAAQ,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IACjD,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAChC,QAAQ,CAAC,IAAI,CAAC,YAAY,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACnE,QAAQ,CAAC,IAAI,CAAC,WAAW,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3G,QAAQ,CAAC,IAAI,CAAC,WAAW,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACjE,QAAQ,CAAC,IAAI,CAAC,mBAAmB,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC5I,QAAQ,CAAC,IAAI,CAAC,kBAAkB,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC/E,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9B,QAAQ,CAAC,IAAI,CAAC,YAAY,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAChE,QAAQ,CAAC,IAAI,CAAC,WAAW,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtG,QAAQ,CAAC,IAAI,CAAC,WAAW,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC9D,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACjC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC/E,QAAQ,CAAC,IAAI,CAAC,iBAAiB,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACvE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,QAAQ,CAAC,IAAI,CAAC,kBAAkB,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAEhE,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,mBAAmB,CAAC,KAA8B;IACzD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,mCAAmC,CAAC;IAC7C,CAAC;IAED,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,QAAQ,CAAC,IAAI,CAAC,iCAAiC,KAAK,CAAC,MAAM,iBAAiB,CAAC,CAAC;IAE9E,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;QAChC,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC;QAC9D,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAEnE,QAAQ,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,QAAQ,CAAC,YAAY,MAAM,MAAM,EAAE,CAAC,CAAC;QACtE,QAAQ,CAAC,IAAI,CAAC,UAAU,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC/C,QAAQ,CAAC,IAAI,CAAC,kBAAkB,QAAQ,CAAC,cAAc,KAAK,WAAW,iBAAiB,CAAC,CAAC;QAC1F,QAAQ,CAAC,IAAI,CAAC,0BAA0B,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAChH,QAAQ,CAAC,IAAI,CAAC,wBAAwB,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnK,QAAQ,CAAC,IAAI,CAAC,qBAAqB,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,WAAW,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;QAClI,QAAQ,CAAC,IAAI,CAAC,iBAAiB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACxF,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,mBAAmB,CAAC,MAA6B;IACxD,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,MAAM,WAAW,GAAG;QAClB,OAAO,EAAE,GAAG;QACZ,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,IAAI;KACf,CAAC;IAEF,QAAQ,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IACjD,QAAQ,CAAC,IAAI,CAAC,uBAAuB,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAClH,QAAQ,CAAC,IAAI,CAAC,qBAAqB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;IAEjE,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC9C,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;IAC7C,QAAQ,CAAC,IAAI,CAAC,wBAAwB,MAAM,CAAC,WAAW,CAAC,YAAY,IAAI,CAAC,CAAC;IAC3E,QAAQ,CAAC,IAAI,CAAC,iBAAiB,MAAM,CAAC,WAAW,CAAC,UAAU,iBAAiB,CAAC,CAAC;IAC/E,QAAQ,CAAC,IAAI,CAAC,iBAAiB,MAAM,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;IAChE,QAAQ,CAAC,IAAI,CAAC,aAAa,MAAM,CAAC,WAAW,CAAC,kBAAkB,GAAG,CAAC,CAAC;IACrE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IACzC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAC3F,QAAQ,CAAC,IAAI,CAAC,qBAAqB,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IACzF,QAAQ,CAAC,IAAI,CAAC,yBAAyB,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAChG,QAAQ,CAAC,IAAI,CAAC,sBAAsB,MAAM,CAAC,SAAS,CAAC,cAAc,IAAI,CAAC,CAAC;IACzE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAElB,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACnC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACtC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChC,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;YAC3F,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,YAAY,OAAO,GAAG,CAAC,UAAU,UAAU,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC7B,QAAQ,CAAC,IAAI,CAAC,uBAAuB,MAAM,CAAC,MAAM,CAAC,MAAM,MAAM,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxC,MAAM,aAAa,GAA2B;gBAC5C,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;aACf,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC7B,QAAQ,CAAC,IAAI,CAAC,aAAa,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,cAAc,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,YAAY,CAAC,MAA0B;IAC9C,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACxB,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,QAAQ,CAAC,IAAI,CAAC,4BAA4B,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC;IAEhE,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAC9B,MAAM,aAAa,GAAG;YACpB,GAAG,EAAE,IAAI;YACT,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACf,CAAC;QAEF,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC;QAE7D,QAAQ,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,MAAM,EAAE,CAAC,CAAC;QAC5D,QAAQ,CAAC,IAAI,CAAC,gBAAgB,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC/F,QAAQ,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QACxC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QACtD,QAAQ,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAE/E,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;YACrB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAC/E,CAAC;QAED,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,gBAAgB,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;YAC3D,QAAQ,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,QAAQ,CAAC,SAAS,aAAa,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;QACpG,CAAC;QAED,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,WAAW,CAAC,KAAa;IAChC,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IAC9B,MAAM,CAAC,GAAG,IAAI,CAAC;IACf,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO,GAAG,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC1E,CAAC;AAED,SAAS,cAAc,CAAC,OAAe;IACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAEtC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,GAAG,KAAK,KAAK,OAAO,KAAK,IAAI,GAAG,CAAC;IAC1C,CAAC;SAAM,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;QACvB,OAAO,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,OAAO,GAAG,IAAI,GAAG,CAAC;IACpB,CAAC;AACH,CAAC;AAED,SAAgB,6BAA6B,CAAC,SAAiC,EAAE,MAAW;IAC1F,6BAA6B;IAC7B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,sBAAsB;QAC5B,WAAW,EAAE,yFAAyF;QACtG,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC,EAAE,CAAC;QACxB,WAAW,EAAE;YACX,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,sBAAsB,EAAE,CAAC;gBAC3D,OAAO,iBAAiB,CAAC,WAAW,CAAC,CAAC;YACxC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,mCAAmC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC1E,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,mDAAmD,CAAC,CAAC;YAC3E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,0BAA0B;IAC1B,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,sFAAsF;QACnG,UAAU,EAAE,wBAAwB;QACpC,WAAW,EAAE;YACX,KAAK,EAAE,8BAA8B;YACrC,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAA8C,EAAE,EAAE;YAChE,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,mBAAS,CAAC,wDAAwD,CAAC,CAAC;YAChF,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,MAAM,cAAc,GAA4B,EAAE,CAAC;gBAEnD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,wBAAwB;oBACxB,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC3D,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,wBAAwB,CAClD,QAAQ,CAAC,EAAE,EACX,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,MAAM,CAChB,CAAC;oBACF,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC;qBAAM,CAAC;oBACN,oBAAoB;oBACpB,MAAM,iBAAiB,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;oBAEnE,KAAK,MAAM,QAAQ,IAAI,iBAAiB,CAAC,IAAI,EAAE,CAAC;wBAC9C,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,wBAAwB,CAClD,QAAQ,CAAC,EAAE,EACX,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,MAAM,CAChB,CAAC;wBACF,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC;gBACH,CAAC;gBAED,OAAO,mBAAmB,CAAC,cAAc,CAAC,CAAC;YAC7C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,qCAAqC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC5E,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,qDAAqD,CAAC,CAAC;YAC7E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,wBAAwB;IACxB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,uBAAuB;QAC7B,WAAW,EAAE,kGAAkG;QAC/G,UAAU,EAAE,iBAAiB;QAC7B,WAAW,EAAE;YACX,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAAuC,EAAE,EAAE;YACzD,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,wBAAwB,EAAE,CAAC;gBAC/D,OAAO,mBAAmB,CAAC,aAAa,CAAC,CAAC;YAC5C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,oCAAoC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC3E,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,oDAAoD,CAAC,CAAC;YAC5E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,gCAAgC;IAChC,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,+DAA+D;QAC5E,UAAU,EAAE,qBAAqB;QACjC,WAAW,EAAE;YACX,KAAK,EAAE,oBAAoB;YAC3B,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAA2C,EAAE,EAAE;YAC7D,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC/D,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClD,OAAO,YAAY,CAAC,aAAa,CAAC,CAAC;YACrC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,qCAAqC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC5E,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,qDAAqD,CAAC,CAAC;YAC7E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,gBAAgB;IAChB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,2BAA2B;QACjC,WAAW,EAAE,sCAAsC;QACnD,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,sBAAsB,CAAC;SACnD,CAAC;QACF,WAAW,EAAE;YACX,KAAK,EAAE,2BAA2B;YAClC,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAAyB,EAAE,EAAE;YAC3C,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAEpD,IAAI,QAAQ,EAAE,CAAC;oBACb,OAAO,WAAW,IAAI,CAAC,OAAO,+BAA+B,CAAC;gBAChE,CAAC;qBAAM,CAAC;oBACN,OAAO,WAAW,IAAI,CAAC,OAAO,iCAAiC,CAAC;gBAClE,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,4BAA4B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACnE,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,4CAA4C,CAAC,CAAC;YACpE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,wBAAwB;IACxB,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EAAE,qEAAqE;QAClF,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,MAAM,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;YACtD,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,yBAAyB;SACnF,CAAC;QACF,WAAW,EAAE;YACX,KAAK,EAAE,6BAA6B;YACpC,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAA6C,EAAE,EAAE;YAC/D,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBAErC,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;oBACpB,KAAK,OAAO;wBACV,MAAM,OAAO,CAAC,eAAe,EAAE,CAAC;wBAChC,OAAO,6CAA6C,CAAC;oBAEvD,KAAK,MAAM;wBACT,OAAO,CAAC,cAAc,EAAE,CAAC;wBACzB,OAAO,iCAAiC,CAAC;oBAE3C,KAAK,SAAS;wBACZ,OAAO,CAAC,cAAc,EAAE,CAAC;wBACzB,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;4BACpB,OAAO,CAAC,YAAY,CAAC;gCACnB,UAAU,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;6BAC/E,CAAC,CAAC;wBACL,CAAC;wBACD,MAAM,OAAO,CAAC,eAAe,EAAE,CAAC;wBAChC,OAAO,gDAAgD,CAAC;oBAE1D,KAAK,QAAQ;wBACX,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;wBACnC,OAAO,wCAAwC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,eAAe,MAAM,CAAC,UAAU,CAAC,UAAU,kBAAkB,MAAM,CAAC,UAAU,CAAC,aAAa,uBAAuB,OAAO,CAAC,aAAa,EAAE,CAAC,MAAM,oBAAoB,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;oBAE/S;wBACE,MAAM,IAAI,mBAAS,CAAC,mBAAmB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC1D,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,iCAAiC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACxE,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,iDAAiD,CAAC,CAAC;YACzE,CAAC;QACH,CAAC;KACF,CAAC,CAAC;IAEH,2CAA2C;IAC3C,MAAM,CAAC,OAAO,CAAC;QACb,IAAI,EAAE,0BAA0B;QAChC,WAAW,EAAE,wEAAwE;QACrF,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,yBAAyB,CAAC;YACxD,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,+BAA+B,CAAC;YAC5D,OAAO,EAAE,OAAC,CAAC,OAAO,EAAE;SACrB,CAAC;QACF,WAAW,EAAE;YACX,KAAK,EAAE,0BAA0B;YACjC,YAAY,EAAE,KAAK;YACnB,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACrB;QACD,OAAO,EAAE,KAAK,EAAE,IAAgE,EAAE,EAAE;YAClF,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBACrC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE9E,OAAO,8CAA8C,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC;YACvI,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;oBAC3B,MAAM,IAAI,mBAAS,CAAC,uCAAuC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC9E,CAAC;gBACD,MAAM,IAAI,mBAAS,CAAC,uDAAuD,CAAC,CAAC;YAC/E,CAAC;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/instance-monitoring.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { ResourceMonitor } from '../utils/resourceMonitor.js';\nimport {\n  SystemResourceUsage,\n  WorkflowResourceUsage,\n  InstanceHealthMetrics,\n  MonitoringReport,\n  PerformanceAlert,\n} from '../types/monitoringTypes.js';\n\n// Validation Schemas\nconst MonitoringPeriodSchema = z.object({\n  hours: z.number().min(1).max(168).optional().default(24), // 1 hour to 1 week\n  includeInactive: z.boolean().optional().default(false),\n});\n\nconst WorkflowMonitoringSchema = z.object({\n  workflowId: z.string().optional(),\n  includeNodeMetrics: z.boolean().optional().default(true),\n  timeRange: z.enum(['1h', '6h', '24h', '7d', '30d']).optional().default('24h'),\n});\n\nconst AlertManagementSchema = z.object({\n  severity: z.enum(['low', 'medium', 'high', 'critical']).optional(),\n  resolved: z.boolean().optional(),\n  limit: z.number().min(1).max(100).optional().default(50),\n});\n\nconst HealthCheckSchema = z.object({\n  includeRecommendations: z.boolean().optional().default(true),\n  includeAlerts: z.boolean().optional().default(true),\n  includeDependencies: z.boolean().optional().default(true),\n});\n\nconst ReportGenerationSchema = z.object({\n  timeRange: z.enum(['1h', '6h', '24h', '7d', '30d']).optional().default('24h'),\n  includeWorkflows: z.boolean().optional().default(true),\n  includeRecommendations: z.boolean().optional().default(true),\n  format: z.enum(['summary', 'detailed', 'dashboard']).optional().default('summary'),\n});\n\n// Global resource monitor instance\nlet resourceMonitor: ResourceMonitor | null = null;\n\nfunction getResourceMonitor(): ResourceMonitor {\n  if (!resourceMonitor) {\n    resourceMonitor = new ResourceMonitor();\n    resourceMonitor.startMonitoring();\n  }\n  return resourceMonitor;\n}\n\n// Helper Functions\nfunction formatSystemUsage(usage: SystemResourceUsage): string {\n  const sections = [];\n\n  sections.push(`\uD83D\uDDA5\uFE0F **System Resource Usage**\\n`);\n  sections.push(`**Timestamp:** ${new Date(usage.timestamp).toLocaleString()}\\n`);\n\n  sections.push(`**\uD83D\uDCBB CPU:**`);\n  sections.push(`\u2022 Total Usage: ${usage.cpu.totalUsage.toFixed(1)}%`);\n  sections.push(`\u2022 Process Usage: ${usage.cpu.processUsage.toFixed(1)}%`);\n  sections.push(`\u2022 Load Average: ${usage.cpu.loadAverage.map(l => l.toFixed(2)).join(', ')}`);\n  sections.push(`\u2022 Cores: ${usage.cpu.coreCount}`);\n  sections.push('');\n\n  sections.push(`**\uD83E\uDDE0 Memory:**`);\n  sections.push(`\u2022 Total: ${formatBytes(usage.memory.totalMemory)}`);\n  sections.push(`\u2022 Used: ${formatBytes(usage.memory.usedMemory)} (${usage.memory.utilization.toFixed(1)}%)`);\n  sections.push(`\u2022 Free: ${formatBytes(usage.memory.freeMemory)}`);\n  sections.push(`\u2022 Process Heap: ${formatBytes(usage.memory.processMemory.heapUsed)} / ${formatBytes(usage.memory.processMemory.heapTotal)}`);\n  sections.push(`\u2022 Process RSS: ${formatBytes(usage.memory.processMemory.rss)}`);\n  sections.push('');\n\n  sections.push(`**\uD83D\uDCBE Disk:**`);\n  sections.push(`\u2022 Total: ${formatBytes(usage.disk.totalSpace)}`);\n  sections.push(`\u2022 Used: ${formatBytes(usage.disk.usedSpace)} (${usage.disk.utilization.toFixed(1)}%)`);\n  sections.push(`\u2022 Free: ${formatBytes(usage.disk.freeSpace)}`);\n  sections.push('');\n\n  sections.push(`**\uD83C\uDF10 Network:**`);\n  sections.push(`\u2022 Bytes Received: ${formatBytes(usage.network.bytesReceived)}`);\n  sections.push(`\u2022 Bytes Sent: ${formatBytes(usage.network.bytesSent)}`);\n  sections.push('');\n\n  sections.push(`**\u23F1\uFE0F Uptime:** ${formatDuration(usage.uptime)}`);\n\n  return sections.join('\\n');\n}\n\nfunction formatWorkflowUsage(usage: WorkflowResourceUsage[]): string {\n  if (usage.length === 0) {\n    return 'No workflow usage data available.';\n  }\n\n  const sections = [];\n  sections.push(`\uD83D\uDCCA **Workflow Resource Usage (${usage.length} workflows)**\\n`);\n\n  usage.forEach((workflow, index) => {\n    const status = workflow.isActive ? '\u2705 Active' : '\u23F8\uFE0F Inactive';\n    const successRate = workflow.executionStats.successRate.toFixed(1);\n    \n    sections.push(`**${index + 1}. ${workflow.workflowName}** ${status}`);\n    sections.push(`   ID: ${workflow.workflowId}`);\n    sections.push(`   Executions: ${workflow.executionCount} (${successRate}% success rate)`);\n    sections.push(`   Avg Execution Time: ${formatDuration(workflow.resourceMetrics.averageExecutionTime / 1000)}`);\n    sections.push(`   Memory Usage: Avg ${formatBytes(workflow.resourceMetrics.memoryUsage.average)}, Peak ${formatBytes(workflow.resourceMetrics.memoryUsage.peak)}`);\n    sections.push(`   CPU Usage: Avg ${workflow.resourceMetrics.cpuUsage.average}%, Peak ${workflow.resourceMetrics.cpuUsage.peak}%`);\n    sections.push(`   Runs/Hour: ${workflow.executionStats.averageRunsPerHour.toFixed(1)}`);\n    sections.push('');\n  });\n\n  return sections.join('\\n');\n}\n\nfunction formatHealthMetrics(health: InstanceHealthMetrics): string {\n  const sections = [];\n  const statusEmoji = {\n    healthy: '\u2705',\n    warning: '\u26A0\uFE0F',\n    degraded: '\uD83D\uDFE1',\n    critical: '\uD83D\uDEA8'\n  };\n\n  sections.push(`\uD83C\uDFE5 **Instance Health Report**\\n`);\n  sections.push(`**Overall Status:** ${statusEmoji[health.overall.status]} ${health.overall.status.toUpperCase()}`);\n  sections.push(`**Health Score:** ${health.overall.score}/100\\n`);\n\n  if (health.overall.issues.length > 0) {\n    sections.push(`**\uD83D\uDEA8 Issues:**`);\n    health.overall.issues.forEach((issue, i) => {\n      sections.push(`${i + 1}. ${issue}`);\n    });\n    sections.push('');\n  }\n\n  if (health.overall.recommendations.length > 0) {\n    sections.push(`**\uD83D\uDCA1 Recommendations:**`);\n    health.overall.recommendations.forEach((rec, i) => {\n      sections.push(`${i + 1}. ${rec}`);\n    });\n    sections.push('');\n  }\n\n  sections.push(`**\uD83D\uDCC8 Performance Metrics:**`);\n  sections.push(`\u2022 API Response Time: ${health.performance.responseTime}ms`);\n  sections.push(`\u2022 Throughput: ${health.performance.throughput} executions/min`);\n  sections.push(`\u2022 Error Rate: ${health.performance.errorRate}%`);\n  sections.push(`\u2022 Uptime: ${health.performance.availabilityUptime}%`);\n  sections.push('');\n\n  sections.push(`**\uD83D\uDD27 Resource Status:**`);\n  sections.push(`\u2022 Memory Pressure: ${health.resources.memoryPressure ? '\u26A0\uFE0F Yes' : '\u2705 No'}`);\n  sections.push(`\u2022 CPU Throttling: ${health.resources.cpuThrottling ? '\u26A0\uFE0F Yes' : '\u2705 No'}`);\n  sections.push(`\u2022 Disk Space Warning: ${health.resources.diskSpaceWarning ? '\u26A0\uFE0F Yes' : '\u2705 No'}`);\n  sections.push(`\u2022 Network Latency: ${health.resources.networkLatency}ms`);\n  sections.push('');\n\n  if (health.dependencies.length > 0) {\n    sections.push(`**\uD83D\uDD17 Dependencies:**`);\n    health.dependencies.forEach(dep => {\n      const statusEmoji = dep.status === 'online' ? '\u2705' : dep.status === 'degraded' ? '\u26A0\uFE0F' : '\u274C';\n      sections.push(`\u2022 ${dep.name}: ${statusEmoji} ${dep.status} (${dep.responseTime}ms, ${dep.errorCount} errors)`);\n    });\n    sections.push('');\n  }\n\n  if (health.alerts.length > 0) {\n    sections.push(`**\uD83D\uDEA8 Active Alerts (${health.alerts.length}):**`);\n    health.alerts.slice(0, 5).forEach(alert => {\n      const severityEmoji: Record<string, string> = {\n        info: '\uD83D\uDCA1',\n        warning: '\u26A0\uFE0F',\n        error: '\uD83D\uDEA8',\n        critical: '\uD83D\uDD34'\n      };\n      sections.push(`\u2022 ${severityEmoji[alert.severity] || '\uD83D\uDCA1'} ${alert.message}`);\n    });\n    if (health.alerts.length > 5) {\n      sections.push(`  ... and ${health.alerts.length - 5} more alerts`);\n    }\n  }\n\n  return sections.join('\\n');\n}\n\nfunction formatAlerts(alerts: PerformanceAlert[]): string {\n  if (alerts.length === 0) {\n    return 'No alerts found.';\n  }\n\n  const sections = [];\n  sections.push(`\uD83D\uDEA8 **Performance Alerts (${alerts.length})**\\n`);\n\n  alerts.forEach((alert, index) => {\n    const severityEmoji = {\n      low: '\uD83D\uDCA1',\n      medium: '\u26A0\uFE0F',\n      high: '\uD83D\uDEA8',\n      critical: '\uD83D\uDD34'\n    };\n    \n    const status = alert.resolvedAt ? '\u2705 Resolved' : '\uD83D\uDD34 Active';\n    \n    sections.push(`**${index + 1}. ${alert.title}** ${status}`);\n    sections.push(`   Severity: ${severityEmoji[alert.severity]} ${alert.severity.toUpperCase()}`);\n    sections.push(`   Type: ${alert.type}`);\n    sections.push(`   Description: ${alert.description}`);\n    sections.push(`   Triggered: ${new Date(alert.triggeredAt).toLocaleString()}`);\n    \n    if (alert.resolvedAt) {\n      sections.push(`   Resolved: ${new Date(alert.resolvedAt).toLocaleString()}`);\n    }\n    \n    if (alert.metadata.workflowId) {\n      sections.push(`   Workflow: ${alert.metadata.workflowId}`);\n    }\n    \n    if (alert.metadata.threshold && alert.metadata.actualValue) {\n      sections.push(`   Threshold: ${alert.metadata.threshold}, Actual: ${alert.metadata.actualValue}`);\n    }\n    \n    sections.push('');\n  });\n\n  return sections.join('\\n');\n}\n\nfunction formatBytes(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n}\n\nfunction formatDuration(seconds: number): string {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  if (hours > 0) {\n    return `${hours}h ${minutes}m ${secs}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n}\n\nexport function createInstanceMonitoringTools(getClient: () => N8nClient | null, server: any) {\n  // System Resource Monitoring\n  server.addTool({\n    name: 'get-system-resources',\n    description: 'Get real-time system resource usage including CPU, memory, disk, and network statistics',\n    parameters: z.object({}),\n    annotations: {\n      title: 'System Resource Usage',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: false,\n    },\n    execute: async () => {\n      try {\n        const monitor = getResourceMonitor();\n        const systemUsage = await monitor.getSystemResourceUsage();\n        return formatSystemUsage(systemUsage);\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get system resources: ${error.message}`);\n        }\n        throw new UserError('Failed to get system resources with unknown error');\n      }\n    },\n  });\n\n  // Workflow Resource Usage\n  server.addTool({\n    name: 'get-workflow-resources',\n    description: 'Monitor per-workflow resource consumption including execution times and memory usage',\n    parameters: WorkflowMonitoringSchema,\n    annotations: {\n      title: 'Workflow Resource Monitoring',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: false,\n    },\n    execute: async (args: z.infer<typeof WorkflowMonitoringSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const monitor = getResourceMonitor();\n        const workflowUsages: WorkflowResourceUsage[] = [];\n\n        if (args.workflowId) {\n          // Get specific workflow\n          const workflow = await client.getWorkflow(args.workflowId);\n          const usage = await monitor.getWorkflowResourceUsage(\n            workflow.id,\n            workflow.name,\n            workflow.active\n          );\n          workflowUsages.push(usage);\n        } else {\n          // Get all workflows\n          const workflowsResponse = await client.getWorkflows({ limit: 50 });\n          \n          for (const workflow of workflowsResponse.data) {\n            const usage = await monitor.getWorkflowResourceUsage(\n              workflow.id,\n              workflow.name,\n              workflow.active\n            );\n            workflowUsages.push(usage);\n          }\n        }\n\n        return formatWorkflowUsage(workflowUsages);\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get workflow resources: ${error.message}`);\n        }\n        throw new UserError('Failed to get workflow resources with unknown error');\n      }\n    },\n  });\n\n  // Instance Health Check\n  server.addTool({\n    name: 'check-instance-health',\n    description: 'Comprehensive health check of the n8n instance including performance metrics and recommendations',\n    parameters: HealthCheckSchema,\n    annotations: {\n      title: 'Instance Health Check',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: false,\n    },\n    execute: async (args: z.infer<typeof HealthCheckSchema>) => {\n      try {\n        const monitor = getResourceMonitor();\n        const healthMetrics = await monitor.getInstanceHealthMetrics();\n        return formatHealthMetrics(healthMetrics);\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to check instance health: ${error.message}`);\n        }\n        throw new UserError('Failed to check instance health with unknown error');\n      }\n    },\n  });\n\n  // Performance Alerts Management\n  server.addTool({\n    name: 'get-performance-alerts',\n    description: 'Retrieve and manage performance alerts with filtering options',\n    parameters: AlertManagementSchema,\n    annotations: {\n      title: 'Performance Alerts',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: false,\n    },\n    execute: async (args: z.infer<typeof AlertManagementSchema>) => {\n      try {\n        const monitor = getResourceMonitor();\n        const alerts = monitor.getAlerts(args.severity, args.resolved);\n        const limitedAlerts = alerts.slice(0, args.limit);\n        return formatAlerts(limitedAlerts);\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to get performance alerts: ${error.message}`);\n        }\n        throw new UserError('Failed to get performance alerts with unknown error');\n      }\n    },\n  });\n\n  // Resolve Alert\n  server.addTool({\n    name: 'resolve-performance-alert',\n    description: 'Mark a performance alert as resolved',\n    parameters: z.object({\n      alertId: z.string().min(1, 'Alert ID is required'),\n    }),\n    annotations: {\n      title: 'Resolve Performance Alert',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: false,\n    },\n    execute: async (args: { alertId: string }) => {\n      try {\n        const monitor = getResourceMonitor();\n        const resolved = monitor.resolveAlert(args.alertId);\n        \n        if (resolved) {\n          return `\u2705 Alert ${args.alertId} has been marked as resolved.`;\n        } else {\n          return `\u274C Alert ${args.alertId} not found or already resolved.`;\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to resolve alert: ${error.message}`);\n        }\n        throw new UserError('Failed to resolve alert with unknown error');\n      }\n    },\n  });\n\n  // Start/Stop Monitoring\n  server.addTool({\n    name: 'control-monitoring',\n    description: 'Start or stop resource monitoring and configure monitoring settings',\n    parameters: z.object({\n      action: z.enum(['start', 'stop', 'restart', 'status']),\n      intervalMs: z.number().min(5000).max(300000).optional(), // 5 seconds to 5 minutes\n    }),\n    annotations: {\n      title: 'Control Resource Monitoring',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: false,\n    },\n    execute: async (args: { action: string; intervalMs?: number }) => {\n      try {\n        const monitor = getResourceMonitor();\n        \n        switch (args.action) {\n          case 'start':\n            await monitor.startMonitoring();\n            return '\u2705 Resource monitoring started successfully.';\n            \n          case 'stop':\n            monitor.stopMonitoring();\n            return '\u23F9\uFE0F Resource monitoring stopped.';\n            \n          case 'restart':\n            monitor.stopMonitoring();\n            if (args.intervalMs) {\n              monitor.updateConfig({\n                monitoring: { ...monitor.getConfig().monitoring, intervalMs: args.intervalMs }\n              });\n            }\n            await monitor.startMonitoring();\n            return '\uD83D\uDD04 Resource monitoring restarted successfully.';\n            \n          case 'status':\n            const config = monitor.getConfig();\n            return `\uD83D\uDCCA **Monitoring Status**\\n\\nEnabled: ${config.monitoring.enabled ? '\u2705 Yes' : '\u274C No'}\\nInterval: ${config.monitoring.intervalMs}ms\\nRetention: ${config.monitoring.retentionDays} days\\nData Points: ${monitor.getDataPoints().length}\\nActive Alerts: ${monitor.getAlerts(undefined, false).length}`;\n            \n          default:\n            throw new UserError(`Unknown action: ${args.action}`);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to control monitoring: ${error.message}`);\n        }\n        throw new UserError('Failed to control monitoring with unknown error');\n      }\n    },\n  });\n\n  // Record Workflow Execution (for tracking)\n  server.addTool({\n    name: 'record-execution-metrics',\n    description: 'Record execution metrics for a workflow (used internally for tracking)',\n    parameters: z.object({\n      workflowId: z.string().min(1, 'Workflow ID is required'),\n      duration: z.number().min(0, 'Duration must be non-negative'),\n      success: z.boolean(),\n    }),\n    annotations: {\n      title: 'Record Execution Metrics',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: false,\n    },\n    execute: async (args: { workflowId: string; duration: number; success: boolean }) => {\n      try {\n        const monitor = getResourceMonitor();\n        monitor.recordWorkflowExecution(args.workflowId, args.duration, args.success);\n        \n        return `\uD83D\uDCCA Execution metrics recorded for workflow ${args.workflowId}: ${args.duration}ms (${args.success ? 'success' : 'failure'})`;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new UserError(`Failed to record execution metrics: ${error.message}`);\n        }\n        throw new UserError('Failed to record execution metrics with unknown error');\n      }\n    },\n  });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1866b7d7316417ef95f6e989305110dcf108fc91"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y8xrsz6ie = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y8xrsz6ie();
cov_y8xrsz6ie().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_y8xrsz6ie().s[1]++;
exports.createInstanceMonitoringTools = createInstanceMonitoringTools;
const zod_1 =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[3]++, require("fastmcp"));
const resourceMonitor_js_1 =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[4]++, require("../utils/resourceMonitor.js"));
// Validation Schemas
const MonitoringPeriodSchema =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[5]++, zod_1.z.object({
  hours: zod_1.z.number().min(1).max(168).optional().default(24),
  // 1 hour to 1 week
  includeInactive: zod_1.z.boolean().optional().default(false)
}));
const WorkflowMonitoringSchema =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[6]++, zod_1.z.object({
  workflowId: zod_1.z.string().optional(),
  includeNodeMetrics: zod_1.z.boolean().optional().default(true),
  timeRange: zod_1.z.enum(['1h', '6h', '24h', '7d', '30d']).optional().default('24h')
}));
const AlertManagementSchema =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[7]++, zod_1.z.object({
  severity: zod_1.z.enum(['low', 'medium', 'high', 'critical']).optional(),
  resolved: zod_1.z.boolean().optional(),
  limit: zod_1.z.number().min(1).max(100).optional().default(50)
}));
const HealthCheckSchema =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[8]++, zod_1.z.object({
  includeRecommendations: zod_1.z.boolean().optional().default(true),
  includeAlerts: zod_1.z.boolean().optional().default(true),
  includeDependencies: zod_1.z.boolean().optional().default(true)
}));
const ReportGenerationSchema =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[9]++, zod_1.z.object({
  timeRange: zod_1.z.enum(['1h', '6h', '24h', '7d', '30d']).optional().default('24h'),
  includeWorkflows: zod_1.z.boolean().optional().default(true),
  includeRecommendations: zod_1.z.boolean().optional().default(true),
  format: zod_1.z.enum(['summary', 'detailed', 'dashboard']).optional().default('summary')
}));
// Global resource monitor instance
let resourceMonitor =
/* istanbul ignore next */
(cov_y8xrsz6ie().s[10]++, null);
function getResourceMonitor() {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[0]++;
  cov_y8xrsz6ie().s[11]++;
  if (!resourceMonitor) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[0][0]++;
    cov_y8xrsz6ie().s[12]++;
    resourceMonitor = new resourceMonitor_js_1.ResourceMonitor();
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[13]++;
    resourceMonitor.startMonitoring();
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[0][1]++;
  }
  cov_y8xrsz6ie().s[14]++;
  return resourceMonitor;
}
// Helper Functions
function formatSystemUsage(usage) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[1]++;
  const sections =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[15]++, []);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[16]++;
  sections.push(`🖥️ **System Resource Usage**\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[17]++;
  sections.push(`**Timestamp:** ${new Date(usage.timestamp).toLocaleString()}\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[18]++;
  sections.push(`**💻 CPU:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[19]++;
  sections.push(`• Total Usage: ${usage.cpu.totalUsage.toFixed(1)}%`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[20]++;
  sections.push(`• Process Usage: ${usage.cpu.processUsage.toFixed(1)}%`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[21]++;
  sections.push(`• Load Average: ${usage.cpu.loadAverage.map(l => {
    /* istanbul ignore next */
    cov_y8xrsz6ie().f[2]++;
    cov_y8xrsz6ie().s[22]++;
    return l.toFixed(2);
  }).join(', ')}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[23]++;
  sections.push(`• Cores: ${usage.cpu.coreCount}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[24]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[25]++;
  sections.push(`**🧠 Memory:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[26]++;
  sections.push(`• Total: ${formatBytes(usage.memory.totalMemory)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[27]++;
  sections.push(`• Used: ${formatBytes(usage.memory.usedMemory)} (${usage.memory.utilization.toFixed(1)}%)`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[28]++;
  sections.push(`• Free: ${formatBytes(usage.memory.freeMemory)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[29]++;
  sections.push(`• Process Heap: ${formatBytes(usage.memory.processMemory.heapUsed)} / ${formatBytes(usage.memory.processMemory.heapTotal)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[30]++;
  sections.push(`• Process RSS: ${formatBytes(usage.memory.processMemory.rss)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[31]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[32]++;
  sections.push(`**💾 Disk:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[33]++;
  sections.push(`• Total: ${formatBytes(usage.disk.totalSpace)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[34]++;
  sections.push(`• Used: ${formatBytes(usage.disk.usedSpace)} (${usage.disk.utilization.toFixed(1)}%)`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[35]++;
  sections.push(`• Free: ${formatBytes(usage.disk.freeSpace)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[36]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[37]++;
  sections.push(`**🌐 Network:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[38]++;
  sections.push(`• Bytes Received: ${formatBytes(usage.network.bytesReceived)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[39]++;
  sections.push(`• Bytes Sent: ${formatBytes(usage.network.bytesSent)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[40]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[41]++;
  sections.push(`**⏱️ Uptime:** ${formatDuration(usage.uptime)}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[42]++;
  return sections.join('\n');
}
function formatWorkflowUsage(usage) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[3]++;
  cov_y8xrsz6ie().s[43]++;
  if (usage.length === 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[1][0]++;
    cov_y8xrsz6ie().s[44]++;
    return 'No workflow usage data available.';
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[1][1]++;
  }
  const sections =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[45]++, []);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[46]++;
  sections.push(`📊 **Workflow Resource Usage (${usage.length} workflows)**\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[47]++;
  usage.forEach((workflow, index) => {
    /* istanbul ignore next */
    cov_y8xrsz6ie().f[4]++;
    const status =
    /* istanbul ignore next */
    (cov_y8xrsz6ie().s[48]++, workflow.isActive ?
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[2][0]++, '✅ Active') :
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[2][1]++, '⏸️ Inactive'));
    const successRate =
    /* istanbul ignore next */
    (cov_y8xrsz6ie().s[49]++, workflow.executionStats.successRate.toFixed(1));
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[50]++;
    sections.push(`**${index + 1}. ${workflow.workflowName}** ${status}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[51]++;
    sections.push(`   ID: ${workflow.workflowId}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[52]++;
    sections.push(`   Executions: ${workflow.executionCount} (${successRate}% success rate)`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[53]++;
    sections.push(`   Avg Execution Time: ${formatDuration(workflow.resourceMetrics.averageExecutionTime / 1000)}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[54]++;
    sections.push(`   Memory Usage: Avg ${formatBytes(workflow.resourceMetrics.memoryUsage.average)}, Peak ${formatBytes(workflow.resourceMetrics.memoryUsage.peak)}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[55]++;
    sections.push(`   CPU Usage: Avg ${workflow.resourceMetrics.cpuUsage.average}%, Peak ${workflow.resourceMetrics.cpuUsage.peak}%`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[56]++;
    sections.push(`   Runs/Hour: ${workflow.executionStats.averageRunsPerHour.toFixed(1)}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[57]++;
    sections.push('');
  });
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[58]++;
  return sections.join('\n');
}
function formatHealthMetrics(health) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[5]++;
  const sections =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[59]++, []);
  const statusEmoji =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[60]++, {
    healthy: '✅',
    warning: '⚠️',
    degraded: '🟡',
    critical: '🚨'
  });
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[61]++;
  sections.push(`🏥 **Instance Health Report**\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[62]++;
  sections.push(`**Overall Status:** ${statusEmoji[health.overall.status]} ${health.overall.status.toUpperCase()}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[63]++;
  sections.push(`**Health Score:** ${health.overall.score}/100\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[64]++;
  if (health.overall.issues.length > 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[3][0]++;
    cov_y8xrsz6ie().s[65]++;
    sections.push(`**🚨 Issues:**`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[66]++;
    health.overall.issues.forEach((issue, i) => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[6]++;
      cov_y8xrsz6ie().s[67]++;
      sections.push(`${i + 1}. ${issue}`);
    });
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[68]++;
    sections.push('');
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[3][1]++;
  }
  cov_y8xrsz6ie().s[69]++;
  if (health.overall.recommendations.length > 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[4][0]++;
    cov_y8xrsz6ie().s[70]++;
    sections.push(`**💡 Recommendations:**`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[71]++;
    health.overall.recommendations.forEach((rec, i) => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[7]++;
      cov_y8xrsz6ie().s[72]++;
      sections.push(`${i + 1}. ${rec}`);
    });
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[73]++;
    sections.push('');
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[4][1]++;
  }
  cov_y8xrsz6ie().s[74]++;
  sections.push(`**📈 Performance Metrics:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[75]++;
  sections.push(`• API Response Time: ${health.performance.responseTime}ms`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[76]++;
  sections.push(`• Throughput: ${health.performance.throughput} executions/min`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[77]++;
  sections.push(`• Error Rate: ${health.performance.errorRate}%`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[78]++;
  sections.push(`• Uptime: ${health.performance.availabilityUptime}%`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[79]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[80]++;
  sections.push(`**🔧 Resource Status:**`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[81]++;
  sections.push(`• Memory Pressure: ${health.resources.memoryPressure ?
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[5][0]++, '⚠️ Yes') :
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[5][1]++, '✅ No')}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[82]++;
  sections.push(`• CPU Throttling: ${health.resources.cpuThrottling ?
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[6][0]++, '⚠️ Yes') :
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[6][1]++, '✅ No')}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[83]++;
  sections.push(`• Disk Space Warning: ${health.resources.diskSpaceWarning ?
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[7][0]++, '⚠️ Yes') :
  /* istanbul ignore next */
  (cov_y8xrsz6ie().b[7][1]++, '✅ No')}`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[84]++;
  sections.push(`• Network Latency: ${health.resources.networkLatency}ms`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[85]++;
  sections.push('');
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[86]++;
  if (health.dependencies.length > 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[8][0]++;
    cov_y8xrsz6ie().s[87]++;
    sections.push(`**🔗 Dependencies:**`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[88]++;
    health.dependencies.forEach(dep => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[8]++;
      const statusEmoji =
      /* istanbul ignore next */
      (cov_y8xrsz6ie().s[89]++, dep.status === 'online' ?
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[9][0]++, '✅') :
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[9][1]++, dep.status === 'degraded' ?
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[10][0]++, '⚠️') :
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[10][1]++, '❌')));
      /* istanbul ignore next */
      cov_y8xrsz6ie().s[90]++;
      sections.push(`• ${dep.name}: ${statusEmoji} ${dep.status} (${dep.responseTime}ms, ${dep.errorCount} errors)`);
    });
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[91]++;
    sections.push('');
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[8][1]++;
  }
  cov_y8xrsz6ie().s[92]++;
  if (health.alerts.length > 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[11][0]++;
    cov_y8xrsz6ie().s[93]++;
    sections.push(`**🚨 Active Alerts (${health.alerts.length}):**`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[94]++;
    health.alerts.slice(0, 5).forEach(alert => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[9]++;
      const severityEmoji =
      /* istanbul ignore next */
      (cov_y8xrsz6ie().s[95]++, {
        info: '💡',
        warning: '⚠️',
        error: '🚨',
        critical: '🔴'
      });
      /* istanbul ignore next */
      cov_y8xrsz6ie().s[96]++;
      sections.push(`• ${
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[12][0]++, severityEmoji[alert.severity]) ||
      /* istanbul ignore next */
      (cov_y8xrsz6ie().b[12][1]++, '💡')} ${alert.message}`);
    });
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[97]++;
    if (health.alerts.length > 5) {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[13][0]++;
      cov_y8xrsz6ie().s[98]++;
      sections.push(`  ... and ${health.alerts.length - 5} more alerts`);
    } else
    /* istanbul ignore next */
    {
      cov_y8xrsz6ie().b[13][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[11][1]++;
  }
  cov_y8xrsz6ie().s[99]++;
  return sections.join('\n');
}
function formatAlerts(alerts) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[10]++;
  cov_y8xrsz6ie().s[100]++;
  if (alerts.length === 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[14][0]++;
    cov_y8xrsz6ie().s[101]++;
    return 'No alerts found.';
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[14][1]++;
  }
  const sections =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[102]++, []);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[103]++;
  sections.push(`🚨 **Performance Alerts (${alerts.length})**\n`);
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[104]++;
  alerts.forEach((alert, index) => {
    /* istanbul ignore next */
    cov_y8xrsz6ie().f[11]++;
    const severityEmoji =
    /* istanbul ignore next */
    (cov_y8xrsz6ie().s[105]++, {
      low: '💡',
      medium: '⚠️',
      high: '🚨',
      critical: '🔴'
    });
    const status =
    /* istanbul ignore next */
    (cov_y8xrsz6ie().s[106]++, alert.resolvedAt ?
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[15][0]++, '✅ Resolved') :
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[15][1]++, '🔴 Active'));
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[107]++;
    sections.push(`**${index + 1}. ${alert.title}** ${status}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[108]++;
    sections.push(`   Severity: ${severityEmoji[alert.severity]} ${alert.severity.toUpperCase()}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[109]++;
    sections.push(`   Type: ${alert.type}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[110]++;
    sections.push(`   Description: ${alert.description}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[111]++;
    sections.push(`   Triggered: ${new Date(alert.triggeredAt).toLocaleString()}`);
    /* istanbul ignore next */
    cov_y8xrsz6ie().s[112]++;
    if (alert.resolvedAt) {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[16][0]++;
      cov_y8xrsz6ie().s[113]++;
      sections.push(`   Resolved: ${new Date(alert.resolvedAt).toLocaleString()}`);
    } else
    /* istanbul ignore next */
    {
      cov_y8xrsz6ie().b[16][1]++;
    }
    cov_y8xrsz6ie().s[114]++;
    if (alert.metadata.workflowId) {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[17][0]++;
      cov_y8xrsz6ie().s[115]++;
      sections.push(`   Workflow: ${alert.metadata.workflowId}`);
    } else
    /* istanbul ignore next */
    {
      cov_y8xrsz6ie().b[17][1]++;
    }
    cov_y8xrsz6ie().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[19][0]++, alert.metadata.threshold) &&
    /* istanbul ignore next */
    (cov_y8xrsz6ie().b[19][1]++, alert.metadata.actualValue)) {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[18][0]++;
      cov_y8xrsz6ie().s[117]++;
      sections.push(`   Threshold: ${alert.metadata.threshold}, Actual: ${alert.metadata.actualValue}`);
    } else
    /* istanbul ignore next */
    {
      cov_y8xrsz6ie().b[18][1]++;
    }
    cov_y8xrsz6ie().s[118]++;
    sections.push('');
  });
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[119]++;
  return sections.join('\n');
}
function formatBytes(bytes) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[12]++;
  cov_y8xrsz6ie().s[120]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[20][0]++;
    cov_y8xrsz6ie().s[121]++;
    return '0 B';
  } else
  /* istanbul ignore next */
  {
    cov_y8xrsz6ie().b[20][1]++;
  }
  const k =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[122]++, 1024);
  const sizes =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[123]++, ['B', 'KB', 'MB', 'GB', 'TB']);
  const i =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[124]++, Math.floor(Math.log(bytes) / Math.log(k)));
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[125]++;
  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;
}
function formatDuration(seconds) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[13]++;
  const hours =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[126]++, Math.floor(seconds / 3600));
  const minutes =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[127]++, Math.floor(seconds % 3600 / 60));
  const secs =
  /* istanbul ignore next */
  (cov_y8xrsz6ie().s[128]++, Math.floor(seconds % 60));
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[129]++;
  if (hours > 0) {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[21][0]++;
    cov_y8xrsz6ie().s[130]++;
    return `${hours}h ${minutes}m ${secs}s`;
  } else {
    /* istanbul ignore next */
    cov_y8xrsz6ie().b[21][1]++;
    cov_y8xrsz6ie().s[131]++;
    if (minutes > 0) {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[22][0]++;
      cov_y8xrsz6ie().s[132]++;
      return `${minutes}m ${secs}s`;
    } else {
      /* istanbul ignore next */
      cov_y8xrsz6ie().b[22][1]++;
      cov_y8xrsz6ie().s[133]++;
      return `${secs}s`;
    }
  }
}
function createInstanceMonitoringTools(getClient, server) {
  /* istanbul ignore next */
  cov_y8xrsz6ie().f[14]++;
  cov_y8xrsz6ie().s[134]++;
  // System Resource Monitoring
  server.addTool({
    name: 'get-system-resources',
    description: 'Get real-time system resource usage including CPU, memory, disk, and network statistics',
    parameters: zod_1.z.object({}),
    annotations: {
      title: 'System Resource Usage',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: false
    },
    execute: async () => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[15]++;
      cov_y8xrsz6ie().s[135]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[136]++, getResourceMonitor());
        const systemUsage =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[137]++, await monitor.getSystemResourceUsage());
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[138]++;
        return formatSystemUsage(systemUsage);
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[139]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[23][0]++;
          cov_y8xrsz6ie().s[140]++;
          throw new fastmcp_1.UserError(`Failed to get system resources: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[23][1]++;
        }
        cov_y8xrsz6ie().s[141]++;
        throw new fastmcp_1.UserError('Failed to get system resources with unknown error');
      }
    }
  });
  // Workflow Resource Usage
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[142]++;
  server.addTool({
    name: 'get-workflow-resources',
    description: 'Monitor per-workflow resource consumption including execution times and memory usage',
    parameters: WorkflowMonitoringSchema,
    annotations: {
      title: 'Workflow Resource Monitoring',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[16]++;
      const client =
      /* istanbul ignore next */
      (cov_y8xrsz6ie().s[143]++, getClient());
      /* istanbul ignore next */
      cov_y8xrsz6ie().s[144]++;
      if (!client) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().b[24][0]++;
        cov_y8xrsz6ie().s[145]++;
        throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
      } else
      /* istanbul ignore next */
      {
        cov_y8xrsz6ie().b[24][1]++;
      }
      cov_y8xrsz6ie().s[146]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[147]++, getResourceMonitor());
        const workflowUsages =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[148]++, []);
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[149]++;
        if (args.workflowId) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[25][0]++;
          // Get specific workflow
          const workflow =
          /* istanbul ignore next */
          (cov_y8xrsz6ie().s[150]++, await client.getWorkflow(args.workflowId));
          const usage =
          /* istanbul ignore next */
          (cov_y8xrsz6ie().s[151]++, await monitor.getWorkflowResourceUsage(workflow.id, workflow.name, workflow.active));
          /* istanbul ignore next */
          cov_y8xrsz6ie().s[152]++;
          workflowUsages.push(usage);
        } else {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[25][1]++;
          // Get all workflows
          const workflowsResponse =
          /* istanbul ignore next */
          (cov_y8xrsz6ie().s[153]++, await client.getWorkflows({
            limit: 50
          }));
          /* istanbul ignore next */
          cov_y8xrsz6ie().s[154]++;
          for (const workflow of workflowsResponse.data) {
            const usage =
            /* istanbul ignore next */
            (cov_y8xrsz6ie().s[155]++, await monitor.getWorkflowResourceUsage(workflow.id, workflow.name, workflow.active));
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[156]++;
            workflowUsages.push(usage);
          }
        }
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[157]++;
        return formatWorkflowUsage(workflowUsages);
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[158]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[26][0]++;
          cov_y8xrsz6ie().s[159]++;
          throw new fastmcp_1.UserError(`Failed to get workflow resources: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[26][1]++;
        }
        cov_y8xrsz6ie().s[160]++;
        throw new fastmcp_1.UserError('Failed to get workflow resources with unknown error');
      }
    }
  });
  // Instance Health Check
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[161]++;
  server.addTool({
    name: 'check-instance-health',
    description: 'Comprehensive health check of the n8n instance including performance metrics and recommendations',
    parameters: HealthCheckSchema,
    annotations: {
      title: 'Instance Health Check',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[17]++;
      cov_y8xrsz6ie().s[162]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[163]++, getResourceMonitor());
        const healthMetrics =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[164]++, await monitor.getInstanceHealthMetrics());
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[165]++;
        return formatHealthMetrics(healthMetrics);
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[166]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[27][0]++;
          cov_y8xrsz6ie().s[167]++;
          throw new fastmcp_1.UserError(`Failed to check instance health: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[27][1]++;
        }
        cov_y8xrsz6ie().s[168]++;
        throw new fastmcp_1.UserError('Failed to check instance health with unknown error');
      }
    }
  });
  // Performance Alerts Management
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[169]++;
  server.addTool({
    name: 'get-performance-alerts',
    description: 'Retrieve and manage performance alerts with filtering options',
    parameters: AlertManagementSchema,
    annotations: {
      title: 'Performance Alerts',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[18]++;
      cov_y8xrsz6ie().s[170]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[171]++, getResourceMonitor());
        const alerts =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[172]++, monitor.getAlerts(args.severity, args.resolved));
        const limitedAlerts =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[173]++, alerts.slice(0, args.limit));
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[174]++;
        return formatAlerts(limitedAlerts);
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[175]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[28][0]++;
          cov_y8xrsz6ie().s[176]++;
          throw new fastmcp_1.UserError(`Failed to get performance alerts: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[28][1]++;
        }
        cov_y8xrsz6ie().s[177]++;
        throw new fastmcp_1.UserError('Failed to get performance alerts with unknown error');
      }
    }
  });
  // Resolve Alert
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[178]++;
  server.addTool({
    name: 'resolve-performance-alert',
    description: 'Mark a performance alert as resolved',
    parameters: zod_1.z.object({
      alertId: zod_1.z.string().min(1, 'Alert ID is required')
    }),
    annotations: {
      title: 'Resolve Performance Alert',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[19]++;
      cov_y8xrsz6ie().s[179]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[180]++, getResourceMonitor());
        const resolved =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[181]++, monitor.resolveAlert(args.alertId));
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[182]++;
        if (resolved) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[29][0]++;
          cov_y8xrsz6ie().s[183]++;
          return `✅ Alert ${args.alertId} has been marked as resolved.`;
        } else {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[29][1]++;
          cov_y8xrsz6ie().s[184]++;
          return `❌ Alert ${args.alertId} not found or already resolved.`;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[185]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[30][0]++;
          cov_y8xrsz6ie().s[186]++;
          throw new fastmcp_1.UserError(`Failed to resolve alert: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[30][1]++;
        }
        cov_y8xrsz6ie().s[187]++;
        throw new fastmcp_1.UserError('Failed to resolve alert with unknown error');
      }
    }
  });
  // Start/Stop Monitoring
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[188]++;
  server.addTool({
    name: 'control-monitoring',
    description: 'Start or stop resource monitoring and configure monitoring settings',
    parameters: zod_1.z.object({
      action: zod_1.z.enum(['start', 'stop', 'restart', 'status']),
      intervalMs: zod_1.z.number().min(5000).max(300000).optional() // 5 seconds to 5 minutes
    }),
    annotations: {
      title: 'Control Resource Monitoring',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[20]++;
      cov_y8xrsz6ie().s[189]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[190]++, getResourceMonitor());
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[191]++;
        switch (args.action) {
          case 'start':
            /* istanbul ignore next */
            cov_y8xrsz6ie().b[31][0]++;
            cov_y8xrsz6ie().s[192]++;
            await monitor.startMonitoring();
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[193]++;
            return '✅ Resource monitoring started successfully.';
          case 'stop':
            /* istanbul ignore next */
            cov_y8xrsz6ie().b[31][1]++;
            cov_y8xrsz6ie().s[194]++;
            monitor.stopMonitoring();
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[195]++;
            return '⏹️ Resource monitoring stopped.';
          case 'restart':
            /* istanbul ignore next */
            cov_y8xrsz6ie().b[31][2]++;
            cov_y8xrsz6ie().s[196]++;
            monitor.stopMonitoring();
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[197]++;
            if (args.intervalMs) {
              /* istanbul ignore next */
              cov_y8xrsz6ie().b[32][0]++;
              cov_y8xrsz6ie().s[198]++;
              monitor.updateConfig({
                monitoring: {
                  ...monitor.getConfig().monitoring,
                  intervalMs: args.intervalMs
                }
              });
            } else
            /* istanbul ignore next */
            {
              cov_y8xrsz6ie().b[32][1]++;
            }
            cov_y8xrsz6ie().s[199]++;
            await monitor.startMonitoring();
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[200]++;
            return '🔄 Resource monitoring restarted successfully.';
          case 'status':
            /* istanbul ignore next */
            cov_y8xrsz6ie().b[31][3]++;
            const config =
            /* istanbul ignore next */
            (cov_y8xrsz6ie().s[201]++, monitor.getConfig());
            /* istanbul ignore next */
            cov_y8xrsz6ie().s[202]++;
            return `📊 **Monitoring Status**\n\nEnabled: ${config.monitoring.enabled ?
            /* istanbul ignore next */
            (cov_y8xrsz6ie().b[33][0]++, '✅ Yes') :
            /* istanbul ignore next */
            (cov_y8xrsz6ie().b[33][1]++, '❌ No')}\nInterval: ${config.monitoring.intervalMs}ms\nRetention: ${config.monitoring.retentionDays} days\nData Points: ${monitor.getDataPoints().length}\nActive Alerts: ${monitor.getAlerts(undefined, false).length}`;
          default:
            /* istanbul ignore next */
            cov_y8xrsz6ie().b[31][4]++;
            cov_y8xrsz6ie().s[203]++;
            throw new fastmcp_1.UserError(`Unknown action: ${args.action}`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[204]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[34][0]++;
          cov_y8xrsz6ie().s[205]++;
          throw new fastmcp_1.UserError(`Failed to control monitoring: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[34][1]++;
        }
        cov_y8xrsz6ie().s[206]++;
        throw new fastmcp_1.UserError('Failed to control monitoring with unknown error');
      }
    }
  });
  // Record Workflow Execution (for tracking)
  /* istanbul ignore next */
  cov_y8xrsz6ie().s[207]++;
  server.addTool({
    name: 'record-execution-metrics',
    description: 'Record execution metrics for a workflow (used internally for tracking)',
    parameters: zod_1.z.object({
      workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
      duration: zod_1.z.number().min(0, 'Duration must be non-negative'),
      success: zod_1.z.boolean()
    }),
    annotations: {
      title: 'Record Execution Metrics',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: false
    },
    execute: async args => {
      /* istanbul ignore next */
      cov_y8xrsz6ie().f[21]++;
      cov_y8xrsz6ie().s[208]++;
      try {
        const monitor =
        /* istanbul ignore next */
        (cov_y8xrsz6ie().s[209]++, getResourceMonitor());
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[210]++;
        monitor.recordWorkflowExecution(args.workflowId, args.duration, args.success);
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[211]++;
        return `📊 Execution metrics recorded for workflow ${args.workflowId}: ${args.duration}ms (${args.success ?
        /* istanbul ignore next */
        (cov_y8xrsz6ie().b[35][0]++, 'success') :
        /* istanbul ignore next */
        (cov_y8xrsz6ie().b[35][1]++, 'failure')})`;
      } catch (error) {
        /* istanbul ignore next */
        cov_y8xrsz6ie().s[212]++;
        if (error instanceof Error) {
          /* istanbul ignore next */
          cov_y8xrsz6ie().b[36][0]++;
          cov_y8xrsz6ie().s[213]++;
          throw new fastmcp_1.UserError(`Failed to record execution metrics: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_y8xrsz6ie().b[36][1]++;
        }
        cov_y8xrsz6ie().s[214]++;
        throw new fastmcp_1.UserError('Failed to record execution metrics with unknown error');
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,