5c17c70bdaa7b9ec672630dab5132518
"use strict";

/* istanbul ignore next */
function cov_2aeycc88c9() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts";
  var hash = "7e0265963d0d6f60ab5bed1b25996c9c3edbab22";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 8,
          column: 32
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "6": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "7": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "8": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "9": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 53,
          column: 2
        }
      },
      "10": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 58,
          column: 2
        }
      },
      "11": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 60,
          column: 22
        }
      },
      "12": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "13": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "14": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "15": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "16": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 70
        }
      },
      "17": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 93
        }
      },
      "18": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 69
        }
      },
      "19": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 71
        }
      },
      "21": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 81
        }
      },
      "22": {
        start: {
          line: 81,
          column: 42
        },
        end: {
          line: 81,
          column: 79
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 87
        }
      },
      "24": {
        start: {
          line: 82,
          column: 45
        },
        end: {
          line: 82,
          column: 85
        }
      },
      "25": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 88
        }
      },
      "26": {
        start: {
          line: 83,
          column: 43
        },
        end: {
          line: 83,
          column: 86
        }
      },
      "27": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "28": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 68
        }
      },
      "29": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 23
        }
      },
      "30": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 113,
          column: 1
        }
      },
      "31": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "32": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "33": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "34": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "35": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "36": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "37": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 131,
          column: 1
        }
      },
      "38": {
        start: {
          line: 115,
          column: 17
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "39": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 62
        }
      },
      "40": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "41": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 73
        }
      },
      "42": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "43": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 51
        }
      },
      "44": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "45": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 88
        }
      },
      "46": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 74
        }
      },
      "48": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "49": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 73
        }
      },
      "50": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 18
        }
      },
      "51": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 168,
          column: 7
        }
      },
      "52": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "53": {
        start: {
          line: 141,
          column: 31
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "54": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 56
        }
      },
      "55": {
        start: {
          line: 145,
          column: 39
        },
        end: {
          line: 145,
          column: 95
        }
      },
      "56": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 146,
          column: 83
        }
      },
      "57": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 71
        }
      },
      "58": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 79
        }
      },
      "59": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "60": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 82
        }
      },
      "61": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "62": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 90
        }
      },
      "63": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 106
        }
      },
      "64": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "65": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 92
        }
      },
      "66": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 32
        }
      },
      "67": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "68": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 32
        }
      },
      "69": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 140
        }
      },
      "70": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "71": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "72": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 176,
          column: 56
        }
      },
      "73": {
        start: {
          line: 177,
          column: 32
        },
        end: {
          line: 177,
          column: 71
        }
      },
      "74": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "75": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 137
        }
      },
      "76": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 126
        }
      },
      "77": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "78": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 32
        }
      },
      "79": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 132
        }
      },
      "80": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 218,
          column: 7
        }
      },
      "81": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "82": {
        start: {
          line: 200,
          column: 31
        },
        end: {
          line: 200,
          column: 56
        }
      },
      "83": {
        start: {
          line: 201,
          column: 38
        },
        end: {
          line: 201,
          column: 63
        }
      },
      "84": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "85": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 131
        }
      },
      "86": {
        start: {
          line: 205,
          column: 31
        },
        end: {
          line: 205,
          column: 96
        }
      },
      "87": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "88": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 77
        }
      },
      "89": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 32
        }
      },
      "90": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 214,
          column: 17
        }
      },
      "91": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 32
        }
      },
      "92": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 139
        }
      },
      "93": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "94": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "95": {
        start: {
          line: 226,
          column: 31
        },
        end: {
          line: 226,
          column: 56
        }
      },
      "96": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "97": {
        start: {
          line: 235,
          column: 31
        },
        end: {
          line: 235,
          column: 78
        }
      },
      "98": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 66
        }
      },
      "99": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 238,
          column: 72
        }
      },
      "100": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 72
        }
      },
      "101": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 240,
          column: 74
        }
      },
      "102": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 74
        }
      },
      "103": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 242,
          column: 64
        }
      },
      "104": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 64
        }
      },
      "105": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 80
        }
      },
      "106": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "107": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 92
        }
      },
      "108": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 116
        }
      },
      "109": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 32
        }
      },
      "110": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "111": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 32
        }
      },
      "112": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 131
        }
      },
      "113": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "114": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "115": {
        start: {
          line: 265,
          column: 31
        },
        end: {
          line: 265,
          column: 56
        }
      },
      "116": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "117": {
        start: {
          line: 276,
          column: 31
        },
        end: {
          line: 276,
          column: 81
        }
      },
      "118": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 55
        }
      },
      "119": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 63
        }
      },
      "120": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 59
        }
      },
      "121": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 281,
          column: 61
        }
      },
      "122": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 61
        }
      },
      "123": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 283,
          column: 61
        }
      },
      "124": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 61
        }
      },
      "125": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 285,
          column: 70
        }
      },
      "126": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 70
        }
      },
      "127": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "128": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "129": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 290,
          column: 17
        }
      },
      "130": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 289,
          column: 96
        }
      },
      "131": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 117
        }
      },
      "132": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 32
        }
      },
      "133": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "134": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 32
        }
      },
      "135": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 142
        }
      },
      "136": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 338,
          column: 7
        }
      },
      "137": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "138": {
        start: {
          line: 309,
          column: 31
        },
        end: {
          line: 309,
          column: 56
        }
      },
      "139": {
        start: {
          line: 310,
          column: 30
        },
        end: {
          line: 310,
          column: 61
        }
      },
      "140": {
        start: {
          line: 311,
          column: 31
        },
        end: {
          line: 311,
          column: 71
        }
      },
      "141": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 81
        }
      },
      "142": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 90
        }
      },
      "143": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 83
        }
      },
      "144": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 79
        }
      },
      "145": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 111
        }
      },
      "146": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 71
        }
      },
      "147": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 54
        }
      },
      "148": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 75
        }
      },
      "149": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 81
        }
      },
      "150": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 77
        }
      },
      "151": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 328,
          column: 17
        }
      },
      "152": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 60
        }
      },
      "153": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 327,
          column: 23
        }
      },
      "154": {
        start: {
          line: 325,
          column: 40
        },
        end: {
          line: 325,
          column: 117
        }
      },
      "155": {
        start: {
          line: 326,
          column: 24
        },
        end: {
          line: 326,
          column: 120
        }
      },
      "156": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 329,
          column: 32
        }
      },
      "157": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 334,
          column: 17
        }
      },
      "158": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 32
        }
      },
      "159": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 140
        }
      },
      "160": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "161": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 389,
          column: 13
        }
      },
      "162": {
        start: {
          line: 346,
          column: 31
        },
        end: {
          line: 346,
          column: 56
        }
      },
      "163": {
        start: {
          line: 347,
          column: 32
        },
        end: {
          line: 352,
          column: 17
        }
      },
      "164": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 363,
          column: 17
        }
      },
      "165": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 362,
          column: 22
        }
      },
      "166": {
        start: {
          line: 364,
          column: 31
        },
        end: {
          line: 364,
          column: 64
        }
      },
      "167": {
        start: {
          line: 365,
          column: 31
        },
        end: {
          line: 365,
          column: 64
        }
      },
      "168": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 53
        }
      },
      "169": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 59
        }
      },
      "170": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 82
        }
      },
      "171": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 76
        }
      },
      "172": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 381,
          column: 17
        }
      },
      "173": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 63
        }
      },
      "174": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 67
        }
      },
      "175": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 75
        }
      },
      "176": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 374,
          column: 83
        }
      },
      "177": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 87
        }
      },
      "178": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 376,
          column: 79
        }
      },
      "179": {
        start: {
          line: 379,
          column: 20
        },
        end: {
          line: 379,
          column: 74
        }
      },
      "180": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 380,
          column: 107
        }
      },
      "181": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 32
        }
      },
      "182": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 387,
          column: 17
        }
      },
      "183": {
        start: {
          line: 386,
          column: 20
        },
        end: {
          line: 386,
          column: 32
        }
      },
      "184": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 133
        }
      },
      "185": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 438,
          column: 7
        }
      },
      "186": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "187": {
        start: {
          line: 399,
          column: 31
        },
        end: {
          line: 399,
          column: 56
        }
      },
      "188": {
        start: {
          line: 400,
          column: 29
        },
        end: {
          line: 400,
          column: 52
        }
      },
      "189": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 404,
          column: 17
        }
      },
      "190": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 75
        }
      },
      "191": {
        start: {
          line: 403,
          column: 48
        },
        end: {
          line: 403,
          column: 73
        }
      },
      "192": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 408,
          column: 17
        }
      },
      "193": {
        start: {
          line: 406,
          column: 38
        },
        end: {
          line: 406,
          column: 58
        }
      },
      "194": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 407,
          column: 84
        }
      },
      "195": {
        start: {
          line: 407,
          column: 48
        },
        end: {
          line: 407,
          column: 82
        }
      },
      "196": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 51
        }
      },
      "197": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 413,
          column: 17
        }
      },
      "198": {
        start: {
          line: 412,
          column: 20
        },
        end: {
          line: 412,
          column: 108
        }
      },
      "199": {
        start: {
          line: 414,
          column: 31
        },
        end: {
          line: 414,
          column: 82
        }
      },
      "200": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 428,
          column: 19
        }
      },
      "201": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 82
        }
      },
      "202": {
        start: {
          line: 417,
          column: 20
        },
        end: {
          line: 417,
          column: 98
        }
      },
      "203": {
        start: {
          line: 418,
          column: 20
        },
        end: {
          line: 419,
          column: 75
        }
      },
      "204": {
        start: {
          line: 419,
          column: 24
        },
        end: {
          line: 419,
          column: 75
        }
      },
      "205": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 421,
          column: 77
        }
      },
      "206": {
        start: {
          line: 421,
          column: 24
        },
        end: {
          line: 421,
          column: 77
        }
      },
      "207": {
        start: {
          line: 422,
          column: 20
        },
        end: {
          line: 423,
          column: 67
        }
      },
      "208": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 67
        }
      },
      "209": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "210": {
        start: {
          line: 425,
          column: 24
        },
        end: {
          line: 425,
          column: 81
        }
      },
      "211": {
        start: {
          line: 427,
          column: 20
        },
        end: {
          line: 427,
          column: 37
        }
      },
      "212": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 429,
          column: 32
        }
      },
      "213": {
        start: {
          line: 432,
          column: 16
        },
        end: {
          line: 434,
          column: 17
        }
      },
      "214": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 433,
          column: 32
        }
      },
      "215": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 137
        }
      },
      "216": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "217": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 461,
          column: 13
        }
      },
      "218": {
        start: {
          line: 446,
          column: 31
        },
        end: {
          line: 446,
          column: 56
        }
      },
      "219": {
        start: {
          line: 447,
          column: 35
        },
        end: {
          line: 447,
          column: 65
        }
      },
      "220": {
        start: {
          line: 448,
          column: 39
        },
        end: {
          line: 448,
          column: 73
        }
      },
      "221": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 38
        }
      },
      "222": {
        start: {
          line: 450,
          column: 31
        },
        end: {
          line: 450,
          column: 79
        }
      },
      "223": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 66
        }
      },
      "224": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 80
        }
      },
      "225": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 113
        }
      },
      "226": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 32
        }
      },
      "227": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 459,
          column: 17
        }
      },
      "228": {
        start: {
          line: 458,
          column: 20
        },
        end: {
          line: 458,
          column: 32
        }
      },
      "229": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 140
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 24
          }
        },
        loc: {
          start: {
            line: 62,
            column: 38
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 62
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 81,
            column: 37
          }
        },
        loc: {
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 81,
            column: 79
          }
        },
        line: 81
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 40
          }
        },
        loc: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 82,
            column: 85
          }
        },
        line: 82
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 33
          }
        },
        loc: {
          start: {
            line: 83,
            column: 43
          },
          end: {
            line: 83,
            column: 86
          }
        },
        line: 83
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 37
          }
        },
        loc: {
          start: {
            line: 85,
            column: 45
          },
          end: {
            line: 87,
            column: 9
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 92,
            column: 28
          }
        },
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 92
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 114,
            column: 27
          },
          end: {
            line: 114,
            column: 28
          }
        },
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 114
      },
      "7": {
        name: "createEventStreamingTools",
        decl: {
          start: {
            line: 133,
            column: 9
          },
          end: {
            line: 133,
            column: 34
          }
        },
        loc: {
          start: {
            line: 133,
            column: 54
          },
          end: {
            line: 464,
            column: 1
          }
        },
        line: 133
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 139,
            column: 18
          }
        },
        loc: {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 167,
            column: 9
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 174,
            column: 17
          },
          end: {
            line: 174,
            column: 18
          }
        },
        loc: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 174
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 198,
            column: 17
          },
          end: {
            line: 198,
            column: 18
          }
        },
        loc: {
          start: {
            line: 198,
            column: 29
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 198
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 206,
            column: 38
          },
          end: {
            line: 206,
            column: 39
          }
        },
        loc: {
          start: {
            line: 206,
            column: 54
          },
          end: {
            line: 208,
            column: 17
          }
        },
        line: 206
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 224,
            column: 17
          },
          end: {
            line: 224,
            column: 18
          }
        },
        loc: {
          start: {
            line: 224,
            column: 33
          },
          end: {
            line: 256,
            column: 9
          }
        },
        line: 224
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 263,
            column: 17
          },
          end: {
            line: 263,
            column: 18
          }
        },
        loc: {
          start: {
            line: 263,
            column: 33
          },
          end: {
            line: 300,
            column: 9
          }
        },
        line: 263
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 307,
            column: 18
          }
        },
        loc: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 337,
            column: 9
          }
        },
        line: 307
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 324,
            column: 59
          },
          end: {
            line: 324,
            column: 60
          }
        },
        loc: {
          start: {
            line: 324,
            column: 80
          },
          end: {
            line: 327,
            column: 21
          }
        },
        line: 324
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 344,
            column: 17
          },
          end: {
            line: 344,
            column: 18
          }
        },
        loc: {
          start: {
            line: 344,
            column: 33
          },
          end: {
            line: 390,
            column: 9
          }
        },
        line: 344
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 397,
            column: 17
          },
          end: {
            line: 397,
            column: 18
          }
        },
        loc: {
          start: {
            line: 397,
            column: 33
          },
          end: {
            line: 437,
            column: 9
          }
        },
        line: 397
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 403,
            column: 43
          },
          end: {
            line: 403,
            column: 44
          }
        },
        loc: {
          start: {
            line: 403,
            column: 48
          },
          end: {
            line: 403,
            column: 73
          }
        },
        line: 403
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 407,
            column: 43
          },
          end: {
            line: 407,
            column: 44
          }
        },
        loc: {
          start: {
            line: 407,
            column: 48
          },
          end: {
            line: 407,
            column: 82
          }
        },
        line: 407
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 415,
            column: 32
          }
        },
        loc: {
          start: {
            line: 415,
            column: 49
          },
          end: {
            line: 428,
            column: 17
          }
        },
        line: 415
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 444,
            column: 17
          },
          end: {
            line: 444,
            column: 18
          }
        },
        loc: {
          start: {
            line: 444,
            column: 29
          },
          end: {
            line: 462,
            column: 9
          }
        },
        line: 444
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 38
          }
        }, {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 66
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 93
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 36
          }
        }, {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 63
          }
        }, {
          start: {
            line: 70,
            column: 67
          },
          end: {
            line: 70,
            column: 69
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 94,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 94,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 34
          }
        }, {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 97,
            column: 44
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 98,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 98,
            column: 36
          }
        }, {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 98,
            column: 42
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 40
          },
          end: {
            line: 117,
            column: 50
          }
        }, {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 65
          }
        }],
        line: 117
      },
      "9": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "10": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 19
          }
        }, {
          start: {
            line: 127,
            column: 23
          },
          end: {
            line: 127,
            column: 58
          }
        }],
        line: 127
      },
      "13": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "14": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "15": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "16": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "17": {
        loc: {
          start: {
            line: 165,
            column: 80
          },
          end: {
            line: 165,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 105
          },
          end: {
            line: 165,
            column: 118
          }
        }, {
          start: {
            line: 165,
            column: 121
          },
          end: {
            line: 165,
            column: 136
          }
        }],
        line: 165
      },
      "18": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        }, {
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 183,
            column: 17
          }
        }],
        line: 178
      },
      "19": {
        loc: {
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 72
          },
          end: {
            line: 189,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 97
          },
          end: {
            line: 189,
            column: 110
          }
        }, {
          start: {
            line: 189,
            column: 113
          },
          end: {
            line: 189,
            column: 128
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "22": {
        loc: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "23": {
        loc: {
          start: {
            line: 215,
            column: 79
          },
          end: {
            line: 215,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 104
          },
          end: {
            line: 215,
            column: 117
          }
        }, {
          start: {
            line: 215,
            column: 120
          },
          end: {
            line: 215,
            column: 135
          }
        }],
        line: 215
      },
      "24": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 238,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 238,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "25": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 240,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 240,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "26": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 242,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 242,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "27": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "28": {
        loc: {
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "29": {
        loc: {
          start: {
            line: 254,
            column: 71
          },
          end: {
            line: 254,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 96
          },
          end: {
            line: 254,
            column: 109
          }
        }, {
          start: {
            line: 254,
            column: 112
          },
          end: {
            line: 254,
            column: 127
          }
        }],
        line: 254
      },
      "30": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 281,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 281,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "31": {
        loc: {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 283,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 283,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "32": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 285,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 285,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "33": {
        loc: {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 287,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 287,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "34": {
        loc: {
          start: {
            line: 288,
            column: 16
          },
          end: {
            line: 290,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 16
          },
          end: {
            line: 290,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "35": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "36": {
        loc: {
          start: {
            line: 298,
            column: 82
          },
          end: {
            line: 298,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 107
          },
          end: {
            line: 298,
            column: 120
          }
        }, {
          start: {
            line: 298,
            column: 123
          },
          end: {
            line: 298,
            column: 138
          }
        }],
        line: 298
      },
      "37": {
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 328,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 328,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "38": {
        loc: {
          start: {
            line: 325,
            column: 40
          },
          end: {
            line: 325,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 325,
            column: 63
          },
          end: {
            line: 325,
            column: 112
          }
        }, {
          start: {
            line: 325,
            column: 115
          },
          end: {
            line: 325,
            column: 117
          }
        }],
        line: 325
      },
      "39": {
        loc: {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 334,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 334,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "40": {
        loc: {
          start: {
            line: 335,
            column: 80
          },
          end: {
            line: 335,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 105
          },
          end: {
            line: 335,
            column: 118
          }
        }, {
          start: {
            line: 335,
            column: 121
          },
          end: {
            line: 335,
            column: 136
          }
        }],
        line: 335
      },
      "41": {
        loc: {
          start: {
            line: 350,
            column: 29
          },
          end: {
            line: 350,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 29
          },
          end: {
            line: 350,
            column: 41
          }
        }, {
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 350,
            column: 47
          }
        }],
        line: 350
      },
      "42": {
        loc: {
          start: {
            line: 351,
            column: 26
          },
          end: {
            line: 351,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 26
          },
          end: {
            line: 351,
            column: 35
          }
        }, {
          start: {
            line: 351,
            column: 39
          },
          end: {
            line: 351,
            column: 41
          }
        }],
        line: 351
      },
      "43": {
        loc: {
          start: {
            line: 354,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "44": {
        loc: {
          start: {
            line: 368,
            column: 44
          },
          end: {
            line: 368,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 61
          },
          end: {
            line: 368,
            column: 68
          }
        }, {
          start: {
            line: 368,
            column: 71
          },
          end: {
            line: 368,
            column: 77
          }
        }],
        line: 368
      },
      "45": {
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 381,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 381,
            column: 17
          }
        }, {
          start: {
            line: 378,
            column: 21
          },
          end: {
            line: 381,
            column: 17
          }
        }],
        line: 370
      },
      "46": {
        loc: {
          start: {
            line: 385,
            column: 16
          },
          end: {
            line: 387,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 16
          },
          end: {
            line: 387,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "47": {
        loc: {
          start: {
            line: 388,
            column: 73
          },
          end: {
            line: 388,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 98
          },
          end: {
            line: 388,
            column: 111
          }
        }, {
          start: {
            line: 388,
            column: 114
          },
          end: {
            line: 388,
            column: 129
          }
        }],
        line: 388
      },
      "48": {
        loc: {
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 404,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 404,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "49": {
        loc: {
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 408,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 408,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "50": {
        loc: {
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 413,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 413,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "51": {
        loc: {
          start: {
            line: 418,
            column: 20
          },
          end: {
            line: 419,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 20
          },
          end: {
            line: 419,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "52": {
        loc: {
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 421,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 421,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "53": {
        loc: {
          start: {
            line: 422,
            column: 20
          },
          end: {
            line: 423,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 20
          },
          end: {
            line: 423,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "54": {
        loc: {
          start: {
            line: 424,
            column: 20
          },
          end: {
            line: 426,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 20
          },
          end: {
            line: 426,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "55": {
        loc: {
          start: {
            line: 432,
            column: 16
          },
          end: {
            line: 434,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 16
          },
          end: {
            line: 434,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "56": {
        loc: {
          start: {
            line: 435,
            column: 77
          },
          end: {
            line: 435,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 102
          },
          end: {
            line: 435,
            column: 115
          }
        }, {
          start: {
            line: 435,
            column: 118
          },
          end: {
            line: 435,
            column: 133
          }
        }],
        line: 435
      },
      "57": {
        loc: {
          start: {
            line: 457,
            column: 16
          },
          end: {
            line: 459,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 16
          },
          end: {
            line: 459,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "58": {
        loc: {
          start: {
            line: 460,
            column: 80
          },
          end: {
            line: 460,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 460,
            column: 105
          },
          end: {
            line: 460,
            column: 118
          }
        }, {
          start: {
            line: 460,
            column: 121
          },
          end: {
            line: 460,
            column: 136
          }
        }],
        line: 460
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/event-streaming.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { EventClient, EventStreamConfig, WebhookConfig } from '../client/eventClient.js';\n\n// Zod schemas for validation\nconst EventSubscriptionSchema = z.object({\n  eventTypes: z.array(z.string()).min(1, 'At least one event type is required'),\n  filters: z.record(z.unknown()).optional(),\n  webhookUrl: z.string().url().optional(),\n  webhookMethod: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),\n  webhookHeaders: z.record(z.string()).optional(),\n  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),\n  authToken: z.string().optional(),\n  authUsername: z.string().optional(),\n  authPassword: z.string().optional(),\n  apiKeyHeader: z.string().optional(),\n  apiKeyValue: z.string().optional(),\n});\n\nconst UnsubscribeSchema = z.object({\n  subscriptionId: z.string().min(1, 'Subscription ID is required'),\n});\n\nconst EmitEventSchema = z.object({\n  eventType: z.string().min(1, 'Event type is required'),\n  workflowId: z.string().optional(),\n  executionId: z.string().optional(),\n  nodeId: z.string().optional(),\n  data: z.record(z.unknown()).default({}),\n  metadata: z.record(z.unknown()).optional(),\n});\n\nconst TrackAnalyticsSchema = z.object({\n  type: z.enum(['workflow_execution', 'user_action', 'system_event', 'performance_metric']),\n  category: z.string().min(1, 'Category is required'),\n  action: z.string().min(1, 'Action is required'),\n  label: z.string().optional(),\n  value: z.number().optional(),\n  dimensions: z.record(z.string()).optional(),\n  sessionId: z.string().optional(),\n  userId: z.string().optional(),\n});\n\nconst WebhookTestSchema = z.object({\n  url: z.string().url('Valid URL is required'),\n  method: z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),\n  headers: z.record(z.string()).optional(),\n  body: z.record(z.unknown()).optional(),\n  authType: z.enum(['bearer', 'basic', 'apikey']).optional(),\n  authToken: z.string().optional(),\n  authUsername: z.string().optional(),\n  authPassword: z.string().optional(),\n  apiKeyHeader: z.string().optional(),\n  apiKeyValue: z.string().optional(),\n});\n\nconst EventBufferSchema = z.object({\n  limit: z.number().min(1).max(1000).default(100),\n  eventType: z.string().optional(),\n  since: z.string().optional(), // ISO timestamp\n});\n\n// Global event client instance\nlet eventClient: EventClient | null = null;\n\n// Initialize event client\nconst getEventClient = (getClient: () => N8nClient | null): EventClient => {\n  if (!eventClient) {\n    const client = getClient();\n    if (!client) {\n      throw new UserError('N8n client not available');\n    }\n    \n    // Extract configuration from client\n    const baseUrl = (client as any).baseUrl || process.env.N8N_BASE_URL || 'http://localhost:5678';\n    const apiKey = (client as any).apiKey || process.env.N8N_API_KEY || '';\n    \n    const config: EventStreamConfig = {\n      baseUrl,\n      apiKey,\n      reconnectInterval: 5000,\n      maxReconnectAttempts: 10,\n      enableHeartbeat: true,\n      heartbeatInterval: 30000,\n    };\n    \n    eventClient = new EventClient(client, config);\n    \n    // Set up event listeners for debugging\n    eventClient.on('connected', () => console.log('Event client connected'));\n    eventClient.on('disconnected', () => console.log('Event client disconnected'));\n    eventClient.on('error', (error) => console.error('Event client error:', error));\n    \n    // Auto-connect\n    eventClient.connect().catch(error => {\n      console.error('Failed to connect event client:', error);\n    });\n  }\n  return eventClient;\n};\n\n// Helper functions\nconst buildWebhookConfig = (args: any): WebhookConfig | undefined => {\n  if (!args.webhookUrl) return undefined;\n  \n  const webhook: WebhookConfig = {\n    url: args.webhookUrl,\n    method: args.webhookMethod || 'POST',\n    headers: args.webhookHeaders || {},\n    body: {},\n  };\n  \n  // Add authentication if provided\n  if (args.authType) {\n    webhook.authentication = {\n      type: args.authType,\n      token: args.authToken,\n      username: args.authUsername,\n      password: args.authPassword,\n      apiKeyHeader: args.apiKeyHeader,\n      apiKeyValue: args.apiKeyValue,\n    };\n  }\n  \n  return webhook;\n};\n\nconst formatSubscription = (sub: any): string => {\n  let result = `**${sub.id}**\\n`;\n  result += `\u2022 Event Types: ${sub.eventTypes.join(', ')}\\n`;\n  result += `\u2022 Status: ${sub.active ? '\u2705 Active' : '\u274C Inactive'}\\n`;\n  result += `\u2022 Created: ${new Date(sub.createdAt).toLocaleString()}\\n`;\n  result += `\u2022 Success Count: ${sub.successCount}\\n`;\n  result += `\u2022 Error Count: ${sub.errorCount}\\n`;\n  \n  if (sub.lastTriggered) {\n    result += `\u2022 Last Triggered: ${new Date(sub.lastTriggered).toLocaleString()}\\n`;\n  }\n  \n  if (sub.webhook) {\n    result += `\u2022 Webhook: ${sub.webhook.method} ${sub.webhook.url}\\n`;\n  }\n  \n  if (sub.filters && Object.keys(sub.filters).length > 0) {\n    result += `\u2022 Filters: ${JSON.stringify(sub.filters, null, 2)}\\n`;\n  }\n  \n  return result;\n};\n\n// Tool registration function\nexport function createEventStreamingTools(getClient: () => N8nClient | null, server: any) {\n  // Subscribe to events tool\n  server.addTool({\n    name: 'subscribe-to-events',\n    description: 'Subscribe to specific event types with optional webhook notifications',\n    parameters: EventSubscriptionSchema,\n    handler: async (args: z.infer<typeof EventSubscriptionSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        \n        // Build webhook configuration if provided\n        const webhook = buildWebhookConfig(args);\n        \n        // Create subscription\n        const subscriptionId = client.subscribe(\n          args.eventTypes,\n          webhook,\n          args.filters\n        );\n        \n        let response = `\u2705 **Event subscription created successfully!**\\n\\n`;\n        response += `**Subscription ID:** ${subscriptionId}\\n`;\n        response += `**Event Types:** ${args.eventTypes.join(', ')}\\n`;\n        \n        if (webhook) {\n          response += `**Webhook:** ${webhook.method} ${webhook.url}\\n`;\n        }\n        \n        if (args.filters) {\n          response += `**Filters:** ${JSON.stringify(args.filters, null, 2)}\\n`;\n        }\n        \n        response += `\\nYou can now receive real-time events matching your subscription criteria.`;\n        \n        if (webhook) {\n          response += ` Events will be sent to your webhook URL when they occur.`;\n        }\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to subscribe to events: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Unsubscribe from events tool\n  server.addTool({\n    name: 'unsubscribe-from-events',\n    description: 'Unsubscribe from event notifications',\n    parameters: UnsubscribeSchema,\n    handler: async (args: z.infer<typeof UnsubscribeSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        \n        const success = client.unsubscribe(args.subscriptionId);\n        \n        if (success) {\n          return `\u2705 **Successfully unsubscribed from events**\\n\\nSubscription ID \\`${args.subscriptionId}\\` has been removed.`;\n        } else {\n          return `\u274C **Subscription not found**\\n\\nNo active subscription found with ID \\`${args.subscriptionId}\\`.`;\n        }\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to unsubscribe: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // List active subscriptions tool\n  server.addTool({\n    name: 'list-event-subscriptions',\n    description: 'List all active event subscriptions',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n        const subscriptions = client.getSubscriptions();\n        \n        if (subscriptions.length === 0) {\n          return `\uD83D\uDCED **No active subscriptions**\\n\\nUse the \\`subscribe-to-events\\` tool to create event subscriptions.`;\n        }\n        \n        let response = `\uD83D\uDCCA **Active Event Subscriptions (${subscriptions.length})**\\n\\n`;\n        \n        subscriptions.forEach((sub, index) => {\n          response += `${index + 1}. ${formatSubscription(sub)}\\n`;\n        });\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to list subscriptions: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Emit custom event tool\n  server.addTool({\n    name: 'emit-custom-event',\n    description: 'Emit a custom event into the event stream',\n    parameters: EmitEventSchema,\n    handler: async (args: z.infer<typeof EmitEventSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        \n        client.emitEvent({\n          type: args.eventType,\n          workflowId: args.workflowId,\n          executionId: args.executionId,\n          nodeId: args.nodeId,\n          data: args.data,\n          metadata: args.metadata,\n        });\n        \n        let response = `\uD83D\uDE80 **Custom event emitted successfully!**\\n\\n`;\n        response += `**Event Type:** ${args.eventType}\\n`;\n        \n        if (args.workflowId) response += `**Workflow ID:** ${args.workflowId}\\n`;\n        if (args.executionId) response += `**Execution ID:** ${args.executionId}\\n`;\n        if (args.nodeId) response += `**Node ID:** ${args.nodeId}\\n`;\n        \n        response += `**Data:** ${JSON.stringify(args.data, null, 2)}\\n`;\n        \n        if (args.metadata) {\n          response += `**Metadata:** ${JSON.stringify(args.metadata, null, 2)}\\n`;\n        }\n        \n        response += `\\nThe event has been added to the stream and will trigger any matching subscriptions.`;\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to emit event: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Track analytics event tool\n  server.addTool({\n    name: 'track-analytics-event',\n    description: 'Track an analytics event for usage insights and reporting',\n    parameters: TrackAnalyticsSchema,\n    handler: async (args: z.infer<typeof TrackAnalyticsSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        \n        client.trackEvent({\n          type: args.type,\n          category: args.category,\n          action: args.action,\n          label: args.label,\n          value: args.value,\n          dimensions: args.dimensions,\n          sessionId: args.sessionId,\n          userId: args.userId,\n        });\n        \n        let response = `\uD83D\uDCC8 **Analytics event tracked successfully!**\\n\\n`;\n        response += `**Type:** ${args.type}\\n`;\n        response += `**Category:** ${args.category}\\n`;\n        response += `**Action:** ${args.action}\\n`;\n        \n        if (args.label) response += `**Label:** ${args.label}\\n`;\n        if (args.value !== undefined) response += `**Value:** ${args.value}\\n`;\n        if (args.sessionId) response += `**Session ID:** ${args.sessionId}\\n`;\n        if (args.userId) response += `**User ID:** ${args.userId}\\n`;\n        \n        if (args.dimensions) {\n          response += `**Dimensions:** ${JSON.stringify(args.dimensions, null, 2)}\\n`;\n        }\n        \n        response += `\\nThe analytics event has been recorded and will be available in reporting dashboards.`;\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to track analytics event: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Get real-time stats tool\n  server.addTool({\n    name: 'get-realtime-stats',\n    description: 'Get current real-time system statistics and metrics',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n        const stats = await client.getRealtimeStats();\n        \n        let response = `\uD83D\uDCCA **Real-time System Statistics**\\n\\n`;\n        response += `**Active Executions:** ${stats.activeExecutions}\\n`;\n        response += `**Total Executions Today:** ${stats.totalExecutionsToday}\\n`;\n        response += `**Success Rate:** ${stats.successRate.toFixed(1)}%\\n`;\n        response += `**Error Rate:** ${stats.errorRate.toFixed(1)}%\\n`;\n        response += `**Average Execution Time:** ${(stats.averageExecutionTime / 1000).toFixed(2)}s\\n`;\n        response += `**Active Users:** ${stats.activeUsers}\\n`;\n        \n        response += `\\n**\uD83D\uDCBB System Load:**\\n`;\n        response += `\u2022 CPU: ${stats.systemLoad.cpu.toFixed(1)}%\\n`;\n        response += `\u2022 Memory: ${stats.systemLoad.memory.toFixed(1)}%\\n`;\n        response += `\u2022 Disk: ${stats.systemLoad.disk.toFixed(1)}%\\n`;\n        \n        if (stats.topWorkflows.length > 0) {\n          response += `\\n**\uD83D\uDD25 Top Workflows:**\\n`;\n          stats.topWorkflows.slice(0, 5).forEach((workflow, index) => {\n            const avgTime = workflow.avgTime > 0 ? ` (${(workflow.avgTime / 1000).toFixed(2)}s avg)` : '';\n            response += `${index + 1}. **${workflow.name}**: ${workflow.executions} executions${avgTime}\\n`;\n          });\n        }\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to get real-time stats: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Test webhook tool\n  server.addTool({\n    name: 'test-webhook',\n    description: 'Test webhook configuration by sending a test payload',\n    parameters: WebhookTestSchema,\n    handler: async (args: z.infer<typeof WebhookTestSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        \n        const webhook: WebhookConfig = {\n          url: args.url,\n          method: args.method,\n          headers: args.headers || {},\n          body: args.body || {},\n        };\n        \n        // Add authentication if provided\n        if (args.authType) {\n          webhook.authentication = {\n            type: args.authType,\n            token: args.authToken,\n            username: args.authUsername,\n            password: args.authPassword,\n            apiKeyHeader: args.apiKeyHeader,\n            apiKeyValue: args.apiKeyValue,\n          };\n        }\n        \n        const result = await client.testWebhook(webhook);\n        \n        let response = `\uD83D\uDD17 **Webhook Test Results**\\n\\n`;\n        response += `**URL:** ${args.url}\\n`;\n        response += `**Method:** ${args.method}\\n`;\n        response += `**Success:** ${result.success ? '\u2705 Yes' : '\u274C No'}\\n`;\n        response += `**Response Time:** ${result.responseTime}ms\\n`;\n        \n        if (result.error) {\n          response += `**Error:** ${result.error}\\n`;\n          response += `\\n\uD83D\uDCA1 **Troubleshooting Tips:**\\n`;\n          response += `\u2022 Verify the webhook URL is accessible\\n`;\n          response += `\u2022 Check authentication credentials if required\\n`;\n          response += `\u2022 Ensure the endpoint accepts the HTTP method used\\n`;\n          response += `\u2022 Verify any required headers are included\\n`;\n        } else {\n          response += `\\n\u2705 **Webhook is working correctly!**\\n`;\n          response += `The endpoint responded successfully and can receive event notifications.`;\n        }\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to test webhook: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Get event buffer tool\n  server.addTool({\n    name: 'get-event-buffer',\n    description: 'Get recent events from the event buffer with optional filtering',\n    parameters: EventBufferSchema,\n    handler: async (args: z.infer<typeof EventBufferSchema>) => {\n      try {\n        const client = getEventClient(getClient);\n        let events = client.getEventBuffer();\n        \n        // Apply filters\n        if (args.eventType) {\n          events = events.filter(e => e.type === args.eventType);\n        }\n        \n        if (args.since) {\n          const sinceDate = new Date(args.since);\n          events = events.filter(e => new Date(e.timestamp) >= sinceDate);\n        }\n        \n        // Limit results\n        events = events.slice(-args.limit);\n        \n        if (events.length === 0) {\n          return `\uD83D\uDCED **No events found**\\n\\nNo events match your criteria in the current buffer.`;\n        }\n        \n        let response = `\uD83D\uDCCB **Event Buffer (${events.length} events)**\\n\\n`;\n        \n        events.forEach((event, index) => {\n          response += `${index + 1}. **${event.type}** (${event.id})\\n`;\n          response += `   \u2022 Timestamp: ${new Date(event.timestamp).toLocaleString()}\\n`;\n          \n          if (event.workflowId) response += `   \u2022 Workflow: ${event.workflowId}\\n`;\n          if (event.executionId) response += `   \u2022 Execution: ${event.executionId}\\n`;\n          if (event.nodeId) response += `   \u2022 Node: ${event.nodeId}\\n`;\n          \n          if (Object.keys(event.data).length > 0) {\n            response += `   \u2022 Data: ${JSON.stringify(event.data)}\\n`;\n          }\n          \n          response += `\\n`;\n        });\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to get event buffer: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Clear event buffers tool\n  server.addTool({\n    name: 'clear-event-buffers',\n    description: 'Clear all buffered events and analytics data',\n    parameters: z.object({}),\n    handler: async () => {\n      try {\n        const client = getEventClient(getClient);\n        \n        const eventCount = client.getEventBuffer().length;\n        const analyticsCount = client.getAnalyticsBuffer().length;\n        \n        client.clearBuffers();\n        \n        let response = `\uD83E\uDDF9 **Event buffers cleared successfully!**\\n\\n`;\n        response += `**Events cleared:** ${eventCount}\\n`;\n        response += `**Analytics events cleared:** ${analyticsCount}\\n`;\n        response += `\\nAll buffered data has been removed. New events will start accumulating from now.`;\n        \n        return response;\n      } catch (error) {\n        if (error instanceof UserError) {\n          throw error;\n        }\n        throw new UserError(`Failed to clear event buffers: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e0265963d0d6f60ab5bed1b25996c9c3edbab22"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2aeycc88c9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2aeycc88c9();
cov_2aeycc88c9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2aeycc88c9().s[1]++;
exports.createEventStreamingTools = createEventStreamingTools;
const zod_1 =
/* istanbul ignore next */
(cov_2aeycc88c9().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_2aeycc88c9().s[3]++, require("fastmcp"));
const eventClient_js_1 =
/* istanbul ignore next */
(cov_2aeycc88c9().s[4]++, require("../client/eventClient.js"));
// Zod schemas for validation
const EventSubscriptionSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[5]++, zod_1.z.object({
  eventTypes: zod_1.z.array(zod_1.z.string()).min(1, 'At least one event type is required'),
  filters: zod_1.z.record(zod_1.z.unknown()).optional(),
  webhookUrl: zod_1.z.string().url().optional(),
  webhookMethod: zod_1.z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),
  webhookHeaders: zod_1.z.record(zod_1.z.string()).optional(),
  authType: zod_1.z.enum(['bearer', 'basic', 'apikey']).optional(),
  authToken: zod_1.z.string().optional(),
  authUsername: zod_1.z.string().optional(),
  authPassword: zod_1.z.string().optional(),
  apiKeyHeader: zod_1.z.string().optional(),
  apiKeyValue: zod_1.z.string().optional()
}));
const UnsubscribeSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[6]++, zod_1.z.object({
  subscriptionId: zod_1.z.string().min(1, 'Subscription ID is required')
}));
const EmitEventSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[7]++, zod_1.z.object({
  eventType: zod_1.z.string().min(1, 'Event type is required'),
  workflowId: zod_1.z.string().optional(),
  executionId: zod_1.z.string().optional(),
  nodeId: zod_1.z.string().optional(),
  data: zod_1.z.record(zod_1.z.unknown()).default({}),
  metadata: zod_1.z.record(zod_1.z.unknown()).optional()
}));
const TrackAnalyticsSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[8]++, zod_1.z.object({
  type: zod_1.z.enum(['workflow_execution', 'user_action', 'system_event', 'performance_metric']),
  category: zod_1.z.string().min(1, 'Category is required'),
  action: zod_1.z.string().min(1, 'Action is required'),
  label: zod_1.z.string().optional(),
  value: zod_1.z.number().optional(),
  dimensions: zod_1.z.record(zod_1.z.string()).optional(),
  sessionId: zod_1.z.string().optional(),
  userId: zod_1.z.string().optional()
}));
const WebhookTestSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[9]++, zod_1.z.object({
  url: zod_1.z.string().url('Valid URL is required'),
  method: zod_1.z.enum(['GET', 'POST', 'PUT', 'PATCH', 'DELETE']).default('POST'),
  headers: zod_1.z.record(zod_1.z.string()).optional(),
  body: zod_1.z.record(zod_1.z.unknown()).optional(),
  authType: zod_1.z.enum(['bearer', 'basic', 'apikey']).optional(),
  authToken: zod_1.z.string().optional(),
  authUsername: zod_1.z.string().optional(),
  authPassword: zod_1.z.string().optional(),
  apiKeyHeader: zod_1.z.string().optional(),
  apiKeyValue: zod_1.z.string().optional()
}));
const EventBufferSchema =
/* istanbul ignore next */
(cov_2aeycc88c9().s[10]++, zod_1.z.object({
  limit: zod_1.z.number().min(1).max(1000).default(100),
  eventType: zod_1.z.string().optional(),
  since: zod_1.z.string().optional() // ISO timestamp
}));
// Global event client instance
let eventClient =
/* istanbul ignore next */
(cov_2aeycc88c9().s[11]++, null);
// Initialize event client
/* istanbul ignore next */
cov_2aeycc88c9().s[12]++;
const getEventClient = getClient => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[0]++;
  cov_2aeycc88c9().s[13]++;
  if (!eventClient) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[0][0]++;
    const client =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[14]++, getClient());
    /* istanbul ignore next */
    cov_2aeycc88c9().s[15]++;
    if (!client) {
      /* istanbul ignore next */
      cov_2aeycc88c9().b[1][0]++;
      cov_2aeycc88c9().s[16]++;
      throw new fastmcp_1.UserError('N8n client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2aeycc88c9().b[1][1]++;
    }
    // Extract configuration from client
    const baseUrl =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[17]++,
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][0]++, client.baseUrl) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][1]++, process.env.N8N_BASE_URL) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[2][2]++, 'http://localhost:5678'));
    const apiKey =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[18]++,
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][0]++, client.apiKey) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][1]++, process.env.N8N_API_KEY) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[3][2]++, ''));
    const config =
    /* istanbul ignore next */
    (cov_2aeycc88c9().s[19]++, {
      baseUrl,
      apiKey,
      reconnectInterval: 5000,
      maxReconnectAttempts: 10,
      enableHeartbeat: true,
      heartbeatInterval: 30000
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[20]++;
    eventClient = new eventClient_js_1.EventClient(client, config);
    // Set up event listeners for debugging
    /* istanbul ignore next */
    cov_2aeycc88c9().s[21]++;
    eventClient.on('connected', () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[1]++;
      cov_2aeycc88c9().s[22]++;
      return console.log('Event client connected');
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[23]++;
    eventClient.on('disconnected', () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[2]++;
      cov_2aeycc88c9().s[24]++;
      return console.log('Event client disconnected');
    });
    /* istanbul ignore next */
    cov_2aeycc88c9().s[25]++;
    eventClient.on('error', error => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[3]++;
      cov_2aeycc88c9().s[26]++;
      return console.error('Event client error:', error);
    });
    // Auto-connect
    /* istanbul ignore next */
    cov_2aeycc88c9().s[27]++;
    eventClient.connect().catch(error => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[4]++;
      cov_2aeycc88c9().s[28]++;
      console.error('Failed to connect event client:', error);
    });
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[0][1]++;
  }
  cov_2aeycc88c9().s[29]++;
  return eventClient;
};
// Helper functions
/* istanbul ignore next */
cov_2aeycc88c9().s[30]++;
const buildWebhookConfig = args => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[5]++;
  cov_2aeycc88c9().s[31]++;
  if (!args.webhookUrl) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[4][0]++;
    cov_2aeycc88c9().s[32]++;
    return undefined;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[4][1]++;
  }
  const webhook =
  /* istanbul ignore next */
  (cov_2aeycc88c9().s[33]++, {
    url: args.webhookUrl,
    method:
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[5][0]++, args.webhookMethod) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[5][1]++, 'POST'),
    headers:
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[6][0]++, args.webhookHeaders) ||
    /* istanbul ignore next */
    (cov_2aeycc88c9().b[6][1]++, {}),
    body: {}
  });
  // Add authentication if provided
  /* istanbul ignore next */
  cov_2aeycc88c9().s[34]++;
  if (args.authType) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[7][0]++;
    cov_2aeycc88c9().s[35]++;
    webhook.authentication = {
      type: args.authType,
      token: args.authToken,
      username: args.authUsername,
      password: args.authPassword,
      apiKeyHeader: args.apiKeyHeader,
      apiKeyValue: args.apiKeyValue
    };
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[7][1]++;
  }
  cov_2aeycc88c9().s[36]++;
  return webhook;
};
/* istanbul ignore next */
cov_2aeycc88c9().s[37]++;
const formatSubscription = sub => {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[6]++;
  let result =
  /* istanbul ignore next */
  (cov_2aeycc88c9().s[38]++, `**${sub.id}**\n`);
  /* istanbul ignore next */
  cov_2aeycc88c9().s[39]++;
  result += `• Event Types: ${sub.eventTypes.join(', ')}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[40]++;
  result += `• Status: ${sub.active ?
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[8][0]++, '✅ Active') :
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[8][1]++, '❌ Inactive')}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[41]++;
  result += `• Created: ${new Date(sub.createdAt).toLocaleString()}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[42]++;
  result += `• Success Count: ${sub.successCount}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[43]++;
  result += `• Error Count: ${sub.errorCount}\n`;
  /* istanbul ignore next */
  cov_2aeycc88c9().s[44]++;
  if (sub.lastTriggered) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[9][0]++;
    cov_2aeycc88c9().s[45]++;
    result += `• Last Triggered: ${new Date(sub.lastTriggered).toLocaleString()}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[9][1]++;
  }
  cov_2aeycc88c9().s[46]++;
  if (sub.webhook) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[10][0]++;
    cov_2aeycc88c9().s[47]++;
    result += `• Webhook: ${sub.webhook.method} ${sub.webhook.url}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[10][1]++;
  }
  cov_2aeycc88c9().s[48]++;
  if (
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[12][0]++, sub.filters) &&
  /* istanbul ignore next */
  (cov_2aeycc88c9().b[12][1]++, Object.keys(sub.filters).length > 0)) {
    /* istanbul ignore next */
    cov_2aeycc88c9().b[11][0]++;
    cov_2aeycc88c9().s[49]++;
    result += `• Filters: ${JSON.stringify(sub.filters, null, 2)}\n`;
  } else
  /* istanbul ignore next */
  {
    cov_2aeycc88c9().b[11][1]++;
  }
  cov_2aeycc88c9().s[50]++;
  return result;
};
// Tool registration function
function createEventStreamingTools(getClient, server) {
  /* istanbul ignore next */
  cov_2aeycc88c9().f[7]++;
  cov_2aeycc88c9().s[51]++;
  // Subscribe to events tool
  server.addTool({
    name: 'subscribe-to-events',
    description: 'Subscribe to specific event types with optional webhook notifications',
    parameters: EventSubscriptionSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[8]++;
      cov_2aeycc88c9().s[52]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[53]++, getEventClient(getClient));
        // Build webhook configuration if provided
        const webhook =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[54]++, buildWebhookConfig(args));
        // Create subscription
        const subscriptionId =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[55]++, client.subscribe(args.eventTypes, webhook, args.filters));
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[56]++, `✅ **Event subscription created successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[57]++;
        response += `**Subscription ID:** ${subscriptionId}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[58]++;
        response += `**Event Types:** ${args.eventTypes.join(', ')}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[59]++;
        if (webhook) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[13][0]++;
          cov_2aeycc88c9().s[60]++;
          response += `**Webhook:** ${webhook.method} ${webhook.url}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[13][1]++;
        }
        cov_2aeycc88c9().s[61]++;
        if (args.filters) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[14][0]++;
          cov_2aeycc88c9().s[62]++;
          response += `**Filters:** ${JSON.stringify(args.filters, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[14][1]++;
        }
        cov_2aeycc88c9().s[63]++;
        response += `\nYou can now receive real-time events matching your subscription criteria.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[64]++;
        if (webhook) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[15][0]++;
          cov_2aeycc88c9().s[65]++;
          response += ` Events will be sent to your webhook URL when they occur.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[15][1]++;
        }
        cov_2aeycc88c9().s[66]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[67]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[16][0]++;
          cov_2aeycc88c9().s[68]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[16][1]++;
        }
        cov_2aeycc88c9().s[69]++;
        throw new fastmcp_1.UserError(`Failed to subscribe to events: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[17][1]++, 'Unknown error')}`);
      }
    }
  });
  // Unsubscribe from events tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[70]++;
  server.addTool({
    name: 'unsubscribe-from-events',
    description: 'Unsubscribe from event notifications',
    parameters: UnsubscribeSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[9]++;
      cov_2aeycc88c9().s[71]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[72]++, getEventClient(getClient));
        const success =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[73]++, client.unsubscribe(args.subscriptionId));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[74]++;
        if (success) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[18][0]++;
          cov_2aeycc88c9().s[75]++;
          return `✅ **Successfully unsubscribed from events**\n\nSubscription ID \`${args.subscriptionId}\` has been removed.`;
        } else {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[18][1]++;
          cov_2aeycc88c9().s[76]++;
          return `❌ **Subscription not found**\n\nNo active subscription found with ID \`${args.subscriptionId}\`.`;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[77]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[19][0]++;
          cov_2aeycc88c9().s[78]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[19][1]++;
        }
        cov_2aeycc88c9().s[79]++;
        throw new fastmcp_1.UserError(`Failed to unsubscribe: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[20][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[20][1]++, 'Unknown error')}`);
      }
    }
  });
  // List active subscriptions tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[80]++;
  server.addTool({
    name: 'list-event-subscriptions',
    description: 'List all active event subscriptions',
    parameters: zod_1.z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[10]++;
      cov_2aeycc88c9().s[81]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[82]++, getEventClient(getClient));
        const subscriptions =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[83]++, client.getSubscriptions());
        /* istanbul ignore next */
        cov_2aeycc88c9().s[84]++;
        if (subscriptions.length === 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[21][0]++;
          cov_2aeycc88c9().s[85]++;
          return `📭 **No active subscriptions**\n\nUse the \`subscribe-to-events\` tool to create event subscriptions.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[21][1]++;
        }
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[86]++, `📊 **Active Event Subscriptions (${subscriptions.length})**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[87]++;
        subscriptions.forEach((sub, index) => {
          /* istanbul ignore next */
          cov_2aeycc88c9().f[11]++;
          cov_2aeycc88c9().s[88]++;
          response += `${index + 1}. ${formatSubscription(sub)}\n`;
        });
        /* istanbul ignore next */
        cov_2aeycc88c9().s[89]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[90]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[22][0]++;
          cov_2aeycc88c9().s[91]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[22][1]++;
        }
        cov_2aeycc88c9().s[92]++;
        throw new fastmcp_1.UserError(`Failed to list subscriptions: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[23][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[23][1]++, 'Unknown error')}`);
      }
    }
  });
  // Emit custom event tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[93]++;
  server.addTool({
    name: 'emit-custom-event',
    description: 'Emit a custom event into the event stream',
    parameters: EmitEventSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[12]++;
      cov_2aeycc88c9().s[94]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[95]++, getEventClient(getClient));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[96]++;
        client.emitEvent({
          type: args.eventType,
          workflowId: args.workflowId,
          executionId: args.executionId,
          nodeId: args.nodeId,
          data: args.data,
          metadata: args.metadata
        });
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[97]++, `🚀 **Custom event emitted successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[98]++;
        response += `**Event Type:** ${args.eventType}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[99]++;
        if (args.workflowId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[24][0]++;
          cov_2aeycc88c9().s[100]++;
          response += `**Workflow ID:** ${args.workflowId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[24][1]++;
        }
        cov_2aeycc88c9().s[101]++;
        if (args.executionId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[25][0]++;
          cov_2aeycc88c9().s[102]++;
          response += `**Execution ID:** ${args.executionId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[25][1]++;
        }
        cov_2aeycc88c9().s[103]++;
        if (args.nodeId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[26][0]++;
          cov_2aeycc88c9().s[104]++;
          response += `**Node ID:** ${args.nodeId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[26][1]++;
        }
        cov_2aeycc88c9().s[105]++;
        response += `**Data:** ${JSON.stringify(args.data, null, 2)}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[106]++;
        if (args.metadata) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[27][0]++;
          cov_2aeycc88c9().s[107]++;
          response += `**Metadata:** ${JSON.stringify(args.metadata, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[27][1]++;
        }
        cov_2aeycc88c9().s[108]++;
        response += `\nThe event has been added to the stream and will trigger any matching subscriptions.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[109]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[110]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[28][0]++;
          cov_2aeycc88c9().s[111]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[28][1]++;
        }
        cov_2aeycc88c9().s[112]++;
        throw new fastmcp_1.UserError(`Failed to emit event: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[29][1]++, 'Unknown error')}`);
      }
    }
  });
  // Track analytics event tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[113]++;
  server.addTool({
    name: 'track-analytics-event',
    description: 'Track an analytics event for usage insights and reporting',
    parameters: TrackAnalyticsSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[13]++;
      cov_2aeycc88c9().s[114]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[115]++, getEventClient(getClient));
        /* istanbul ignore next */
        cov_2aeycc88c9().s[116]++;
        client.trackEvent({
          type: args.type,
          category: args.category,
          action: args.action,
          label: args.label,
          value: args.value,
          dimensions: args.dimensions,
          sessionId: args.sessionId,
          userId: args.userId
        });
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[117]++, `📈 **Analytics event tracked successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[118]++;
        response += `**Type:** ${args.type}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[119]++;
        response += `**Category:** ${args.category}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[120]++;
        response += `**Action:** ${args.action}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[121]++;
        if (args.label) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[30][0]++;
          cov_2aeycc88c9().s[122]++;
          response += `**Label:** ${args.label}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[30][1]++;
        }
        cov_2aeycc88c9().s[123]++;
        if (args.value !== undefined) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[31][0]++;
          cov_2aeycc88c9().s[124]++;
          response += `**Value:** ${args.value}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[31][1]++;
        }
        cov_2aeycc88c9().s[125]++;
        if (args.sessionId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[32][0]++;
          cov_2aeycc88c9().s[126]++;
          response += `**Session ID:** ${args.sessionId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[32][1]++;
        }
        cov_2aeycc88c9().s[127]++;
        if (args.userId) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[33][0]++;
          cov_2aeycc88c9().s[128]++;
          response += `**User ID:** ${args.userId}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[33][1]++;
        }
        cov_2aeycc88c9().s[129]++;
        if (args.dimensions) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[34][0]++;
          cov_2aeycc88c9().s[130]++;
          response += `**Dimensions:** ${JSON.stringify(args.dimensions, null, 2)}\n`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[34][1]++;
        }
        cov_2aeycc88c9().s[131]++;
        response += `\nThe analytics event has been recorded and will be available in reporting dashboards.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[132]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[133]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[35][0]++;
          cov_2aeycc88c9().s[134]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[35][1]++;
        }
        cov_2aeycc88c9().s[135]++;
        throw new fastmcp_1.UserError(`Failed to track analytics event: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[36][1]++, 'Unknown error')}`);
      }
    }
  });
  // Get real-time stats tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[136]++;
  server.addTool({
    name: 'get-realtime-stats',
    description: 'Get current real-time system statistics and metrics',
    parameters: zod_1.z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[14]++;
      cov_2aeycc88c9().s[137]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[138]++, getEventClient(getClient));
        const stats =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[139]++, await client.getRealtimeStats());
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[140]++, `📊 **Real-time System Statistics**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[141]++;
        response += `**Active Executions:** ${stats.activeExecutions}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[142]++;
        response += `**Total Executions Today:** ${stats.totalExecutionsToday}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[143]++;
        response += `**Success Rate:** ${stats.successRate.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[144]++;
        response += `**Error Rate:** ${stats.errorRate.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[145]++;
        response += `**Average Execution Time:** ${(stats.averageExecutionTime / 1000).toFixed(2)}s\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[146]++;
        response += `**Active Users:** ${stats.activeUsers}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[147]++;
        response += `\n**💻 System Load:**\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[148]++;
        response += `• CPU: ${stats.systemLoad.cpu.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[149]++;
        response += `• Memory: ${stats.systemLoad.memory.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[150]++;
        response += `• Disk: ${stats.systemLoad.disk.toFixed(1)}%\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[151]++;
        if (stats.topWorkflows.length > 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[37][0]++;
          cov_2aeycc88c9().s[152]++;
          response += `\n**🔥 Top Workflows:**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[153]++;
          stats.topWorkflows.slice(0, 5).forEach((workflow, index) => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[15]++;
            const avgTime =
            /* istanbul ignore next */
            (cov_2aeycc88c9().s[154]++, workflow.avgTime > 0 ?
            /* istanbul ignore next */
            (cov_2aeycc88c9().b[38][0]++, ` (${(workflow.avgTime / 1000).toFixed(2)}s avg)`) :
            /* istanbul ignore next */
            (cov_2aeycc88c9().b[38][1]++, ''));
            /* istanbul ignore next */
            cov_2aeycc88c9().s[155]++;
            response += `${index + 1}. **${workflow.name}**: ${workflow.executions} executions${avgTime}\n`;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[37][1]++;
        }
        cov_2aeycc88c9().s[156]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[157]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[39][0]++;
          cov_2aeycc88c9().s[158]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[39][1]++;
        }
        cov_2aeycc88c9().s[159]++;
        throw new fastmcp_1.UserError(`Failed to get real-time stats: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[40][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[40][1]++, 'Unknown error')}`);
      }
    }
  });
  // Test webhook tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[160]++;
  server.addTool({
    name: 'test-webhook',
    description: 'Test webhook configuration by sending a test payload',
    parameters: WebhookTestSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[16]++;
      cov_2aeycc88c9().s[161]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[162]++, getEventClient(getClient));
        const webhook =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[163]++, {
          url: args.url,
          method: args.method,
          headers:
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[41][0]++, args.headers) ||
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[41][1]++, {}),
          body:
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[42][0]++, args.body) ||
          /* istanbul ignore next */
          (cov_2aeycc88c9().b[42][1]++, {})
        });
        // Add authentication if provided
        /* istanbul ignore next */
        cov_2aeycc88c9().s[164]++;
        if (args.authType) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[43][0]++;
          cov_2aeycc88c9().s[165]++;
          webhook.authentication = {
            type: args.authType,
            token: args.authToken,
            username: args.authUsername,
            password: args.authPassword,
            apiKeyHeader: args.apiKeyHeader,
            apiKeyValue: args.apiKeyValue
          };
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[43][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[166]++, await client.testWebhook(webhook));
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[167]++, `🔗 **Webhook Test Results**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[168]++;
        response += `**URL:** ${args.url}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[169]++;
        response += `**Method:** ${args.method}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[170]++;
        response += `**Success:** ${result.success ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[44][0]++, '✅ Yes') :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[44][1]++, '❌ No')}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[171]++;
        response += `**Response Time:** ${result.responseTime}ms\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[172]++;
        if (result.error) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[45][0]++;
          cov_2aeycc88c9().s[173]++;
          response += `**Error:** ${result.error}\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[174]++;
          response += `\n💡 **Troubleshooting Tips:**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[175]++;
          response += `• Verify the webhook URL is accessible\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[176]++;
          response += `• Check authentication credentials if required\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[177]++;
          response += `• Ensure the endpoint accepts the HTTP method used\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[178]++;
          response += `• Verify any required headers are included\n`;
        } else {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[45][1]++;
          cov_2aeycc88c9().s[179]++;
          response += `\n✅ **Webhook is working correctly!**\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[180]++;
          response += `The endpoint responded successfully and can receive event notifications.`;
        }
        /* istanbul ignore next */
        cov_2aeycc88c9().s[181]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[182]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[46][0]++;
          cov_2aeycc88c9().s[183]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[46][1]++;
        }
        cov_2aeycc88c9().s[184]++;
        throw new fastmcp_1.UserError(`Failed to test webhook: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[47][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[47][1]++, 'Unknown error')}`);
      }
    }
  });
  // Get event buffer tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[185]++;
  server.addTool({
    name: 'get-event-buffer',
    description: 'Get recent events from the event buffer with optional filtering',
    parameters: EventBufferSchema,
    handler: async args => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[17]++;
      cov_2aeycc88c9().s[186]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[187]++, getEventClient(getClient));
        let events =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[188]++, client.getEventBuffer());
        // Apply filters
        /* istanbul ignore next */
        cov_2aeycc88c9().s[189]++;
        if (args.eventType) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[48][0]++;
          cov_2aeycc88c9().s[190]++;
          events = events.filter(e => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[18]++;
            cov_2aeycc88c9().s[191]++;
            return e.type === args.eventType;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[48][1]++;
        }
        cov_2aeycc88c9().s[192]++;
        if (args.since) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[49][0]++;
          const sinceDate =
          /* istanbul ignore next */
          (cov_2aeycc88c9().s[193]++, new Date(args.since));
          /* istanbul ignore next */
          cov_2aeycc88c9().s[194]++;
          events = events.filter(e => {
            /* istanbul ignore next */
            cov_2aeycc88c9().f[19]++;
            cov_2aeycc88c9().s[195]++;
            return new Date(e.timestamp) >= sinceDate;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[49][1]++;
        }
        // Limit results
        cov_2aeycc88c9().s[196]++;
        events = events.slice(-args.limit);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[197]++;
        if (events.length === 0) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[50][0]++;
          cov_2aeycc88c9().s[198]++;
          return `📭 **No events found**\n\nNo events match your criteria in the current buffer.`;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[50][1]++;
        }
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[199]++, `📋 **Event Buffer (${events.length} events)**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[200]++;
        events.forEach((event, index) => {
          /* istanbul ignore next */
          cov_2aeycc88c9().f[20]++;
          cov_2aeycc88c9().s[201]++;
          response += `${index + 1}. **${event.type}** (${event.id})\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[202]++;
          response += `   • Timestamp: ${new Date(event.timestamp).toLocaleString()}\n`;
          /* istanbul ignore next */
          cov_2aeycc88c9().s[203]++;
          if (event.workflowId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[51][0]++;
            cov_2aeycc88c9().s[204]++;
            response += `   • Workflow: ${event.workflowId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[51][1]++;
          }
          cov_2aeycc88c9().s[205]++;
          if (event.executionId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[52][0]++;
            cov_2aeycc88c9().s[206]++;
            response += `   • Execution: ${event.executionId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[52][1]++;
          }
          cov_2aeycc88c9().s[207]++;
          if (event.nodeId) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[53][0]++;
            cov_2aeycc88c9().s[208]++;
            response += `   • Node: ${event.nodeId}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[53][1]++;
          }
          cov_2aeycc88c9().s[209]++;
          if (Object.keys(event.data).length > 0) {
            /* istanbul ignore next */
            cov_2aeycc88c9().b[54][0]++;
            cov_2aeycc88c9().s[210]++;
            response += `   • Data: ${JSON.stringify(event.data)}\n`;
          } else
          /* istanbul ignore next */
          {
            cov_2aeycc88c9().b[54][1]++;
          }
          cov_2aeycc88c9().s[211]++;
          response += `\n`;
        });
        /* istanbul ignore next */
        cov_2aeycc88c9().s[212]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[213]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[55][0]++;
          cov_2aeycc88c9().s[214]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[55][1]++;
        }
        cov_2aeycc88c9().s[215]++;
        throw new fastmcp_1.UserError(`Failed to get event buffer: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[56][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[56][1]++, 'Unknown error')}`);
      }
    }
  });
  // Clear event buffers tool
  /* istanbul ignore next */
  cov_2aeycc88c9().s[216]++;
  server.addTool({
    name: 'clear-event-buffers',
    description: 'Clear all buffered events and analytics data',
    parameters: zod_1.z.object({}),
    handler: async () => {
      /* istanbul ignore next */
      cov_2aeycc88c9().f[21]++;
      cov_2aeycc88c9().s[217]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[218]++, getEventClient(getClient));
        const eventCount =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[219]++, client.getEventBuffer().length);
        const analyticsCount =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[220]++, client.getAnalyticsBuffer().length);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[221]++;
        client.clearBuffers();
        let response =
        /* istanbul ignore next */
        (cov_2aeycc88c9().s[222]++, `🧹 **Event buffers cleared successfully!**\n\n`);
        /* istanbul ignore next */
        cov_2aeycc88c9().s[223]++;
        response += `**Events cleared:** ${eventCount}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[224]++;
        response += `**Analytics events cleared:** ${analyticsCount}\n`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[225]++;
        response += `\nAll buffered data has been removed. New events will start accumulating from now.`;
        /* istanbul ignore next */
        cov_2aeycc88c9().s[226]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2aeycc88c9().s[227]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_2aeycc88c9().b[57][0]++;
          cov_2aeycc88c9().s[228]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2aeycc88c9().b[57][1]++;
        }
        cov_2aeycc88c9().s[229]++;
        throw new fastmcp_1.UserError(`Failed to clear event buffers: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[58][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2aeycc88c9().b[58][1]++, 'Unknown error')}`);
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,