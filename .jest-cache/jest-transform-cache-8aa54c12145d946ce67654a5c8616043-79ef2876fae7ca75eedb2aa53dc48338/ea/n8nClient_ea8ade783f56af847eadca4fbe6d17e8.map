{"version":3,"names":["cov_1ts539ri58","actualCoverage","node_fetch_1","s","__importDefault","require","N8nClient","baseUrl","apiKey","authConfig","constructor","f","replace","b","type","setAuthConfig","config","getAuthConfig","makeRequest","endpoint","options","url","headers","Accept","sessionToken","credentials","accessToken","response","default","ok","errorText","text","Error","status","contentType","get","includes","json","error","message","getUsers","params","URLSearchParams","limit","append","toString","cursor","query","getUser","id","createUser","userData","method","body","JSON","stringify","updateUser","deleteUser","getWorkflows","projectId","getWorkflow","createWorkflow","workflowData","updateWorkflow","deleteWorkflow","activateWorkflow","deactivateWorkflow","getExecutions","getExecution","deleteExecution","getCredentials","getCredential","createCredential","credentialData","deleteCredential","getCredentialSchema","credentialType","getProjects","getProject","createProject","projectData","updateProject","deleteProject","getVariables","createVariable","variableData","deleteVariable","getTags","getTag","createTag","tagData","updateTag","deleteTag","getWorkflowTags","workflowId","updateWorkflowTags","tagIds","generateAuditReport","getCommunityPackages","installCommunityPackage","packageData","updateCommunityPackage","packageName","encodeURIComponent","uninstallCommunityPackage","getNodeTypes","getNodeType","nodeType","getCommunityNodeTypes","getCommunityNodeType","name","getDynamicNodeParameters","getResourceLocatorResults","updateUserRole","roleData","getProjectUsers","addUserToProject","updateProjectUser","userId","removeUserFromProject","transferWorkflow","transferData","updateCredential","transferCredential","getVariable","updateVariable","getSourceControlStatus","pullFromRepository","pullData","setBranch","branchData","getCommitHistory","checkSyncStatus","login","loginData","logout","getSessionInfo","refreshSession","generateOAuth2AuthUrl","state","response_type","client_id","clientId","redirect_uri","redirectUri","scope","join","authorizationUrl","exchangeOAuth2Code","code","tokenUrl","grant_type","client_secret","clientSecret","tokenData","access_token","refreshToken","refresh_token","expiresIn","expires_in","tokenType","token_type","refreshOAuth2Token","getAINodes","classifyAINode","getAINodeSuggestions","exports"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts"],"sourcesContent":["import fetch from 'node-fetch';\nimport {\n  N8nUser,\n  N8nWorkflow,\n  N8nExecution,\n  N8nCredential,\n  N8nProject,\n  N8nVariable,\n  N8nTag,\n  N8nAuditReport,\n  N8nCommunityPackage,\n  N8nNodeTypeDescription,\n  ApiResponse,\n  PaginationOptions,\n  CreateUserRequest,\n  UpdateUserRequest,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  CreateCredentialRequest,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  CreateVariableRequest,\n  CreateTagRequest,\n  UpdateTagRequest,\n  CommunityPackageInstallRequest,\n  CommunityPackageUpdateRequest,\n  DynamicNodeOptions,\n  DynamicNodeParameter,\n  ResourceLocatorResult,\n  AINodeClassification,\n  AINodeSuggestion,\n  ProjectUserRequest,\n  ProjectUserResponse,\n  WorkflowTransferRequest,\n  CredentialTransferRequest,\n  UserRoleUpdateRequest,\n  SourceControlStatus,\n  SourceControlCommit,\n  SourceControlPullRequest,\n  SourceControlBranchRequest,\n  AuthenticationConfig,\n  SessionInfo,\n  LoginRequest,\n  LoginResponse,\n  OAuth2Config,\n  OAuth2Token,\n  VariableUpdateRequest,\n} from '../types/n8n.js';\n\nexport class N8nClient {\n  private authConfig: AuthenticationConfig;\n\n  constructor(\n    private baseUrl: string,\n    private apiKey: string,\n    authConfig?: AuthenticationConfig\n  ) {\n    // Remove trailing slash if present\n    this.baseUrl = baseUrl.replace(/\\/$/, '');\n    // Ensure apiKey is properly assigned\n    this.apiKey = apiKey;\n    // Set up authentication configuration\n    this.authConfig = authConfig || { type: 'api-key' };\n  }\n\n  // Method to update authentication configuration\n  setAuthConfig(config: AuthenticationConfig): void {\n    this.authConfig = config;\n  }\n\n  // Method to get current authentication configuration\n  getAuthConfig(): AuthenticationConfig {\n    return this.authConfig;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: Record<string, unknown> = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}/api/v1${endpoint}`;\n    const headers: Record<string, string> = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    // Apply authentication based on configuration\n    switch (this.authConfig.type) {\n      case 'api-key':\n        headers['X-N8N-API-KEY'] = this.apiKey;\n        break;\n      case 'session':\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      case 'oauth2':\n        if (this.authConfig.credentials?.accessToken) {\n          headers['Authorization'] = `Bearer ${this.authConfig.credentials.accessToken}`;\n        }\n        break;\n      case 'saml':\n      case 'oidc':\n      case 'ldap':\n        // These typically use session-based auth after initial login\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      default:\n        // Fallback to API key\n        headers['X-N8N-API-KEY'] = this.apiKey;\n    }\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...((options.headers as Record<string, string>) || {}),\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return (await response.json()) as T;\n      }\n\n      return (await response.text()) as unknown as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`n8n API request failed: ${error.message}`);\n      }\n      throw new Error('n8n API request failed with unknown error');\n    }\n  }\n\n  // User Management\n  async getUsers(options: PaginationOptions = {}): Promise<ApiResponse<N8nUser[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nUser[]>>(`/users${query}`);\n  }\n\n  async getUser(id: string): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`);\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(id: string, userData: UpdateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.makeRequest<void>(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Workflow Management\n  async getWorkflows(options: PaginationOptions = {}): Promise<ApiResponse<N8nWorkflow[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nWorkflow[]>>(`/workflows${query}`);\n  }\n\n  async getWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`);\n  }\n\n  async createWorkflow(workflowData: CreateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>('/workflows', {\n      method: 'POST',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async updateWorkflow(id: string, workflowData: UpdateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async deleteWorkflow(id: string): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async activateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/activate`, {\n      method: 'POST',\n    });\n  }\n\n  async deactivateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/deactivate`, {\n      method: 'POST',\n    });\n  }\n\n  // Execution Management\n  async getExecutions(options: PaginationOptions = {}): Promise<ApiResponse<N8nExecution[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nExecution[]>>(`/executions${query}`);\n  }\n\n  async getExecution(id: string): Promise<N8nExecution> {\n    return this.makeRequest<N8nExecution>(`/executions/${id}`);\n  }\n\n  async deleteExecution(id: string): Promise<void> {\n    await this.makeRequest<void>(`/executions/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Credential Management\n  async getCredentials(options: PaginationOptions = {}): Promise<ApiResponse<N8nCredential[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nCredential[]>>(`/credentials${query}`);\n  }\n\n  async getCredential(id: string): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`);\n  }\n\n  async createCredential(credentialData: CreateCredentialRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>('/credentials', {\n      method: 'POST',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async deleteCredential(id: string): Promise<void> {\n    await this.makeRequest<void>(`/credentials/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getCredentialSchema(credentialType: string): Promise<Record<string, unknown>> {\n    return this.makeRequest<Record<string, unknown>>(`/credentials/schema/${credentialType}`);\n  }\n\n  // Project Management (Enterprise)\n  async getProjects(options: PaginationOptions = {}): Promise<ApiResponse<N8nProject[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nProject[]>>(`/projects${query}`);\n  }\n\n  async getProject(id: string): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`);\n  }\n\n  async createProject(projectData: CreateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>('/projects', {\n      method: 'POST',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async updateProject(id: string, projectData: UpdateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Variable Management (Enterprise)\n  async getVariables(options: PaginationOptions = {}): Promise<ApiResponse<N8nVariable[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nVariable[]>>(`/variables${query}`);\n  }\n\n  async createVariable(variableData: CreateVariableRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>('/variables', {\n      method: 'POST',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  async deleteVariable(id: string): Promise<void> {\n    await this.makeRequest<void>(`/variables/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tag Management\n  async getTags(options: PaginationOptions = {}): Promise<ApiResponse<N8nTag[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nTag[]>>(`/tags${query}`);\n  }\n\n  async getTag(id: string): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`);\n  }\n\n  async createTag(tagData: CreateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>('/tags', {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(id: string, tagData: UpdateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(id: string): Promise<void> {\n    await this.makeRequest<void>(`/tags/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWorkflowTags(workflowId: string): Promise<N8nTag[]> {\n    return this.makeRequest<N8nTag[]>(`/workflows/${workflowId}/tags`);\n  }\n\n  async updateWorkflowTags(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${workflowId}/tags`, {\n      method: 'PUT',\n      body: JSON.stringify({ tagIds }),\n    });\n  }\n\n  // Audit Report\n  async generateAuditReport(): Promise<N8nAuditReport> {\n    return this.makeRequest<N8nAuditReport>('/audit');\n  }\n\n  // Community Package Management\n  async getCommunityPackages(): Promise<ApiResponse<N8nCommunityPackage[]>> {\n    return this.makeRequest<ApiResponse<N8nCommunityPackage[]>>('/community-packages');\n  }\n\n  async installCommunityPackage(packageData: CommunityPackageInstallRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>('/community-packages', {\n      method: 'POST',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async updateCommunityPackage(packageName: string, packageData: CommunityPackageUpdateRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'PATCH',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async uninstallCommunityPackage(packageName: string): Promise<void> {\n    await this.makeRequest<void>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Node Type Management\n  async getNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/node-types');\n  }\n\n  async getNodeType(nodeType: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/node-types/${encodeURIComponent(nodeType)}`);\n  }\n\n  async getCommunityNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/community-node-types');\n  }\n\n  async getCommunityNodeType(name: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/community-node-types/${encodeURIComponent(name)}`);\n  }\n\n  // Dynamic Node Parameters\n  async getDynamicNodeParameters(options: DynamicNodeOptions): Promise<DynamicNodeParameter[]> {\n    return this.makeRequest<DynamicNodeParameter[]>('/dynamic-node-parameters/options', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  async getResourceLocatorResults(options: DynamicNodeOptions): Promise<ResourceLocatorResult[]> {\n    return this.makeRequest<ResourceLocatorResult[]>('/dynamic-node-parameters/resource-locator', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  // Enhanced User Management (n8n fork)\n  async updateUserRole(id: string, roleData: UserRoleUpdateRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}/role`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  // Enhanced Project Management (n8n fork)\n  async getProjectUsers(projectId: string): Promise<ProjectUserResponse[]> {\n    return this.makeRequest<ProjectUserResponse[]>(`/projects/${projectId}/users`);\n  }\n\n  async addUserToProject(projectId: string, userData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users`, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateProjectUser(projectId: string, userId: string, roleData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  async removeUserFromProject(projectId: string, userId: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${projectId}/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Enhanced Workflow Management (n8n fork)\n  async transferWorkflow(id: string, transferData: WorkflowTransferRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Credential Management (n8n fork)  \n  async updateCredential(id: string, credentialData: Partial<CreateCredentialRequest>): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async transferCredential(id: string, transferData: CredentialTransferRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Variable Management (n8n fork)\n  async getVariable(id: string): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`);\n  }\n\n  async updateVariable(id: string, variableData: VariableUpdateRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  // Source Control Integration (Enterprise n8n fork)\n  async getSourceControlStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/repository-status');\n  }\n\n  async pullFromRepository(pullData: SourceControlPullRequest = {}): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/pull', {\n      method: 'POST',\n      body: JSON.stringify(pullData),\n    });\n  }\n\n  async setBranch(branchData: SourceControlBranchRequest): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/set-branch', {\n      method: 'POST',\n      body: JSON.stringify(branchData),\n    });\n  }\n\n  async getCommitHistory(): Promise<SourceControlCommit[]> {\n    return this.makeRequest<SourceControlCommit[]>('/source-control/commit-history');\n  }\n\n  async checkSyncStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/sync-check');\n  }\n\n  // Authentication Methods (n8n fork)\n  async login(loginData: LoginRequest): Promise<LoginResponse> {\n    return this.makeRequest<LoginResponse>('/login', {\n      method: 'POST',\n      body: JSON.stringify(loginData),\n    });\n  }\n\n  async logout(): Promise<void> {\n    await this.makeRequest<void>('/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getSessionInfo(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session');\n  }\n\n  async refreshSession(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session/refresh', {\n      method: 'POST',\n    });\n  }\n\n  // OAuth2 Helper Methods (n8n fork)\n  generateOAuth2AuthUrl(config: OAuth2Config, state?: string): string {\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scope?.join(' ') || '',\n    });\n\n    if (state) {\n      params.append('state', state);\n    }\n\n    return `${config.authorizationUrl}?${params.toString()}`;\n  }\n\n  async exchangeOAuth2Code(config: OAuth2Config, code: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'authorization_code',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      code,\n      redirect_uri: config.redirectUri,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token exchange failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  async refreshOAuth2Token(config: OAuth2Config, refreshToken: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'refresh_token',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      refresh_token: refreshToken,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token refresh failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token || refreshToken, // Keep old refresh token if new one not provided\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  // AI Node Features\n  async getAINodes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/ai-nodes');\n  }\n\n  async classifyAINode(nodeType: string): Promise<AINodeClassification> {\n    return this.makeRequest<AINodeClassification>('/ai-nodes/classify', {\n      method: 'POST',\n      body: JSON.stringify({ nodeType }),\n    });\n  }\n\n  async getAINodeSuggestions(nodeType: string): Promise<AINodeSuggestion[]> {\n    return this.makeRequest<AINodeSuggestion[]>(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);\n  }\n}\n"],"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","ignoreList":[]}