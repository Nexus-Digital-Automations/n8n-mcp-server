a17647e4d9856c062ff46d2b6830e9eb
"use strict";

/* istanbul ignore next */
function cov_1ts539ri58() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts";
  var hash = "aa994eb45d8affe01141f7e922cdcbd2e6055826";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 27
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 60
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "12": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 55
        }
      },
      "13": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "15": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "16": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "17": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "18": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 83
        }
      },
      "19": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "20": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "21": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 99
        }
      },
      "22": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "23": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "24": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 83
        }
      },
      "25": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "26": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 55
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "28": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "30": {
        start: {
          line: 72,
          column: 34
        },
        end: {
          line: 72,
          column: 55
        }
      },
      "31": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 73
        }
      },
      "32": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "34": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "35": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "36": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "37": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 76
        }
      },
      "38": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 73
        }
      },
      "39": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 44
        }
      },
      "40": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "41": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "42": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 94,
          column: 52
        }
      },
      "43": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 52
        }
      },
      "44": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 70
        }
      },
      "45": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 50
        }
      },
      "46": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "47": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "49": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "50": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 44
        }
      },
      "51": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 122,
          column: 61
        }
      },
      "52": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 61
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 124,
          column: 52
        }
      },
      "54": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 52
        }
      },
      "55": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 126,
          column: 58
        }
      },
      "56": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 58
        }
      },
      "57": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 127,
          column: 70
        }
      },
      "58": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 54
        }
      },
      "59": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 52
        }
      },
      "60": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "61": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "62": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "63": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "64": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "65": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "66": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "67": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "68": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 166,
          column: 52
        }
      },
      "69": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 52
        }
      },
      "70": {
        start: {
          line: 167,
          column: 22
        },
        end: {
          line: 167,
          column: 70
        }
      },
      "71": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 55
        }
      },
      "72": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "73": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "74": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 44
        }
      },
      "75": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "77": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "78": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "79": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 186,
          column: 58
        }
      },
      "80": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 58
        }
      },
      "81": {
        start: {
          line: 187,
          column: 22
        },
        end: {
          line: 187,
          column: 70
        }
      },
      "82": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "83": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 54
        }
      },
      "84": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "85": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "86": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 73
        }
      },
      "87": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 44
        }
      },
      "88": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 211,
          column: 61
        }
      },
      "89": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 61
        }
      },
      "90": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 213,
          column: 52
        }
      },
      "91": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 52
        }
      },
      "92": {
        start: {
          line: 214,
          column: 22
        },
        end: {
          line: 214,
          column: 70
        }
      },
      "93": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 53
        }
      },
      "94": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 51
        }
      },
      "95": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "96": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "97": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "98": {
        start: {
          line: 239,
          column: 23
        },
        end: {
          line: 239,
          column: 44
        }
      },
      "99": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 241,
          column: 61
        }
      },
      "100": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 61
        }
      },
      "101": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 243,
          column: 52
        }
      },
      "102": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 52
        }
      },
      "103": {
        start: {
          line: 244,
          column: 22
        },
        end: {
          line: 244,
          column: 70
        }
      },
      "104": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 54
        }
      },
      "105": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "106": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "107": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 260,
          column: 44
        }
      },
      "108": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 262,
          column: 61
        }
      },
      "109": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 61
        }
      },
      "110": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 264,
          column: 52
        }
      },
      "111": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 52
        }
      },
      "112": {
        start: {
          line: 265,
          column: 22
        },
        end: {
          line: 265,
          column: 70
        }
      },
      "113": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "114": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 47
        }
      },
      "115": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "116": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 281,
          column: 11
        }
      },
      "117": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 11
        }
      },
      "118": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 65
        }
      },
      "119": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 295,
          column: 11
        }
      },
      "120": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 42
        }
      },
      "121": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 55
        }
      },
      "122": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "123": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 315,
          column: 11
        }
      },
      "124": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "125": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 47
        }
      },
      "126": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 79
        }
      },
      "127": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 57
        }
      },
      "128": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 85
        }
      },
      "129": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "130": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "131": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 353,
          column: 11
        }
      },
      "132": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 64
        }
      },
      "133": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 363,
          column: 11
        }
      },
      "134": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 369,
          column: 11
        }
      },
      "135": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 11
        }
      },
      "136": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "137": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "138": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 394,
          column: 11
        }
      },
      "139": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 52
        }
      },
      "140": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 404,
          column: 11
        }
      },
      "141": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 69
        }
      },
      "142": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "143": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 420,
          column: 11
        }
      },
      "144": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 66
        }
      },
      "145": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 62
        }
      },
      "146": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 433,
          column: 11
        }
      },
      "147": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      },
      "148": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 44
        }
      },
      "149": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 446,
          column: 11
        }
      },
      "150": {
        start: {
          line: 450,
          column: 23
        },
        end: {
          line: 455,
          column: 10
        }
      },
      "151": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "152": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 42
        }
      },
      "153": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 65
        }
      },
      "154": {
        start: {
          line: 462,
          column: 25
        },
        end: {
          line: 462,
          column: 40
        }
      },
      "155": {
        start: {
          line: 463,
          column: 23
        },
        end: {
          line: 469,
          column: 10
        }
      },
      "156": {
        start: {
          line: 470,
          column: 25
        },
        end: {
          line: 477,
          column: 10
        }
      },
      "157": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "158": {
        start: {
          line: 479,
          column: 30
        },
        end: {
          line: 479,
          column: 51
        }
      },
      "159": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 74
        }
      },
      "160": {
        start: {
          line: 482,
          column: 26
        },
        end: {
          line: 482,
          column: 47
        }
      },
      "161": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 488,
          column: 10
        }
      },
      "162": {
        start: {
          line: 491,
          column: 25
        },
        end: {
          line: 491,
          column: 40
        }
      },
      "163": {
        start: {
          line: 492,
          column: 23
        },
        end: {
          line: 497,
          column: 10
        }
      },
      "164": {
        start: {
          line: 498,
          column: 25
        },
        end: {
          line: 505,
          column: 10
        }
      },
      "165": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "166": {
        start: {
          line: 507,
          column: 30
        },
        end: {
          line: 507,
          column: 51
        }
      },
      "167": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 73
        }
      },
      "168": {
        start: {
          line: 510,
          column: 26
        },
        end: {
          line: 510,
          column: 47
        }
      },
      "169": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 516,
          column: 10
        }
      },
      "170": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 45
        }
      },
      "171": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 526,
          column: 11
        }
      },
      "172": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 89
        }
      },
      "173": {
        start: {
          line: 532,
          column: 0
        },
        end: {
          line: 532,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 101
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 107
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 113
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 37
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 26
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 39
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 133
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 43
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 139
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 145
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 31
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 150
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 161
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 170
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 30
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 173
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 39
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 179
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 190
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 43
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 193
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 199
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 204
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 36
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 208
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 25
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 217
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 37
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 220
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 41
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 226
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 28
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 232
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 37
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 238
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 39
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 247
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 29
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 253
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 259
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 21
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 268
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 29
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 271
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 277
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 283
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 38
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 288
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 49
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 291
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 32
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 298
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 33
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 302
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        loc: {
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 305
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 59
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 311
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 49
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 317
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 25
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 323
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 32
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 326
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 34
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 329
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 37
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 332
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 44
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 336
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 45
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 342
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 39
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 349
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        loc: {
          start: {
            line: 356,
            column: 37
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 356
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 48
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 359
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 57
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 365
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 51
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 371
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 45
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 377
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 47
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 384
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 47
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 390
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 26
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 397
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 43
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 400
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        },
        loc: {
          start: {
            line: 407,
            column: 35
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 407
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        loc: {
          start: {
            line: 410,
            column: 44
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 410
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 32
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 416
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        loc: {
          start: {
            line: 422,
            column: 29
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 422
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 28
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 425
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 27
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 429
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 19
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 435
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 27
          },
          end: {
            line: 442,
            column: 5
          }
        },
        line: 440
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 27
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 443
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 41
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 449
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        loc: {
          start: {
            line: 461,
            column: 43
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 461
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 51
          },
          end: {
            line: 517,
            column: 5
          }
        },
        line: 490
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 5
          }
        },
        loc: {
          start: {
            line: 519,
            column: 23
          },
          end: {
            line: 521,
            column: 5
          }
        },
        line: 519
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        loc: {
          start: {
            line: 522,
            column: 35
          },
          end: {
            line: 527,
            column: 5
          }
        },
        line: 522
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 528,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        },
        loc: {
          start: {
            line: 528,
            column: 41
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 528
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 36
          }
        }, {
          start: {
            line: 20,
            column: 40
          },
          end: {
            line: 20,
            column: 59
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 42
          },
          end: {
            line: 30,
            column: 44
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 22
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 22
          }
        }, {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 24
          }
        }, {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 24
          }
        }, {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 58,
            column: 22
          }
        }, {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 61,
            column: 55
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 39
          }
        }, {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 45
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "12": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 27
          }
        }, {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 71
          }
        }],
        line: 76
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 89,
            column: 31
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 92,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 92,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 94,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 94,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "17": {
        loc: {
          start: {
            line: 95,
            column: 22
          },
          end: {
            line: 95,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 65
          }
        }, {
          start: {
            line: 95,
            column: 68
          },
          end: {
            line: 95,
            column: 70
          }
        }],
        line: 95
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 119,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 35
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 122,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 124,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 124,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 126,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 126,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "22": {
        loc: {
          start: {
            line: 127,
            column: 22
          },
          end: {
            line: 127,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 42
          },
          end: {
            line: 127,
            column: 65
          }
        }, {
          start: {
            line: 127,
            column: 68
          },
          end: {
            line: 127,
            column: 70
          }
        }],
        line: 127
      },
      "23": {
        loc: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 161,
            column: 36
          }
        }],
        line: 161
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 164,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 164,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "26": {
        loc: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 167,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 167,
            column: 65
          }
        }, {
          start: {
            line: 167,
            column: 68
          },
          end: {
            line: 167,
            column: 70
          }
        }],
        line: 167
      },
      "27": {
        loc: {
          start: {
            line: 179,
            column: 25
          },
          end: {
            line: 179,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 179,
            column: 35
          },
          end: {
            line: 179,
            column: 37
          }
        }],
        line: 179
      },
      "28": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 182,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 182,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "29": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 184,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 184,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "30": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 186,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 186,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "31": {
        loc: {
          start: {
            line: 187,
            column: 22
          },
          end: {
            line: 187,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 42
          },
          end: {
            line: 187,
            column: 65
          }
        }, {
          start: {
            line: 187,
            column: 68
          },
          end: {
            line: 187,
            column: 70
          }
        }],
        line: 187
      },
      "32": {
        loc: {
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 208,
            column: 34
          }
        }],
        line: 208
      },
      "33": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 211,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 211,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "34": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "35": {
        loc: {
          start: {
            line: 214,
            column: 22
          },
          end: {
            line: 214,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 42
          },
          end: {
            line: 214,
            column: 65
          }
        }, {
          start: {
            line: 214,
            column: 68
          },
          end: {
            line: 214,
            column: 70
          }
        }],
        line: 214
      },
      "36": {
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 33
          },
          end: {
            line: 238,
            column: 35
          }
        }],
        line: 238
      },
      "37": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 241,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 241,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "38": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 243,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 243,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "39": {
        loc: {
          start: {
            line: 244,
            column: 22
          },
          end: {
            line: 244,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 42
          },
          end: {
            line: 244,
            column: 65
          }
        }, {
          start: {
            line: 244,
            column: 68
          },
          end: {
            line: 244,
            column: 70
          }
        }],
        line: 244
      },
      "40": {
        loc: {
          start: {
            line: 259,
            column: 18
          },
          end: {
            line: 259,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 259,
            column: 28
          },
          end: {
            line: 259,
            column: 30
          }
        }],
        line: 259
      },
      "41": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 262,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 262,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "42": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 264,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 264,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "43": {
        loc: {
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 265,
            column: 65
          }
        }, {
          start: {
            line: 265,
            column: 68
          },
          end: {
            line: 265,
            column: 70
          }
        }],
        line: 265
      },
      "44": {
        loc: {
          start: {
            line: 410,
            column: 29
          },
          end: {
            line: 410,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 410,
            column: 40
          },
          end: {
            line: 410,
            column: 42
          }
        }],
        line: 410
      },
      "45": {
        loc: {
          start: {
            line: 454,
            column: 19
          },
          end: {
            line: 454,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 19
          },
          end: {
            line: 454,
            column: 42
          }
        }, {
          start: {
            line: 454,
            column: 46
          },
          end: {
            line: 454,
            column: 48
          }
        }],
        line: 454
      },
      "46": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "47": {
        loc: {
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "48": {
        loc: {
          start: {
            line: 487,
            column: 23
          },
          end: {
            line: 487,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 23
          },
          end: {
            line: 487,
            column: 43
          }
        }, {
          start: {
            line: 487,
            column: 47
          },
          end: {
            line: 487,
            column: 55
          }
        }],
        line: 487
      },
      "49": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "50": {
        loc: {
          start: {
            line: 513,
            column: 26
          },
          end: {
            line: 513,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 26
          },
          end: {
            line: 513,
            column: 49
          }
        }, {
          start: {
            line: 513,
            column: 53
          },
          end: {
            line: 513,
            column: 65
          }
        }],
        line: 513
      },
      "51": {
        loc: {
          start: {
            line: 515,
            column: 23
          },
          end: {
            line: 515,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 23
          },
          end: {
            line: 515,
            column: 43
          }
        }, {
          start: {
            line: 515,
            column: 47
          },
          end: {
            line: 515,
            column: 55
          }
        }],
        line: 515
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0, 0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/client/n8nClient.ts"],
      sourcesContent: ["import fetch from 'node-fetch';\nimport {\n  N8nUser,\n  N8nWorkflow,\n  N8nExecution,\n  N8nCredential,\n  N8nProject,\n  N8nVariable,\n  N8nTag,\n  N8nAuditReport,\n  N8nCommunityPackage,\n  N8nNodeTypeDescription,\n  ApiResponse,\n  PaginationOptions,\n  CreateUserRequest,\n  UpdateUserRequest,\n  CreateWorkflowRequest,\n  UpdateWorkflowRequest,\n  CreateCredentialRequest,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  CreateVariableRequest,\n  CreateTagRequest,\n  UpdateTagRequest,\n  CommunityPackageInstallRequest,\n  CommunityPackageUpdateRequest,\n  DynamicNodeOptions,\n  DynamicNodeParameter,\n  ResourceLocatorResult,\n  AINodeClassification,\n  AINodeSuggestion,\n  ProjectUserRequest,\n  ProjectUserResponse,\n  WorkflowTransferRequest,\n  CredentialTransferRequest,\n  UserRoleUpdateRequest,\n  SourceControlStatus,\n  SourceControlCommit,\n  SourceControlPullRequest,\n  SourceControlBranchRequest,\n  AuthenticationConfig,\n  SessionInfo,\n  LoginRequest,\n  LoginResponse,\n  OAuth2Config,\n  OAuth2Token,\n  VariableUpdateRequest,\n} from '../types/n8n.js';\n\nexport class N8nClient {\n  private authConfig: AuthenticationConfig;\n\n  constructor(\n    private baseUrl: string,\n    private apiKey: string,\n    authConfig?: AuthenticationConfig\n  ) {\n    // Remove trailing slash if present\n    this.baseUrl = baseUrl.replace(/\\/$/, '');\n    // Ensure apiKey is properly assigned\n    this.apiKey = apiKey;\n    // Set up authentication configuration\n    this.authConfig = authConfig || { type: 'api-key' };\n  }\n\n  // Method to update authentication configuration\n  setAuthConfig(config: AuthenticationConfig): void {\n    this.authConfig = config;\n  }\n\n  // Method to get current authentication configuration\n  getAuthConfig(): AuthenticationConfig {\n    return this.authConfig;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: Record<string, unknown> = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}/api/v1${endpoint}`;\n    const headers: Record<string, string> = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n\n    // Apply authentication based on configuration\n    switch (this.authConfig.type) {\n      case 'api-key':\n        headers['X-N8N-API-KEY'] = this.apiKey;\n        break;\n      case 'session':\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      case 'oauth2':\n        if (this.authConfig.credentials?.accessToken) {\n          headers['Authorization'] = `Bearer ${this.authConfig.credentials.accessToken}`;\n        }\n        break;\n      case 'saml':\n      case 'oidc':\n      case 'ldap':\n        // These typically use session-based auth after initial login\n        if (this.authConfig.sessionToken) {\n          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;\n        }\n        break;\n      default:\n        // Fallback to API key\n        headers['X-N8N-API-KEY'] = this.apiKey;\n    }\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: {\n          ...headers,\n          ...((options.headers as Record<string, string>) || {}),\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return (await response.json()) as T;\n      }\n\n      return (await response.text()) as unknown as T;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`n8n API request failed: ${error.message}`);\n      }\n      throw new Error('n8n API request failed with unknown error');\n    }\n  }\n\n  // User Management\n  async getUsers(options: PaginationOptions = {}): Promise<ApiResponse<N8nUser[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nUser[]>>(`/users${query}`);\n  }\n\n  async getUser(id: string): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`);\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(id: string, userData: UpdateUserRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.makeRequest<void>(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Workflow Management\n  async getWorkflows(options: PaginationOptions = {}): Promise<ApiResponse<N8nWorkflow[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nWorkflow[]>>(`/workflows${query}`);\n  }\n\n  async getWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`);\n  }\n\n  async createWorkflow(workflowData: CreateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>('/workflows', {\n      method: 'POST',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async updateWorkflow(id: string, workflowData: UpdateWorkflowRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(workflowData),\n    });\n  }\n\n  async deleteWorkflow(id: string): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async activateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/activate`, {\n      method: 'POST',\n    });\n  }\n\n  async deactivateWorkflow(id: string): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/deactivate`, {\n      method: 'POST',\n    });\n  }\n\n  // Execution Management\n  async getExecutions(options: PaginationOptions = {}): Promise<ApiResponse<N8nExecution[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nExecution[]>>(`/executions${query}`);\n  }\n\n  async getExecution(id: string): Promise<N8nExecution> {\n    return this.makeRequest<N8nExecution>(`/executions/${id}`);\n  }\n\n  async deleteExecution(id: string): Promise<void> {\n    await this.makeRequest<void>(`/executions/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Credential Management\n  async getCredentials(options: PaginationOptions = {}): Promise<ApiResponse<N8nCredential[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n    if (options.projectId) params.append('projectId', options.projectId);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nCredential[]>>(`/credentials${query}`);\n  }\n\n  async getCredential(id: string): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`);\n  }\n\n  async createCredential(credentialData: CreateCredentialRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>('/credentials', {\n      method: 'POST',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async deleteCredential(id: string): Promise<void> {\n    await this.makeRequest<void>(`/credentials/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getCredentialSchema(credentialType: string): Promise<Record<string, unknown>> {\n    return this.makeRequest<Record<string, unknown>>(`/credentials/schema/${credentialType}`);\n  }\n\n  // Project Management (Enterprise)\n  async getProjects(options: PaginationOptions = {}): Promise<ApiResponse<N8nProject[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nProject[]>>(`/projects${query}`);\n  }\n\n  async getProject(id: string): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`);\n  }\n\n  async createProject(projectData: CreateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>('/projects', {\n      method: 'POST',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async updateProject(id: string, projectData: UpdateProjectRequest): Promise<N8nProject> {\n    return this.makeRequest<N8nProject>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(projectData),\n    });\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Variable Management (Enterprise)\n  async getVariables(options: PaginationOptions = {}): Promise<ApiResponse<N8nVariable[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nVariable[]>>(`/variables${query}`);\n  }\n\n  async createVariable(variableData: CreateVariableRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>('/variables', {\n      method: 'POST',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  async deleteVariable(id: string): Promise<void> {\n    await this.makeRequest<void>(`/variables/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tag Management\n  async getTags(options: PaginationOptions = {}): Promise<ApiResponse<N8nTag[]>> {\n    const params = new URLSearchParams();\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.cursor) params.append('cursor', options.cursor);\n\n    const query = params.toString() ? `?${params.toString()}` : '';\n    return this.makeRequest<ApiResponse<N8nTag[]>>(`/tags${query}`);\n  }\n\n  async getTag(id: string): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`);\n  }\n\n  async createTag(tagData: CreateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>('/tags', {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(id: string, tagData: UpdateTagRequest): Promise<N8nTag> {\n    return this.makeRequest<N8nTag>(`/tags/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(id: string): Promise<void> {\n    await this.makeRequest<void>(`/tags/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWorkflowTags(workflowId: string): Promise<N8nTag[]> {\n    return this.makeRequest<N8nTag[]>(`/workflows/${workflowId}/tags`);\n  }\n\n  async updateWorkflowTags(workflowId: string, tagIds: string[]): Promise<void> {\n    await this.makeRequest<void>(`/workflows/${workflowId}/tags`, {\n      method: 'PUT',\n      body: JSON.stringify({ tagIds }),\n    });\n  }\n\n  // Audit Report\n  async generateAuditReport(): Promise<N8nAuditReport> {\n    return this.makeRequest<N8nAuditReport>('/audit');\n  }\n\n  // Community Package Management\n  async getCommunityPackages(): Promise<ApiResponse<N8nCommunityPackage[]>> {\n    return this.makeRequest<ApiResponse<N8nCommunityPackage[]>>('/community-packages');\n  }\n\n  async installCommunityPackage(packageData: CommunityPackageInstallRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>('/community-packages', {\n      method: 'POST',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async updateCommunityPackage(packageName: string, packageData: CommunityPackageUpdateRequest): Promise<N8nCommunityPackage> {\n    return this.makeRequest<N8nCommunityPackage>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'PATCH',\n      body: JSON.stringify(packageData),\n    });\n  }\n\n  async uninstallCommunityPackage(packageName: string): Promise<void> {\n    await this.makeRequest<void>(`/community-packages/${encodeURIComponent(packageName)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Node Type Management\n  async getNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/node-types');\n  }\n\n  async getNodeType(nodeType: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/node-types/${encodeURIComponent(nodeType)}`);\n  }\n\n  async getCommunityNodeTypes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/community-node-types');\n  }\n\n  async getCommunityNodeType(name: string): Promise<N8nNodeTypeDescription> {\n    return this.makeRequest<N8nNodeTypeDescription>(`/community-node-types/${encodeURIComponent(name)}`);\n  }\n\n  // Dynamic Node Parameters\n  async getDynamicNodeParameters(options: DynamicNodeOptions): Promise<DynamicNodeParameter[]> {\n    return this.makeRequest<DynamicNodeParameter[]>('/dynamic-node-parameters/options', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  async getResourceLocatorResults(options: DynamicNodeOptions): Promise<ResourceLocatorResult[]> {\n    return this.makeRequest<ResourceLocatorResult[]>('/dynamic-node-parameters/resource-locator', {\n      method: 'POST',\n      body: JSON.stringify(options),\n    });\n  }\n\n  // Enhanced User Management (n8n fork)\n  async updateUserRole(id: string, roleData: UserRoleUpdateRequest): Promise<N8nUser> {\n    return this.makeRequest<N8nUser>(`/users/${id}/role`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  // Enhanced Project Management (n8n fork)\n  async getProjectUsers(projectId: string): Promise<ProjectUserResponse[]> {\n    return this.makeRequest<ProjectUserResponse[]>(`/projects/${projectId}/users`);\n  }\n\n  async addUserToProject(projectId: string, userData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users`, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateProjectUser(projectId: string, userId: string, roleData: ProjectUserRequest): Promise<ProjectUserResponse> {\n    return this.makeRequest<ProjectUserResponse>(`/projects/${projectId}/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(roleData),\n    });\n  }\n\n  async removeUserFromProject(projectId: string, userId: string): Promise<void> {\n    await this.makeRequest<void>(`/projects/${projectId}/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Enhanced Workflow Management (n8n fork)\n  async transferWorkflow(id: string, transferData: WorkflowTransferRequest): Promise<N8nWorkflow> {\n    return this.makeRequest<N8nWorkflow>(`/workflows/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Credential Management (n8n fork)  \n  async updateCredential(id: string, credentialData: Partial<CreateCredentialRequest>): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(credentialData),\n    });\n  }\n\n  async transferCredential(id: string, transferData: CredentialTransferRequest): Promise<N8nCredential> {\n    return this.makeRequest<N8nCredential>(`/credentials/${id}/transfer`, {\n      method: 'PUT',\n      body: JSON.stringify(transferData),\n    });\n  }\n\n  // Enhanced Variable Management (n8n fork)\n  async getVariable(id: string): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`);\n  }\n\n  async updateVariable(id: string, variableData: VariableUpdateRequest): Promise<N8nVariable> {\n    return this.makeRequest<N8nVariable>(`/variables/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(variableData),\n    });\n  }\n\n  // Source Control Integration (Enterprise n8n fork)\n  async getSourceControlStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/repository-status');\n  }\n\n  async pullFromRepository(pullData: SourceControlPullRequest = {}): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/pull', {\n      method: 'POST',\n      body: JSON.stringify(pullData),\n    });\n  }\n\n  async setBranch(branchData: SourceControlBranchRequest): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/set-branch', {\n      method: 'POST',\n      body: JSON.stringify(branchData),\n    });\n  }\n\n  async getCommitHistory(): Promise<SourceControlCommit[]> {\n    return this.makeRequest<SourceControlCommit[]>('/source-control/commit-history');\n  }\n\n  async checkSyncStatus(): Promise<SourceControlStatus> {\n    return this.makeRequest<SourceControlStatus>('/source-control/sync-check');\n  }\n\n  // Authentication Methods (n8n fork)\n  async login(loginData: LoginRequest): Promise<LoginResponse> {\n    return this.makeRequest<LoginResponse>('/login', {\n      method: 'POST',\n      body: JSON.stringify(loginData),\n    });\n  }\n\n  async logout(): Promise<void> {\n    await this.makeRequest<void>('/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getSessionInfo(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session');\n  }\n\n  async refreshSession(): Promise<SessionInfo> {\n    return this.makeRequest<SessionInfo>('/session/refresh', {\n      method: 'POST',\n    });\n  }\n\n  // OAuth2 Helper Methods (n8n fork)\n  generateOAuth2AuthUrl(config: OAuth2Config, state?: string): string {\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scope?.join(' ') || '',\n    });\n\n    if (state) {\n      params.append('state', state);\n    }\n\n    return `${config.authorizationUrl}?${params.toString()}`;\n  }\n\n  async exchangeOAuth2Code(config: OAuth2Config, code: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'authorization_code',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      code,\n      redirect_uri: config.redirectUri,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token exchange failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  async refreshOAuth2Token(config: OAuth2Config, refreshToken: string): Promise<OAuth2Token> {\n    const tokenUrl = config.tokenUrl;\n    const params = new URLSearchParams({\n      grant_type: 'refresh_token',\n      client_id: config.clientId,\n      client_secret: config.clientSecret,\n      refresh_token: refreshToken,\n    });\n\n    const response = await fetch(tokenUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      },\n      body: params.toString(),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`OAuth2 token refresh failed: ${errorText}`);\n    }\n\n    const tokenData = await response.json() as any;\n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token || refreshToken, // Keep old refresh token if new one not provided\n      expiresIn: tokenData.expires_in,\n      tokenType: tokenData.token_type || 'Bearer',\n    };\n  }\n\n  // AI Node Features\n  async getAINodes(): Promise<N8nNodeTypeDescription[]> {\n    return this.makeRequest<N8nNodeTypeDescription[]>('/ai-nodes');\n  }\n\n  async classifyAINode(nodeType: string): Promise<AINodeClassification> {\n    return this.makeRequest<AINodeClassification>('/ai-nodes/classify', {\n      method: 'POST',\n      body: JSON.stringify({ nodeType }),\n    });\n  }\n\n  async getAINodeSuggestions(nodeType: string): Promise<AINodeSuggestion[]> {\n    return this.makeRequest<AINodeSuggestion[]>(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aa994eb45d8affe01141f7e922cdcbd2e6055826"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ts539ri58 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ts539ri58();
var __importDefault =
/* istanbul ignore next */
(cov_1ts539ri58().s[0]++,
/* istanbul ignore next */
(cov_1ts539ri58().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ts539ri58().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ts539ri58().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ts539ri58().f[0]++;
  cov_1ts539ri58().s[1]++;
  return /* istanbul ignore next */(cov_1ts539ri58().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ts539ri58().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ts539ri58().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ts539ri58().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ts539ri58().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ts539ri58().s[3]++;
exports.N8nClient = void 0;
const node_fetch_1 =
/* istanbul ignore next */
(cov_1ts539ri58().s[4]++, __importDefault(require("node-fetch")));
class N8nClient {
  baseUrl;
  apiKey;
  authConfig;
  constructor(baseUrl, apiKey, authConfig) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[1]++;
    cov_1ts539ri58().s[5]++;
    this.baseUrl = baseUrl;
    /* istanbul ignore next */
    cov_1ts539ri58().s[6]++;
    this.apiKey = apiKey;
    // Remove trailing slash if present
    /* istanbul ignore next */
    cov_1ts539ri58().s[7]++;
    this.baseUrl = baseUrl.replace(/\/$/, '');
    // Ensure apiKey is properly assigned
    /* istanbul ignore next */
    cov_1ts539ri58().s[8]++;
    this.apiKey = apiKey;
    // Set up authentication configuration
    /* istanbul ignore next */
    cov_1ts539ri58().s[9]++;
    this.authConfig =
    /* istanbul ignore next */
    (cov_1ts539ri58().b[3][0]++, authConfig) ||
    /* istanbul ignore next */
    (cov_1ts539ri58().b[3][1]++, {
      type: 'api-key'
    });
  }
  // Method to update authentication configuration
  setAuthConfig(config) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[2]++;
    cov_1ts539ri58().s[10]++;
    this.authConfig = config;
  }
  // Method to get current authentication configuration
  getAuthConfig() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[3]++;
    cov_1ts539ri58().s[11]++;
    return this.authConfig;
  }
  async makeRequest(endpoint, options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[4]++;
    const url =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[12]++, `${this.baseUrl}/api/v1${endpoint}`);
    const headers =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[13]++, {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    });
    // Apply authentication based on configuration
    /* istanbul ignore next */
    cov_1ts539ri58().s[14]++;
    switch (this.authConfig.type) {
      case 'api-key':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][0]++;
        cov_1ts539ri58().s[15]++;
        headers['X-N8N-API-KEY'] = this.apiKey;
        /* istanbul ignore next */
        cov_1ts539ri58().s[16]++;
        break;
      case 'session':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][1]++;
        cov_1ts539ri58().s[17]++;
        if (this.authConfig.sessionToken) {
          /* istanbul ignore next */
          cov_1ts539ri58().b[6][0]++;
          cov_1ts539ri58().s[18]++;
          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;
        } else
        /* istanbul ignore next */
        {
          cov_1ts539ri58().b[6][1]++;
        }
        cov_1ts539ri58().s[19]++;
        break;
      case 'oauth2':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][2]++;
        cov_1ts539ri58().s[20]++;
        if (this.authConfig.credentials?.accessToken) {
          /* istanbul ignore next */
          cov_1ts539ri58().b[7][0]++;
          cov_1ts539ri58().s[21]++;
          headers['Authorization'] = `Bearer ${this.authConfig.credentials.accessToken}`;
        } else
        /* istanbul ignore next */
        {
          cov_1ts539ri58().b[7][1]++;
        }
        cov_1ts539ri58().s[22]++;
        break;
      case 'saml':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][3]++;
      case 'oidc':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][4]++;
      case 'ldap':
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][5]++;
        cov_1ts539ri58().s[23]++;
        // These typically use session-based auth after initial login
        if (this.authConfig.sessionToken) {
          /* istanbul ignore next */
          cov_1ts539ri58().b[8][0]++;
          cov_1ts539ri58().s[24]++;
          headers['Cookie'] = `n8n-auth=${this.authConfig.sessionToken}`;
        } else
        /* istanbul ignore next */
        {
          cov_1ts539ri58().b[8][1]++;
        }
        cov_1ts539ri58().s[25]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1ts539ri58().b[5][6]++;
        cov_1ts539ri58().s[26]++;
        // Fallback to API key
        headers['X-N8N-API-KEY'] = this.apiKey;
    }
    /* istanbul ignore next */
    cov_1ts539ri58().s[27]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[28]++, await (0, node_fetch_1.default)(url, {
        ...options,
        headers: {
          ...headers,
          ...(
          /* istanbul ignore next */
          (cov_1ts539ri58().b[9][0]++, options.headers) ||
          /* istanbul ignore next */
          (cov_1ts539ri58().b[9][1]++, {}))
        }
      }));
      /* istanbul ignore next */
      cov_1ts539ri58().s[29]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[10][0]++;
        const errorText =
        /* istanbul ignore next */
        (cov_1ts539ri58().s[30]++, await response.text());
        /* istanbul ignore next */
        cov_1ts539ri58().s[31]++;
        throw new Error(`HTTP ${response.status}: ${errorText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[10][1]++;
      }
      const contentType =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[32]++, response.headers.get('content-type'));
      /* istanbul ignore next */
      cov_1ts539ri58().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_1ts539ri58().b[12][0]++, contentType) &&
      /* istanbul ignore next */
      (cov_1ts539ri58().b[12][1]++, contentType.includes('application/json'))) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[11][0]++;
        cov_1ts539ri58().s[34]++;
        return await response.json();
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[11][1]++;
      }
      cov_1ts539ri58().s[35]++;
      return await response.text();
    } catch (error) {
      /* istanbul ignore next */
      cov_1ts539ri58().s[36]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_1ts539ri58().b[13][0]++;
        cov_1ts539ri58().s[37]++;
        throw new Error(`n8n API request failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_1ts539ri58().b[13][1]++;
      }
      cov_1ts539ri58().s[38]++;
      throw new Error('n8n API request failed with unknown error');
    }
  }
  // User Management
  async getUsers(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[14][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[5]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[39]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[40]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[15][0]++;
      cov_1ts539ri58().s[41]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[15][1]++;
    }
    cov_1ts539ri58().s[42]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[16][0]++;
      cov_1ts539ri58().s[43]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[16][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[44]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[17][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[17][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[45]++;
    return this.makeRequest(`/users${query}`);
  }
  async getUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[6]++;
    cov_1ts539ri58().s[46]++;
    return this.makeRequest(`/users/${id}`);
  }
  async createUser(userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[7]++;
    cov_1ts539ri58().s[47]++;
    return this.makeRequest('/users', {
      method: 'POST',
      body: JSON.stringify(userData)
    });
  }
  async updateUser(id, userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[8]++;
    cov_1ts539ri58().s[48]++;
    return this.makeRequest(`/users/${id}`, {
      method: 'PATCH',
      body: JSON.stringify(userData)
    });
  }
  async deleteUser(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[9]++;
    cov_1ts539ri58().s[49]++;
    await this.makeRequest(`/users/${id}`, {
      method: 'DELETE'
    });
  }
  // Workflow Management
  async getWorkflows(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[18][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[10]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[50]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[51]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[19][0]++;
      cov_1ts539ri58().s[52]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[19][1]++;
    }
    cov_1ts539ri58().s[53]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[20][0]++;
      cov_1ts539ri58().s[54]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[20][1]++;
    }
    cov_1ts539ri58().s[55]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[21][0]++;
      cov_1ts539ri58().s[56]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[21][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[57]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[22][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[22][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[58]++;
    return this.makeRequest(`/workflows${query}`);
  }
  async getWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[11]++;
    cov_1ts539ri58().s[59]++;
    return this.makeRequest(`/workflows/${id}`);
  }
  async createWorkflow(workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[12]++;
    cov_1ts539ri58().s[60]++;
    return this.makeRequest('/workflows', {
      method: 'POST',
      body: JSON.stringify(workflowData)
    });
  }
  async updateWorkflow(id, workflowData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[13]++;
    cov_1ts539ri58().s[61]++;
    return this.makeRequest(`/workflows/${id}`, {
      method: 'PUT',
      body: JSON.stringify(workflowData)
    });
  }
  async deleteWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[14]++;
    cov_1ts539ri58().s[62]++;
    await this.makeRequest(`/workflows/${id}`, {
      method: 'DELETE'
    });
  }
  async activateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[15]++;
    cov_1ts539ri58().s[63]++;
    return this.makeRequest(`/workflows/${id}/activate`, {
      method: 'POST'
    });
  }
  async deactivateWorkflow(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[16]++;
    cov_1ts539ri58().s[64]++;
    return this.makeRequest(`/workflows/${id}/deactivate`, {
      method: 'POST'
    });
  }
  // Execution Management
  async getExecutions(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[23][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[17]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[65]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[66]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[24][0]++;
      cov_1ts539ri58().s[67]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[24][1]++;
    }
    cov_1ts539ri58().s[68]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[25][0]++;
      cov_1ts539ri58().s[69]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[25][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[70]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[26][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[26][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[71]++;
    return this.makeRequest(`/executions${query}`);
  }
  async getExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[18]++;
    cov_1ts539ri58().s[72]++;
    return this.makeRequest(`/executions/${id}`);
  }
  async deleteExecution(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[19]++;
    cov_1ts539ri58().s[73]++;
    await this.makeRequest(`/executions/${id}`, {
      method: 'DELETE'
    });
  }
  // Credential Management
  async getCredentials(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[27][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[20]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[74]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[75]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[28][0]++;
      cov_1ts539ri58().s[76]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[28][1]++;
    }
    cov_1ts539ri58().s[77]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[29][0]++;
      cov_1ts539ri58().s[78]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[29][1]++;
    }
    cov_1ts539ri58().s[79]++;
    if (options.projectId) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[30][0]++;
      cov_1ts539ri58().s[80]++;
      params.append('projectId', options.projectId);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[30][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[81]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[31][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[31][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[82]++;
    return this.makeRequest(`/credentials${query}`);
  }
  async getCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[21]++;
    cov_1ts539ri58().s[83]++;
    return this.makeRequest(`/credentials/${id}`);
  }
  async createCredential(credentialData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[22]++;
    cov_1ts539ri58().s[84]++;
    return this.makeRequest('/credentials', {
      method: 'POST',
      body: JSON.stringify(credentialData)
    });
  }
  async deleteCredential(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[23]++;
    cov_1ts539ri58().s[85]++;
    await this.makeRequest(`/credentials/${id}`, {
      method: 'DELETE'
    });
  }
  async getCredentialSchema(credentialType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[24]++;
    cov_1ts539ri58().s[86]++;
    return this.makeRequest(`/credentials/schema/${credentialType}`);
  }
  // Project Management (Enterprise)
  async getProjects(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[32][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[25]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[87]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[88]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[33][0]++;
      cov_1ts539ri58().s[89]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[33][1]++;
    }
    cov_1ts539ri58().s[90]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[34][0]++;
      cov_1ts539ri58().s[91]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[34][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[92]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[35][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[35][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[93]++;
    return this.makeRequest(`/projects${query}`);
  }
  async getProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[26]++;
    cov_1ts539ri58().s[94]++;
    return this.makeRequest(`/projects/${id}`);
  }
  async createProject(projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[27]++;
    cov_1ts539ri58().s[95]++;
    return this.makeRequest('/projects', {
      method: 'POST',
      body: JSON.stringify(projectData)
    });
  }
  async updateProject(id, projectData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[28]++;
    cov_1ts539ri58().s[96]++;
    return this.makeRequest(`/projects/${id}`, {
      method: 'PUT',
      body: JSON.stringify(projectData)
    });
  }
  async deleteProject(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[29]++;
    cov_1ts539ri58().s[97]++;
    await this.makeRequest(`/projects/${id}`, {
      method: 'DELETE'
    });
  }
  // Variable Management (Enterprise)
  async getVariables(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[36][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[30]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[98]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[99]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[37][0]++;
      cov_1ts539ri58().s[100]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[37][1]++;
    }
    cov_1ts539ri58().s[101]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[38][0]++;
      cov_1ts539ri58().s[102]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[38][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[103]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[39][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[39][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[104]++;
    return this.makeRequest(`/variables${query}`);
  }
  async createVariable(variableData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[31]++;
    cov_1ts539ri58().s[105]++;
    return this.makeRequest('/variables', {
      method: 'POST',
      body: JSON.stringify(variableData)
    });
  }
  async deleteVariable(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[32]++;
    cov_1ts539ri58().s[106]++;
    await this.makeRequest(`/variables/${id}`, {
      method: 'DELETE'
    });
  }
  // Tag Management
  async getTags(options =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[40][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[33]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[107]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1ts539ri58().s[108]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[41][0]++;
      cov_1ts539ri58().s[109]++;
      params.append('limit', options.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[41][1]++;
    }
    cov_1ts539ri58().s[110]++;
    if (options.cursor) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[42][0]++;
      cov_1ts539ri58().s[111]++;
      params.append('cursor', options.cursor);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[42][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[112]++, params.toString() ?
    /* istanbul ignore next */
    (cov_1ts539ri58().b[43][0]++, `?${params.toString()}`) :
    /* istanbul ignore next */
    (cov_1ts539ri58().b[43][1]++, ''));
    /* istanbul ignore next */
    cov_1ts539ri58().s[113]++;
    return this.makeRequest(`/tags${query}`);
  }
  async getTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[34]++;
    cov_1ts539ri58().s[114]++;
    return this.makeRequest(`/tags/${id}`);
  }
  async createTag(tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[35]++;
    cov_1ts539ri58().s[115]++;
    return this.makeRequest('/tags', {
      method: 'POST',
      body: JSON.stringify(tagData)
    });
  }
  async updateTag(id, tagData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[36]++;
    cov_1ts539ri58().s[116]++;
    return this.makeRequest(`/tags/${id}`, {
      method: 'PUT',
      body: JSON.stringify(tagData)
    });
  }
  async deleteTag(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[37]++;
    cov_1ts539ri58().s[117]++;
    await this.makeRequest(`/tags/${id}`, {
      method: 'DELETE'
    });
  }
  async getWorkflowTags(workflowId) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[38]++;
    cov_1ts539ri58().s[118]++;
    return this.makeRequest(`/workflows/${workflowId}/tags`);
  }
  async updateWorkflowTags(workflowId, tagIds) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[39]++;
    cov_1ts539ri58().s[119]++;
    await this.makeRequest(`/workflows/${workflowId}/tags`, {
      method: 'PUT',
      body: JSON.stringify({
        tagIds
      })
    });
  }
  // Audit Report
  async generateAuditReport() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[40]++;
    cov_1ts539ri58().s[120]++;
    return this.makeRequest('/audit');
  }
  // Community Package Management
  async getCommunityPackages() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[41]++;
    cov_1ts539ri58().s[121]++;
    return this.makeRequest('/community-packages');
  }
  async installCommunityPackage(packageData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[42]++;
    cov_1ts539ri58().s[122]++;
    return this.makeRequest('/community-packages', {
      method: 'POST',
      body: JSON.stringify(packageData)
    });
  }
  async updateCommunityPackage(packageName, packageData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[43]++;
    cov_1ts539ri58().s[123]++;
    return this.makeRequest(`/community-packages/${encodeURIComponent(packageName)}`, {
      method: 'PATCH',
      body: JSON.stringify(packageData)
    });
  }
  async uninstallCommunityPackage(packageName) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[44]++;
    cov_1ts539ri58().s[124]++;
    await this.makeRequest(`/community-packages/${encodeURIComponent(packageName)}`, {
      method: 'DELETE'
    });
  }
  // Node Type Management
  async getNodeTypes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[45]++;
    cov_1ts539ri58().s[125]++;
    return this.makeRequest('/node-types');
  }
  async getNodeType(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[46]++;
    cov_1ts539ri58().s[126]++;
    return this.makeRequest(`/node-types/${encodeURIComponent(nodeType)}`);
  }
  async getCommunityNodeTypes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[47]++;
    cov_1ts539ri58().s[127]++;
    return this.makeRequest('/community-node-types');
  }
  async getCommunityNodeType(name) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[48]++;
    cov_1ts539ri58().s[128]++;
    return this.makeRequest(`/community-node-types/${encodeURIComponent(name)}`);
  }
  // Dynamic Node Parameters
  async getDynamicNodeParameters(options) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[49]++;
    cov_1ts539ri58().s[129]++;
    return this.makeRequest('/dynamic-node-parameters/options', {
      method: 'POST',
      body: JSON.stringify(options)
    });
  }
  async getResourceLocatorResults(options) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[50]++;
    cov_1ts539ri58().s[130]++;
    return this.makeRequest('/dynamic-node-parameters/resource-locator', {
      method: 'POST',
      body: JSON.stringify(options)
    });
  }
  // Enhanced User Management (n8n fork)
  async updateUserRole(id, roleData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[51]++;
    cov_1ts539ri58().s[131]++;
    return this.makeRequest(`/users/${id}/role`, {
      method: 'PUT',
      body: JSON.stringify(roleData)
    });
  }
  // Enhanced Project Management (n8n fork)
  async getProjectUsers(projectId) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[52]++;
    cov_1ts539ri58().s[132]++;
    return this.makeRequest(`/projects/${projectId}/users`);
  }
  async addUserToProject(projectId, userData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[53]++;
    cov_1ts539ri58().s[133]++;
    return this.makeRequest(`/projects/${projectId}/users`, {
      method: 'POST',
      body: JSON.stringify(userData)
    });
  }
  async updateProjectUser(projectId, userId, roleData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[54]++;
    cov_1ts539ri58().s[134]++;
    return this.makeRequest(`/projects/${projectId}/users/${userId}`, {
      method: 'PUT',
      body: JSON.stringify(roleData)
    });
  }
  async removeUserFromProject(projectId, userId) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[55]++;
    cov_1ts539ri58().s[135]++;
    await this.makeRequest(`/projects/${projectId}/users/${userId}`, {
      method: 'DELETE'
    });
  }
  // Enhanced Workflow Management (n8n fork)
  async transferWorkflow(id, transferData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[56]++;
    cov_1ts539ri58().s[136]++;
    return this.makeRequest(`/workflows/${id}/transfer`, {
      method: 'PUT',
      body: JSON.stringify(transferData)
    });
  }
  // Enhanced Credential Management (n8n fork)  
  async updateCredential(id, credentialData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[57]++;
    cov_1ts539ri58().s[137]++;
    return this.makeRequest(`/credentials/${id}`, {
      method: 'PUT',
      body: JSON.stringify(credentialData)
    });
  }
  async transferCredential(id, transferData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[58]++;
    cov_1ts539ri58().s[138]++;
    return this.makeRequest(`/credentials/${id}/transfer`, {
      method: 'PUT',
      body: JSON.stringify(transferData)
    });
  }
  // Enhanced Variable Management (n8n fork)
  async getVariable(id) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[59]++;
    cov_1ts539ri58().s[139]++;
    return this.makeRequest(`/variables/${id}`);
  }
  async updateVariable(id, variableData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[60]++;
    cov_1ts539ri58().s[140]++;
    return this.makeRequest(`/variables/${id}`, {
      method: 'PUT',
      body: JSON.stringify(variableData)
    });
  }
  // Source Control Integration (Enterprise n8n fork)
  async getSourceControlStatus() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[61]++;
    cov_1ts539ri58().s[141]++;
    return this.makeRequest('/source-control/repository-status');
  }
  async pullFromRepository(pullData =
  /* istanbul ignore next */
  (cov_1ts539ri58().b[44][0]++, {})) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[62]++;
    cov_1ts539ri58().s[142]++;
    return this.makeRequest('/source-control/pull', {
      method: 'POST',
      body: JSON.stringify(pullData)
    });
  }
  async setBranch(branchData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[63]++;
    cov_1ts539ri58().s[143]++;
    return this.makeRequest('/source-control/set-branch', {
      method: 'POST',
      body: JSON.stringify(branchData)
    });
  }
  async getCommitHistory() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[64]++;
    cov_1ts539ri58().s[144]++;
    return this.makeRequest('/source-control/commit-history');
  }
  async checkSyncStatus() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[65]++;
    cov_1ts539ri58().s[145]++;
    return this.makeRequest('/source-control/sync-check');
  }
  // Authentication Methods (n8n fork)
  async login(loginData) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[66]++;
    cov_1ts539ri58().s[146]++;
    return this.makeRequest('/login', {
      method: 'POST',
      body: JSON.stringify(loginData)
    });
  }
  async logout() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[67]++;
    cov_1ts539ri58().s[147]++;
    await this.makeRequest('/logout', {
      method: 'POST'
    });
  }
  async getSessionInfo() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[68]++;
    cov_1ts539ri58().s[148]++;
    return this.makeRequest('/session');
  }
  async refreshSession() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[69]++;
    cov_1ts539ri58().s[149]++;
    return this.makeRequest('/session/refresh', {
      method: 'POST'
    });
  }
  // OAuth2 Helper Methods (n8n fork)
  generateOAuth2AuthUrl(config, state) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[70]++;
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[150]++, new URLSearchParams({
      response_type: 'code',
      client_id: config.clientId,
      redirect_uri: config.redirectUri,
      scope:
      /* istanbul ignore next */
      (cov_1ts539ri58().b[45][0]++, config.scope?.join(' ')) ||
      /* istanbul ignore next */
      (cov_1ts539ri58().b[45][1]++, '')
    }));
    /* istanbul ignore next */
    cov_1ts539ri58().s[151]++;
    if (state) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[46][0]++;
      cov_1ts539ri58().s[152]++;
      params.append('state', state);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[46][1]++;
    }
    cov_1ts539ri58().s[153]++;
    return `${config.authorizationUrl}?${params.toString()}`;
  }
  async exchangeOAuth2Code(config, code) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[71]++;
    const tokenUrl =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[154]++, config.tokenUrl);
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[155]++, new URLSearchParams({
      grant_type: 'authorization_code',
      client_id: config.clientId,
      client_secret: config.clientSecret,
      code,
      redirect_uri: config.redirectUri
    }));
    const response =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[156]++, await (0, node_fetch_1.default)(tokenUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        Accept: 'application/json'
      },
      body: params.toString()
    }));
    /* istanbul ignore next */
    cov_1ts539ri58().s[157]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[47][0]++;
      const errorText =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[158]++, await response.text());
      /* istanbul ignore next */
      cov_1ts539ri58().s[159]++;
      throw new Error(`OAuth2 token exchange failed: ${errorText}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[47][1]++;
    }
    const tokenData =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[160]++, await response.json());
    /* istanbul ignore next */
    cov_1ts539ri58().s[161]++;
    return {
      accessToken: tokenData.access_token,
      refreshToken: tokenData.refresh_token,
      expiresIn: tokenData.expires_in,
      tokenType:
      /* istanbul ignore next */
      (cov_1ts539ri58().b[48][0]++, tokenData.token_type) ||
      /* istanbul ignore next */
      (cov_1ts539ri58().b[48][1]++, 'Bearer')
    };
  }
  async refreshOAuth2Token(config, refreshToken) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[72]++;
    const tokenUrl =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[162]++, config.tokenUrl);
    const params =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[163]++, new URLSearchParams({
      grant_type: 'refresh_token',
      client_id: config.clientId,
      client_secret: config.clientSecret,
      refresh_token: refreshToken
    }));
    const response =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[164]++, await (0, node_fetch_1.default)(tokenUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        Accept: 'application/json'
      },
      body: params.toString()
    }));
    /* istanbul ignore next */
    cov_1ts539ri58().s[165]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1ts539ri58().b[49][0]++;
      const errorText =
      /* istanbul ignore next */
      (cov_1ts539ri58().s[166]++, await response.text());
      /* istanbul ignore next */
      cov_1ts539ri58().s[167]++;
      throw new Error(`OAuth2 token refresh failed: ${errorText}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ts539ri58().b[49][1]++;
    }
    const tokenData =
    /* istanbul ignore next */
    (cov_1ts539ri58().s[168]++, await response.json());
    /* istanbul ignore next */
    cov_1ts539ri58().s[169]++;
    return {
      accessToken: tokenData.access_token,
      refreshToken:
      /* istanbul ignore next */
      (cov_1ts539ri58().b[50][0]++, tokenData.refresh_token) ||
      /* istanbul ignore next */
      (cov_1ts539ri58().b[50][1]++, refreshToken),
      // Keep old refresh token if new one not provided
      expiresIn: tokenData.expires_in,
      tokenType:
      /* istanbul ignore next */
      (cov_1ts539ri58().b[51][0]++, tokenData.token_type) ||
      /* istanbul ignore next */
      (cov_1ts539ri58().b[51][1]++, 'Bearer')
    };
  }
  // AI Node Features
  async getAINodes() {
    /* istanbul ignore next */
    cov_1ts539ri58().f[73]++;
    cov_1ts539ri58().s[170]++;
    return this.makeRequest('/ai-nodes');
  }
  async classifyAINode(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[74]++;
    cov_1ts539ri58().s[171]++;
    return this.makeRequest('/ai-nodes/classify', {
      method: 'POST',
      body: JSON.stringify({
        nodeType
      })
    });
  }
  async getAINodeSuggestions(nodeType) {
    /* istanbul ignore next */
    cov_1ts539ri58().f[75]++;
    cov_1ts539ri58().s[172]++;
    return this.makeRequest(`/ai-nodes/${encodeURIComponent(nodeType)}/suggestions`);
  }
}
/* istanbul ignore next */
cov_1ts539ri58().s[173]++;
exports.N8nClient = N8nClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXRzNTM5cmk1OCIsImFjdHVhbENvdmVyYWdlIiwibm9kZV9mZXRjaF8xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJOOG5DbGllbnQiLCJiYXNlVXJsIiwiYXBpS2V5IiwiYXV0aENvbmZpZyIsImNvbnN0cnVjdG9yIiwiZiIsInJlcGxhY2UiLCJiIiwidHlwZSIsInNldEF1dGhDb25maWciLCJjb25maWciLCJnZXRBdXRoQ29uZmlnIiwibWFrZVJlcXVlc3QiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJ1cmwiLCJoZWFkZXJzIiwiQWNjZXB0Iiwic2Vzc2lvblRva2VuIiwiY3JlZGVudGlhbHMiLCJhY2Nlc3NUb2tlbiIsInJlc3BvbnNlIiwiZGVmYXVsdCIsIm9rIiwiZXJyb3JUZXh0IiwidGV4dCIsIkVycm9yIiwic3RhdHVzIiwiY29udGVudFR5cGUiLCJnZXQiLCJpbmNsdWRlcyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJnZXRVc2VycyIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImxpbWl0IiwiYXBwZW5kIiwidG9TdHJpbmciLCJjdXJzb3IiLCJxdWVyeSIsImdldFVzZXIiLCJpZCIsImNyZWF0ZVVzZXIiLCJ1c2VyRGF0YSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidXBkYXRlVXNlciIsImRlbGV0ZVVzZXIiLCJnZXRXb3JrZmxvd3MiLCJwcm9qZWN0SWQiLCJnZXRXb3JrZmxvdyIsImNyZWF0ZVdvcmtmbG93Iiwid29ya2Zsb3dEYXRhIiwidXBkYXRlV29ya2Zsb3ciLCJkZWxldGVXb3JrZmxvdyIsImFjdGl2YXRlV29ya2Zsb3ciLCJkZWFjdGl2YXRlV29ya2Zsb3ciLCJnZXRFeGVjdXRpb25zIiwiZ2V0RXhlY3V0aW9uIiwiZGVsZXRlRXhlY3V0aW9uIiwiZ2V0Q3JlZGVudGlhbHMiLCJnZXRDcmVkZW50aWFsIiwiY3JlYXRlQ3JlZGVudGlhbCIsImNyZWRlbnRpYWxEYXRhIiwiZGVsZXRlQ3JlZGVudGlhbCIsImdldENyZWRlbnRpYWxTY2hlbWEiLCJjcmVkZW50aWFsVHlwZSIsImdldFByb2plY3RzIiwiZ2V0UHJvamVjdCIsImNyZWF0ZVByb2plY3QiLCJwcm9qZWN0RGF0YSIsInVwZGF0ZVByb2plY3QiLCJkZWxldGVQcm9qZWN0IiwiZ2V0VmFyaWFibGVzIiwiY3JlYXRlVmFyaWFibGUiLCJ2YXJpYWJsZURhdGEiLCJkZWxldGVWYXJpYWJsZSIsImdldFRhZ3MiLCJnZXRUYWciLCJjcmVhdGVUYWciLCJ0YWdEYXRhIiwidXBkYXRlVGFnIiwiZGVsZXRlVGFnIiwiZ2V0V29ya2Zsb3dUYWdzIiwid29ya2Zsb3dJZCIsInVwZGF0ZVdvcmtmbG93VGFncyIsInRhZ0lkcyIsImdlbmVyYXRlQXVkaXRSZXBvcnQiLCJnZXRDb21tdW5pdHlQYWNrYWdlcyIsImluc3RhbGxDb21tdW5pdHlQYWNrYWdlIiwicGFja2FnZURhdGEiLCJ1cGRhdGVDb21tdW5pdHlQYWNrYWdlIiwicGFja2FnZU5hbWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ1bmluc3RhbGxDb21tdW5pdHlQYWNrYWdlIiwiZ2V0Tm9kZVR5cGVzIiwiZ2V0Tm9kZVR5cGUiLCJub2RlVHlwZSIsImdldENvbW11bml0eU5vZGVUeXBlcyIsImdldENvbW11bml0eU5vZGVUeXBlIiwibmFtZSIsImdldER5bmFtaWNOb2RlUGFyYW1ldGVycyIsImdldFJlc291cmNlTG9jYXRvclJlc3VsdHMiLCJ1cGRhdGVVc2VyUm9sZSIsInJvbGVEYXRhIiwiZ2V0UHJvamVjdFVzZXJzIiwiYWRkVXNlclRvUHJvamVjdCIsInVwZGF0ZVByb2plY3RVc2VyIiwidXNlcklkIiwicmVtb3ZlVXNlckZyb21Qcm9qZWN0IiwidHJhbnNmZXJXb3JrZmxvdyIsInRyYW5zZmVyRGF0YSIsInVwZGF0ZUNyZWRlbnRpYWwiLCJ0cmFuc2ZlckNyZWRlbnRpYWwiLCJnZXRWYXJpYWJsZSIsInVwZGF0ZVZhcmlhYmxlIiwiZ2V0U291cmNlQ29udHJvbFN0YXR1cyIsInB1bGxGcm9tUmVwb3NpdG9yeSIsInB1bGxEYXRhIiwic2V0QnJhbmNoIiwiYnJhbmNoRGF0YSIsImdldENvbW1pdEhpc3RvcnkiLCJjaGVja1N5bmNTdGF0dXMiLCJsb2dpbiIsImxvZ2luRGF0YSIsImxvZ291dCIsImdldFNlc3Npb25JbmZvIiwicmVmcmVzaFNlc3Npb24iLCJnZW5lcmF0ZU9BdXRoMkF1dGhVcmwiLCJzdGF0ZSIsInJlc3BvbnNlX3R5cGUiLCJjbGllbnRfaWQiLCJjbGllbnRJZCIsInJlZGlyZWN0X3VyaSIsInJlZGlyZWN0VXJpIiwic2NvcGUiLCJqb2luIiwiYXV0aG9yaXphdGlvblVybCIsImV4Y2hhbmdlT0F1dGgyQ29kZSIsImNvZGUiLCJ0b2tlblVybCIsImdyYW50X3R5cGUiLCJjbGllbnRfc2VjcmV0IiwiY2xpZW50U2VjcmV0IiwidG9rZW5EYXRhIiwiYWNjZXNzX3Rva2VuIiwicmVmcmVzaFRva2VuIiwicmVmcmVzaF90b2tlbiIsImV4cGlyZXNJbiIsImV4cGlyZXNfaW4iLCJ0b2tlblR5cGUiLCJ0b2tlbl90eXBlIiwicmVmcmVzaE9BdXRoMlRva2VuIiwiZ2V0QUlOb2RlcyIsImNsYXNzaWZ5QUlOb2RlIiwiZ2V0QUlOb2RlU3VnZ2VzdGlvbnMiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL1VzZXJzL2plcmVteXBhcmtlci9EZXNrdG9wL0NsYXVkZSBDb2RpbmcgUHJvamVjdHMvbjhuLW1jcC1zZXJ2ZXIvc3JjL2NsaWVudC9uOG5DbGllbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gJ25vZGUtZmV0Y2gnO1xuaW1wb3J0IHtcbiAgTjhuVXNlcixcbiAgTjhuV29ya2Zsb3csXG4gIE44bkV4ZWN1dGlvbixcbiAgTjhuQ3JlZGVudGlhbCxcbiAgTjhuUHJvamVjdCxcbiAgTjhuVmFyaWFibGUsXG4gIE44blRhZyxcbiAgTjhuQXVkaXRSZXBvcnQsXG4gIE44bkNvbW11bml0eVBhY2thZ2UsXG4gIE44bk5vZGVUeXBlRGVzY3JpcHRpb24sXG4gIEFwaVJlc3BvbnNlLFxuICBQYWdpbmF0aW9uT3B0aW9ucyxcbiAgQ3JlYXRlVXNlclJlcXVlc3QsXG4gIFVwZGF0ZVVzZXJSZXF1ZXN0LFxuICBDcmVhdGVXb3JrZmxvd1JlcXVlc3QsXG4gIFVwZGF0ZVdvcmtmbG93UmVxdWVzdCxcbiAgQ3JlYXRlQ3JlZGVudGlhbFJlcXVlc3QsXG4gIENyZWF0ZVByb2plY3RSZXF1ZXN0LFxuICBVcGRhdGVQcm9qZWN0UmVxdWVzdCxcbiAgQ3JlYXRlVmFyaWFibGVSZXF1ZXN0LFxuICBDcmVhdGVUYWdSZXF1ZXN0LFxuICBVcGRhdGVUYWdSZXF1ZXN0LFxuICBDb21tdW5pdHlQYWNrYWdlSW5zdGFsbFJlcXVlc3QsXG4gIENvbW11bml0eVBhY2thZ2VVcGRhdGVSZXF1ZXN0LFxuICBEeW5hbWljTm9kZU9wdGlvbnMsXG4gIER5bmFtaWNOb2RlUGFyYW1ldGVyLFxuICBSZXNvdXJjZUxvY2F0b3JSZXN1bHQsXG4gIEFJTm9kZUNsYXNzaWZpY2F0aW9uLFxuICBBSU5vZGVTdWdnZXN0aW9uLFxuICBQcm9qZWN0VXNlclJlcXVlc3QsXG4gIFByb2plY3RVc2VyUmVzcG9uc2UsXG4gIFdvcmtmbG93VHJhbnNmZXJSZXF1ZXN0LFxuICBDcmVkZW50aWFsVHJhbnNmZXJSZXF1ZXN0LFxuICBVc2VyUm9sZVVwZGF0ZVJlcXVlc3QsXG4gIFNvdXJjZUNvbnRyb2xTdGF0dXMsXG4gIFNvdXJjZUNvbnRyb2xDb21taXQsXG4gIFNvdXJjZUNvbnRyb2xQdWxsUmVxdWVzdCxcbiAgU291cmNlQ29udHJvbEJyYW5jaFJlcXVlc3QsXG4gIEF1dGhlbnRpY2F0aW9uQ29uZmlnLFxuICBTZXNzaW9uSW5mbyxcbiAgTG9naW5SZXF1ZXN0LFxuICBMb2dpblJlc3BvbnNlLFxuICBPQXV0aDJDb25maWcsXG4gIE9BdXRoMlRva2VuLFxuICBWYXJpYWJsZVVwZGF0ZVJlcXVlc3QsXG59IGZyb20gJy4uL3R5cGVzL244bi5qcyc7XG5cbmV4cG9ydCBjbGFzcyBOOG5DbGllbnQge1xuICBwcml2YXRlIGF1dGhDb25maWc6IEF1dGhlbnRpY2F0aW9uQ29uZmlnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYmFzZVVybDogc3RyaW5nLFxuICAgIHByaXZhdGUgYXBpS2V5OiBzdHJpbmcsXG4gICAgYXV0aENvbmZpZz86IEF1dGhlbnRpY2F0aW9uQ29uZmlnXG4gICkge1xuICAgIC8vIFJlbW92ZSB0cmFpbGluZyBzbGFzaCBpZiBwcmVzZW50XG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybC5yZXBsYWNlKC9cXC8kLywgJycpO1xuICAgIC8vIEVuc3VyZSBhcGlLZXkgaXMgcHJvcGVybHkgYXNzaWduZWRcbiAgICB0aGlzLmFwaUtleSA9IGFwaUtleTtcbiAgICAvLyBTZXQgdXAgYXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvblxuICAgIHRoaXMuYXV0aENvbmZpZyA9IGF1dGhDb25maWcgfHwgeyB0eXBlOiAnYXBpLWtleScgfTtcbiAgfVxuXG4gIC8vIE1ldGhvZCB0byB1cGRhdGUgYXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvblxuICBzZXRBdXRoQ29uZmlnKGNvbmZpZzogQXV0aGVudGljYXRpb25Db25maWcpOiB2b2lkIHtcbiAgICB0aGlzLmF1dGhDb25maWcgPSBjb25maWc7XG4gIH1cblxuICAvLyBNZXRob2QgdG8gZ2V0IGN1cnJlbnQgYXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvblxuICBnZXRBdXRoQ29uZmlnKCk6IEF1dGhlbnRpY2F0aW9uQ29uZmlnIHtcbiAgICByZXR1cm4gdGhpcy5hdXRoQ29uZmlnO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBtYWtlUmVxdWVzdDxUPihcbiAgICBlbmRwb2ludDogc3RyaW5nLFxuICAgIG9wdGlvbnM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge31cbiAgKTogUHJvbWlzZTxUPiB7XG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5iYXNlVXJsfS9hcGkvdjEke2VuZHBvaW50fWA7XG4gICAgY29uc3QgaGVhZGVyczogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IHtcbiAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB9O1xuXG4gICAgLy8gQXBwbHkgYXV0aGVudGljYXRpb24gYmFzZWQgb24gY29uZmlndXJhdGlvblxuICAgIHN3aXRjaCAodGhpcy5hdXRoQ29uZmlnLnR5cGUpIHtcbiAgICAgIGNhc2UgJ2FwaS1rZXknOlxuICAgICAgICBoZWFkZXJzWydYLU44Ti1BUEktS0VZJ10gPSB0aGlzLmFwaUtleTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzZXNzaW9uJzpcbiAgICAgICAgaWYgKHRoaXMuYXV0aENvbmZpZy5zZXNzaW9uVG9rZW4pIHtcbiAgICAgICAgICBoZWFkZXJzWydDb29raWUnXSA9IGBuOG4tYXV0aD0ke3RoaXMuYXV0aENvbmZpZy5zZXNzaW9uVG9rZW59YDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ29hdXRoMic6XG4gICAgICAgIGlmICh0aGlzLmF1dGhDb25maWcuY3JlZGVudGlhbHM/LmFjY2Vzc1Rva2VuKSB7XG4gICAgICAgICAgaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gYEJlYXJlciAke3RoaXMuYXV0aENvbmZpZy5jcmVkZW50aWFscy5hY2Nlc3NUb2tlbn1gO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc2FtbCc6XG4gICAgICBjYXNlICdvaWRjJzpcbiAgICAgIGNhc2UgJ2xkYXAnOlxuICAgICAgICAvLyBUaGVzZSB0eXBpY2FsbHkgdXNlIHNlc3Npb24tYmFzZWQgYXV0aCBhZnRlciBpbml0aWFsIGxvZ2luXG4gICAgICAgIGlmICh0aGlzLmF1dGhDb25maWcuc2Vzc2lvblRva2VuKSB7XG4gICAgICAgICAgaGVhZGVyc1snQ29va2llJ10gPSBgbjhuLWF1dGg9JHt0aGlzLmF1dGhDb25maWcuc2Vzc2lvblRva2VufWA7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICAvLyBGYWxsYmFjayB0byBBUEkga2V5XG4gICAgICAgIGhlYWRlcnNbJ1gtTjhOLUFQSS1LRVknXSA9IHRoaXMuYXBpS2V5O1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgICAuLi4oKG9wdGlvbnMuaGVhZGVycyBhcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+KSB8fCB7fSksXG4gICAgICAgIH0sXG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCAke3Jlc3BvbnNlLnN0YXR1c306ICR7ZXJyb3JUZXh0fWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKTtcbiAgICAgIGlmIChjb250ZW50VHlwZSAmJiBjb250ZW50VHlwZS5pbmNsdWRlcygnYXBwbGljYXRpb24vanNvbicpKSB7XG4gICAgICAgIHJldHVybiAoYXdhaXQgcmVzcG9uc2UuanNvbigpKSBhcyBUO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gKGF3YWl0IHJlc3BvbnNlLnRleHQoKSkgYXMgdW5rbm93biBhcyBUO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYG44biBBUEkgcmVxdWVzdCBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcignbjhuIEFQSSByZXF1ZXN0IGZhaWxlZCB3aXRoIHVua25vd24gZXJyb3InKTtcbiAgICB9XG4gIH1cblxuICAvLyBVc2VyIE1hbmFnZW1lbnRcbiAgYXN5bmMgZ2V0VXNlcnMob3B0aW9uczogUGFnaW5hdGlvbk9wdGlvbnMgPSB7fSk6IFByb21pc2U8QXBpUmVzcG9uc2U8TjhuVXNlcltdPj4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBpZiAob3B0aW9ucy5saW1pdCkgcGFyYW1zLmFwcGVuZCgnbGltaXQnLCBvcHRpb25zLmxpbWl0LnRvU3RyaW5nKCkpO1xuICAgIGlmIChvcHRpb25zLmN1cnNvcikgcGFyYW1zLmFwcGVuZCgnY3Vyc29yJywgb3B0aW9ucy5jdXJzb3IpO1xuXG4gICAgY29uc3QgcXVlcnkgPSBwYXJhbXMudG9TdHJpbmcoKSA/IGA/JHtwYXJhbXMudG9TdHJpbmcoKX1gIDogJyc7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QXBpUmVzcG9uc2U8TjhuVXNlcltdPj4oYC91c2VycyR7cXVlcnl9YCk7XG4gIH1cblxuICBhc3luYyBnZXRVc2VyKGlkOiBzdHJpbmcpOiBQcm9taXNlPE44blVzZXI+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Vc2VyPihgL3VzZXJzLyR7aWR9YCk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVVc2VyKHVzZXJEYXRhOiBDcmVhdGVVc2VyUmVxdWVzdCk6IFByb21pc2U8TjhuVXNlcj4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44blVzZXI+KCcvdXNlcnMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZVVzZXIoaWQ6IHN0cmluZywgdXNlckRhdGE6IFVwZGF0ZVVzZXJSZXF1ZXN0KTogUHJvbWlzZTxOOG5Vc2VyPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuVXNlcj4oYC91c2Vycy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZVVzZXIoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMubWFrZVJlcXVlc3Q8dm9pZD4oYC91c2Vycy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgfSk7XG4gIH1cblxuICAvLyBXb3JrZmxvdyBNYW5hZ2VtZW50XG4gIGFzeW5jIGdldFdvcmtmbG93cyhvcHRpb25zOiBQYWdpbmF0aW9uT3B0aW9ucyA9IHt9KTogUHJvbWlzZTxBcGlSZXNwb25zZTxOOG5Xb3JrZmxvd1tdPj4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBpZiAob3B0aW9ucy5saW1pdCkgcGFyYW1zLmFwcGVuZCgnbGltaXQnLCBvcHRpb25zLmxpbWl0LnRvU3RyaW5nKCkpO1xuICAgIGlmIChvcHRpb25zLmN1cnNvcikgcGFyYW1zLmFwcGVuZCgnY3Vyc29yJywgb3B0aW9ucy5jdXJzb3IpO1xuICAgIGlmIChvcHRpb25zLnByb2plY3RJZCkgcGFyYW1zLmFwcGVuZCgncHJvamVjdElkJywgb3B0aW9ucy5wcm9qZWN0SWQpO1xuXG4gICAgY29uc3QgcXVlcnkgPSBwYXJhbXMudG9TdHJpbmcoKSA/IGA/JHtwYXJhbXMudG9TdHJpbmcoKX1gIDogJyc7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QXBpUmVzcG9uc2U8TjhuV29ya2Zsb3dbXT4+KGAvd29ya2Zsb3dzJHtxdWVyeX1gKTtcbiAgfVxuXG4gIGFzeW5jIGdldFdvcmtmbG93KGlkOiBzdHJpbmcpOiBQcm9taXNlPE44bldvcmtmbG93PiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuV29ya2Zsb3c+KGAvd29ya2Zsb3dzLyR7aWR9YCk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVXb3JrZmxvdyh3b3JrZmxvd0RhdGE6IENyZWF0ZVdvcmtmbG93UmVxdWVzdCk6IFByb21pc2U8TjhuV29ya2Zsb3c+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Xb3JrZmxvdz4oJy93b3JrZmxvd3MnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHdvcmtmbG93RGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVXb3JrZmxvdyhpZDogc3RyaW5nLCB3b3JrZmxvd0RhdGE6IFVwZGF0ZVdvcmtmbG93UmVxdWVzdCk6IFByb21pc2U8TjhuV29ya2Zsb3c+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Xb3JrZmxvdz4oYC93b3JrZmxvd3MvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkod29ya2Zsb3dEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZVdvcmtmbG93KGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBhd2FpdCB0aGlzLm1ha2VSZXF1ZXN0PHZvaWQ+KGAvd29ya2Zsb3dzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGFjdGl2YXRlV29ya2Zsb3coaWQ6IHN0cmluZyk6IFByb21pc2U8TjhuV29ya2Zsb3c+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Xb3JrZmxvdz4oYC93b3JrZmxvd3MvJHtpZH0vYWN0aXZhdGVgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGRlYWN0aXZhdGVXb3JrZmxvdyhpZDogc3RyaW5nKTogUHJvbWlzZTxOOG5Xb3JrZmxvdz4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44bldvcmtmbG93PihgL3dvcmtmbG93cy8ke2lkfS9kZWFjdGl2YXRlYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSk7XG4gIH1cblxuICAvLyBFeGVjdXRpb24gTWFuYWdlbWVudFxuICBhc3luYyBnZXRFeGVjdXRpb25zKG9wdGlvbnM6IFBhZ2luYXRpb25PcHRpb25zID0ge30pOiBQcm9taXNlPEFwaVJlc3BvbnNlPE44bkV4ZWN1dGlvbltdPj4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBpZiAob3B0aW9ucy5saW1pdCkgcGFyYW1zLmFwcGVuZCgnbGltaXQnLCBvcHRpb25zLmxpbWl0LnRvU3RyaW5nKCkpO1xuICAgIGlmIChvcHRpb25zLmN1cnNvcikgcGFyYW1zLmFwcGVuZCgnY3Vyc29yJywgb3B0aW9ucy5jdXJzb3IpO1xuXG4gICAgY29uc3QgcXVlcnkgPSBwYXJhbXMudG9TdHJpbmcoKSA/IGA/JHtwYXJhbXMudG9TdHJpbmcoKX1gIDogJyc7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QXBpUmVzcG9uc2U8TjhuRXhlY3V0aW9uW10+PihgL2V4ZWN1dGlvbnMke3F1ZXJ5fWApO1xuICB9XG5cbiAgYXN5bmMgZ2V0RXhlY3V0aW9uKGlkOiBzdHJpbmcpOiBQcm9taXNlPE44bkV4ZWN1dGlvbj4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44bkV4ZWN1dGlvbj4oYC9leGVjdXRpb25zLyR7aWR9YCk7XG4gIH1cblxuICBhc3luYyBkZWxldGVFeGVjdXRpb24oaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMubWFrZVJlcXVlc3Q8dm9pZD4oYC9leGVjdXRpb25zLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIENyZWRlbnRpYWwgTWFuYWdlbWVudFxuICBhc3luYyBnZXRDcmVkZW50aWFscyhvcHRpb25zOiBQYWdpbmF0aW9uT3B0aW9ucyA9IHt9KTogUHJvbWlzZTxBcGlSZXNwb25zZTxOOG5DcmVkZW50aWFsW10+PiB7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgIGlmIChvcHRpb25zLmxpbWl0KSBwYXJhbXMuYXBwZW5kKCdsaW1pdCcsIG9wdGlvbnMubGltaXQudG9TdHJpbmcoKSk7XG4gICAgaWYgKG9wdGlvbnMuY3Vyc29yKSBwYXJhbXMuYXBwZW5kKCdjdXJzb3InLCBvcHRpb25zLmN1cnNvcik7XG4gICAgaWYgKG9wdGlvbnMucHJvamVjdElkKSBwYXJhbXMuYXBwZW5kKCdwcm9qZWN0SWQnLCBvcHRpb25zLnByb2plY3RJZCk7XG5cbiAgICBjb25zdCBxdWVyeSA9IHBhcmFtcy50b1N0cmluZygpID8gYD8ke3BhcmFtcy50b1N0cmluZygpfWAgOiAnJztcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxBcGlSZXNwb25zZTxOOG5DcmVkZW50aWFsW10+PihgL2NyZWRlbnRpYWxzJHtxdWVyeX1gKTtcbiAgfVxuXG4gIGFzeW5jIGdldENyZWRlbnRpYWwoaWQ6IHN0cmluZyk6IFByb21pc2U8TjhuQ3JlZGVudGlhbD4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44bkNyZWRlbnRpYWw+KGAvY3JlZGVudGlhbHMvJHtpZH1gKTtcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZUNyZWRlbnRpYWwoY3JlZGVudGlhbERhdGE6IENyZWF0ZUNyZWRlbnRpYWxSZXF1ZXN0KTogUHJvbWlzZTxOOG5DcmVkZW50aWFsPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuQ3JlZGVudGlhbD4oJy9jcmVkZW50aWFscycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY3JlZGVudGlhbERhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlQ3JlZGVudGlhbChpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYXdhaXQgdGhpcy5tYWtlUmVxdWVzdDx2b2lkPihgL2NyZWRlbnRpYWxzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldENyZWRlbnRpYWxTY2hlbWEoY3JlZGVudGlhbFR5cGU6IHN0cmluZyk6IFByb21pc2U8UmVjb3JkPHN0cmluZywgdW5rbm93bj4+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oYC9jcmVkZW50aWFscy9zY2hlbWEvJHtjcmVkZW50aWFsVHlwZX1gKTtcbiAgfVxuXG4gIC8vIFByb2plY3QgTWFuYWdlbWVudCAoRW50ZXJwcmlzZSlcbiAgYXN5bmMgZ2V0UHJvamVjdHMob3B0aW9uczogUGFnaW5hdGlvbk9wdGlvbnMgPSB7fSk6IFByb21pc2U8QXBpUmVzcG9uc2U8TjhuUHJvamVjdFtdPj4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBpZiAob3B0aW9ucy5saW1pdCkgcGFyYW1zLmFwcGVuZCgnbGltaXQnLCBvcHRpb25zLmxpbWl0LnRvU3RyaW5nKCkpO1xuICAgIGlmIChvcHRpb25zLmN1cnNvcikgcGFyYW1zLmFwcGVuZCgnY3Vyc29yJywgb3B0aW9ucy5jdXJzb3IpO1xuXG4gICAgY29uc3QgcXVlcnkgPSBwYXJhbXMudG9TdHJpbmcoKSA/IGA/JHtwYXJhbXMudG9TdHJpbmcoKX1gIDogJyc7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QXBpUmVzcG9uc2U8TjhuUHJvamVjdFtdPj4oYC9wcm9qZWN0cyR7cXVlcnl9YCk7XG4gIH1cblxuICBhc3luYyBnZXRQcm9qZWN0KGlkOiBzdHJpbmcpOiBQcm9taXNlPE44blByb2plY3Q+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Qcm9qZWN0PihgL3Byb2plY3RzLyR7aWR9YCk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVQcm9qZWN0KHByb2plY3REYXRhOiBDcmVhdGVQcm9qZWN0UmVxdWVzdCk6IFByb21pc2U8TjhuUHJvamVjdD4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44blByb2plY3Q+KCcvcHJvamVjdHMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHByb2plY3REYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZVByb2plY3QoaWQ6IHN0cmluZywgcHJvamVjdERhdGE6IFVwZGF0ZVByb2plY3RSZXF1ZXN0KTogUHJvbWlzZTxOOG5Qcm9qZWN0PiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuUHJvamVjdD4oYC9wcm9qZWN0cy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwcm9qZWN0RGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBkZWxldGVQcm9qZWN0KGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBhd2FpdCB0aGlzLm1ha2VSZXF1ZXN0PHZvaWQ+KGAvcHJvamVjdHMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIH0pO1xuICB9XG5cbiAgLy8gVmFyaWFibGUgTWFuYWdlbWVudCAoRW50ZXJwcmlzZSlcbiAgYXN5bmMgZ2V0VmFyaWFibGVzKG9wdGlvbnM6IFBhZ2luYXRpb25PcHRpb25zID0ge30pOiBQcm9taXNlPEFwaVJlc3BvbnNlPE44blZhcmlhYmxlW10+PiB7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgIGlmIChvcHRpb25zLmxpbWl0KSBwYXJhbXMuYXBwZW5kKCdsaW1pdCcsIG9wdGlvbnMubGltaXQudG9TdHJpbmcoKSk7XG4gICAgaWYgKG9wdGlvbnMuY3Vyc29yKSBwYXJhbXMuYXBwZW5kKCdjdXJzb3InLCBvcHRpb25zLmN1cnNvcik7XG5cbiAgICBjb25zdCBxdWVyeSA9IHBhcmFtcy50b1N0cmluZygpID8gYD8ke3BhcmFtcy50b1N0cmluZygpfWAgOiAnJztcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxBcGlSZXNwb25zZTxOOG5WYXJpYWJsZVtdPj4oYC92YXJpYWJsZXMke3F1ZXJ5fWApO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlVmFyaWFibGUodmFyaWFibGVEYXRhOiBDcmVhdGVWYXJpYWJsZVJlcXVlc3QpOiBQcm9taXNlPE44blZhcmlhYmxlPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuVmFyaWFibGU+KCcvdmFyaWFibGVzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh2YXJpYWJsZURhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlVmFyaWFibGUoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMubWFrZVJlcXVlc3Q8dm9pZD4oYC92YXJpYWJsZXMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIH0pO1xuICB9XG5cbiAgLy8gVGFnIE1hbmFnZW1lbnRcbiAgYXN5bmMgZ2V0VGFncyhvcHRpb25zOiBQYWdpbmF0aW9uT3B0aW9ucyA9IHt9KTogUHJvbWlzZTxBcGlSZXNwb25zZTxOOG5UYWdbXT4+IHtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgaWYgKG9wdGlvbnMubGltaXQpIHBhcmFtcy5hcHBlbmQoJ2xpbWl0Jywgb3B0aW9ucy5saW1pdC50b1N0cmluZygpKTtcbiAgICBpZiAob3B0aW9ucy5jdXJzb3IpIHBhcmFtcy5hcHBlbmQoJ2N1cnNvcicsIG9wdGlvbnMuY3Vyc29yKTtcblxuICAgIGNvbnN0IHF1ZXJ5ID0gcGFyYW1zLnRvU3RyaW5nKCkgPyBgPyR7cGFyYW1zLnRvU3RyaW5nKCl9YCA6ICcnO1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PEFwaVJlc3BvbnNlPE44blRhZ1tdPj4oYC90YWdzJHtxdWVyeX1gKTtcbiAgfVxuXG4gIGFzeW5jIGdldFRhZyhpZDogc3RyaW5nKTogUHJvbWlzZTxOOG5UYWc+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5UYWc+KGAvdGFncy8ke2lkfWApO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlVGFnKHRhZ0RhdGE6IENyZWF0ZVRhZ1JlcXVlc3QpOiBQcm9taXNlPE44blRhZz4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44blRhZz4oJy90YWdzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0YWdEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZVRhZyhpZDogc3RyaW5nLCB0YWdEYXRhOiBVcGRhdGVUYWdSZXF1ZXN0KTogUHJvbWlzZTxOOG5UYWc+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5UYWc+KGAvdGFncy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0YWdEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZVRhZyhpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYXdhaXQgdGhpcy5tYWtlUmVxdWVzdDx2b2lkPihgL3RhZ3MvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZ2V0V29ya2Zsb3dUYWdzKHdvcmtmbG93SWQ6IHN0cmluZyk6IFByb21pc2U8TjhuVGFnW10+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5UYWdbXT4oYC93b3JrZmxvd3MvJHt3b3JrZmxvd0lkfS90YWdzYCk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVXb3JrZmxvd1RhZ3Mod29ya2Zsb3dJZDogc3RyaW5nLCB0YWdJZHM6IHN0cmluZ1tdKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYXdhaXQgdGhpcy5tYWtlUmVxdWVzdDx2b2lkPihgL3dvcmtmbG93cy8ke3dvcmtmbG93SWR9L3RhZ3NgLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0YWdJZHMgfSksXG4gICAgfSk7XG4gIH1cblxuICAvLyBBdWRpdCBSZXBvcnRcbiAgYXN5bmMgZ2VuZXJhdGVBdWRpdFJlcG9ydCgpOiBQcm9taXNlPE44bkF1ZGl0UmVwb3J0PiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuQXVkaXRSZXBvcnQ+KCcvYXVkaXQnKTtcbiAgfVxuXG4gIC8vIENvbW11bml0eSBQYWNrYWdlIE1hbmFnZW1lbnRcbiAgYXN5bmMgZ2V0Q29tbXVuaXR5UGFja2FnZXMoKTogUHJvbWlzZTxBcGlSZXNwb25zZTxOOG5Db21tdW5pdHlQYWNrYWdlW10+PiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QXBpUmVzcG9uc2U8TjhuQ29tbXVuaXR5UGFja2FnZVtdPj4oJy9jb21tdW5pdHktcGFja2FnZXMnKTtcbiAgfVxuXG4gIGFzeW5jIGluc3RhbGxDb21tdW5pdHlQYWNrYWdlKHBhY2thZ2VEYXRhOiBDb21tdW5pdHlQYWNrYWdlSW5zdGFsbFJlcXVlc3QpOiBQcm9taXNlPE44bkNvbW11bml0eVBhY2thZ2U+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Db21tdW5pdHlQYWNrYWdlPignL2NvbW11bml0eS1wYWNrYWdlcycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGFja2FnZURhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgdXBkYXRlQ29tbXVuaXR5UGFja2FnZShwYWNrYWdlTmFtZTogc3RyaW5nLCBwYWNrYWdlRGF0YTogQ29tbXVuaXR5UGFja2FnZVVwZGF0ZVJlcXVlc3QpOiBQcm9taXNlPE44bkNvbW11bml0eVBhY2thZ2U+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Db21tdW5pdHlQYWNrYWdlPihgL2NvbW11bml0eS1wYWNrYWdlcy8ke2VuY29kZVVSSUNvbXBvbmVudChwYWNrYWdlTmFtZSl9YCwge1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGFja2FnZURhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgdW5pbnN0YWxsQ29tbXVuaXR5UGFja2FnZShwYWNrYWdlTmFtZTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYXdhaXQgdGhpcy5tYWtlUmVxdWVzdDx2b2lkPihgL2NvbW11bml0eS1wYWNrYWdlcy8ke2VuY29kZVVSSUNvbXBvbmVudChwYWNrYWdlTmFtZSl9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIE5vZGUgVHlwZSBNYW5hZ2VtZW50XG4gIGFzeW5jIGdldE5vZGVUeXBlcygpOiBQcm9taXNlPE44bk5vZGVUeXBlRGVzY3JpcHRpb25bXT4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44bk5vZGVUeXBlRGVzY3JpcHRpb25bXT4oJy9ub2RlLXR5cGVzJyk7XG4gIH1cblxuICBhc3luYyBnZXROb2RlVHlwZShub2RlVHlwZTogc3RyaW5nKTogUHJvbWlzZTxOOG5Ob2RlVHlwZURlc2NyaXB0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuTm9kZVR5cGVEZXNjcmlwdGlvbj4oYC9ub2RlLXR5cGVzLyR7ZW5jb2RlVVJJQ29tcG9uZW50KG5vZGVUeXBlKX1gKTtcbiAgfVxuXG4gIGFzeW5jIGdldENvbW11bml0eU5vZGVUeXBlcygpOiBQcm9taXNlPE44bk5vZGVUeXBlRGVzY3JpcHRpb25bXT4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PE44bk5vZGVUeXBlRGVzY3JpcHRpb25bXT4oJy9jb21tdW5pdHktbm9kZS10eXBlcycpO1xuICB9XG5cbiAgYXN5bmMgZ2V0Q29tbXVuaXR5Tm9kZVR5cGUobmFtZTogc3RyaW5nKTogUHJvbWlzZTxOOG5Ob2RlVHlwZURlc2NyaXB0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuTm9kZVR5cGVEZXNjcmlwdGlvbj4oYC9jb21tdW5pdHktbm9kZS10eXBlcy8ke2VuY29kZVVSSUNvbXBvbmVudChuYW1lKX1gKTtcbiAgfVxuXG4gIC8vIER5bmFtaWMgTm9kZSBQYXJhbWV0ZXJzXG4gIGFzeW5jIGdldER5bmFtaWNOb2RlUGFyYW1ldGVycyhvcHRpb25zOiBEeW5hbWljTm9kZU9wdGlvbnMpOiBQcm9taXNlPER5bmFtaWNOb2RlUGFyYW1ldGVyW10+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxEeW5hbWljTm9kZVBhcmFtZXRlcltdPignL2R5bmFtaWMtbm9kZS1wYXJhbWV0ZXJzL29wdGlvbnMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZ2V0UmVzb3VyY2VMb2NhdG9yUmVzdWx0cyhvcHRpb25zOiBEeW5hbWljTm9kZU9wdGlvbnMpOiBQcm9taXNlPFJlc291cmNlTG9jYXRvclJlc3VsdFtdPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8UmVzb3VyY2VMb2NhdG9yUmVzdWx0W10+KCcvZHluYW1pYy1ub2RlLXBhcmFtZXRlcnMvcmVzb3VyY2UtbG9jYXRvcicsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkob3B0aW9ucyksXG4gICAgfSk7XG4gIH1cblxuICAvLyBFbmhhbmNlZCBVc2VyIE1hbmFnZW1lbnQgKG44biBmb3JrKVxuICBhc3luYyB1cGRhdGVVc2VyUm9sZShpZDogc3RyaW5nLCByb2xlRGF0YTogVXNlclJvbGVVcGRhdGVSZXF1ZXN0KTogUHJvbWlzZTxOOG5Vc2VyPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuVXNlcj4oYC91c2Vycy8ke2lkfS9yb2xlYCwge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJvbGVEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIEVuaGFuY2VkIFByb2plY3QgTWFuYWdlbWVudCAobjhuIGZvcmspXG4gIGFzeW5jIGdldFByb2plY3RVc2Vycyhwcm9qZWN0SWQ6IHN0cmluZyk6IFByb21pc2U8UHJvamVjdFVzZXJSZXNwb25zZVtdPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8UHJvamVjdFVzZXJSZXNwb25zZVtdPihgL3Byb2plY3RzLyR7cHJvamVjdElkfS91c2Vyc2ApO1xuICB9XG5cbiAgYXN5bmMgYWRkVXNlclRvUHJvamVjdChwcm9qZWN0SWQ6IHN0cmluZywgdXNlckRhdGE6IFByb2plY3RVc2VyUmVxdWVzdCk6IFByb21pc2U8UHJvamVjdFVzZXJSZXNwb25zZT4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PFByb2plY3RVc2VyUmVzcG9uc2U+KGAvcHJvamVjdHMvJHtwcm9qZWN0SWR9L3VzZXJzYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyRGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVQcm9qZWN0VXNlcihwcm9qZWN0SWQ6IHN0cmluZywgdXNlcklkOiBzdHJpbmcsIHJvbGVEYXRhOiBQcm9qZWN0VXNlclJlcXVlc3QpOiBQcm9taXNlPFByb2plY3RVc2VyUmVzcG9uc2U+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxQcm9qZWN0VXNlclJlc3BvbnNlPihgL3Byb2plY3RzLyR7cHJvamVjdElkfS91c2Vycy8ke3VzZXJJZH1gLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocm9sZURhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgcmVtb3ZlVXNlckZyb21Qcm9qZWN0KHByb2plY3RJZDogc3RyaW5nLCB1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMubWFrZVJlcXVlc3Q8dm9pZD4oYC9wcm9qZWN0cy8ke3Byb2plY3RJZH0vdXNlcnMvJHt1c2VySWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIEVuaGFuY2VkIFdvcmtmbG93IE1hbmFnZW1lbnQgKG44biBmb3JrKVxuICBhc3luYyB0cmFuc2ZlcldvcmtmbG93KGlkOiBzdHJpbmcsIHRyYW5zZmVyRGF0YTogV29ya2Zsb3dUcmFuc2ZlclJlcXVlc3QpOiBQcm9taXNlPE44bldvcmtmbG93PiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuV29ya2Zsb3c+KGAvd29ya2Zsb3dzLyR7aWR9L3RyYW5zZmVyYCwge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHRyYW5zZmVyRGF0YSksXG4gICAgfSk7XG4gIH1cblxuICAvLyBFbmhhbmNlZCBDcmVkZW50aWFsIE1hbmFnZW1lbnQgKG44biBmb3JrKSAgXG4gIGFzeW5jIHVwZGF0ZUNyZWRlbnRpYWwoaWQ6IHN0cmluZywgY3JlZGVudGlhbERhdGE6IFBhcnRpYWw8Q3JlYXRlQ3JlZGVudGlhbFJlcXVlc3Q+KTogUHJvbWlzZTxOOG5DcmVkZW50aWFsPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuQ3JlZGVudGlhbD4oYC9jcmVkZW50aWFscy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjcmVkZW50aWFsRGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyB0cmFuc2ZlckNyZWRlbnRpYWwoaWQ6IHN0cmluZywgdHJhbnNmZXJEYXRhOiBDcmVkZW50aWFsVHJhbnNmZXJSZXF1ZXN0KTogUHJvbWlzZTxOOG5DcmVkZW50aWFsPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuQ3JlZGVudGlhbD4oYC9jcmVkZW50aWFscy8ke2lkfS90cmFuc2ZlcmAsIHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0cmFuc2ZlckRhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgLy8gRW5oYW5jZWQgVmFyaWFibGUgTWFuYWdlbWVudCAobjhuIGZvcmspXG4gIGFzeW5jIGdldFZhcmlhYmxlKGlkOiBzdHJpbmcpOiBQcm9taXNlPE44blZhcmlhYmxlPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8TjhuVmFyaWFibGU+KGAvdmFyaWFibGVzLyR7aWR9YCk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVWYXJpYWJsZShpZDogc3RyaW5nLCB2YXJpYWJsZURhdGE6IFZhcmlhYmxlVXBkYXRlUmVxdWVzdCk6IFByb21pc2U8TjhuVmFyaWFibGU+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5WYXJpYWJsZT4oYC92YXJpYWJsZXMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodmFyaWFibGVEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIC8vIFNvdXJjZSBDb250cm9sIEludGVncmF0aW9uIChFbnRlcnByaXNlIG44biBmb3JrKVxuICBhc3luYyBnZXRTb3VyY2VDb250cm9sU3RhdHVzKCk6IFByb21pc2U8U291cmNlQ29udHJvbFN0YXR1cz4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PFNvdXJjZUNvbnRyb2xTdGF0dXM+KCcvc291cmNlLWNvbnRyb2wvcmVwb3NpdG9yeS1zdGF0dXMnKTtcbiAgfVxuXG4gIGFzeW5jIHB1bGxGcm9tUmVwb3NpdG9yeShwdWxsRGF0YTogU291cmNlQ29udHJvbFB1bGxSZXF1ZXN0ID0ge30pOiBQcm9taXNlPFNvdXJjZUNvbnRyb2xTdGF0dXM+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxTb3VyY2VDb250cm9sU3RhdHVzPignL3NvdXJjZS1jb250cm9sL3B1bGwnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHB1bGxEYXRhKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHNldEJyYW5jaChicmFuY2hEYXRhOiBTb3VyY2VDb250cm9sQnJhbmNoUmVxdWVzdCk6IFByb21pc2U8U291cmNlQ29udHJvbFN0YXR1cz4ge1xuICAgIHJldHVybiB0aGlzLm1ha2VSZXF1ZXN0PFNvdXJjZUNvbnRyb2xTdGF0dXM+KCcvc291cmNlLWNvbnRyb2wvc2V0LWJyYW5jaCcsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYnJhbmNoRGF0YSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBnZXRDb21taXRIaXN0b3J5KCk6IFByb21pc2U8U291cmNlQ29udHJvbENvbW1pdFtdPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8U291cmNlQ29udHJvbENvbW1pdFtdPignL3NvdXJjZS1jb250cm9sL2NvbW1pdC1oaXN0b3J5Jyk7XG4gIH1cblxuICBhc3luYyBjaGVja1N5bmNTdGF0dXMoKTogUHJvbWlzZTxTb3VyY2VDb250cm9sU3RhdHVzPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8U291cmNlQ29udHJvbFN0YXR1cz4oJy9zb3VyY2UtY29udHJvbC9zeW5jLWNoZWNrJyk7XG4gIH1cblxuICAvLyBBdXRoZW50aWNhdGlvbiBNZXRob2RzIChuOG4gZm9yaylcbiAgYXN5bmMgbG9naW4obG9naW5EYXRhOiBMb2dpblJlcXVlc3QpOiBQcm9taXNlPExvZ2luUmVzcG9uc2U+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxMb2dpblJlc3BvbnNlPignL2xvZ2luJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShsb2dpbkRhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgbG9nb3V0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMubWFrZVJlcXVlc3Q8dm9pZD4oJy9sb2dvdXQnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldFNlc3Npb25JbmZvKCk6IFByb21pc2U8U2Vzc2lvbkluZm8+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxTZXNzaW9uSW5mbz4oJy9zZXNzaW9uJyk7XG4gIH1cblxuICBhc3luYyByZWZyZXNoU2Vzc2lvbigpOiBQcm9taXNlPFNlc3Npb25JbmZvPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8U2Vzc2lvbkluZm8+KCcvc2Vzc2lvbi9yZWZyZXNoJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSk7XG4gIH1cblxuICAvLyBPQXV0aDIgSGVscGVyIE1ldGhvZHMgKG44biBmb3JrKVxuICBnZW5lcmF0ZU9BdXRoMkF1dGhVcmwoY29uZmlnOiBPQXV0aDJDb25maWcsIHN0YXRlPzogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgIHJlc3BvbnNlX3R5cGU6ICdjb2RlJyxcbiAgICAgIGNsaWVudF9pZDogY29uZmlnLmNsaWVudElkLFxuICAgICAgcmVkaXJlY3RfdXJpOiBjb25maWcucmVkaXJlY3RVcmksXG4gICAgICBzY29wZTogY29uZmlnLnNjb3BlPy5qb2luKCcgJykgfHwgJycsXG4gICAgfSk7XG5cbiAgICBpZiAoc3RhdGUpIHtcbiAgICAgIHBhcmFtcy5hcHBlbmQoJ3N0YXRlJywgc3RhdGUpO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtjb25maWcuYXV0aG9yaXphdGlvblVybH0/JHtwYXJhbXMudG9TdHJpbmcoKX1gO1xuICB9XG5cbiAgYXN5bmMgZXhjaGFuZ2VPQXV0aDJDb2RlKGNvbmZpZzogT0F1dGgyQ29uZmlnLCBjb2RlOiBzdHJpbmcpOiBQcm9taXNlPE9BdXRoMlRva2VuPiB7XG4gICAgY29uc3QgdG9rZW5VcmwgPSBjb25maWcudG9rZW5Vcmw7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgICBncmFudF90eXBlOiAnYXV0aG9yaXphdGlvbl9jb2RlJyxcbiAgICAgIGNsaWVudF9pZDogY29uZmlnLmNsaWVudElkLFxuICAgICAgY2xpZW50X3NlY3JldDogY29uZmlnLmNsaWVudFNlY3JldCxcbiAgICAgIGNvZGUsXG4gICAgICByZWRpcmVjdF91cmk6IGNvbmZpZy5yZWRpcmVjdFVyaSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godG9rZW5VcmwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IHBhcmFtcy50b1N0cmluZygpLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBPQXV0aDIgdG9rZW4gZXhjaGFuZ2UgZmFpbGVkOiAke2Vycm9yVGV4dH1gKTtcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbkRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCkgYXMgYW55O1xuICAgIHJldHVybiB7XG4gICAgICBhY2Nlc3NUb2tlbjogdG9rZW5EYXRhLmFjY2Vzc190b2tlbixcbiAgICAgIHJlZnJlc2hUb2tlbjogdG9rZW5EYXRhLnJlZnJlc2hfdG9rZW4sXG4gICAgICBleHBpcmVzSW46IHRva2VuRGF0YS5leHBpcmVzX2luLFxuICAgICAgdG9rZW5UeXBlOiB0b2tlbkRhdGEudG9rZW5fdHlwZSB8fCAnQmVhcmVyJyxcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgcmVmcmVzaE9BdXRoMlRva2VuKGNvbmZpZzogT0F1dGgyQ29uZmlnLCByZWZyZXNoVG9rZW46IHN0cmluZyk6IFByb21pc2U8T0F1dGgyVG9rZW4+IHtcbiAgICBjb25zdCB0b2tlblVybCA9IGNvbmZpZy50b2tlblVybDtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgIGdyYW50X3R5cGU6ICdyZWZyZXNoX3Rva2VuJyxcbiAgICAgIGNsaWVudF9pZDogY29uZmlnLmNsaWVudElkLFxuICAgICAgY2xpZW50X3NlY3JldDogY29uZmlnLmNsaWVudFNlY3JldCxcbiAgICAgIHJlZnJlc2hfdG9rZW46IHJlZnJlc2hUb2tlbixcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godG9rZW5VcmwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IHBhcmFtcy50b1N0cmluZygpLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBPQXV0aDIgdG9rZW4gcmVmcmVzaCBmYWlsZWQ6ICR7ZXJyb3JUZXh0fWApO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKSBhcyBhbnk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjY2Vzc1Rva2VuOiB0b2tlbkRhdGEuYWNjZXNzX3Rva2VuLFxuICAgICAgcmVmcmVzaFRva2VuOiB0b2tlbkRhdGEucmVmcmVzaF90b2tlbiB8fCByZWZyZXNoVG9rZW4sIC8vIEtlZXAgb2xkIHJlZnJlc2ggdG9rZW4gaWYgbmV3IG9uZSBub3QgcHJvdmlkZWRcbiAgICAgIGV4cGlyZXNJbjogdG9rZW5EYXRhLmV4cGlyZXNfaW4sXG4gICAgICB0b2tlblR5cGU6IHRva2VuRGF0YS50b2tlbl90eXBlIHx8ICdCZWFyZXInLFxuICAgIH07XG4gIH1cblxuICAvLyBBSSBOb2RlIEZlYXR1cmVzXG4gIGFzeW5jIGdldEFJTm9kZXMoKTogUHJvbWlzZTxOOG5Ob2RlVHlwZURlc2NyaXB0aW9uW10+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxOOG5Ob2RlVHlwZURlc2NyaXB0aW9uW10+KCcvYWktbm9kZXMnKTtcbiAgfVxuXG4gIGFzeW5jIGNsYXNzaWZ5QUlOb2RlKG5vZGVUeXBlOiBzdHJpbmcpOiBQcm9taXNlPEFJTm9kZUNsYXNzaWZpY2F0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVJlcXVlc3Q8QUlOb2RlQ2xhc3NpZmljYXRpb24+KCcvYWktbm9kZXMvY2xhc3NpZnknLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbm9kZVR5cGUgfSksXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBnZXRBSU5vZGVTdWdnZXN0aW9ucyhub2RlVHlwZTogc3RyaW5nKTogUHJvbWlzZTxBSU5vZGVTdWdnZXN0aW9uW10+IHtcbiAgICByZXR1cm4gdGhpcy5tYWtlUmVxdWVzdDxBSU5vZGVTdWdnZXN0aW9uW10+KGAvYWktbm9kZXMvJHtlbmNvZGVVUklDb21wb25lbnQobm9kZVR5cGUpfS9zdWdnZXN0aW9uc2ApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBMERRO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUExRFIsTUFBQUUsWUFBQTtBQUFBO0FBQUEsQ0FBQUYsY0FBQSxHQUFBRyxDQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQWlEQSxNQUFhQyxTQUFTO0VBSVZDLE9BQUE7RUFDQUMsTUFBQTtFQUpGQyxVQUFVO0VBRWxCQyxZQUNVSCxPQUFlLEVBQ2ZDLE1BQWMsRUFDdEJDLFVBQWlDO0lBQUE7SUFBQVQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUZ6QixLQUFBSSxPQUFPLEdBQVBBLE9BQU87SUFBUTtJQUFBUCxjQUFBLEdBQUFHLENBQUE7SUFDZixLQUFBSyxNQUFNLEdBQU5BLE1BQU07SUFHZDtJQUFBO0lBQUFSLGNBQUEsR0FBQUcsQ0FBQTtJQUNBLElBQUksQ0FBQ0ksT0FBTyxHQUFHQSxPQUFPLENBQUNLLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDO0lBQ3pDO0lBQUE7SUFBQVosY0FBQSxHQUFBRyxDQUFBO0lBQ0EsSUFBSSxDQUFDSyxNQUFNLEdBQUdBLE1BQU07SUFDcEI7SUFBQTtJQUFBUixjQUFBLEdBQUFHLENBQUE7SUFDQSxJQUFJLENBQUNNLFVBQVU7SUFBRztJQUFBLENBQUFULGNBQUEsR0FBQWEsQ0FBQSxVQUFBSixVQUFVO0lBQUE7SUFBQSxDQUFBVCxjQUFBLEdBQUFhLENBQUEsVUFBSTtNQUFFQyxJQUFJLEVBQUU7SUFBUyxDQUFFO0VBQ3JEO0VBRUE7RUFDQUMsYUFBYUEsQ0FBQ0MsTUFBNEI7SUFBQTtJQUFBaEIsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN4QyxJQUFJLENBQUNNLFVBQVUsR0FBR08sTUFBTTtFQUMxQjtFQUVBO0VBQ0FDLGFBQWFBLENBQUE7SUFBQTtJQUFBakIsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNYLE9BQU8sSUFBSSxDQUFDTSxVQUFVO0VBQ3hCO0VBRVEsTUFBTVMsV0FBV0EsQ0FDdkJDLFFBQWdCLEVBQ2hCQyxPQUFBO0VBQUE7RUFBQSxDQUFBcEIsY0FBQSxHQUFBYSxDQUFBLFVBQW1DLEVBQUU7SUFBQTtJQUFBYixjQUFBLEdBQUFXLENBQUE7SUFFckMsTUFBTVUsR0FBRztJQUFBO0lBQUEsQ0FBQXJCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLEdBQUcsSUFBSSxDQUFDSSxPQUFPLFVBQVVZLFFBQVEsRUFBRTtJQUMvQyxNQUFNRyxPQUFPO0lBQUE7SUFBQSxDQUFBdEIsY0FBQSxHQUFBRyxDQUFBLFFBQTJCO01BQ3RDb0IsTUFBTSxFQUFFLGtCQUFrQjtNQUMxQixjQUFjLEVBQUU7S0FDakI7SUFFRDtJQUFBO0lBQUF2QixjQUFBLEdBQUFHLENBQUE7SUFDQSxRQUFRLElBQUksQ0FBQ00sVUFBVSxDQUFDSyxJQUFJO01BQzFCLEtBQUssU0FBUztRQUFBO1FBQUFkLGNBQUEsR0FBQWEsQ0FBQTtRQUFBYixjQUFBLEdBQUFHLENBQUE7UUFDWm1CLE9BQU8sQ0FBQyxlQUFlLENBQUMsR0FBRyxJQUFJLENBQUNkLE1BQU07UUFBQztRQUFBUixjQUFBLEdBQUFHLENBQUE7UUFDdkM7TUFDRixLQUFLLFNBQVM7UUFBQTtRQUFBSCxjQUFBLEdBQUFhLENBQUE7UUFBQWIsY0FBQSxHQUFBRyxDQUFBO1FBQ1osSUFBSSxJQUFJLENBQUNNLFVBQVUsQ0FBQ2UsWUFBWSxFQUFFO1VBQUE7VUFBQXhCLGNBQUEsR0FBQWEsQ0FBQTtVQUFBYixjQUFBLEdBQUFHLENBQUE7VUFDaENtQixPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsWUFBWSxJQUFJLENBQUNiLFVBQVUsQ0FBQ2UsWUFBWSxFQUFFO1FBQ2hFLENBQUM7UUFBQTtRQUFBO1VBQUF4QixjQUFBLEdBQUFhLENBQUE7UUFBQTtRQUFBYixjQUFBLEdBQUFHLENBQUE7UUFDRDtNQUNGLEtBQUssUUFBUTtRQUFBO1FBQUFILGNBQUEsR0FBQWEsQ0FBQTtRQUFBYixjQUFBLEdBQUFHLENBQUE7UUFDWCxJQUFJLElBQUksQ0FBQ00sVUFBVSxDQUFDZ0IsV0FBVyxFQUFFQyxXQUFXLEVBQUU7VUFBQTtVQUFBMUIsY0FBQSxHQUFBYSxDQUFBO1VBQUFiLGNBQUEsR0FBQUcsQ0FBQTtVQUM1Q21CLE9BQU8sQ0FBQyxlQUFlLENBQUMsR0FBRyxVQUFVLElBQUksQ0FBQ2IsVUFBVSxDQUFDZ0IsV0FBVyxDQUFDQyxXQUFXLEVBQUU7UUFDaEYsQ0FBQztRQUFBO1FBQUE7VUFBQTFCLGNBQUEsR0FBQWEsQ0FBQTtRQUFBO1FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtRQUNEO01BQ0YsS0FBSyxNQUFNO1FBQUE7UUFBQUgsY0FBQSxHQUFBYSxDQUFBO01BQ1gsS0FBSyxNQUFNO1FBQUE7UUFBQWIsY0FBQSxHQUFBYSxDQUFBO01BQ1gsS0FBSyxNQUFNO1FBQUE7UUFBQWIsY0FBQSxHQUFBYSxDQUFBO1FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtRQUNUO1FBQ0EsSUFBSSxJQUFJLENBQUNNLFVBQVUsQ0FBQ2UsWUFBWSxFQUFFO1VBQUE7VUFBQXhCLGNBQUEsR0FBQWEsQ0FBQTtVQUFBYixjQUFBLEdBQUFHLENBQUE7VUFDaENtQixPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsWUFBWSxJQUFJLENBQUNiLFVBQVUsQ0FBQ2UsWUFBWSxFQUFFO1FBQ2hFLENBQUM7UUFBQTtRQUFBO1VBQUF4QixjQUFBLEdBQUFhLENBQUE7UUFBQTtRQUFBYixjQUFBLEdBQUFHLENBQUE7UUFDRDtNQUNGO1FBQUE7UUFBQUgsY0FBQSxHQUFBYSxDQUFBO1FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtRQUNFO1FBQ0FtQixPQUFPLENBQUMsZUFBZSxDQUFDLEdBQUcsSUFBSSxDQUFDZCxNQUFNO0lBQzFDO0lBQUM7SUFBQVIsY0FBQSxHQUFBRyxDQUFBO0lBRUQsSUFBSTtNQUNGLE1BQU13QixRQUFRO01BQUE7TUFBQSxDQUFBM0IsY0FBQSxHQUFBRyxDQUFBLFFBQUcsTUFBTSxJQUFBRCxZQUFBLENBQUEwQixPQUFLLEVBQUNQLEdBQUcsRUFBRTtRQUNoQyxHQUFHRCxPQUFPO1FBQ1ZFLE9BQU8sRUFBRTtVQUNQLEdBQUdBLE9BQU87VUFDVjtVQUFLO1VBQUEsQ0FBQXRCLGNBQUEsR0FBQWEsQ0FBQSxVQUFBTyxPQUFPLENBQUNFLE9BQWtDO1VBQUE7VUFBQSxDQUFBdEIsY0FBQSxHQUFBYSxDQUFBLFVBQUksRUFBRTs7T0FFeEQsQ0FBQztNQUFDO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUVILElBQUksQ0FBQ3dCLFFBQVEsQ0FBQ0UsRUFBRSxFQUFFO1FBQUE7UUFBQTdCLGNBQUEsR0FBQWEsQ0FBQTtRQUNoQixNQUFNaUIsU0FBUztRQUFBO1FBQUEsQ0FBQTlCLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU13QixRQUFRLENBQUNJLElBQUksRUFBRTtRQUFDO1FBQUEvQixjQUFBLEdBQUFHLENBQUE7UUFDeEMsTUFBTSxJQUFJNkIsS0FBSyxDQUFDLFFBQVFMLFFBQVEsQ0FBQ00sTUFBTSxLQUFLSCxTQUFTLEVBQUUsQ0FBQztNQUMxRCxDQUFDO01BQUE7TUFBQTtRQUFBOUIsY0FBQSxHQUFBYSxDQUFBO01BQUE7TUFFRCxNQUFNcUIsV0FBVztNQUFBO01BQUEsQ0FBQWxDLGNBQUEsR0FBQUcsQ0FBQSxRQUFHd0IsUUFBUSxDQUFDTCxPQUFPLENBQUNhLEdBQUcsQ0FBQyxjQUFjLENBQUM7TUFBQztNQUFBbkMsY0FBQSxHQUFBRyxDQUFBO01BQ3pEO01BQUk7TUFBQSxDQUFBSCxjQUFBLEdBQUFhLENBQUEsV0FBQXFCLFdBQVc7TUFBQTtNQUFBLENBQUFsQyxjQUFBLEdBQUFhLENBQUEsV0FBSXFCLFdBQVcsQ0FBQ0UsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEdBQUU7UUFBQTtRQUFBcEMsY0FBQSxHQUFBYSxDQUFBO1FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtRQUMzRCxPQUFRLE1BQU13QixRQUFRLENBQUNVLElBQUksRUFBRTtNQUMvQixDQUFDO01BQUE7TUFBQTtRQUFBckMsY0FBQSxHQUFBYSxDQUFBO01BQUE7TUFBQWIsY0FBQSxHQUFBRyxDQUFBO01BRUQsT0FBUSxNQUFNd0IsUUFBUSxDQUFDSSxJQUFJLEVBQUU7SUFDL0IsQ0FBQyxDQUFDLE9BQU9PLEtBQUssRUFBRTtNQUFBO01BQUF0QyxjQUFBLEdBQUFHLENBQUE7TUFDZCxJQUFJbUMsS0FBSyxZQUFZTixLQUFLLEVBQUU7UUFBQTtRQUFBaEMsY0FBQSxHQUFBYSxDQUFBO1FBQUFiLGNBQUEsR0FBQUcsQ0FBQTtRQUMxQixNQUFNLElBQUk2QixLQUFLLENBQUMsMkJBQTJCTSxLQUFLLENBQUNDLE9BQU8sRUFBRSxDQUFDO01BQzdELENBQUM7TUFBQTtNQUFBO1FBQUF2QyxjQUFBLEdBQUFhLENBQUE7TUFBQTtNQUFBYixjQUFBLEdBQUFHLENBQUE7TUFDRCxNQUFNLElBQUk2QixLQUFLLENBQUMsMkNBQTJDLENBQUM7SUFDOUQ7RUFDRjtFQUVBO0VBQ0EsTUFBTVEsUUFBUUEsQ0FBQ3BCLE9BQUE7RUFBQTtFQUFBLENBQUFwQixjQUFBLEdBQUFhLENBQUEsV0FBNkIsRUFBRTtJQUFBO0lBQUFiLGNBQUEsR0FBQVcsQ0FBQTtJQUM1QyxNQUFNOEIsTUFBTTtJQUFBO0lBQUEsQ0FBQXpDLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLElBQUl1QyxlQUFlLEVBQUU7SUFBQztJQUFBMUMsY0FBQSxHQUFBRyxDQUFBO0lBQ3JDLElBQUlpQixPQUFPLENBQUN1QixLQUFLLEVBQUU7TUFBQTtNQUFBM0MsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsT0FBTyxFQUFFeEIsT0FBTyxDQUFDdUIsS0FBSyxDQUFDRSxRQUFRLEVBQUUsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUE3QyxjQUFBLEdBQUFhLENBQUE7SUFBQTtJQUFBYixjQUFBLEdBQUFHLENBQUE7SUFDcEUsSUFBSWlCLE9BQU8sQ0FBQzBCLE1BQU0sRUFBRTtNQUFBO01BQUE5QyxjQUFBLEdBQUFhLENBQUE7TUFBQWIsY0FBQSxHQUFBRyxDQUFBO01BQUFzQyxNQUFNLENBQUNHLE1BQU0sQ0FBQyxRQUFRLEVBQUV4QixPQUFPLENBQUMwQixNQUFNLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFFNUQsTUFBTWtDLEtBQUs7SUFBQTtJQUFBLENBQUEvQyxjQUFBLEdBQUFHLENBQUEsUUFBR3NDLE1BQU0sQ0FBQ0ksUUFBUSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsSUFBSTRCLE1BQU0sQ0FBQ0ksUUFBUSxFQUFFLEVBQUU7SUFBQTtJQUFBLENBQUE3QyxjQUFBLEdBQUFhLENBQUEsV0FBRyxFQUFFO0lBQUM7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQy9ELE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXlCLFNBQVM2QixLQUFLLEVBQUUsQ0FBQztFQUNuRTtFQUVBLE1BQU1DLE9BQU9BLENBQUNDLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN0QixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFVLFVBQVUrQixFQUFFLEVBQUUsQ0FBQztFQUNsRDtFQUVBLE1BQU1DLFVBQVVBLENBQUNDLFFBQTJCO0lBQUE7SUFBQW5ELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDMUMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBVSxRQUFRLEVBQUU7TUFDekNrQyxNQUFNLEVBQUUsTUFBTTtNQUNkQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDSixRQUFRO0tBQzlCLENBQUM7RUFDSjtFQUVBLE1BQU1LLFVBQVVBLENBQUNQLEVBQVUsRUFBRUUsUUFBMkI7SUFBQTtJQUFBbkQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN0RCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFVLFVBQVUrQixFQUFFLEVBQUUsRUFBRTtNQUMvQ0csTUFBTSxFQUFFLE9BQU87TUFDZkMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0osUUFBUTtLQUM5QixDQUFDO0VBQ0o7RUFFQSxNQUFNTSxVQUFVQSxDQUFDUixFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDekIsTUFBTSxJQUFJLENBQUNlLFdBQVcsQ0FBTyxVQUFVK0IsRUFBRSxFQUFFLEVBQUU7TUFDM0NHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBO0VBQ0EsTUFBTU0sWUFBWUEsQ0FBQ3RDLE9BQUE7RUFBQTtFQUFBLENBQUFwQixjQUFBLEdBQUFhLENBQUEsV0FBNkIsRUFBRTtJQUFBO0lBQUFiLGNBQUEsR0FBQVcsQ0FBQTtJQUNoRCxNQUFNOEIsTUFBTTtJQUFBO0lBQUEsQ0FBQXpDLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLElBQUl1QyxlQUFlLEVBQUU7SUFBQztJQUFBMUMsY0FBQSxHQUFBRyxDQUFBO0lBQ3JDLElBQUlpQixPQUFPLENBQUN1QixLQUFLLEVBQUU7TUFBQTtNQUFBM0MsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsT0FBTyxFQUFFeEIsT0FBTyxDQUFDdUIsS0FBSyxDQUFDRSxRQUFRLEVBQUUsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUE3QyxjQUFBLEdBQUFhLENBQUE7SUFBQTtJQUFBYixjQUFBLEdBQUFHLENBQUE7SUFDcEUsSUFBSWlCLE9BQU8sQ0FBQzBCLE1BQU0sRUFBRTtNQUFBO01BQUE5QyxjQUFBLEdBQUFhLENBQUE7TUFBQWIsY0FBQSxHQUFBRyxDQUFBO01BQUFzQyxNQUFNLENBQUNHLE1BQU0sQ0FBQyxRQUFRLEVBQUV4QixPQUFPLENBQUMwQixNQUFNLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQzVELElBQUlpQixPQUFPLENBQUN1QyxTQUFTLEVBQUU7TUFBQTtNQUFBM0QsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsV0FBVyxFQUFFeEIsT0FBTyxDQUFDdUMsU0FBUyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTNELGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRXJFLE1BQU1rQyxLQUFLO0lBQUE7SUFBQSxDQUFBL0MsY0FBQSxHQUFBRyxDQUFBLFFBQUdzQyxNQUFNLENBQUNJLFFBQVEsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLElBQUk0QixNQUFNLENBQUNJLFFBQVEsRUFBRSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsRUFBRTtJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUE2QixhQUFhNkIsS0FBSyxFQUFFLENBQUM7RUFDM0U7RUFFQSxNQUFNYSxXQUFXQSxDQUFDWCxFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDMUIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBYyxjQUFjK0IsRUFBRSxFQUFFLENBQUM7RUFDMUQ7RUFFQSxNQUFNWSxjQUFjQSxDQUFDQyxZQUFtQztJQUFBO0lBQUE5RCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3RELE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWMsWUFBWSxFQUFFO01BQ2pEa0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ08sWUFBWTtLQUNsQyxDQUFDO0VBQ0o7RUFFQSxNQUFNQyxjQUFjQSxDQUFDZCxFQUFVLEVBQUVhLFlBQW1DO0lBQUE7SUFBQTlELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDbEUsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBYyxjQUFjK0IsRUFBRSxFQUFFLEVBQUU7TUFDdkRHLE1BQU0sRUFBRSxLQUFLO01BQ2JDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUNPLFlBQVk7S0FDbEMsQ0FBQztFQUNKO0VBRUEsTUFBTUUsY0FBY0EsQ0FBQ2YsRUFBVTtJQUFBO0lBQUFqRCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzdCLE1BQU0sSUFBSSxDQUFDZSxXQUFXLENBQU8sY0FBYytCLEVBQUUsRUFBRSxFQUFFO01BQy9DRyxNQUFNLEVBQUU7S0FDVCxDQUFDO0VBQ0o7RUFFQSxNQUFNYSxnQkFBZ0JBLENBQUNoQixFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDL0IsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBYyxjQUFjK0IsRUFBRSxXQUFXLEVBQUU7TUFDaEVHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBLE1BQU1jLGtCQUFrQkEsQ0FBQ2pCLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNqQyxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFjLGNBQWMrQixFQUFFLGFBQWEsRUFBRTtNQUNsRUcsTUFBTSxFQUFFO0tBQ1QsQ0FBQztFQUNKO0VBRUE7RUFDQSxNQUFNZSxhQUFhQSxDQUFDL0MsT0FBQTtFQUFBO0VBQUEsQ0FBQXBCLGNBQUEsR0FBQWEsQ0FBQSxXQUE2QixFQUFFO0lBQUE7SUFBQWIsY0FBQSxHQUFBVyxDQUFBO0lBQ2pELE1BQU04QixNQUFNO0lBQUE7SUFBQSxDQUFBekMsY0FBQSxHQUFBRyxDQUFBLFFBQUcsSUFBSXVDLGVBQWUsRUFBRTtJQUFDO0lBQUExQyxjQUFBLEdBQUFHLENBQUE7SUFDckMsSUFBSWlCLE9BQU8sQ0FBQ3VCLEtBQUssRUFBRTtNQUFBO01BQUEzQyxjQUFBLEdBQUFhLENBQUE7TUFBQWIsY0FBQSxHQUFBRyxDQUFBO01BQUFzQyxNQUFNLENBQUNHLE1BQU0sQ0FBQyxPQUFPLEVBQUV4QixPQUFPLENBQUN1QixLQUFLLENBQUNFLFFBQVEsRUFBRSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTdDLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUNwRSxJQUFJaUIsT0FBTyxDQUFDMEIsTUFBTSxFQUFFO01BQUE7TUFBQTlDLGNBQUEsR0FBQWEsQ0FBQTtNQUFBYixjQUFBLEdBQUFHLENBQUE7TUFBQXNDLE1BQU0sQ0FBQ0csTUFBTSxDQUFDLFFBQVEsRUFBRXhCLE9BQU8sQ0FBQzBCLE1BQU0sQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUE5QyxjQUFBLEdBQUFhLENBQUE7SUFBQTtJQUU1RCxNQUFNa0MsS0FBSztJQUFBO0lBQUEsQ0FBQS9DLGNBQUEsR0FBQUcsQ0FBQSxRQUFHc0MsTUFBTSxDQUFDSSxRQUFRLEVBQUU7SUFBQTtJQUFBLENBQUE3QyxjQUFBLEdBQUFhLENBQUEsV0FBRyxJQUFJNEIsTUFBTSxDQUFDSSxRQUFRLEVBQUUsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLEVBQUU7SUFBQztJQUFBYixjQUFBLEdBQUFHLENBQUE7SUFDL0QsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBOEIsY0FBYzZCLEtBQUssRUFBRSxDQUFDO0VBQzdFO0VBRUEsTUFBTXFCLFlBQVlBLENBQUNuQixFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDM0IsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBZSxlQUFlK0IsRUFBRSxFQUFFLENBQUM7RUFDNUQ7RUFFQSxNQUFNb0IsZUFBZUEsQ0FBQ3BCLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUM5QixNQUFNLElBQUksQ0FBQ2UsV0FBVyxDQUFPLGVBQWUrQixFQUFFLEVBQUUsRUFBRTtNQUNoREcsTUFBTSxFQUFFO0tBQ1QsQ0FBQztFQUNKO0VBRUE7RUFDQSxNQUFNa0IsY0FBY0EsQ0FBQ2xELE9BQUE7RUFBQTtFQUFBLENBQUFwQixjQUFBLEdBQUFhLENBQUEsV0FBNkIsRUFBRTtJQUFBO0lBQUFiLGNBQUEsR0FBQVcsQ0FBQTtJQUNsRCxNQUFNOEIsTUFBTTtJQUFBO0lBQUEsQ0FBQXpDLGNBQUEsR0FBQUcsQ0FBQSxRQUFHLElBQUl1QyxlQUFlLEVBQUU7SUFBQztJQUFBMUMsY0FBQSxHQUFBRyxDQUFBO0lBQ3JDLElBQUlpQixPQUFPLENBQUN1QixLQUFLLEVBQUU7TUFBQTtNQUFBM0MsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsT0FBTyxFQUFFeEIsT0FBTyxDQUFDdUIsS0FBSyxDQUFDRSxRQUFRLEVBQUUsQ0FBQztJQUFBLENBQUM7SUFBQTtJQUFBO01BQUE3QyxjQUFBLEdBQUFhLENBQUE7SUFBQTtJQUFBYixjQUFBLEdBQUFHLENBQUE7SUFDcEUsSUFBSWlCLE9BQU8sQ0FBQzBCLE1BQU0sRUFBRTtNQUFBO01BQUE5QyxjQUFBLEdBQUFhLENBQUE7TUFBQWIsY0FBQSxHQUFBRyxDQUFBO01BQUFzQyxNQUFNLENBQUNHLE1BQU0sQ0FBQyxRQUFRLEVBQUV4QixPQUFPLENBQUMwQixNQUFNLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQzVELElBQUlpQixPQUFPLENBQUN1QyxTQUFTLEVBQUU7TUFBQTtNQUFBM0QsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsV0FBVyxFQUFFeEIsT0FBTyxDQUFDdUMsU0FBUyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTNELGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRXJFLE1BQU1rQyxLQUFLO0lBQUE7SUFBQSxDQUFBL0MsY0FBQSxHQUFBRyxDQUFBLFFBQUdzQyxNQUFNLENBQUNJLFFBQVEsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLElBQUk0QixNQUFNLENBQUNJLFFBQVEsRUFBRSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsRUFBRTtJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUErQixlQUFlNkIsS0FBSyxFQUFFLENBQUM7RUFDL0U7RUFFQSxNQUFNd0IsYUFBYUEsQ0FBQ3RCLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUM1QixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFnQixnQkFBZ0IrQixFQUFFLEVBQUUsQ0FBQztFQUM5RDtFQUVBLE1BQU11QixnQkFBZ0JBLENBQUNDLGNBQXVDO0lBQUE7SUFBQXpFLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDNUQsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBZ0IsY0FBYyxFQUFFO01BQ3JEa0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ2tCLGNBQWM7S0FDcEMsQ0FBQztFQUNKO0VBRUEsTUFBTUMsZ0JBQWdCQSxDQUFDekIsRUFBVTtJQUFBO0lBQUFqRCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQy9CLE1BQU0sSUFBSSxDQUFDZSxXQUFXLENBQU8sZ0JBQWdCK0IsRUFBRSxFQUFFLEVBQUU7TUFDakRHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBLE1BQU11QixtQkFBbUJBLENBQUNDLGNBQXNCO0lBQUE7SUFBQTVFLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDOUMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBMEIsdUJBQXVCMEQsY0FBYyxFQUFFLENBQUM7RUFDM0Y7RUFFQTtFQUNBLE1BQU1DLFdBQVdBLENBQUN6RCxPQUFBO0VBQUE7RUFBQSxDQUFBcEIsY0FBQSxHQUFBYSxDQUFBLFdBQTZCLEVBQUU7SUFBQTtJQUFBYixjQUFBLEdBQUFXLENBQUE7SUFDL0MsTUFBTThCLE1BQU07SUFBQTtJQUFBLENBQUF6QyxjQUFBLEdBQUFHLENBQUEsUUFBRyxJQUFJdUMsZUFBZSxFQUFFO0lBQUM7SUFBQTFDLGNBQUEsR0FBQUcsQ0FBQTtJQUNyQyxJQUFJaUIsT0FBTyxDQUFDdUIsS0FBSyxFQUFFO01BQUE7TUFBQTNDLGNBQUEsR0FBQWEsQ0FBQTtNQUFBYixjQUFBLEdBQUFHLENBQUE7TUFBQXNDLE1BQU0sQ0FBQ0csTUFBTSxDQUFDLE9BQU8sRUFBRXhCLE9BQU8sQ0FBQ3VCLEtBQUssQ0FBQ0UsUUFBUSxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBN0MsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQ3BFLElBQUlpQixPQUFPLENBQUMwQixNQUFNLEVBQUU7TUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsUUFBUSxFQUFFeEIsT0FBTyxDQUFDMEIsTUFBTSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTlDLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRTVELE1BQU1rQyxLQUFLO0lBQUE7SUFBQSxDQUFBL0MsY0FBQSxHQUFBRyxDQUFBLFFBQUdzQyxNQUFNLENBQUNJLFFBQVEsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLElBQUk0QixNQUFNLENBQUNJLFFBQVEsRUFBRSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsRUFBRTtJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUE0QixZQUFZNkIsS0FBSyxFQUFFLENBQUM7RUFDekU7RUFFQSxNQUFNK0IsVUFBVUEsQ0FBQzdCLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN6QixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFhLGFBQWErQixFQUFFLEVBQUUsQ0FBQztFQUN4RDtFQUVBLE1BQU04QixhQUFhQSxDQUFDQyxXQUFpQztJQUFBO0lBQUFoRixjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ25ELE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWEsV0FBVyxFQUFFO01BQy9Da0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ3lCLFdBQVc7S0FDakMsQ0FBQztFQUNKO0VBRUEsTUFBTUMsYUFBYUEsQ0FBQ2hDLEVBQVUsRUFBRStCLFdBQWlDO0lBQUE7SUFBQWhGLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDL0QsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBYSxhQUFhK0IsRUFBRSxFQUFFLEVBQUU7TUFDckRHLE1BQU0sRUFBRSxLQUFLO01BQ2JDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUN5QixXQUFXO0tBQ2pDLENBQUM7RUFDSjtFQUVBLE1BQU1FLGFBQWFBLENBQUNqQyxFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDNUIsTUFBTSxJQUFJLENBQUNlLFdBQVcsQ0FBTyxhQUFhK0IsRUFBRSxFQUFFLEVBQUU7TUFDOUNHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBO0VBQ0EsTUFBTStCLFlBQVlBLENBQUMvRCxPQUFBO0VBQUE7RUFBQSxDQUFBcEIsY0FBQSxHQUFBYSxDQUFBLFdBQTZCLEVBQUU7SUFBQTtJQUFBYixjQUFBLEdBQUFXLENBQUE7SUFDaEQsTUFBTThCLE1BQU07SUFBQTtJQUFBLENBQUF6QyxjQUFBLEdBQUFHLENBQUEsUUFBRyxJQUFJdUMsZUFBZSxFQUFFO0lBQUM7SUFBQTFDLGNBQUEsR0FBQUcsQ0FBQTtJQUNyQyxJQUFJaUIsT0FBTyxDQUFDdUIsS0FBSyxFQUFFO01BQUE7TUFBQTNDLGNBQUEsR0FBQWEsQ0FBQTtNQUFBYixjQUFBLEdBQUFHLENBQUE7TUFBQXNDLE1BQU0sQ0FBQ0csTUFBTSxDQUFDLE9BQU8sRUFBRXhCLE9BQU8sQ0FBQ3VCLEtBQUssQ0FBQ0UsUUFBUSxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBN0MsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQ3BFLElBQUlpQixPQUFPLENBQUMwQixNQUFNLEVBQUU7TUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsUUFBUSxFQUFFeEIsT0FBTyxDQUFDMEIsTUFBTSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTlDLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRTVELE1BQU1rQyxLQUFLO0lBQUE7SUFBQSxDQUFBL0MsY0FBQSxHQUFBRyxDQUFBLFNBQUdzQyxNQUFNLENBQUNJLFFBQVEsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLElBQUk0QixNQUFNLENBQUNJLFFBQVEsRUFBRSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsRUFBRTtJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUE2QixhQUFhNkIsS0FBSyxFQUFFLENBQUM7RUFDM0U7RUFFQSxNQUFNcUMsY0FBY0EsQ0FBQ0MsWUFBbUM7SUFBQTtJQUFBckYsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN0RCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFjLFlBQVksRUFBRTtNQUNqRGtDLE1BQU0sRUFBRSxNQUFNO01BQ2RDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUM4QixZQUFZO0tBQ2xDLENBQUM7RUFDSjtFQUVBLE1BQU1DLGNBQWNBLENBQUNyQyxFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDN0IsTUFBTSxJQUFJLENBQUNlLFdBQVcsQ0FBTyxjQUFjK0IsRUFBRSxFQUFFLEVBQUU7TUFDL0NHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBO0VBQ0EsTUFBTW1DLE9BQU9BLENBQUNuRSxPQUFBO0VBQUE7RUFBQSxDQUFBcEIsY0FBQSxHQUFBYSxDQUFBLFdBQTZCLEVBQUU7SUFBQTtJQUFBYixjQUFBLEdBQUFXLENBQUE7SUFDM0MsTUFBTThCLE1BQU07SUFBQTtJQUFBLENBQUF6QyxjQUFBLEdBQUFHLENBQUEsU0FBRyxJQUFJdUMsZUFBZSxFQUFFO0lBQUM7SUFBQTFDLGNBQUEsR0FBQUcsQ0FBQTtJQUNyQyxJQUFJaUIsT0FBTyxDQUFDdUIsS0FBSyxFQUFFO01BQUE7TUFBQTNDLGNBQUEsR0FBQWEsQ0FBQTtNQUFBYixjQUFBLEdBQUFHLENBQUE7TUFBQXNDLE1BQU0sQ0FBQ0csTUFBTSxDQUFDLE9BQU8sRUFBRXhCLE9BQU8sQ0FBQ3VCLEtBQUssQ0FBQ0UsUUFBUSxFQUFFLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBN0MsY0FBQSxHQUFBYSxDQUFBO0lBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQ3BFLElBQUlpQixPQUFPLENBQUMwQixNQUFNLEVBQUU7TUFBQTtNQUFBOUMsY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUFBc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsUUFBUSxFQUFFeEIsT0FBTyxDQUFDMEIsTUFBTSxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTlDLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRTVELE1BQU1rQyxLQUFLO0lBQUE7SUFBQSxDQUFBL0MsY0FBQSxHQUFBRyxDQUFBLFNBQUdzQyxNQUFNLENBQUNJLFFBQVEsRUFBRTtJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQWEsQ0FBQSxXQUFHLElBQUk0QixNQUFNLENBQUNJLFFBQVEsRUFBRSxFQUFFO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBYSxDQUFBLFdBQUcsRUFBRTtJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUF3QixRQUFRNkIsS0FBSyxFQUFFLENBQUM7RUFDakU7RUFFQSxNQUFNeUMsTUFBTUEsQ0FBQ3ZDLEVBQVU7SUFBQTtJQUFBakQsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNyQixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFTLFNBQVMrQixFQUFFLEVBQUUsQ0FBQztFQUNoRDtFQUVBLE1BQU13QyxTQUFTQSxDQUFDQyxPQUF5QjtJQUFBO0lBQUExRixjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3ZDLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQVMsT0FBTyxFQUFFO01BQ3ZDa0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ21DLE9BQU87S0FDN0IsQ0FBQztFQUNKO0VBRUEsTUFBTUMsU0FBU0EsQ0FBQzFDLEVBQVUsRUFBRXlDLE9BQXlCO0lBQUE7SUFBQTFGLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDbkQsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBUyxTQUFTK0IsRUFBRSxFQUFFLEVBQUU7TUFDN0NHLE1BQU0sRUFBRSxLQUFLO01BQ2JDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUNtQyxPQUFPO0tBQzdCLENBQUM7RUFDSjtFQUVBLE1BQU1FLFNBQVNBLENBQUMzQyxFQUFVO0lBQUE7SUFBQWpELGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDeEIsTUFBTSxJQUFJLENBQUNlLFdBQVcsQ0FBTyxTQUFTK0IsRUFBRSxFQUFFLEVBQUU7TUFDMUNHLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBLE1BQU15QyxlQUFlQSxDQUFDQyxVQUFrQjtJQUFBO0lBQUE5RixjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3RDLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQVcsY0FBYzRFLFVBQVUsT0FBTyxDQUFDO0VBQ3BFO0VBRUEsTUFBTUMsa0JBQWtCQSxDQUFDRCxVQUFrQixFQUFFRSxNQUFnQjtJQUFBO0lBQUFoRyxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzNELE1BQU0sSUFBSSxDQUFDZSxXQUFXLENBQU8sY0FBYzRFLFVBQVUsT0FBTyxFQUFFO01BQzVEMUMsTUFBTSxFQUFFLEtBQUs7TUFDYkMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQztRQUFFeUM7TUFBTSxDQUFFO0tBQ2hDLENBQUM7RUFDSjtFQUVBO0VBQ0EsTUFBTUMsbUJBQW1CQSxDQUFBO0lBQUE7SUFBQWpHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDdkIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBaUIsUUFBUSxDQUFDO0VBQ25EO0VBRUE7RUFDQSxNQUFNZ0Ysb0JBQW9CQSxDQUFBO0lBQUE7SUFBQWxHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDeEIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBcUMscUJBQXFCLENBQUM7RUFDcEY7RUFFQSxNQUFNaUYsdUJBQXVCQSxDQUFDQyxXQUEyQztJQUFBO0lBQUFwRyxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3ZFLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXNCLHFCQUFxQixFQUFFO01BQ2xFa0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQzZDLFdBQVc7S0FDakMsQ0FBQztFQUNKO0VBRUEsTUFBTUMsc0JBQXNCQSxDQUFDQyxXQUFtQixFQUFFRixXQUEwQztJQUFBO0lBQUFwRyxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzFGLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXNCLHVCQUF1QnFGLGtCQUFrQixDQUFDRCxXQUFXLENBQUMsRUFBRSxFQUFFO01BQ3JHbEQsTUFBTSxFQUFFLE9BQU87TUFDZkMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQzZDLFdBQVc7S0FDakMsQ0FBQztFQUNKO0VBRUEsTUFBTUkseUJBQXlCQSxDQUFDRixXQUFtQjtJQUFBO0lBQUF0RyxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ2pELE1BQU0sSUFBSSxDQUFDZSxXQUFXLENBQU8sdUJBQXVCcUYsa0JBQWtCLENBQUNELFdBQVcsQ0FBQyxFQUFFLEVBQUU7TUFDckZsRCxNQUFNLEVBQUU7S0FDVCxDQUFDO0VBQ0o7RUFFQTtFQUNBLE1BQU1xRCxZQUFZQSxDQUFBO0lBQUE7SUFBQXpHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDaEIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBMkIsYUFBYSxDQUFDO0VBQ2xFO0VBRUEsTUFBTXdGLFdBQVdBLENBQUNDLFFBQWdCO0lBQUE7SUFBQTNHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDaEMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBeUIsZUFBZXFGLGtCQUFrQixDQUFDSSxRQUFRLENBQUMsRUFBRSxDQUFDO0VBQ2hHO0VBRUEsTUFBTUMscUJBQXFCQSxDQUFBO0lBQUE7SUFBQTVHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDekIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBMkIsdUJBQXVCLENBQUM7RUFDNUU7RUFFQSxNQUFNMkYsb0JBQW9CQSxDQUFDQyxJQUFZO0lBQUE7SUFBQTlHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDckMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBeUIseUJBQXlCcUYsa0JBQWtCLENBQUNPLElBQUksQ0FBQyxFQUFFLENBQUM7RUFDdEc7RUFFQTtFQUNBLE1BQU1DLHdCQUF3QkEsQ0FBQzNGLE9BQTJCO0lBQUE7SUFBQXBCLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDeEQsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBeUIsa0NBQWtDLEVBQUU7TUFDbEZrQyxNQUFNLEVBQUUsTUFBTTtNQUNkQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDbkMsT0FBTztLQUM3QixDQUFDO0VBQ0o7RUFFQSxNQUFNNEYseUJBQXlCQSxDQUFDNUYsT0FBMkI7SUFBQTtJQUFBcEIsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN6RCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUEwQiwyQ0FBMkMsRUFBRTtNQUM1RmtDLE1BQU0sRUFBRSxNQUFNO01BQ2RDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUNuQyxPQUFPO0tBQzdCLENBQUM7RUFDSjtFQUVBO0VBQ0EsTUFBTTZGLGNBQWNBLENBQUNoRSxFQUFVLEVBQUVpRSxRQUErQjtJQUFBO0lBQUFsSCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzlELE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQVUsVUFBVStCLEVBQUUsT0FBTyxFQUFFO01BQ3BERyxNQUFNLEVBQUUsS0FBSztNQUNiQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDMkQsUUFBUTtLQUM5QixDQUFDO0VBQ0o7RUFFQTtFQUNBLE1BQU1DLGVBQWVBLENBQUN4RCxTQUFpQjtJQUFBO0lBQUEzRCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3JDLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXdCLGFBQWF5QyxTQUFTLFFBQVEsQ0FBQztFQUNoRjtFQUVBLE1BQU15RCxnQkFBZ0JBLENBQUN6RCxTQUFpQixFQUFFUixRQUE0QjtJQUFBO0lBQUFuRCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3BFLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXNCLGFBQWF5QyxTQUFTLFFBQVEsRUFBRTtNQUMzRVAsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0osUUFBUTtLQUM5QixDQUFDO0VBQ0o7RUFFQSxNQUFNa0UsaUJBQWlCQSxDQUFDMUQsU0FBaUIsRUFBRTJELE1BQWMsRUFBRUosUUFBNEI7SUFBQTtJQUFBbEgsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNyRixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFzQixhQUFheUMsU0FBUyxVQUFVMkQsTUFBTSxFQUFFLEVBQUU7TUFDckZsRSxNQUFNLEVBQUUsS0FBSztNQUNiQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDMkQsUUFBUTtLQUM5QixDQUFDO0VBQ0o7RUFFQSxNQUFNSyxxQkFBcUJBLENBQUM1RCxTQUFpQixFQUFFMkQsTUFBYztJQUFBO0lBQUF0SCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzNELE1BQU0sSUFBSSxDQUFDZSxXQUFXLENBQU8sYUFBYXlDLFNBQVMsVUFBVTJELE1BQU0sRUFBRSxFQUFFO01BQ3JFbEUsTUFBTSxFQUFFO0tBQ1QsQ0FBQztFQUNKO0VBRUE7RUFDQSxNQUFNb0UsZ0JBQWdCQSxDQUFDdkUsRUFBVSxFQUFFd0UsWUFBcUM7SUFBQTtJQUFBekgsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUN0RSxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFjLGNBQWMrQixFQUFFLFdBQVcsRUFBRTtNQUNoRUcsTUFBTSxFQUFFLEtBQUs7TUFDYkMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ2tFLFlBQVk7S0FDbEMsQ0FBQztFQUNKO0VBRUE7RUFDQSxNQUFNQyxnQkFBZ0JBLENBQUN6RSxFQUFVLEVBQUV3QixjQUFnRDtJQUFBO0lBQUF6RSxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ2pGLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWdCLGdCQUFnQitCLEVBQUUsRUFBRSxFQUFFO01BQzNERyxNQUFNLEVBQUUsS0FBSztNQUNiQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDa0IsY0FBYztLQUNwQyxDQUFDO0VBQ0o7RUFFQSxNQUFNa0Qsa0JBQWtCQSxDQUFDMUUsRUFBVSxFQUFFd0UsWUFBdUM7SUFBQTtJQUFBekgsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUMxRSxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFnQixnQkFBZ0IrQixFQUFFLFdBQVcsRUFBRTtNQUNwRUcsTUFBTSxFQUFFLEtBQUs7TUFDYkMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ2tFLFlBQVk7S0FDbEMsQ0FBQztFQUNKO0VBRUE7RUFDQSxNQUFNRyxXQUFXQSxDQUFDM0UsRUFBVTtJQUFBO0lBQUFqRCxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQzFCLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWMsY0FBYytCLEVBQUUsRUFBRSxDQUFDO0VBQzFEO0VBRUEsTUFBTTRFLGNBQWNBLENBQUM1RSxFQUFVLEVBQUVvQyxZQUFtQztJQUFBO0lBQUFyRixjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ2xFLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWMsY0FBYytCLEVBQUUsRUFBRSxFQUFFO01BQ3ZERyxNQUFNLEVBQUUsS0FBSztNQUNiQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDOEIsWUFBWTtLQUNsQyxDQUFDO0VBQ0o7RUFFQTtFQUNBLE1BQU15QyxzQkFBc0JBLENBQUE7SUFBQTtJQUFBOUgsY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUMxQixPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFzQixtQ0FBbUMsQ0FBQztFQUNuRjtFQUVBLE1BQU02RyxrQkFBa0JBLENBQUNDLFFBQUE7RUFBQTtFQUFBLENBQUFoSSxjQUFBLEdBQUFhLENBQUEsV0FBcUMsRUFBRTtJQUFBO0lBQUFiLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDOUQsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBc0Isc0JBQXNCLEVBQUU7TUFDbkVrQyxNQUFNLEVBQUUsTUFBTTtNQUNkQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDeUUsUUFBUTtLQUM5QixDQUFDO0VBQ0o7RUFFQSxNQUFNQyxTQUFTQSxDQUFDQyxVQUFzQztJQUFBO0lBQUFsSSxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ3BELE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXNCLDRCQUE0QixFQUFFO01BQ3pFa0MsTUFBTSxFQUFFLE1BQU07TUFDZEMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQzJFLFVBQVU7S0FDaEMsQ0FBQztFQUNKO0VBRUEsTUFBTUMsZ0JBQWdCQSxDQUFBO0lBQUE7SUFBQW5JLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDcEIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBd0IsZ0NBQWdDLENBQUM7RUFDbEY7RUFFQSxNQUFNa0gsZUFBZUEsQ0FBQTtJQUFBO0lBQUFwSSxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ25CLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQXNCLDRCQUE0QixDQUFDO0VBQzVFO0VBRUE7RUFDQSxNQUFNbUgsS0FBS0EsQ0FBQ0MsU0FBdUI7SUFBQTtJQUFBdEksY0FBQSxHQUFBVyxDQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNqQyxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUFnQixRQUFRLEVBQUU7TUFDL0NrQyxNQUFNLEVBQUUsTUFBTTtNQUNkQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDK0UsU0FBUztLQUMvQixDQUFDO0VBQ0o7RUFFQSxNQUFNQyxNQUFNQSxDQUFBO0lBQUE7SUFBQXZJLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDVixNQUFNLElBQUksQ0FBQ2UsV0FBVyxDQUFPLFNBQVMsRUFBRTtNQUN0Q2tDLE1BQU0sRUFBRTtLQUNULENBQUM7RUFDSjtFQUVBLE1BQU1vRixjQUFjQSxDQUFBO0lBQUE7SUFBQXhJLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDbEIsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBYyxVQUFVLENBQUM7RUFDbEQ7RUFFQSxNQUFNdUgsY0FBY0EsQ0FBQTtJQUFBO0lBQUF6SSxjQUFBLEdBQUFXLENBQUE7SUFBQVgsY0FBQSxHQUFBRyxDQUFBO0lBQ2xCLE9BQU8sSUFBSSxDQUFDZSxXQUFXLENBQWMsa0JBQWtCLEVBQUU7TUFDdkRrQyxNQUFNLEVBQUU7S0FDVCxDQUFDO0VBQ0o7RUFFQTtFQUNBc0YscUJBQXFCQSxDQUFDMUgsTUFBb0IsRUFBRTJILEtBQWM7SUFBQTtJQUFBM0ksY0FBQSxHQUFBVyxDQUFBO0lBQ3hELE1BQU04QixNQUFNO0lBQUE7SUFBQSxDQUFBekMsY0FBQSxHQUFBRyxDQUFBLFNBQUcsSUFBSXVDLGVBQWUsQ0FBQztNQUNqQ2tHLGFBQWEsRUFBRSxNQUFNO01BQ3JCQyxTQUFTLEVBQUU3SCxNQUFNLENBQUM4SCxRQUFRO01BQzFCQyxZQUFZLEVBQUUvSCxNQUFNLENBQUNnSSxXQUFXO01BQ2hDQyxLQUFLO01BQUU7TUFBQSxDQUFBakosY0FBQSxHQUFBYSxDQUFBLFdBQUFHLE1BQU0sQ0FBQ2lJLEtBQUssRUFBRUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztNQUFBO01BQUEsQ0FBQWxKLGNBQUEsR0FBQWEsQ0FBQSxXQUFJLEVBQUU7S0FDckMsQ0FBQztJQUFDO0lBQUFiLGNBQUEsR0FBQUcsQ0FBQTtJQUVILElBQUl3SSxLQUFLLEVBQUU7TUFBQTtNQUFBM0ksY0FBQSxHQUFBYSxDQUFBO01BQUFiLGNBQUEsR0FBQUcsQ0FBQTtNQUNUc0MsTUFBTSxDQUFDRyxNQUFNLENBQUMsT0FBTyxFQUFFK0YsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFBQTtJQUFBO01BQUEzSSxjQUFBLEdBQUFhLENBQUE7SUFBQTtJQUFBYixjQUFBLEdBQUFHLENBQUE7SUFFRCxPQUFPLEdBQUdhLE1BQU0sQ0FBQ21JLGdCQUFnQixJQUFJMUcsTUFBTSxDQUFDSSxRQUFRLEVBQUUsRUFBRTtFQUMxRDtFQUVBLE1BQU11RyxrQkFBa0JBLENBQUNwSSxNQUFvQixFQUFFcUksSUFBWTtJQUFBO0lBQUFySixjQUFBLEdBQUFXLENBQUE7SUFDekQsTUFBTTJJLFFBQVE7SUFBQTtJQUFBLENBQUF0SixjQUFBLEdBQUFHLENBQUEsU0FBR2EsTUFBTSxDQUFDc0ksUUFBUTtJQUNoQyxNQUFNN0csTUFBTTtJQUFBO0lBQUEsQ0FBQXpDLGNBQUEsR0FBQUcsQ0FBQSxTQUFHLElBQUl1QyxlQUFlLENBQUM7TUFDakM2RyxVQUFVLEVBQUUsb0JBQW9CO01BQ2hDVixTQUFTLEVBQUU3SCxNQUFNLENBQUM4SCxRQUFRO01BQzFCVSxhQUFhLEVBQUV4SSxNQUFNLENBQUN5SSxZQUFZO01BQ2xDSixJQUFJO01BQ0pOLFlBQVksRUFBRS9ILE1BQU0sQ0FBQ2dJO0tBQ3RCLENBQUM7SUFFRixNQUFNckgsUUFBUTtJQUFBO0lBQUEsQ0FBQTNCLGNBQUEsR0FBQUcsQ0FBQSxTQUFHLE1BQU0sSUFBQUQsWUFBQSxDQUFBMEIsT0FBSyxFQUFDMEgsUUFBUSxFQUFFO01BQ3JDbEcsTUFBTSxFQUFFLE1BQU07TUFDZDlCLE9BQU8sRUFBRTtRQUNQLGNBQWMsRUFBRSxtQ0FBbUM7UUFDbkRDLE1BQU0sRUFBRTtPQUNUO01BQ0Q4QixJQUFJLEVBQUVaLE1BQU0sQ0FBQ0ksUUFBUTtLQUN0QixDQUFDO0lBQUM7SUFBQTdDLGNBQUEsR0FBQUcsQ0FBQTtJQUVILElBQUksQ0FBQ3dCLFFBQVEsQ0FBQ0UsRUFBRSxFQUFFO01BQUE7TUFBQTdCLGNBQUEsR0FBQWEsQ0FBQTtNQUNoQixNQUFNaUIsU0FBUztNQUFBO01BQUEsQ0FBQTlCLGNBQUEsR0FBQUcsQ0FBQSxTQUFHLE1BQU13QixRQUFRLENBQUNJLElBQUksRUFBRTtNQUFDO01BQUEvQixjQUFBLEdBQUFHLENBQUE7TUFDeEMsTUFBTSxJQUFJNkIsS0FBSyxDQUFDLGlDQUFpQ0YsU0FBUyxFQUFFLENBQUM7SUFDL0QsQ0FBQztJQUFBO0lBQUE7TUFBQTlCLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRUQsTUFBTTZJLFNBQVM7SUFBQTtJQUFBLENBQUExSixjQUFBLEdBQUFHLENBQUEsU0FBRyxNQUFNd0IsUUFBUSxDQUFDVSxJQUFJLEVBQVM7SUFBQztJQUFBckMsY0FBQSxHQUFBRyxDQUFBO0lBQy9DLE9BQU87TUFDTHVCLFdBQVcsRUFBRWdJLFNBQVMsQ0FBQ0MsWUFBWTtNQUNuQ0MsWUFBWSxFQUFFRixTQUFTLENBQUNHLGFBQWE7TUFDckNDLFNBQVMsRUFBRUosU0FBUyxDQUFDSyxVQUFVO01BQy9CQyxTQUFTO01BQUU7TUFBQSxDQUFBaEssY0FBQSxHQUFBYSxDQUFBLFdBQUE2SSxTQUFTLENBQUNPLFVBQVU7TUFBQTtNQUFBLENBQUFqSyxjQUFBLEdBQUFhLENBQUEsV0FBSSxRQUFRO0tBQzVDO0VBQ0g7RUFFQSxNQUFNcUosa0JBQWtCQSxDQUFDbEosTUFBb0IsRUFBRTRJLFlBQW9CO0lBQUE7SUFBQTVKLGNBQUEsR0FBQVcsQ0FBQTtJQUNqRSxNQUFNMkksUUFBUTtJQUFBO0lBQUEsQ0FBQXRKLGNBQUEsR0FBQUcsQ0FBQSxTQUFHYSxNQUFNLENBQUNzSSxRQUFRO0lBQ2hDLE1BQU03RyxNQUFNO0lBQUE7SUFBQSxDQUFBekMsY0FBQSxHQUFBRyxDQUFBLFNBQUcsSUFBSXVDLGVBQWUsQ0FBQztNQUNqQzZHLFVBQVUsRUFBRSxlQUFlO01BQzNCVixTQUFTLEVBQUU3SCxNQUFNLENBQUM4SCxRQUFRO01BQzFCVSxhQUFhLEVBQUV4SSxNQUFNLENBQUN5SSxZQUFZO01BQ2xDSSxhQUFhLEVBQUVEO0tBQ2hCLENBQUM7SUFFRixNQUFNakksUUFBUTtJQUFBO0lBQUEsQ0FBQTNCLGNBQUEsR0FBQUcsQ0FBQSxTQUFHLE1BQU0sSUFBQUQsWUFBQSxDQUFBMEIsT0FBSyxFQUFDMEgsUUFBUSxFQUFFO01BQ3JDbEcsTUFBTSxFQUFFLE1BQU07TUFDZDlCLE9BQU8sRUFBRTtRQUNQLGNBQWMsRUFBRSxtQ0FBbUM7UUFDbkRDLE1BQU0sRUFBRTtPQUNUO01BQ0Q4QixJQUFJLEVBQUVaLE1BQU0sQ0FBQ0ksUUFBUTtLQUN0QixDQUFDO0lBQUM7SUFBQTdDLGNBQUEsR0FBQUcsQ0FBQTtJQUVILElBQUksQ0FBQ3dCLFFBQVEsQ0FBQ0UsRUFBRSxFQUFFO01BQUE7TUFBQTdCLGNBQUEsR0FBQWEsQ0FBQTtNQUNoQixNQUFNaUIsU0FBUztNQUFBO01BQUEsQ0FBQTlCLGNBQUEsR0FBQUcsQ0FBQSxTQUFHLE1BQU13QixRQUFRLENBQUNJLElBQUksRUFBRTtNQUFDO01BQUEvQixjQUFBLEdBQUFHLENBQUE7TUFDeEMsTUFBTSxJQUFJNkIsS0FBSyxDQUFDLGdDQUFnQ0YsU0FBUyxFQUFFLENBQUM7SUFDOUQsQ0FBQztJQUFBO0lBQUE7TUFBQTlCLGNBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBRUQsTUFBTTZJLFNBQVM7SUFBQTtJQUFBLENBQUExSixjQUFBLEdBQUFHLENBQUEsU0FBRyxNQUFNd0IsUUFBUSxDQUFDVSxJQUFJLEVBQVM7SUFBQztJQUFBckMsY0FBQSxHQUFBRyxDQUFBO0lBQy9DLE9BQU87TUFDTHVCLFdBQVcsRUFBRWdJLFNBQVMsQ0FBQ0MsWUFBWTtNQUNuQ0MsWUFBWTtNQUFFO01BQUEsQ0FBQTVKLGNBQUEsR0FBQWEsQ0FBQSxXQUFBNkksU0FBUyxDQUFDRyxhQUFhO01BQUE7TUFBQSxDQUFBN0osY0FBQSxHQUFBYSxDQUFBLFdBQUkrSSxZQUFZO01BQUU7TUFDdkRFLFNBQVMsRUFBRUosU0FBUyxDQUFDSyxVQUFVO01BQy9CQyxTQUFTO01BQUU7TUFBQSxDQUFBaEssY0FBQSxHQUFBYSxDQUFBLFdBQUE2SSxTQUFTLENBQUNPLFVBQVU7TUFBQTtNQUFBLENBQUFqSyxjQUFBLEdBQUFhLENBQUEsV0FBSSxRQUFRO0tBQzVDO0VBQ0g7RUFFQTtFQUNBLE1BQU1zSixVQUFVQSxDQUFBO0lBQUE7SUFBQW5LLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDZCxPQUFPLElBQUksQ0FBQ2UsV0FBVyxDQUEyQixXQUFXLENBQUM7RUFDaEU7RUFFQSxNQUFNa0osY0FBY0EsQ0FBQ3pELFFBQWdCO0lBQUE7SUFBQTNHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDbkMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBdUIsb0JBQW9CLEVBQUU7TUFDbEVrQyxNQUFNLEVBQUUsTUFBTTtNQUNkQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO1FBQUVvRDtNQUFRLENBQUU7S0FDbEMsQ0FBQztFQUNKO0VBRUEsTUFBTTBELG9CQUFvQkEsQ0FBQzFELFFBQWdCO0lBQUE7SUFBQTNHLGNBQUEsR0FBQVcsQ0FBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDekMsT0FBTyxJQUFJLENBQUNlLFdBQVcsQ0FBcUIsYUFBYXFGLGtCQUFrQixDQUFDSSxRQUFRLENBQUMsY0FBYyxDQUFDO0VBQ3RHOztBQUNEO0FBQUEzRyxjQUFBLEdBQUFHLENBQUE7QUE1bEJEbUssT0FBQSxDQUFBaEssU0FBQSxHQUFBQSxTQUFBIiwiaWdub3JlTGlzdCI6W119