3106bec0ed17aa0c3b02a4fda5bd0d15
"use strict";

/**
 * Workflow Management Tools
 *
 * MCP tools for programmatic workflow creation, execution, monitoring, and management
 * using n8n fork APIs with support for tags, projects, and collaboration features.
 */
/* istanbul ignore next */
function cov_kv6oywyfe() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow-management.ts";
  var hash = "614a557d0bc0bea86c1f7111dd55a812875ec94a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow-management.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 74
        }
      },
      "2": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "4": {
        start: {
          line: 12,
          column: 38
        },
        end: {
          line: 12,
          column: 86
        }
      },
      "5": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 96
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "11": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "12": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "13": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "14": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "15": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 59,
          column: 2
        }
      },
      "16": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "17": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "18": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 72,
          column: 2
        }
      },
      "19": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "20": {
        start: {
          line: 78,
          column: 32
        },
        end: {
          line: 83,
          column: 2
        }
      },
      "21": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "22": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 92,
          column: 2
        }
      },
      "23": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 97,
          column: 2
        }
      },
      "24": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "25": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 110
        }
      },
      "26": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "27": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "28": {
        start: {
          line: 120,
          column: 31
        },
        end: {
          line: 120,
          column: 61
        }
      },
      "29": {
        start: {
          line: 121,
          column: 33
        },
        end: {
          line: 131,
          column: 18
        }
      },
      "30": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 135,
          column: 17
        }
      },
      "31": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "32": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 143
        }
      },
      "33": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "34": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "35": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 136
        }
      },
      "36": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "37": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "38": {
        start: {
          line: 159,
          column: 31
        },
        end: {
          line: 159,
          column: 61
        }
      },
      "39": {
        start: {
          line: 160,
          column: 32
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "40": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 162,
          column: 47
        }
      },
      "41": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 47
        }
      },
      "42": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 164,
          column: 49
        }
      },
      "43": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 49
        }
      },
      "44": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 166,
          column: 61
        }
      },
      "45": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 61
        }
      },
      "46": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 168,
          column: 47
        }
      },
      "47": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 47
        }
      },
      "48": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "49": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "50": {
        start: {
          line: 171,
          column: 33
        },
        end: {
          line: 171,
          column: 88
        }
      },
      "51": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 109
        }
      },
      "52": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "53": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "54": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 136
        }
      },
      "55": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 225,
          column: 7
        }
      },
      "56": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "57": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 61
        }
      },
      "58": {
        start: {
          line: 196,
          column: 31
        },
        end: {
          line: 203,
          column: 18
        }
      },
      "59": {
        start: {
          line: 204,
          column: 34
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "60": {
        start: {
          line: 204,
          column: 68
        },
        end: {
          line: 212,
          column: 17
        }
      },
      "61": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 217,
          column: 18
        }
      },
      "62": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 221,
          column: 32
        }
      },
      "63": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 221,
          column: 32
        }
      },
      "64": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 135
        }
      },
      "65": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 260,
          column: 7
        }
      },
      "66": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "67": {
        start: {
          line: 240,
          column: 31
        },
        end: {
          line: 240,
          column: 61
        }
      },
      "68": {
        start: {
          line: 241,
          column: 34
        },
        end: {
          line: 244,
          column: 18
        }
      },
      "69": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 252,
          column: 18
        }
      },
      "70": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 256,
          column: 32
        }
      },
      "71": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 32
        }
      },
      "72": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 137
        }
      },
      "73": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "74": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "75": {
        start: {
          line: 275,
          column: 31
        },
        end: {
          line: 275,
          column: 61
        }
      },
      "76": {
        start: {
          line: 276,
          column: 34
        },
        end: {
          line: 276,
          column: 79
        }
      },
      "77": {
        start: {
          line: 277,
          column: 33
        },
        end: {
          line: 278,
          column: 108
        }
      },
      "78": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 291,
          column: 18
        }
      },
      "79": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 295,
          column: 32
        }
      },
      "80": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 32
        }
      },
      "81": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 141
        }
      },
      "82": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 347,
          column: 7
        }
      },
      "83": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 345,
          column: 13
        }
      },
      "84": {
        start: {
          line: 314,
          column: 31
        },
        end: {
          line: 314,
          column: 61
        }
      },
      "85": {
        start: {
          line: 315,
          column: 31
        },
        end: {
          line: 320,
          column: 18
        }
      },
      "86": {
        start: {
          line: 321,
          column: 35
        },
        end: {
          line: 334,
          column: 18
        }
      },
      "87": {
        start: {
          line: 322,
          column: 37
        },
        end: {
          line: 323,
          column: 112
        }
      },
      "88": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 333,
          column: 22
        }
      },
      "89": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 339,
          column: 18
        }
      },
      "90": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 343,
          column: 32
        }
      },
      "91": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 32
        }
      },
      "92": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 136
        }
      },
      "93": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 383,
          column: 7
        }
      },
      "94": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "95": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 362,
          column: 61
        }
      },
      "96": {
        start: {
          line: 363,
          column: 32
        },
        end: {
          line: 366,
          column: 18
        }
      },
      "97": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "98": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "99": {
        start: {
          line: 379,
          column: 20
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "100": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 135
        }
      },
      "101": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 418,
          column: 7
        }
      },
      "102": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "103": {
        start: {
          line: 398,
          column: 31
        },
        end: {
          line: 398,
          column: 61
        }
      },
      "104": {
        start: {
          line: 399,
          column: 33
        },
        end: {
          line: 399,
          column: 60
        }
      },
      "105": {
        start: {
          line: 400,
          column: 42
        },
        end: {
          line: 406,
          column: 19
        }
      },
      "106": {
        start: {
          line: 400,
          column: 67
        },
        end: {
          line: 406,
          column: 17
        }
      },
      "107": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 410,
          column: 18
        }
      },
      "108": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 414,
          column: 32
        }
      },
      "109": {
        start: {
          line: 414,
          column: 20
        },
        end: {
          line: 414,
          column: 32
        }
      },
      "110": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 134
        }
      },
      "111": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 450,
          column: 7
        }
      },
      "112": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "113": {
        start: {
          line: 433,
          column: 31
        },
        end: {
          line: 433,
          column: 61
        }
      },
      "114": {
        start: {
          line: 434,
          column: 28
        },
        end: {
          line: 434,
          column: 73
        }
      },
      "115": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 442,
          column: 18
        }
      },
      "116": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 446,
          column: 32
        }
      },
      "117": {
        start: {
          line: 446,
          column: 20
        },
        end: {
          line: 446,
          column: 32
        }
      },
      "118": {
        start: {
          line: 447,
          column: 16
        },
        end: {
          line: 447,
          column: 131
        }
      },
      "119": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 483,
          column: 7
        }
      },
      "120": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 481,
          column: 13
        }
      },
      "121": {
        start: {
          line: 465,
          column: 31
        },
        end: {
          line: 465,
          column: 61
        }
      },
      "122": {
        start: {
          line: 466,
          column: 29
        },
        end: {
          line: 466,
          column: 52
        }
      },
      "123": {
        start: {
          line: 467,
          column: 38
        },
        end: {
          line: 471,
          column: 19
        }
      },
      "124": {
        start: {
          line: 467,
          column: 55
        },
        end: {
          line: 471,
          column: 17
        }
      },
      "125": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 475,
          column: 18
        }
      },
      "126": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 479,
          column: 32
        }
      },
      "127": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 479,
          column: 32
        }
      },
      "128": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 480,
          column: 130
        }
      },
      "129": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 501,
          column: 7
        }
      },
      "130": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 178
        }
      },
      "131": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 516,
          column: 7
        }
      },
      "132": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 176
        }
      },
      "133": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 531,
          column: 7
        }
      },
      "134": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 184
        }
      }
    },
    fnMap: {
      "0": {
        name: "getWorkflowClient",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "registerWorkflowManagementTools",
        decl: {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 40
          }
        },
        loc: {
          start: {
            line: 101,
            column: 49
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 101
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 23
          }
        },
        loc: {
          start: {
            line: 102,
            column: 28
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 102
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 118,
            column: 17
          },
          end: {
            line: 118,
            column: 18
          }
        },
        loc: {
          start: {
            line: 118,
            column: 35
          },
          end: {
            line: 143,
            column: 9
          }
        },
        line: 118
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 157,
            column: 17
          },
          end: {
            line: 157,
            column: 18
          }
        },
        loc: {
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 157
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 193,
            column: 17
          },
          end: {
            line: 193,
            column: 18
          }
        },
        loc: {
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 224,
            column: 9
          }
        },
        line: 193
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 204,
            column: 55
          },
          end: {
            line: 204,
            column: 56
          }
        },
        loc: {
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 204
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 238,
            column: 17
          },
          end: {
            line: 238,
            column: 18
          }
        },
        loc: {
          start: {
            line: 238,
            column: 35
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 238
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 273,
            column: 17
          },
          end: {
            line: 273,
            column: 18
          }
        },
        loc: {
          start: {
            line: 273,
            column: 35
          },
          end: {
            line: 298,
            column: 9
          }
        },
        line: 273
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 312,
            column: 17
          },
          end: {
            line: 312,
            column: 18
          }
        },
        loc: {
          start: {
            line: 312,
            column: 35
          },
          end: {
            line: 346,
            column: 9
          }
        },
        line: 312
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 321,
            column: 57
          },
          end: {
            line: 321,
            column: 58
          }
        },
        loc: {
          start: {
            line: 321,
            column: 70
          },
          end: {
            line: 334,
            column: 17
          }
        },
        line: 321
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 360,
            column: 17
          },
          end: {
            line: 360,
            column: 18
          }
        },
        loc: {
          start: {
            line: 360,
            column: 35
          },
          end: {
            line: 382,
            column: 9
          }
        },
        line: 360
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 396,
            column: 17
          },
          end: {
            line: 396,
            column: 18
          }
        },
        loc: {
          start: {
            line: 396,
            column: 29
          },
          end: {
            line: 417,
            column: 9
          }
        },
        line: 396
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 400,
            column: 55
          },
          end: {
            line: 400,
            column: 56
          }
        },
        loc: {
          start: {
            line: 400,
            column: 67
          },
          end: {
            line: 406,
            column: 17
          }
        },
        line: 400
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 431,
            column: 17
          },
          end: {
            line: 431,
            column: 18
          }
        },
        loc: {
          start: {
            line: 431,
            column: 35
          },
          end: {
            line: 449,
            column: 9
          }
        },
        line: 431
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 463,
            column: 17
          },
          end: {
            line: 463,
            column: 18
          }
        },
        loc: {
          start: {
            line: 463,
            column: 29
          },
          end: {
            line: 482,
            column: 9
          }
        },
        line: 463
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 467,
            column: 47
          },
          end: {
            line: 467,
            column: 48
          }
        },
        loc: {
          start: {
            line: 467,
            column: 55
          },
          end: {
            line: 471,
            column: 17
          }
        },
        line: 467
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 498,
            column: 17
          },
          end: {
            line: 498,
            column: 18
          }
        },
        loc: {
          start: {
            line: 498,
            column: 35
          },
          end: {
            line: 500,
            column: 9
          }
        },
        line: 498
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 513,
            column: 17
          },
          end: {
            line: 513,
            column: 18
          }
        },
        loc: {
          start: {
            line: 513,
            column: 35
          },
          end: {
            line: 515,
            column: 9
          }
        },
        line: 513
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 528,
            column: 17
          },
          end: {
            line: 528,
            column: 18
          }
        },
        loc: {
          start: {
            line: 528,
            column: 35
          },
          end: {
            line: 530,
            column: 9
          }
        },
        line: 528
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 23
          }
        }, {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 60
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "4": {
        loc: {
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 36
          }
        }, {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 133,
            column: 51
          }
        }],
        line: 133
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 83
          },
          end: {
            line: 136,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 99
          },
          end: {
            line: 136,
            column: 115
          }
        }, {
          start: {
            line: 136,
            column: 118
          },
          end: {
            line: 136,
            column: 120
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 140,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 140,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "7": {
        loc: {
          start: {
            line: 141,
            column: 76
          },
          end: {
            line: 141,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 101
          },
          end: {
            line: 141,
            column: 114
          }
        }, {
          start: {
            line: 141,
            column: 117
          },
          end: {
            line: 141,
            column: 132
          }
        }],
        line: 141
      },
      "8": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 162,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 162,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "9": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 164,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 164,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "10": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 166,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 166,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "11": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 168,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 168,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "12": {
        loc: {
          start: {
            line: 169,
            column: 16
          },
          end: {
            line: 170,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 16
          },
          end: {
            line: 170,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "13": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 176,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 176,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "14": {
        loc: {
          start: {
            line: 177,
            column: 76
          },
          end: {
            line: 177,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 101
          },
          end: {
            line: 177,
            column: 114
          }
        }, {
          start: {
            line: 177,
            column: 117
          },
          end: {
            line: 177,
            column: 132
          }
        }],
        line: 177
      },
      "15": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 221,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 221,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "16": {
        loc: {
          start: {
            line: 222,
            column: 75
          },
          end: {
            line: 222,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 100
          },
          end: {
            line: 222,
            column: 113
          }
        }, {
          start: {
            line: 222,
            column: 116
          },
          end: {
            line: 222,
            column: 131
          }
        }],
        line: 222
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 256,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 256,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 257,
            column: 77
          },
          end: {
            line: 257,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 102
          },
          end: {
            line: 257,
            column: 115
          }
        }, {
          start: {
            line: 257,
            column: 118
          },
          end: {
            line: 257,
            column: 133
          }
        }],
        line: 257
      },
      "19": {
        loc: {
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 278,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 20
          },
          end: {
            line: 278,
            column: 101
          }
        }, {
          start: {
            line: 278,
            column: 104
          },
          end: {
            line: 278,
            column: 108
          }
        }],
        line: 277
      },
      "20": {
        loc: {
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 277,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 277,
            column: 52
          }
        }, {
          start: {
            line: 277,
            column: 56
          },
          end: {
            line: 277,
            column: 75
          }
        }],
        line: 277
      },
      "21": {
        loc: {
          start: {
            line: 288,
            column: 34
          },
          end: {
            line: 288,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 288,
            column: 78
          }
        }, {
          start: {
            line: 288,
            column: 81
          },
          end: {
            line: 288,
            column: 85
          }
        }],
        line: 288
      },
      "22": {
        loc: {
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 295,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 295,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "23": {
        loc: {
          start: {
            line: 296,
            column: 81
          },
          end: {
            line: 296,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 106
          },
          end: {
            line: 296,
            column: 119
          }
        }, {
          start: {
            line: 296,
            column: 122
          },
          end: {
            line: 296,
            column: 137
          }
        }],
        line: 296
      },
      "24": {
        loc: {
          start: {
            line: 322,
            column: 37
          },
          end: {
            line: 323,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 24
          },
          end: {
            line: 323,
            column: 105
          }
        }, {
          start: {
            line: 323,
            column: 108
          },
          end: {
            line: 323,
            column: 112
          }
        }],
        line: 322
      },
      "25": {
        loc: {
          start: {
            line: 322,
            column: 37
          },
          end: {
            line: 322,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 37
          },
          end: {
            line: 322,
            column: 56
          }
        }, {
          start: {
            line: 322,
            column: 60
          },
          end: {
            line: 322,
            column: 79
          }
        }],
        line: 322
      },
      "26": {
        loc: {
          start: {
            line: 331,
            column: 34
          },
          end: {
            line: 331,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 45
          },
          end: {
            line: 331,
            column: 78
          }
        }, {
          start: {
            line: 331,
            column: 81
          },
          end: {
            line: 331,
            column: 85
          }
        }],
        line: 331
      },
      "27": {
        loc: {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 343,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 343,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "28": {
        loc: {
          start: {
            line: 344,
            column: 76
          },
          end: {
            line: 344,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 101
          },
          end: {
            line: 344,
            column: 114
          }
        }, {
          start: {
            line: 344,
            column: 117
          },
          end: {
            line: 344,
            column: 132
          }
        }],
        line: 344
      },
      "29": {
        loc: {
          start: {
            line: 378,
            column: 16
          },
          end: {
            line: 379,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 16
          },
          end: {
            line: 379,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "30": {
        loc: {
          start: {
            line: 380,
            column: 75
          },
          end: {
            line: 380,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 380,
            column: 100
          },
          end: {
            line: 380,
            column: 113
          }
        }, {
          start: {
            line: 380,
            column: 116
          },
          end: {
            line: 380,
            column: 131
          }
        }],
        line: 380
      },
      "31": {
        loc: {
          start: {
            line: 413,
            column: 16
          },
          end: {
            line: 414,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 16
          },
          end: {
            line: 414,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "32": {
        loc: {
          start: {
            line: 415,
            column: 74
          },
          end: {
            line: 415,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 99
          },
          end: {
            line: 415,
            column: 112
          }
        }, {
          start: {
            line: 415,
            column: 115
          },
          end: {
            line: 415,
            column: 130
          }
        }],
        line: 415
      },
      "33": {
        loc: {
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 446,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 446,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "34": {
        loc: {
          start: {
            line: 447,
            column: 71
          },
          end: {
            line: 447,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 447,
            column: 96
          },
          end: {
            line: 447,
            column: 109
          }
        }, {
          start: {
            line: 447,
            column: 112
          },
          end: {
            line: 447,
            column: 127
          }
        }],
        line: 447
      },
      "35": {
        loc: {
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 479,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 479,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "36": {
        loc: {
          start: {
            line: 480,
            column: 70
          },
          end: {
            line: 480,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 480,
            column: 95
          },
          end: {
            line: 480,
            column: 108
          }
        }, {
          start: {
            line: 480,
            column: 111
          },
          end: {
            line: 480,
            column: 126
          }
        }],
        line: 480
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow-management.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/workflow-management.ts"],
      sourcesContent: ["/**\n * Workflow Management Tools\n * \n * MCP tools for programmatic workflow creation, execution, monitoring, and management\n * using n8n fork APIs with support for tags, projects, and collaboration features.\n */\n\nimport { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport { WorkflowManagementClient } from '../client/workflowManagementClient.js';\n\nlet workflowClient: WorkflowManagementClient | null = null;\n\n/**\n * Initialize workflow management client\n */\nfunction getWorkflowClient(n8nClient: N8nClient | null): WorkflowManagementClient {\n  if (!n8nClient) {\n    throw new UserError('n8n client not initialized. Please run init-n8n first.');\n  }\n  \n  if (!workflowClient || workflowClient !== workflowClient) {\n    workflowClient = new WorkflowManagementClient(n8nClient);\n  }\n  return workflowClient;\n}\n\n// Zod schemas for validation\nconst CreateWorkflowSchema = z.object({\n  name: z.string().min(1, 'Workflow name is required'),\n  nodes: z.array(z.any()).min(1, 'At least one node is required'),\n  connections: z.record(z.any()),\n  tags: z.array(z.string()).optional().default([]),\n  active: z.boolean().optional().default(false),\n  projectId: z.string().optional(),\n});\n\nconst UpdateWorkflowSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  name: z.string().optional(),\n  nodes: z.array(z.any()).optional(),\n  connections: z.record(z.any()).optional(),\n  tags: z.array(z.string()).optional(),\n  active: z.boolean().optional(),\n});\n\nconst ListWorkflowsSchema = z.object({\n  limit: z.number().min(1).max(100).optional().default(50),\n  offset: z.number().min(0).optional().default(0),\n  active: z.boolean().optional(),\n  tags: z.array(z.string()).optional(),\n  projectId: z.string().optional(),\n  ownedBy: z.string().optional(),\n});\n\nconst ExecuteWorkflowSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  inputData: z.any().optional(),\n  startNodes: z.array(z.string()).optional(),\n  loadFromDatabase: z.boolean().optional().default(true),\n});\n\nconst ExecutionStatusSchema = z.object({\n  executionId: z.string().min(1, 'Execution ID is required'),\n});\n\nconst ListExecutionsSchema = z.object({\n  workflowId: z.string().optional(),\n  status: z.array(z.string()).optional(),\n  limit: z.number().min(1).max(100).optional().default(20),\n  offset: z.number().min(0).optional().default(0),\n});\n\nconst CreateProjectSchema = z.object({\n  name: z.string().min(1, 'Project name is required'),\n  type: z.enum(['Personal', 'Team']).optional().default('Personal'),\n});\n\nconst CreateTagSchema = z.object({\n  name: z.string().min(1, 'Tag name is required'),\n});\n\nconst ShareWorkflowSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  userId: z.string().min(1, 'User ID is required'),\n  role: z.enum(['workflow:owner', 'workflow:editor', 'workflow:user']).optional().default('workflow:user'),\n});\n\nconst WorkflowAnalyticsSchema = z.object({\n  workflowId: z.string().min(1, 'Workflow ID is required'),\n  startDate: z.string().optional(),\n  endDate: z.string().optional(),\n  granularity: z.enum(['day', 'week', 'month']).optional().default('day'),\n});\n\nconst GlobalAnalyticsSchema = z.object({\n  startDate: z.string().optional(),\n  endDate: z.string().optional(),\n  projectId: z.string().optional(),\n});\n\nconst BulkActivateSchema = z.object({\n  workflowIds: z.array(z.string()).min(1, 'At least one workflow ID is required'),\n  active: z.boolean(),\n});\n\nconst ExportWorkflowsSchema = z.object({\n  workflowIds: z.array(z.string()).min(1, 'At least one workflow ID is required'),\n  includeCredentials: z.boolean().optional().default(false),\n  format: z.enum(['json', 'zip']).optional().default('json'),\n});\n\n/**\n * Register all workflow management tools\n */\nexport function registerWorkflowManagementTools(server: any) {\n  const getClient = () => {\n    // This is a simplified approach - in a real implementation, we'd need access to the global client\n    throw new UserError('Workflow management tools require integration with global n8n client');\n  };\n\n  // Create Workflow Tool\n  server.addTool({\n    name: 'create-workflow-advanced',\n    description: 'Create a new n8n workflow with advanced configuration options',\n    parameters: CreateWorkflowSchema,\n    annotations: {\n      title: 'Create Advanced Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof CreateWorkflowSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const workflow = await client.createWorkflow({\n          name: params.name,\n          nodes: params.nodes,\n          connections: params.connections,\n          tags: params.tags,\n          active: params.active,\n          settings: {},\n          staticData: {},\n          meta: { templateCredsSetupCompleted: false },\n          pinData: {},\n        });\n\n        // Move to project if specified\n        if (params.projectId && workflow.id) {\n          await client.moveWorkflowToProject(workflow.id, params.projectId);\n        }\n\n        return `\u2705 Advanced workflow \"${params.name}\" created successfully${params.active ? ' and activated' : ''}. ID: ${workflow.id}`;\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to create workflow: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Update Workflow Tool\n  server.addTool({\n    name: 'update-workflow-advanced',\n    description: 'Update an existing n8n workflow with advanced options',\n    parameters: UpdateWorkflowSchema,\n    annotations: {\n      title: 'Update Advanced Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof UpdateWorkflowSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const updates: any = {};\n        if (params.name !== undefined) updates.name = params.name;\n        if (params.nodes !== undefined) updates.nodes = params.nodes;\n        if (params.connections !== undefined) updates.connections = params.connections;\n        if (params.tags !== undefined) updates.tags = params.tags;\n        if (params.active !== undefined) updates.active = params.active;\n\n        const workflow = await client.updateWorkflow(params.workflowId, updates);\n\n        return `\u2705 Workflow updated successfully. Name: ${workflow.name}, Active: ${workflow.active}`;\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to update workflow: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // List Workflows with Advanced Filtering\n  server.addTool({\n    name: 'list-workflows-advanced',\n    description: 'List workflows with advanced filtering options including project and ownership filters',\n    parameters: ListWorkflowsSchema,\n    annotations: {\n      title: 'List Advanced Workflows',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof ListWorkflowsSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const result = await client.listWorkflows({\n          limit: params.limit,\n          offset: params.offset,\n          active: params.active,\n          tags: params.tags,\n          projectId: params.projectId,\n          ownedBy: params.ownedBy,\n        });\n\n        const workflows = result.workflows.map(workflow => ({\n          id: workflow.id,\n          name: workflow.name,\n          active: workflow.active,\n          tags: workflow.tags,\n          nodeCount: workflow.nodes.length,\n          createdAt: workflow.createdAt,\n          updatedAt: workflow.updatedAt,\n        }));\n\n        return {\n          workflows,\n          totalCount: result.totalCount,\n          summary: `\uD83D\uDCCB Found ${workflows.length} workflows (${result.totalCount} total)`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to list workflows: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Execute Workflow Tool\n  server.addTool({\n    name: 'execute-workflow-advanced',\n    description: 'Execute a workflow manually with advanced execution options',\n    parameters: ExecuteWorkflowSchema,\n    annotations: {\n      title: 'Execute Advanced Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof ExecuteWorkflowSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const execution = await client.executeWorkflow(params.workflowId, params.inputData, {\n          startNodes: params.startNodes,\n          loadFromDatabase: params.loadFromDatabase,\n        });\n\n        return {\n          executionId: execution.id,\n          workflowId: execution.workflowId,\n          status: execution.status,\n          mode: execution.mode,\n          startedAt: execution.startedAt,\n          message: `\uD83D\uDE80 Workflow execution started with ID: ${execution.id}`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to execute workflow: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Get Execution Status Tool\n  server.addTool({\n    name: 'get-execution-status-advanced',\n    description: 'Get detailed status and information about a workflow execution',\n    parameters: ExecutionStatusSchema,\n    annotations: {\n      title: 'Get Advanced Execution Status',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof ExecutionStatusSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const execution = await client.getExecution(params.executionId);\n\n        const duration = execution.stoppedAt && execution.startedAt ?\n          new Date(execution.stoppedAt).getTime() - new Date(execution.startedAt).getTime() : null;\n\n        return {\n          execution: {\n            id: execution.id,\n            workflowId: execution.workflowId,\n            status: execution.status,\n            mode: execution.mode,\n            startedAt: execution.startedAt,\n            stoppedAt: execution.stoppedAt,\n            finished: execution.finished,\n            duration: duration ? `${Math.round(duration / 1000)}s` : null,\n          },\n          message: `\uD83D\uDCCA Execution ${params.executionId} status: ${execution.status}`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to get execution status: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // List Executions Tool\n  server.addTool({\n    name: 'list-executions-advanced',\n    description: 'List workflow executions with advanced filtering and pagination',\n    parameters: ListExecutionsSchema,\n    annotations: {\n      title: 'List Advanced Executions',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof ListExecutionsSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const result = await client.listExecutions({\n          workflowId: params.workflowId,\n          status: params.status,\n          limit: params.limit,\n          offset: params.offset,\n        });\n\n        const executions = result.executions.map(execution => {\n          const duration = execution.stoppedAt && execution.startedAt ?\n            new Date(execution.stoppedAt).getTime() - new Date(execution.startedAt).getTime() : null;\n\n          return {\n            id: execution.id,\n            workflowId: execution.workflowId,\n            status: execution.status,\n            mode: execution.mode,\n            startedAt: execution.startedAt,\n            stoppedAt: execution.stoppedAt,\n            duration: duration ? `${Math.round(duration / 1000)}s` : null,\n            finished: execution.finished,\n          };\n        });\n\n        return {\n          executions,\n          totalCount: result.totalCount,\n          summary: `\uD83D\uDCCB Found ${executions.length} executions (${result.totalCount} total)`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to list executions: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Create Project Tool\n  server.addTool({\n    name: 'create-project-advanced',\n    description: 'Create a new project for organizing workflows',\n    parameters: CreateProjectSchema,\n    annotations: {\n      title: 'Create Advanced Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof CreateProjectSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const project = await client.createProject({\n          name: params.name,\n          type: params.type,\n        });\n\n        return {\n          project: {\n            id: project.id,\n            name: project.name,\n            type: project.type,\n            createdAt: project.createdAt,\n          },\n          message: `\u2705 Project \"${params.name}\" created successfully`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to create project: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // List Projects Tool\n  server.addTool({\n    name: 'list-projects-advanced',\n    description: 'List all projects with detailed information',\n    parameters: z.object({}),\n    annotations: {\n      title: 'List Advanced Projects',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const projects = await client.listProjects();\n\n        const formattedProjects = projects.map(project => ({\n          id: project.id,\n          name: project.name,\n          type: project.type,\n          createdAt: project.createdAt,\n          updatedAt: project.updatedAt,\n        }));\n\n        return {\n          projects: formattedProjects,\n          message: `\uD83D\uDCC1 Found ${projects.length} projects`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to list projects: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Create Tag Tool\n  server.addTool({\n    name: 'create-tag-advanced',\n    description: 'Create a new tag for organizing workflows',\n    parameters: CreateTagSchema,\n    annotations: {\n      title: 'Create Advanced Tag',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof CreateTagSchema>) => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const tag = await client.createTag({ name: params.name });\n\n        return {\n          tag: {\n            id: tag.id,\n            name: tag.name,\n            createdAt: tag.createdAt,\n          },\n          message: `\uD83C\uDFF7\uFE0F Tag \"${params.name}\" created successfully`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to create tag: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // List Tags Tool\n  server.addTool({\n    name: 'list-tags-advanced',\n    description: 'List all available tags with details',\n    parameters: z.object({}),\n    annotations: {\n      title: 'List Advanced Tags',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async () => {\n      try {\n        const client = getWorkflowClient(getClient());\n        \n        const tags = await client.listTags();\n\n        const formattedTags = tags.map(tag => ({\n          id: tag.id,\n          name: tag.name,\n          createdAt: tag.createdAt,\n        }));\n\n        return {\n          tags: formattedTags,\n          message: `\uD83C\uDFF7\uFE0F Found ${tags.length} tags`,\n        };\n      } catch (error) {\n        if (error instanceof UserError) throw error;\n        throw new UserError(`Failed to list tags: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    },\n  });\n\n  // Note: Advanced features like analytics, collaboration, and bulk operations\n  // are included as stubs to demonstrate the complete API structure, but would\n  // require extensions to the base N8nClient to fully implement.\n  \n  server.addTool({\n    name: 'get-workflow-analytics',\n    description: 'Get detailed analytics for a specific workflow (requires n8n fork API extension)',\n    parameters: WorkflowAnalyticsSchema,\n    annotations: {\n      title: 'Get Workflow Analytics',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof WorkflowAnalyticsSchema>) => {\n      throw new UserError('Workflow analytics not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');\n    },\n  });\n\n  server.addTool({\n    name: 'share-workflow',\n    description: 'Share a workflow with another user (requires n8n fork API extension)',\n    parameters: ShareWorkflowSchema,\n    annotations: {\n      title: 'Share Workflow',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof ShareWorkflowSchema>) => {\n      throw new UserError('Workflow sharing not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');\n    },\n  });\n\n  server.addTool({\n    name: 'bulk-activate-workflows',\n    description: 'Activate or deactivate multiple workflows at once (requires n8n fork API extension)',\n    parameters: BulkActivateSchema,\n    annotations: {\n      title: 'Bulk Activate Workflows',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (params: z.infer<typeof BulkActivateSchema>) => {\n      throw new UserError('Bulk workflow operations not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');\n    },\n  });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "614a557d0bc0bea86c1f7111dd55a812875ec94a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kv6oywyfe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kv6oywyfe();
cov_kv6oywyfe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_kv6oywyfe().s[1]++;
exports.registerWorkflowManagementTools = registerWorkflowManagementTools;
const zod_1 =
/* istanbul ignore next */
(cov_kv6oywyfe().s[2]++, require("zod"));
const fastmcp_1 =
/* istanbul ignore next */
(cov_kv6oywyfe().s[3]++, require("fastmcp"));
const workflowManagementClient_js_1 =
/* istanbul ignore next */
(cov_kv6oywyfe().s[4]++, require("../client/workflowManagementClient.js"));
let workflowClient =
/* istanbul ignore next */
(cov_kv6oywyfe().s[5]++, null);
/**
 * Initialize workflow management client
 */
function getWorkflowClient(n8nClient) {
  /* istanbul ignore next */
  cov_kv6oywyfe().f[0]++;
  cov_kv6oywyfe().s[6]++;
  if (!n8nClient) {
    /* istanbul ignore next */
    cov_kv6oywyfe().b[0][0]++;
    cov_kv6oywyfe().s[7]++;
    throw new fastmcp_1.UserError('n8n client not initialized. Please run init-n8n first.');
  } else
  /* istanbul ignore next */
  {
    cov_kv6oywyfe().b[0][1]++;
  }
  cov_kv6oywyfe().s[8]++;
  if (
  /* istanbul ignore next */
  (cov_kv6oywyfe().b[2][0]++, !workflowClient) ||
  /* istanbul ignore next */
  (cov_kv6oywyfe().b[2][1]++, workflowClient !== workflowClient)) {
    /* istanbul ignore next */
    cov_kv6oywyfe().b[1][0]++;
    cov_kv6oywyfe().s[9]++;
    workflowClient = new workflowManagementClient_js_1.WorkflowManagementClient(n8nClient);
  } else
  /* istanbul ignore next */
  {
    cov_kv6oywyfe().b[1][1]++;
  }
  cov_kv6oywyfe().s[10]++;
  return workflowClient;
}
// Zod schemas for validation
const CreateWorkflowSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[11]++, zod_1.z.object({
  name: zod_1.z.string().min(1, 'Workflow name is required'),
  nodes: zod_1.z.array(zod_1.z.any()).min(1, 'At least one node is required'),
  connections: zod_1.z.record(zod_1.z.any()),
  tags: zod_1.z.array(zod_1.z.string()).optional().default([]),
  active: zod_1.z.boolean().optional().default(false),
  projectId: zod_1.z.string().optional()
}));
const UpdateWorkflowSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[12]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  name: zod_1.z.string().optional(),
  nodes: zod_1.z.array(zod_1.z.any()).optional(),
  connections: zod_1.z.record(zod_1.z.any()).optional(),
  tags: zod_1.z.array(zod_1.z.string()).optional(),
  active: zod_1.z.boolean().optional()
}));
const ListWorkflowsSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[13]++, zod_1.z.object({
  limit: zod_1.z.number().min(1).max(100).optional().default(50),
  offset: zod_1.z.number().min(0).optional().default(0),
  active: zod_1.z.boolean().optional(),
  tags: zod_1.z.array(zod_1.z.string()).optional(),
  projectId: zod_1.z.string().optional(),
  ownedBy: zod_1.z.string().optional()
}));
const ExecuteWorkflowSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[14]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  inputData: zod_1.z.any().optional(),
  startNodes: zod_1.z.array(zod_1.z.string()).optional(),
  loadFromDatabase: zod_1.z.boolean().optional().default(true)
}));
const ExecutionStatusSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[15]++, zod_1.z.object({
  executionId: zod_1.z.string().min(1, 'Execution ID is required')
}));
const ListExecutionsSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[16]++, zod_1.z.object({
  workflowId: zod_1.z.string().optional(),
  status: zod_1.z.array(zod_1.z.string()).optional(),
  limit: zod_1.z.number().min(1).max(100).optional().default(20),
  offset: zod_1.z.number().min(0).optional().default(0)
}));
const CreateProjectSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[17]++, zod_1.z.object({
  name: zod_1.z.string().min(1, 'Project name is required'),
  type: zod_1.z.enum(['Personal', 'Team']).optional().default('Personal')
}));
const CreateTagSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[18]++, zod_1.z.object({
  name: zod_1.z.string().min(1, 'Tag name is required')
}));
const ShareWorkflowSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[19]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  userId: zod_1.z.string().min(1, 'User ID is required'),
  role: zod_1.z.enum(['workflow:owner', 'workflow:editor', 'workflow:user']).optional().default('workflow:user')
}));
const WorkflowAnalyticsSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[20]++, zod_1.z.object({
  workflowId: zod_1.z.string().min(1, 'Workflow ID is required'),
  startDate: zod_1.z.string().optional(),
  endDate: zod_1.z.string().optional(),
  granularity: zod_1.z.enum(['day', 'week', 'month']).optional().default('day')
}));
const GlobalAnalyticsSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[21]++, zod_1.z.object({
  startDate: zod_1.z.string().optional(),
  endDate: zod_1.z.string().optional(),
  projectId: zod_1.z.string().optional()
}));
const BulkActivateSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[22]++, zod_1.z.object({
  workflowIds: zod_1.z.array(zod_1.z.string()).min(1, 'At least one workflow ID is required'),
  active: zod_1.z.boolean()
}));
const ExportWorkflowsSchema =
/* istanbul ignore next */
(cov_kv6oywyfe().s[23]++, zod_1.z.object({
  workflowIds: zod_1.z.array(zod_1.z.string()).min(1, 'At least one workflow ID is required'),
  includeCredentials: zod_1.z.boolean().optional().default(false),
  format: zod_1.z.enum(['json', 'zip']).optional().default('json')
}));
/**
 * Register all workflow management tools
 */
function registerWorkflowManagementTools(server) {
  /* istanbul ignore next */
  cov_kv6oywyfe().f[1]++;
  cov_kv6oywyfe().s[24]++;
  const getClient = () => {
    /* istanbul ignore next */
    cov_kv6oywyfe().f[2]++;
    cov_kv6oywyfe().s[25]++;
    // This is a simplified approach - in a real implementation, we'd need access to the global client
    throw new fastmcp_1.UserError('Workflow management tools require integration with global n8n client');
  };
  // Create Workflow Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[26]++;
  server.addTool({
    name: 'create-workflow-advanced',
    description: 'Create a new n8n workflow with advanced configuration options',
    parameters: CreateWorkflowSchema,
    annotations: {
      title: 'Create Advanced Workflow',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[3]++;
      cov_kv6oywyfe().s[27]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[28]++, getWorkflowClient(getClient()));
        const workflow =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[29]++, await client.createWorkflow({
          name: params.name,
          nodes: params.nodes,
          connections: params.connections,
          tags: params.tags,
          active: params.active,
          settings: {},
          staticData: {},
          meta: {
            templateCredsSetupCompleted: false
          },
          pinData: {}
        }));
        // Move to project if specified
        /* istanbul ignore next */
        cov_kv6oywyfe().s[30]++;
        if (
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[4][0]++, params.projectId) &&
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[4][1]++, workflow.id)) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[3][0]++;
          cov_kv6oywyfe().s[31]++;
          await client.moveWorkflowToProject(workflow.id, params.projectId);
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[3][1]++;
        }
        cov_kv6oywyfe().s[32]++;
        return `✅ Advanced workflow "${params.name}" created successfully${params.active ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[5][0]++, ' and activated') :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[5][1]++, '')}. ID: ${workflow.id}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[33]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[6][0]++;
          cov_kv6oywyfe().s[34]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[6][1]++;
        }
        cov_kv6oywyfe().s[35]++;
        throw new fastmcp_1.UserError(`Failed to create workflow: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[7][1]++, 'Unknown error')}`);
      }
    }
  });
  // Update Workflow Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[36]++;
  server.addTool({
    name: 'update-workflow-advanced',
    description: 'Update an existing n8n workflow with advanced options',
    parameters: UpdateWorkflowSchema,
    annotations: {
      title: 'Update Advanced Workflow',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[4]++;
      cov_kv6oywyfe().s[37]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[38]++, getWorkflowClient(getClient()));
        const updates =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[39]++, {});
        /* istanbul ignore next */
        cov_kv6oywyfe().s[40]++;
        if (params.name !== undefined) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[8][0]++;
          cov_kv6oywyfe().s[41]++;
          updates.name = params.name;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[8][1]++;
        }
        cov_kv6oywyfe().s[42]++;
        if (params.nodes !== undefined) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[9][0]++;
          cov_kv6oywyfe().s[43]++;
          updates.nodes = params.nodes;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[9][1]++;
        }
        cov_kv6oywyfe().s[44]++;
        if (params.connections !== undefined) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[10][0]++;
          cov_kv6oywyfe().s[45]++;
          updates.connections = params.connections;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[10][1]++;
        }
        cov_kv6oywyfe().s[46]++;
        if (params.tags !== undefined) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[11][0]++;
          cov_kv6oywyfe().s[47]++;
          updates.tags = params.tags;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[11][1]++;
        }
        cov_kv6oywyfe().s[48]++;
        if (params.active !== undefined) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[12][0]++;
          cov_kv6oywyfe().s[49]++;
          updates.active = params.active;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[12][1]++;
        }
        const workflow =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[50]++, await client.updateWorkflow(params.workflowId, updates));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[51]++;
        return `✅ Workflow updated successfully. Name: ${workflow.name}, Active: ${workflow.active}`;
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[52]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[13][0]++;
          cov_kv6oywyfe().s[53]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[13][1]++;
        }
        cov_kv6oywyfe().s[54]++;
        throw new fastmcp_1.UserError(`Failed to update workflow: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[14][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[14][1]++, 'Unknown error')}`);
      }
    }
  });
  // List Workflows with Advanced Filtering
  /* istanbul ignore next */
  cov_kv6oywyfe().s[55]++;
  server.addTool({
    name: 'list-workflows-advanced',
    description: 'List workflows with advanced filtering options including project and ownership filters',
    parameters: ListWorkflowsSchema,
    annotations: {
      title: 'List Advanced Workflows',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[5]++;
      cov_kv6oywyfe().s[56]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[57]++, getWorkflowClient(getClient()));
        const result =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[58]++, await client.listWorkflows({
          limit: params.limit,
          offset: params.offset,
          active: params.active,
          tags: params.tags,
          projectId: params.projectId,
          ownedBy: params.ownedBy
        }));
        const workflows =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[59]++, result.workflows.map(workflow => {
          /* istanbul ignore next */
          cov_kv6oywyfe().f[6]++;
          cov_kv6oywyfe().s[60]++;
          return {
            id: workflow.id,
            name: workflow.name,
            active: workflow.active,
            tags: workflow.tags,
            nodeCount: workflow.nodes.length,
            createdAt: workflow.createdAt,
            updatedAt: workflow.updatedAt
          };
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[61]++;
        return {
          workflows,
          totalCount: result.totalCount,
          summary: `📋 Found ${workflows.length} workflows (${result.totalCount} total)`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[62]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[15][0]++;
          cov_kv6oywyfe().s[63]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[15][1]++;
        }
        cov_kv6oywyfe().s[64]++;
        throw new fastmcp_1.UserError(`Failed to list workflows: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[16][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[16][1]++, 'Unknown error')}`);
      }
    }
  });
  // Execute Workflow Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[65]++;
  server.addTool({
    name: 'execute-workflow-advanced',
    description: 'Execute a workflow manually with advanced execution options',
    parameters: ExecuteWorkflowSchema,
    annotations: {
      title: 'Execute Advanced Workflow',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[7]++;
      cov_kv6oywyfe().s[66]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[67]++, getWorkflowClient(getClient()));
        const execution =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[68]++, await client.executeWorkflow(params.workflowId, params.inputData, {
          startNodes: params.startNodes,
          loadFromDatabase: params.loadFromDatabase
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[69]++;
        return {
          executionId: execution.id,
          workflowId: execution.workflowId,
          status: execution.status,
          mode: execution.mode,
          startedAt: execution.startedAt,
          message: `🚀 Workflow execution started with ID: ${execution.id}`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[70]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[17][0]++;
          cov_kv6oywyfe().s[71]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[17][1]++;
        }
        cov_kv6oywyfe().s[72]++;
        throw new fastmcp_1.UserError(`Failed to execute workflow: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[18][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[18][1]++, 'Unknown error')}`);
      }
    }
  });
  // Get Execution Status Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[73]++;
  server.addTool({
    name: 'get-execution-status-advanced',
    description: 'Get detailed status and information about a workflow execution',
    parameters: ExecutionStatusSchema,
    annotations: {
      title: 'Get Advanced Execution Status',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[8]++;
      cov_kv6oywyfe().s[74]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[75]++, getWorkflowClient(getClient()));
        const execution =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[76]++, await client.getExecution(params.executionId));
        const duration =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[77]++,
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[20][0]++, execution.stoppedAt) &&
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[20][1]++, execution.startedAt) ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[19][0]++, new Date(execution.stoppedAt).getTime() - new Date(execution.startedAt).getTime()) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[19][1]++, null));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[78]++;
        return {
          execution: {
            id: execution.id,
            workflowId: execution.workflowId,
            status: execution.status,
            mode: execution.mode,
            startedAt: execution.startedAt,
            stoppedAt: execution.stoppedAt,
            finished: execution.finished,
            duration: duration ?
            /* istanbul ignore next */
            (cov_kv6oywyfe().b[21][0]++, `${Math.round(duration / 1000)}s`) :
            /* istanbul ignore next */
            (cov_kv6oywyfe().b[21][1]++, null)
          },
          message: `📊 Execution ${params.executionId} status: ${execution.status}`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[79]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[22][0]++;
          cov_kv6oywyfe().s[80]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[22][1]++;
        }
        cov_kv6oywyfe().s[81]++;
        throw new fastmcp_1.UserError(`Failed to get execution status: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[23][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[23][1]++, 'Unknown error')}`);
      }
    }
  });
  // List Executions Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[82]++;
  server.addTool({
    name: 'list-executions-advanced',
    description: 'List workflow executions with advanced filtering and pagination',
    parameters: ListExecutionsSchema,
    annotations: {
      title: 'List Advanced Executions',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[9]++;
      cov_kv6oywyfe().s[83]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[84]++, getWorkflowClient(getClient()));
        const result =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[85]++, await client.listExecutions({
          workflowId: params.workflowId,
          status: params.status,
          limit: params.limit,
          offset: params.offset
        }));
        const executions =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[86]++, result.executions.map(execution => {
          /* istanbul ignore next */
          cov_kv6oywyfe().f[10]++;
          const duration =
          /* istanbul ignore next */
          (cov_kv6oywyfe().s[87]++,
          /* istanbul ignore next */
          (cov_kv6oywyfe().b[25][0]++, execution.stoppedAt) &&
          /* istanbul ignore next */
          (cov_kv6oywyfe().b[25][1]++, execution.startedAt) ?
          /* istanbul ignore next */
          (cov_kv6oywyfe().b[24][0]++, new Date(execution.stoppedAt).getTime() - new Date(execution.startedAt).getTime()) :
          /* istanbul ignore next */
          (cov_kv6oywyfe().b[24][1]++, null));
          /* istanbul ignore next */
          cov_kv6oywyfe().s[88]++;
          return {
            id: execution.id,
            workflowId: execution.workflowId,
            status: execution.status,
            mode: execution.mode,
            startedAt: execution.startedAt,
            stoppedAt: execution.stoppedAt,
            duration: duration ?
            /* istanbul ignore next */
            (cov_kv6oywyfe().b[26][0]++, `${Math.round(duration / 1000)}s`) :
            /* istanbul ignore next */
            (cov_kv6oywyfe().b[26][1]++, null),
            finished: execution.finished
          };
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[89]++;
        return {
          executions,
          totalCount: result.totalCount,
          summary: `📋 Found ${executions.length} executions (${result.totalCount} total)`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[90]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[27][0]++;
          cov_kv6oywyfe().s[91]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[27][1]++;
        }
        cov_kv6oywyfe().s[92]++;
        throw new fastmcp_1.UserError(`Failed to list executions: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[28][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[28][1]++, 'Unknown error')}`);
      }
    }
  });
  // Create Project Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[93]++;
  server.addTool({
    name: 'create-project-advanced',
    description: 'Create a new project for organizing workflows',
    parameters: CreateProjectSchema,
    annotations: {
      title: 'Create Advanced Project',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[11]++;
      cov_kv6oywyfe().s[94]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[95]++, getWorkflowClient(getClient()));
        const project =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[96]++, await client.createProject({
          name: params.name,
          type: params.type
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[97]++;
        return {
          project: {
            id: project.id,
            name: project.name,
            type: project.type,
            createdAt: project.createdAt
          },
          message: `✅ Project "${params.name}" created successfully`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[98]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[29][0]++;
          cov_kv6oywyfe().s[99]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[29][1]++;
        }
        cov_kv6oywyfe().s[100]++;
        throw new fastmcp_1.UserError(`Failed to create project: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[30][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[30][1]++, 'Unknown error')}`);
      }
    }
  });
  // List Projects Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[101]++;
  server.addTool({
    name: 'list-projects-advanced',
    description: 'List all projects with detailed information',
    parameters: zod_1.z.object({}),
    annotations: {
      title: 'List Advanced Projects',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async () => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[12]++;
      cov_kv6oywyfe().s[102]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[103]++, getWorkflowClient(getClient()));
        const projects =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[104]++, await client.listProjects());
        const formattedProjects =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[105]++, projects.map(project => {
          /* istanbul ignore next */
          cov_kv6oywyfe().f[13]++;
          cov_kv6oywyfe().s[106]++;
          return {
            id: project.id,
            name: project.name,
            type: project.type,
            createdAt: project.createdAt,
            updatedAt: project.updatedAt
          };
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[107]++;
        return {
          projects: formattedProjects,
          message: `📁 Found ${projects.length} projects`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[108]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[31][0]++;
          cov_kv6oywyfe().s[109]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[31][1]++;
        }
        cov_kv6oywyfe().s[110]++;
        throw new fastmcp_1.UserError(`Failed to list projects: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[32][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[32][1]++, 'Unknown error')}`);
      }
    }
  });
  // Create Tag Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[111]++;
  server.addTool({
    name: 'create-tag-advanced',
    description: 'Create a new tag for organizing workflows',
    parameters: CreateTagSchema,
    annotations: {
      title: 'Create Advanced Tag',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[14]++;
      cov_kv6oywyfe().s[112]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[113]++, getWorkflowClient(getClient()));
        const tag =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[114]++, await client.createTag({
          name: params.name
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[115]++;
        return {
          tag: {
            id: tag.id,
            name: tag.name,
            createdAt: tag.createdAt
          },
          message: `🏷️ Tag "${params.name}" created successfully`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[116]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[33][0]++;
          cov_kv6oywyfe().s[117]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[33][1]++;
        }
        cov_kv6oywyfe().s[118]++;
        throw new fastmcp_1.UserError(`Failed to create tag: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[34][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[34][1]++, 'Unknown error')}`);
      }
    }
  });
  // List Tags Tool
  /* istanbul ignore next */
  cov_kv6oywyfe().s[119]++;
  server.addTool({
    name: 'list-tags-advanced',
    description: 'List all available tags with details',
    parameters: zod_1.z.object({}),
    annotations: {
      title: 'List Advanced Tags',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async () => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[15]++;
      cov_kv6oywyfe().s[120]++;
      try {
        const client =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[121]++, getWorkflowClient(getClient()));
        const tags =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[122]++, await client.listTags());
        const formattedTags =
        /* istanbul ignore next */
        (cov_kv6oywyfe().s[123]++, tags.map(tag => {
          /* istanbul ignore next */
          cov_kv6oywyfe().f[16]++;
          cov_kv6oywyfe().s[124]++;
          return {
            id: tag.id,
            name: tag.name,
            createdAt: tag.createdAt
          };
        }));
        /* istanbul ignore next */
        cov_kv6oywyfe().s[125]++;
        return {
          tags: formattedTags,
          message: `🏷️ Found ${tags.length} tags`
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_kv6oywyfe().s[126]++;
        if (error instanceof fastmcp_1.UserError) {
          /* istanbul ignore next */
          cov_kv6oywyfe().b[35][0]++;
          cov_kv6oywyfe().s[127]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_kv6oywyfe().b[35][1]++;
        }
        cov_kv6oywyfe().s[128]++;
        throw new fastmcp_1.UserError(`Failed to list tags: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kv6oywyfe().b[36][1]++, 'Unknown error')}`);
      }
    }
  });
  // Note: Advanced features like analytics, collaboration, and bulk operations
  // are included as stubs to demonstrate the complete API structure, but would
  // require extensions to the base N8nClient to fully implement.
  /* istanbul ignore next */
  cov_kv6oywyfe().s[129]++;
  server.addTool({
    name: 'get-workflow-analytics',
    description: 'Get detailed analytics for a specific workflow (requires n8n fork API extension)',
    parameters: WorkflowAnalyticsSchema,
    annotations: {
      title: 'Get Workflow Analytics',
      readOnlyHint: true,
      destructiveHint: false,
      idempotentHint: true,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[17]++;
      cov_kv6oywyfe().s[130]++;
      throw new fastmcp_1.UserError('Workflow analytics not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');
    }
  });
  /* istanbul ignore next */
  cov_kv6oywyfe().s[131]++;
  server.addTool({
    name: 'share-workflow',
    description: 'Share a workflow with another user (requires n8n fork API extension)',
    parameters: ShareWorkflowSchema,
    annotations: {
      title: 'Share Workflow',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[18]++;
      cov_kv6oywyfe().s[132]++;
      throw new fastmcp_1.UserError('Workflow sharing not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');
    }
  });
  /* istanbul ignore next */
  cov_kv6oywyfe().s[133]++;
  server.addTool({
    name: 'bulk-activate-workflows',
    description: 'Activate or deactivate multiple workflows at once (requires n8n fork API extension)',
    parameters: BulkActivateSchema,
    annotations: {
      title: 'Bulk Activate Workflows',
      readOnlyHint: false,
      destructiveHint: false,
      idempotentHint: false,
      openWorldHint: true
    },
    execute: async params => {
      /* istanbul ignore next */
      cov_kv6oywyfe().f[19]++;
      cov_kv6oywyfe().s[134]++;
      throw new fastmcp_1.UserError('Bulk workflow operations not yet implemented - requires n8n fork API extension. This tool provides a preview of the planned functionality.');
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,