{"version":3,"names":["cov_efzsghwis","actualCoverage","s","exports","createProjectTools","zod_1","require","fastmcp_1","ProjectIdSchema","z","object","projectId","string","min","ListProjectsSchema","limit","number","max","optional","cursor","CreateProjectSchema","name","type","UpdateProjectSchema","getClient","server","f","addTool","description","parameters","annotations","title","readOnlyHint","destructiveHint","idempotentHint","openWorldHint","execute","args","client","b","UserError","options","response","getProjects","data","length","result","forEach","project","index","id","createdAt","Date","toLocaleDateString","nextCursor","error","Error","message","includes","projectData","createProject","updateData","updateProject","deleteProject"],"sources":["/Users/jeremyparker/Desktop/Claude Coding Projects/n8n-mcp-server/src/tools/projects.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UserError } from 'fastmcp';\nimport { N8nClient } from '../client/n8nClient.js';\nimport {\n  N8nProject,\n  CreateProjectRequest,\n  UpdateProjectRequest,\n  PaginationOptions,\n} from '../types/n8n.js';\n\n// Zod schemas for validation\nconst ProjectIdSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n});\n\nconst ListProjectsSchema = z.object({\n  limit: z.number().min(1).max(100).optional(),\n  cursor: z.string().optional(),\n});\n\nconst CreateProjectSchema = z.object({\n  name: z.string().min(1, 'Project name is required'),\n  type: z.string().optional(),\n});\n\nconst UpdateProjectSchema = z.object({\n  projectId: z.string().min(1, 'Project ID is required'),\n  name: z.string().min(1, 'Project name is required'),\n});\n\n// Tool registration function\nexport function createProjectTools(getClient: () => N8nClient | null, server: any) {\n  // List projects tool\n  server.addTool({\n    name: 'list-projects',\n    description:\n      'List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ListProjectsSchema,\n    annotations: {\n      title: 'List n8n Projects',\n      readOnlyHint: true,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ListProjectsSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const options: PaginationOptions = {};\n        if (args.limit) options.limit = args.limit;\n        if (args.cursor) options.cursor = args.cursor;\n\n        const response = await client.getProjects(options);\n\n        if (response.data.length === 0) {\n          return 'No projects found in the n8n instance.';\n        }\n\n        let result = `Found ${response.data.length} project(s):\\n\\n`;\n\n        response.data.forEach((project: N8nProject, index: number) => {\n          result += `${index + 1}. **${project.name}**\\n`;\n          result += `   - ID: ${project.id}\\n`;\n          if (project.type) {\n            result += `   - Type: ${project.type}\\n`;\n          }\n          if (project.createdAt) {\n            result += `   - Created: ${new Date(project.createdAt).toLocaleDateString()}\\n`;\n          }\n          result += '\\n';\n        });\n\n        if (response.nextCursor) {\n          result += `\\nðŸ“„ Use cursor \"${response.nextCursor}\" to get the next page.`;\n        }\n\n        return result;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to list projects: ${error.message}`);\n        }\n        throw new UserError('Failed to list projects with unknown error');\n      }\n    },\n  });\n\n  // Create project tool\n  server.addTool({\n    name: 'create-project',\n    description:\n      'Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: CreateProjectSchema,\n    annotations: {\n      title: 'Create New Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: false,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof CreateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const projectData: CreateProjectRequest = {\n          name: args.name,\n          type: args.type,\n        };\n\n        const project = await client.createProject(projectData);\n\n        return (\n          `âœ… Successfully created project \"${project.name}\" with ID: ${project.id}\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to create project: ${error.message}`);\n        }\n        throw new UserError('Failed to create project with unknown error');\n      }\n    },\n  });\n\n  // Update project tool\n  server.addTool({\n    name: 'update-project',\n    description:\n      \"Update a project's name and properties. NOTE: Requires n8n Enterprise license with project management features enabled\",\n    parameters: UpdateProjectSchema,\n    annotations: {\n      title: 'Update Project',\n      readOnlyHint: false,\n      destructiveHint: false,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof UpdateProjectSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        const { projectId, ...updateData } = args;\n        const projectData: UpdateProjectRequest = {\n          name: updateData.name,\n        };\n\n        const project = await client.updateProject(projectId, projectData);\n\n        return (\n          `âœ… Successfully updated project \"${project.name}\" (ID: ${project.id})\\n` +\n          (project.type ? `Type: ${project.type}` : '')\n        );\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to update project: ${error.message}`);\n        }\n        throw new UserError('Failed to update project with unknown error');\n      }\n    },\n  });\n\n  // Delete project tool\n  server.addTool({\n    name: 'delete-project',\n    description:\n      'Delete a project from n8n permanently. NOTE: Requires n8n Enterprise license with project management features enabled',\n    parameters: ProjectIdSchema,\n    annotations: {\n      title: 'Delete Project',\n      readOnlyHint: false,\n      destructiveHint: true,\n      idempotentHint: true,\n      openWorldHint: true,\n    },\n    execute: async (args: z.infer<typeof ProjectIdSchema>) => {\n      const client = getClient();\n      if (!client) {\n        throw new UserError('n8n client not initialized. Please run init-n8n first.');\n      }\n\n      try {\n        await client.deleteProject(args.projectId);\n        return `âœ… Successfully deleted project with ID: ${args.projectId}`;\n      } catch (error) {\n        if (error instanceof Error) {\n          // Check for license-related errors\n          if (error.message.includes('license')) {\n            throw new UserError(\n              `This operation requires an n8n Enterprise license with project management features enabled. Error: ${error.message}`\n            );\n          }\n          throw new UserError(`Failed to delete project: ${error.message}`);\n        }\n        throw new UserError('Failed to delete project with unknown error');\n      }\n    },\n  });\n}\n"],"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","ignoreList":[]}